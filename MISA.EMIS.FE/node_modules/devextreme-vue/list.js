/*!
 * devextreme-vue
 * Version: 22.1.4
 * Build date: Fri Jul 22 2022
 *
 * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DxSearchEditorOptions = exports.DxOptions = exports.DxMenuItem = exports.DxItemDragging = exports.DxItem = exports.DxCursorOffset = exports.DxButton = exports.DxList = void 0;
var list_1 = __importDefault(require("devextreme/ui/list"));
var index_1 = require("./core/index");
var index_2 = require("./core/index");
var DxList = index_1.createComponent({
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        allowItemDeleting: Boolean,
        bounceEnabled: Boolean,
        collapsibleGroups: Boolean,
        dataSource: {},
        disabled: Boolean,
        displayExpr: [Function, String],
        elementAttr: Object,
        focusStateEnabled: Boolean,
        grouped: Boolean,
        groupTemplate: {},
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        indicateLoading: Boolean,
        itemDeleteMode: String,
        itemDragging: Object,
        itemHoldTimeout: Number,
        items: Array,
        itemTemplate: {},
        keyExpr: [Function, String],
        menuItems: Array,
        menuMode: String,
        nextButtonText: String,
        noDataText: String,
        onContentReady: Function,
        onDisposing: Function,
        onGroupRendered: Function,
        onInitialized: Function,
        onItemClick: Function,
        onItemContextMenu: Function,
        onItemDeleted: Function,
        onItemDeleting: Function,
        onItemHold: Function,
        onItemRendered: Function,
        onItemReordered: Function,
        onItemSwipe: Function,
        onOptionChanged: Function,
        onPageLoading: Function,
        onPullRefresh: Function,
        onScroll: Function,
        onSelectAllValueChanged: Function,
        onSelectionChanged: Function,
        pageLoadingText: String,
        pageLoadMode: String,
        pulledDownText: String,
        pullingDownText: String,
        pullRefreshEnabled: Boolean,
        refreshingText: String,
        repaintChangesOnly: Boolean,
        rtlEnabled: Boolean,
        scrollByContent: Boolean,
        scrollByThumb: Boolean,
        scrollingEnabled: Boolean,
        searchEditorOptions: Object,
        searchEnabled: Boolean,
        searchExpr: [Array, Function, String],
        searchMode: String,
        searchTimeout: Number,
        searchValue: String,
        selectAllMode: String,
        selectAllText: String,
        selectedItemKeys: Array,
        selectedItems: Array,
        selectionMode: String,
        showScrollbar: String,
        showSelectionControls: Boolean,
        tabIndex: Number,
        useNativeScrolling: Boolean,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:allowItemDeleting": null,
        "update:bounceEnabled": null,
        "update:collapsibleGroups": null,
        "update:dataSource": null,
        "update:disabled": null,
        "update:displayExpr": null,
        "update:elementAttr": null,
        "update:focusStateEnabled": null,
        "update:grouped": null,
        "update:groupTemplate": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:indicateLoading": null,
        "update:itemDeleteMode": null,
        "update:itemDragging": null,
        "update:itemHoldTimeout": null,
        "update:items": null,
        "update:itemTemplate": null,
        "update:keyExpr": null,
        "update:menuItems": null,
        "update:menuMode": null,
        "update:nextButtonText": null,
        "update:noDataText": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onGroupRendered": null,
        "update:onInitialized": null,
        "update:onItemClick": null,
        "update:onItemContextMenu": null,
        "update:onItemDeleted": null,
        "update:onItemDeleting": null,
        "update:onItemHold": null,
        "update:onItemRendered": null,
        "update:onItemReordered": null,
        "update:onItemSwipe": null,
        "update:onOptionChanged": null,
        "update:onPageLoading": null,
        "update:onPullRefresh": null,
        "update:onScroll": null,
        "update:onSelectAllValueChanged": null,
        "update:onSelectionChanged": null,
        "update:pageLoadingText": null,
        "update:pageLoadMode": null,
        "update:pulledDownText": null,
        "update:pullingDownText": null,
        "update:pullRefreshEnabled": null,
        "update:refreshingText": null,
        "update:repaintChangesOnly": null,
        "update:rtlEnabled": null,
        "update:scrollByContent": null,
        "update:scrollByThumb": null,
        "update:scrollingEnabled": null,
        "update:searchEditorOptions": null,
        "update:searchEnabled": null,
        "update:searchExpr": null,
        "update:searchMode": null,
        "update:searchTimeout": null,
        "update:searchValue": null,
        "update:selectAllMode": null,
        "update:selectAllText": null,
        "update:selectedItemKeys": null,
        "update:selectedItems": null,
        "update:selectionMode": null,
        "update:showScrollbar": null,
        "update:showSelectionControls": null,
        "update:tabIndex": null,
        "update:useNativeScrolling": null,
        "update:visible": null,
        "update:width": null,
    },
    computed: {
        instance: function () {
            return this.$_instance;
        }
    },
    beforeCreate: function () {
        this.$_WidgetClass = list_1.default;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            item: { isCollectionItem: true, optionName: "items" },
            itemDragging: { isCollectionItem: false, optionName: "itemDragging" },
            menuItem: { isCollectionItem: true, optionName: "menuItems" },
            searchEditorOptions: { isCollectionItem: false, optionName: "searchEditorOptions" }
        };
    }
});
exports.DxList = DxList;
var DxButton = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:location": null,
        "update:name": null,
        "update:options": null,
    },
    props: {
        location: String,
        name: String,
        options: Object
    }
});
exports.DxButton = DxButton;
DxButton.$_optionName = "buttons";
DxButton.$_isCollectionItem = true;
DxButton.$_expectedChildren = {
    options: { isCollectionItem: false, optionName: "options" }
};
var DxCursorOffset = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:x": null,
        "update:y": null,
    },
    props: {
        x: Number,
        y: Number
    }
});
exports.DxCursorOffset = DxCursorOffset;
DxCursorOffset.$_optionName = "cursorOffset";
var DxItem = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:badge": null,
        "update:disabled": null,
        "update:html": null,
        "update:icon": null,
        "update:showChevron": null,
        "update:template": null,
        "update:text": null,
        "update:visible": null,
    },
    props: {
        badge: String,
        disabled: Boolean,
        html: String,
        icon: String,
        showChevron: Boolean,
        template: {},
        text: String,
        visible: Boolean
    }
});
exports.DxItem = DxItem;
DxItem.$_optionName = "items";
DxItem.$_isCollectionItem = true;
var DxItemDragging = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:allowDropInsideItem": null,
        "update:allowReordering": null,
        "update:autoScroll": null,
        "update:bindingOptions": null,
        "update:boundary": null,
        "update:container": null,
        "update:contentTemplate": null,
        "update:cursorOffset": null,
        "update:data": null,
        "update:dragDirection": null,
        "update:dragTemplate": null,
        "update:dropFeedbackMode": null,
        "update:elementAttr": null,
        "update:filter": null,
        "update:group": null,
        "update:handle": null,
        "update:height": null,
        "update:itemOrientation": null,
        "update:moveItemOnDrop": null,
        "update:onAdd": null,
        "update:onDisposing": null,
        "update:onDragChange": null,
        "update:onDragEnd": null,
        "update:onDragMove": null,
        "update:onDragStart": null,
        "update:onInitialized": null,
        "update:onOptionChanged": null,
        "update:onPlaceholderPrepared": null,
        "update:onRemove": null,
        "update:onReorder": null,
        "update:rtlEnabled": null,
        "update:scrollSensitivity": null,
        "update:scrollSpeed": null,
        "update:width": null,
    },
    props: {
        allowDropInsideItem: Boolean,
        allowReordering: Boolean,
        autoScroll: Boolean,
        bindingOptions: Object,
        boundary: {},
        container: {},
        contentTemplate: {},
        cursorOffset: [Object, String],
        data: {},
        dragDirection: String,
        dragTemplate: {},
        dropFeedbackMode: String,
        elementAttr: Object,
        filter: String,
        group: String,
        handle: String,
        height: [Function, Number, String],
        itemOrientation: String,
        moveItemOnDrop: Boolean,
        onAdd: Function,
        onDisposing: Function,
        onDragChange: Function,
        onDragEnd: Function,
        onDragMove: Function,
        onDragStart: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        onPlaceholderPrepared: Function,
        onRemove: Function,
        onReorder: Function,
        rtlEnabled: Boolean,
        scrollSensitivity: Number,
        scrollSpeed: Number,
        width: [Function, Number, String]
    }
});
exports.DxItemDragging = DxItemDragging;
DxItemDragging.$_optionName = "itemDragging";
DxItemDragging.$_expectedChildren = {
    cursorOffset: { isCollectionItem: false, optionName: "cursorOffset" }
};
var DxMenuItem = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:action": null,
        "update:text": null,
    },
    props: {
        action: Function,
        text: String
    }
});
exports.DxMenuItem = DxMenuItem;
DxMenuItem.$_optionName = "menuItems";
DxMenuItem.$_isCollectionItem = true;
var DxOptions = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:bindingOptions": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:focusStateEnabled": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:icon": null,
        "update:onClick": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onFocusIn": null,
        "update:onFocusOut": null,
        "update:onInitialized": null,
        "update:onOptionChanged": null,
        "update:rtlEnabled": null,
        "update:stylingMode": null,
        "update:tabIndex": null,
        "update:template": null,
        "update:text": null,
        "update:type": null,
        "update:useSubmitBehavior": null,
        "update:validationGroup": null,
        "update:visible": null,
        "update:width": null,
    },
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        bindingOptions: Object,
        disabled: Boolean,
        elementAttr: Object,
        focusStateEnabled: Boolean,
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        icon: String,
        onClick: Function,
        onContentReady: Function,
        onDisposing: Function,
        onFocusIn: Function,
        onFocusOut: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        rtlEnabled: Boolean,
        stylingMode: String,
        tabIndex: Number,
        template: {},
        text: String,
        type: String,
        useSubmitBehavior: Boolean,
        validationGroup: String,
        visible: Boolean,
        width: [Function, Number, String]
    }
});
exports.DxOptions = DxOptions;
DxOptions.$_optionName = "options";
var DxSearchEditorOptions = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:bindingOptions": null,
        "update:buttons": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:focusStateEnabled": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:inputAttr": null,
        "update:isValid": null,
        "update:label": null,
        "update:labelMode": null,
        "update:mask": null,
        "update:maskChar": null,
        "update:maskInvalidMessage": null,
        "update:maskRules": null,
        "update:maxLength": null,
        "update:mode": null,
        "update:name": null,
        "update:onChange": null,
        "update:onContentReady": null,
        "update:onCopy": null,
        "update:onCut": null,
        "update:onDisposing": null,
        "update:onEnterKey": null,
        "update:onFocusIn": null,
        "update:onFocusOut": null,
        "update:onInitialized": null,
        "update:onInput": null,
        "update:onKeyDown": null,
        "update:onKeyUp": null,
        "update:onOptionChanged": null,
        "update:onPaste": null,
        "update:onValueChanged": null,
        "update:placeholder": null,
        "update:readOnly": null,
        "update:rtlEnabled": null,
        "update:showClearButton": null,
        "update:showMaskMode": null,
        "update:spellcheck": null,
        "update:stylingMode": null,
        "update:tabIndex": null,
        "update:text": null,
        "update:useMaskedValue": null,
        "update:validationError": null,
        "update:validationErrors": null,
        "update:validationMessageMode": null,
        "update:validationStatus": null,
        "update:value": null,
        "update:valueChangeEvent": null,
        "update:visible": null,
        "update:width": null,
    },
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        bindingOptions: Object,
        buttons: Array,
        disabled: Boolean,
        elementAttr: Object,
        focusStateEnabled: Boolean,
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        inputAttr: {},
        isValid: Boolean,
        label: String,
        labelMode: String,
        mask: String,
        maskChar: String,
        maskInvalidMessage: String,
        maskRules: {},
        maxLength: [Number, String],
        mode: String,
        name: String,
        onChange: Function,
        onContentReady: Function,
        onCopy: Function,
        onCut: Function,
        onDisposing: Function,
        onEnterKey: Function,
        onFocusIn: Function,
        onFocusOut: Function,
        onInitialized: Function,
        onInput: Function,
        onKeyDown: Function,
        onKeyUp: Function,
        onOptionChanged: Function,
        onPaste: Function,
        onValueChanged: Function,
        placeholder: String,
        readOnly: Boolean,
        rtlEnabled: Boolean,
        showClearButton: Boolean,
        showMaskMode: String,
        spellcheck: Boolean,
        stylingMode: String,
        tabIndex: Number,
        text: String,
        useMaskedValue: Boolean,
        validationError: {},
        validationErrors: Array,
        validationMessageMode: String,
        validationStatus: String,
        value: String,
        valueChangeEvent: String,
        visible: Boolean,
        width: [Function, Number, String]
    }
});
exports.DxSearchEditorOptions = DxSearchEditorOptions;
DxSearchEditorOptions.$_optionName = "searchEditorOptions";
DxSearchEditorOptions.$_expectedChildren = {
    button: { isCollectionItem: true, optionName: "buttons" }
};
exports.default = DxList;

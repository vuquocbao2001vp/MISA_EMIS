/*!
 * devextreme-vue
 * Version: 22.1.4
 * Build date: Fri Jul 22 2022
 *
 * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DxTooltip = exports.DxLabel = exports.DxFormat = exports.DxRangeSlider = void 0;
var range_slider_1 = __importDefault(require("devextreme/ui/range_slider"));
var index_1 = require("./core/index");
var index_2 = require("./core/index");
var DxRangeSlider = index_1.createComponent({
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        disabled: Boolean,
        elementAttr: Object,
        end: Number,
        endName: String,
        focusStateEnabled: Boolean,
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        isValid: Boolean,
        keyStep: Number,
        label: Object,
        max: Number,
        min: Number,
        onContentReady: Function,
        onDisposing: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        onValueChanged: Function,
        readOnly: Boolean,
        rtlEnabled: Boolean,
        showRange: Boolean,
        start: Number,
        startName: String,
        step: Number,
        tabIndex: Number,
        tooltip: Object,
        validationError: {},
        validationErrors: Array,
        validationMessageMode: String,
        validationStatus: String,
        value: Array,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:end": null,
        "update:endName": null,
        "update:focusStateEnabled": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:isValid": null,
        "update:keyStep": null,
        "update:label": null,
        "update:max": null,
        "update:min": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onInitialized": null,
        "update:onOptionChanged": null,
        "update:onValueChanged": null,
        "update:readOnly": null,
        "update:rtlEnabled": null,
        "update:showRange": null,
        "update:start": null,
        "update:startName": null,
        "update:step": null,
        "update:tabIndex": null,
        "update:tooltip": null,
        "update:validationError": null,
        "update:validationErrors": null,
        "update:validationMessageMode": null,
        "update:validationStatus": null,
        "update:value": null,
        "update:visible": null,
        "update:width": null,
    },
    model: { prop: "value", event: "update:value" },
    computed: {
        instance: function () {
            return this.$_instance;
        }
    },
    beforeCreate: function () {
        this.$_WidgetClass = range_slider_1.default;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            label: { isCollectionItem: false, optionName: "label" },
            tooltip: { isCollectionItem: false, optionName: "tooltip" }
        };
    }
});
exports.DxRangeSlider = DxRangeSlider;
var DxFormat = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:currency": null,
        "update:formatter": null,
        "update:parser": null,
        "update:precision": null,
        "update:type": null,
        "update:useCurrencyAccountingStyle": null,
    },
    props: {
        currency: String,
        formatter: Function,
        parser: Function,
        precision: Number,
        type: String,
        useCurrencyAccountingStyle: Boolean
    }
});
exports.DxFormat = DxFormat;
DxFormat.$_optionName = "format";
var DxLabel = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:format": null,
        "update:position": null,
        "update:visible": null,
    },
    props: {
        format: [Object, Function, String],
        position: String,
        visible: Boolean
    }
});
exports.DxLabel = DxLabel;
DxLabel.$_optionName = "label";
DxLabel.$_expectedChildren = {
    format: { isCollectionItem: false, optionName: "format" }
};
var DxTooltip = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:enabled": null,
        "update:format": null,
        "update:position": null,
        "update:showMode": null,
    },
    props: {
        enabled: Boolean,
        format: [Object, Function, String],
        position: String,
        showMode: String
    }
});
exports.DxTooltip = DxTooltip;
DxTooltip.$_optionName = "tooltip";
DxTooltip.$_expectedChildren = {
    format: { isCollectionItem: false, optionName: "format" }
};
exports.default = DxRangeSlider;

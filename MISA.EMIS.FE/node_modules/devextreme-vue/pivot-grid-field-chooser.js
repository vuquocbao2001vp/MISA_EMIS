/*!
 * devextreme-vue
 * Version: 22.1.4
 * Build date: Fri Jul 22 2022
 *
 * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DxTexts = exports.DxPivotGridFieldChooserTexts = exports.DxHeaderFilterTexts = exports.DxHeaderFilter = exports.DxPivotGridFieldChooser = void 0;
var pivot_grid_field_chooser_1 = __importDefault(require("devextreme/ui/pivot_grid_field_chooser"));
var index_1 = require("./core/index");
var index_2 = require("./core/index");
var DxPivotGridFieldChooser = index_1.createComponent({
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        allowSearch: Boolean,
        applyChangesMode: String,
        dataSource: {},
        disabled: Boolean,
        elementAttr: Object,
        encodeHtml: Boolean,
        focusStateEnabled: Boolean,
        headerFilter: Object,
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        layout: {
            type: Number,
            validator: function (v) { return typeof (v) !== "number" || [
                0,
                1,
                2
            ].indexOf(v) !== -1; }
        },
        onContentReady: Function,
        onContextMenuPreparing: Function,
        onDisposing: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        rtlEnabled: Boolean,
        searchTimeout: Number,
        state: {},
        tabIndex: Number,
        texts: Object,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:allowSearch": null,
        "update:applyChangesMode": null,
        "update:dataSource": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:encodeHtml": null,
        "update:focusStateEnabled": null,
        "update:headerFilter": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:layout": null,
        "update:onContentReady": null,
        "update:onContextMenuPreparing": null,
        "update:onDisposing": null,
        "update:onInitialized": null,
        "update:onOptionChanged": null,
        "update:rtlEnabled": null,
        "update:searchTimeout": null,
        "update:state": null,
        "update:tabIndex": null,
        "update:texts": null,
        "update:visible": null,
        "update:width": null,
    },
    computed: {
        instance: function () {
            return this.$_instance;
        }
    },
    beforeCreate: function () {
        this.$_WidgetClass = pivot_grid_field_chooser_1.default;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            headerFilter: { isCollectionItem: false, optionName: "headerFilter" },
            pivotGridFieldChooserTexts: { isCollectionItem: false, optionName: "texts" },
            texts: { isCollectionItem: false, optionName: "texts" }
        };
    }
});
exports.DxPivotGridFieldChooser = DxPivotGridFieldChooser;
var DxHeaderFilter = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:allowSearch": null,
        "update:height": null,
        "update:searchTimeout": null,
        "update:showRelevantValues": null,
        "update:texts": null,
        "update:width": null,
    },
    props: {
        allowSearch: Boolean,
        height: Number,
        searchTimeout: Number,
        showRelevantValues: Boolean,
        texts: Object,
        width: Number
    }
});
exports.DxHeaderFilter = DxHeaderFilter;
DxHeaderFilter.$_optionName = "headerFilter";
DxHeaderFilter.$_expectedChildren = {
    headerFilterTexts: { isCollectionItem: false, optionName: "texts" },
    texts: { isCollectionItem: false, optionName: "texts" }
};
var DxHeaderFilterTexts = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:cancel": null,
        "update:emptyValue": null,
        "update:ok": null,
    },
    props: {
        cancel: String,
        emptyValue: String,
        ok: String
    }
});
exports.DxHeaderFilterTexts = DxHeaderFilterTexts;
DxHeaderFilterTexts.$_optionName = "texts";
var DxPivotGridFieldChooserTexts = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:allFields": null,
        "update:columnFields": null,
        "update:dataFields": null,
        "update:filterFields": null,
        "update:rowFields": null,
    },
    props: {
        allFields: String,
        columnFields: String,
        dataFields: String,
        filterFields: String,
        rowFields: String
    }
});
exports.DxPivotGridFieldChooserTexts = DxPivotGridFieldChooserTexts;
DxPivotGridFieldChooserTexts.$_optionName = "texts";
var DxTexts = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:allFields": null,
        "update:cancel": null,
        "update:columnFields": null,
        "update:dataFields": null,
        "update:emptyValue": null,
        "update:filterFields": null,
        "update:ok": null,
        "update:rowFields": null,
    },
    props: {
        allFields: String,
        cancel: String,
        columnFields: String,
        dataFields: String,
        emptyValue: String,
        filterFields: String,
        ok: String,
        rowFields: String
    }
});
exports.DxTexts = DxTexts;
DxTexts.$_optionName = "texts";
exports.default = DxPivotGridFieldChooser;

{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.mapping_helper.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { compileGetter, compileSetter } from \"../../core/utils/data\";\nvar GANTT_TASKS = \"tasks\";\nvar GANTT_MAPPED_FIELD_REGEX = /(\\w*)Expr/;\nexport class GanttMappingHelper {\n  constructor(gantt) {\n    this._gantt = gantt;\n  }\n\n  _getMappedFieldName(optionName, coreField) {\n    var coreFieldName = coreField;\n\n    if (\"id\" === coreField) {\n      coreFieldName = \"key\";\n    }\n\n    return this._gantt.option(\"\".concat(optionName, \".\").concat(coreFieldName, \"Expr\"));\n  }\n\n  getTaskMappedFieldNames() {\n    var mappedFields = [];\n\n    var mappedFieldsData = this._gantt.option(GANTT_TASKS);\n\n    for (var field in mappedFieldsData) {\n      var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\n      var mappedFieldName = exprMatches && mappedFieldsData[exprMatches[0]];\n\n      if (mappedFieldName) {\n        mappedFields.push(mappedFieldName);\n      }\n    }\n\n    return mappedFields;\n  }\n\n  convertCoreToMappedData(optionName, coreData) {\n    return Object.keys(coreData).reduce((previous, f) => {\n      var mappedField = this._getMappedFieldName(optionName, f);\n\n      if (mappedField) {\n        var setter = compileSetter(mappedField);\n        setter(previous, coreData[f]);\n      }\n\n      return previous;\n    }, {});\n  }\n\n  convertMappedToCoreData(optionName, mappedData) {\n    var coreData = {};\n\n    if (mappedData) {\n      var mappedFields = this._gantt.option(optionName);\n\n      for (var field in mappedFields) {\n        var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\n        var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\n\n        if (mappedFieldName && void 0 !== mappedData[mappedFieldName]) {\n          var getter = compileGetter(mappedFieldName);\n          var coreFieldName = exprMatches[1];\n          coreData[coreFieldName] = getter(mappedData);\n        }\n      }\n    }\n\n    return coreData;\n  }\n\n  convertCoreToMappedFields(optionName, fields) {\n    return fields.reduce((previous, f) => {\n      var mappedField = this._getMappedFieldName(optionName, f);\n\n      if (mappedField) {\n        previous.push(mappedField);\n      }\n\n      return previous;\n    }, []);\n  }\n\n  convertMappedToCoreFields(optionName, fields) {\n    var coreFields = [];\n\n    var mappedFields = this._gantt.option(optionName);\n\n    for (var field in mappedFields) {\n      var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\n      var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\n\n      if (mappedFieldName && fields.indexOf(mappedFieldName) > -1) {\n        var coreFieldName = exprMatches[1];\n        coreFields.push(coreFieldName);\n      }\n    }\n\n    return coreFields;\n  }\n\n}","map":{"version":3,"names":["compileGetter","compileSetter","GANTT_TASKS","GANTT_MAPPED_FIELD_REGEX","GanttMappingHelper","constructor","gantt","_gantt","_getMappedFieldName","optionName","coreField","coreFieldName","option","concat","getTaskMappedFieldNames","mappedFields","mappedFieldsData","field","exprMatches","match","mappedFieldName","push","convertCoreToMappedData","coreData","Object","keys","reduce","previous","f","mappedField","setter","convertMappedToCoreData","mappedData","getter","convertCoreToMappedFields","fields","convertMappedToCoreFields","coreFields","indexOf"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/gantt/ui.gantt.mapping_helper.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.mapping_helper.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nvar GANTT_TASKS = \"tasks\";\r\nvar GANTT_MAPPED_FIELD_REGEX = /(\\w*)Expr/;\r\nexport class GanttMappingHelper {\r\n    constructor(gantt) {\r\n        this._gantt = gantt\r\n    }\r\n    _getMappedFieldName(optionName, coreField) {\r\n        var coreFieldName = coreField;\r\n        if (\"id\" === coreField) {\r\n            coreFieldName = \"key\"\r\n        }\r\n        return this._gantt.option(\"\".concat(optionName, \".\").concat(coreFieldName, \"Expr\"))\r\n    }\r\n    getTaskMappedFieldNames() {\r\n        var mappedFields = [];\r\n        var mappedFieldsData = this._gantt.option(GANTT_TASKS);\r\n        for (var field in mappedFieldsData) {\r\n            var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\r\n            var mappedFieldName = exprMatches && mappedFieldsData[exprMatches[0]];\r\n            if (mappedFieldName) {\r\n                mappedFields.push(mappedFieldName)\r\n            }\r\n        }\r\n        return mappedFields\r\n    }\r\n    convertCoreToMappedData(optionName, coreData) {\r\n        return Object.keys(coreData).reduce((previous, f) => {\r\n            var mappedField = this._getMappedFieldName(optionName, f);\r\n            if (mappedField) {\r\n                var setter = compileSetter(mappedField);\r\n                setter(previous, coreData[f])\r\n            }\r\n            return previous\r\n        }, {})\r\n    }\r\n    convertMappedToCoreData(optionName, mappedData) {\r\n        var coreData = {};\r\n        if (mappedData) {\r\n            var mappedFields = this._gantt.option(optionName);\r\n            for (var field in mappedFields) {\r\n                var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\r\n                var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\r\n                if (mappedFieldName && void 0 !== mappedData[mappedFieldName]) {\r\n                    var getter = compileGetter(mappedFieldName);\r\n                    var coreFieldName = exprMatches[1];\r\n                    coreData[coreFieldName] = getter(mappedData)\r\n                }\r\n            }\r\n        }\r\n        return coreData\r\n    }\r\n    convertCoreToMappedFields(optionName, fields) {\r\n        return fields.reduce((previous, f) => {\r\n            var mappedField = this._getMappedFieldName(optionName, f);\r\n            if (mappedField) {\r\n                previous.push(mappedField)\r\n            }\r\n            return previous\r\n        }, [])\r\n    }\r\n    convertMappedToCoreFields(optionName, fields) {\r\n        var coreFields = [];\r\n        var mappedFields = this._gantt.option(optionName);\r\n        for (var field in mappedFields) {\r\n            var exprMatches = field.match(GANTT_MAPPED_FIELD_REGEX);\r\n            var mappedFieldName = exprMatches && mappedFields[exprMatches[0]];\r\n            if (mappedFieldName && fields.indexOf(mappedFieldName) > -1) {\r\n                var coreFieldName = exprMatches[1];\r\n                coreFields.push(coreFieldName)\r\n            }\r\n        }\r\n        return coreFields\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
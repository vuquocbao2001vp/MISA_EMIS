{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/extend.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isPlainObject } from \"./type\";\nexport var extendFromObject = function (target, source, overrideExistingValues) {\n  target = target || {};\n\n  for (var prop in source) {\n    if (Object.prototype.hasOwnProperty.call(source, prop)) {\n      var value = source[prop];\n\n      if (!(prop in target) || overrideExistingValues) {\n        target[prop] = value;\n      }\n    }\n  }\n\n  return target;\n};\nexport var extend = function extend(target) {\n  target = target || {};\n  var i = 1;\n  var deep = false;\n\n  if (\"boolean\" === typeof target) {\n    deep = target;\n    target = arguments[1] || {};\n    i++;\n  }\n\n  for (; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (null == source) {\n      continue;\n    }\n\n    for (var key in source) {\n      var targetValue = target[key];\n      var sourceValue = source[key];\n      var sourceValueIsArray = false;\n      var clone = void 0;\n\n      if (\"__proto__\" === key || \"constructor\" === key || target === sourceValue) {\n        continue;\n      }\n\n      if (deep && sourceValue && (isPlainObject(sourceValue) || (sourceValueIsArray = Array.isArray(sourceValue)))) {\n        if (sourceValueIsArray) {\n          clone = targetValue && Array.isArray(targetValue) ? targetValue : [];\n        } else {\n          clone = targetValue && isPlainObject(targetValue) ? targetValue : {};\n        }\n\n        target[key] = extend(deep, clone, sourceValue);\n      } else if (void 0 !== sourceValue) {\n        target[key] = sourceValue;\n      }\n    }\n  }\n\n  return target;\n};","map":{"version":3,"names":["isPlainObject","extendFromObject","target","source","overrideExistingValues","prop","Object","prototype","hasOwnProperty","call","value","extend","i","deep","arguments","length","key","targetValue","sourceValue","sourceValueIsArray","clone","Array","isArray"],"sources":["E:/MisaProject/MISA_EMIS/MISA.EMIS.FE/node_modules/devextreme/esm/core/utils/extend.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/extend.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isPlainObject\r\n} from \"./type\";\r\nexport var extendFromObject = function(target, source, overrideExistingValues) {\r\n    target = target || {};\r\n    for (var prop in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\r\n            var value = source[prop];\r\n            if (!(prop in target) || overrideExistingValues) {\r\n                target[prop] = value\r\n            }\r\n        }\r\n    }\r\n    return target\r\n};\r\nexport var extend = function extend(target) {\r\n    target = target || {};\r\n    var i = 1;\r\n    var deep = false;\r\n    if (\"boolean\" === typeof target) {\r\n        deep = target;\r\n        target = arguments[1] || {};\r\n        i++\r\n    }\r\n    for (; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n        if (null == source) {\r\n            continue\r\n        }\r\n        for (var key in source) {\r\n            var targetValue = target[key];\r\n            var sourceValue = source[key];\r\n            var sourceValueIsArray = false;\r\n            var clone = void 0;\r\n            if (\"__proto__\" === key || \"constructor\" === key || target === sourceValue) {\r\n                continue\r\n            }\r\n            if (deep && sourceValue && (isPlainObject(sourceValue) || (sourceValueIsArray = Array.isArray(sourceValue)))) {\r\n                if (sourceValueIsArray) {\r\n                    clone = targetValue && Array.isArray(targetValue) ? targetValue : []\r\n                } else {\r\n                    clone = targetValue && isPlainObject(targetValue) ? targetValue : {}\r\n                }\r\n                target[key] = extend(deep, clone, sourceValue)\r\n            } else if (void 0 !== sourceValue) {\r\n                target[key] = sourceValue\r\n            }\r\n        }\r\n    }\r\n    return target\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,aADJ,QAEO,QAFP;AAGA,OAAO,IAAIC,gBAAgB,GAAG,UAASC,MAAT,EAAiBC,MAAjB,EAAyBC,sBAAzB,EAAiD;EAC3EF,MAAM,GAAGA,MAAM,IAAI,EAAnB;;EACA,KAAK,IAAIG,IAAT,IAAiBF,MAAjB,EAAyB;IACrB,IAAIG,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,MAArC,EAA6CE,IAA7C,CAAJ,EAAwD;MACpD,IAAIK,KAAK,GAAGP,MAAM,CAACE,IAAD,CAAlB;;MACA,IAAI,EAAEA,IAAI,IAAIH,MAAV,KAAqBE,sBAAzB,EAAiD;QAC7CF,MAAM,CAACG,IAAD,CAAN,GAAeK,KAAf;MACH;IACJ;EACJ;;EACD,OAAOR,MAAP;AACH,CAXM;AAYP,OAAO,IAAIS,MAAM,GAAG,SAASA,MAAT,CAAgBT,MAAhB,EAAwB;EACxCA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EACA,IAAIU,CAAC,GAAG,CAAR;EACA,IAAIC,IAAI,GAAG,KAAX;;EACA,IAAI,cAAc,OAAOX,MAAzB,EAAiC;IAC7BW,IAAI,GAAGX,MAAP;IACAA,MAAM,GAAGY,SAAS,CAAC,CAAD,CAAT,IAAgB,EAAzB;IACAF,CAAC;EACJ;;EACD,OAAOA,CAAC,GAAGE,SAAS,CAACC,MAArB,EAA6BH,CAAC,EAA9B,EAAkC;IAC9B,IAAIT,MAAM,GAAGW,SAAS,CAACF,CAAD,CAAtB;;IACA,IAAI,QAAQT,MAAZ,EAAoB;MAChB;IACH;;IACD,KAAK,IAAIa,GAAT,IAAgBb,MAAhB,EAAwB;MACpB,IAAIc,WAAW,GAAGf,MAAM,CAACc,GAAD,CAAxB;MACA,IAAIE,WAAW,GAAGf,MAAM,CAACa,GAAD,CAAxB;MACA,IAAIG,kBAAkB,GAAG,KAAzB;MACA,IAAIC,KAAK,GAAG,KAAK,CAAjB;;MACA,IAAI,gBAAgBJ,GAAhB,IAAuB,kBAAkBA,GAAzC,IAAgDd,MAAM,KAAKgB,WAA/D,EAA4E;QACxE;MACH;;MACD,IAAIL,IAAI,IAAIK,WAAR,KAAwBlB,aAAa,CAACkB,WAAD,CAAb,KAA+BC,kBAAkB,GAAGE,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAApD,CAAxB,CAAJ,EAA8G;QAC1G,IAAIC,kBAAJ,EAAwB;UACpBC,KAAK,GAAGH,WAAW,IAAII,KAAK,CAACC,OAAN,CAAcL,WAAd,CAAf,GAA4CA,WAA5C,GAA0D,EAAlE;QACH,CAFD,MAEO;UACHG,KAAK,GAAGH,WAAW,IAAIjB,aAAa,CAACiB,WAAD,CAA5B,GAA4CA,WAA5C,GAA0D,EAAlE;QACH;;QACDf,MAAM,CAACc,GAAD,CAAN,GAAcL,MAAM,CAACE,IAAD,EAAOO,KAAP,EAAcF,WAAd,CAApB;MACH,CAPD,MAOO,IAAI,KAAK,CAAL,KAAWA,WAAf,EAA4B;QAC/BhB,MAAM,CAACc,GAAD,CAAN,GAAcE,WAAd;MACH;IACJ;EACJ;;EACD,OAAOhB,MAAP;AACH,CAnCM"},"metadata":{},"sourceType":"module"}
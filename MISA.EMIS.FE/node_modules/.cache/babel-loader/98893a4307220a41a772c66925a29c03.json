{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/local_store.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { aggregators } from \"../../data/utils\";\nimport dataQuery from \"../../data/query\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { DataSource } from \"../../data/data_source/data_source\";\nimport CustomStore from \"../../data/custom_store\";\nimport { compileGetter, toComparable } from \"../../core/utils/data\";\nimport Class from \"../../core/class\";\nimport { noop } from \"../../core/utils/common\";\nimport { isNumeric, isDefined, isString } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { getFiltersByPath, setFieldProperty, setDefaultFieldValueFormatting, storeDrillDownMixin, discoverObjectFields } from \"./ui.pivot_grid.utils\";\nimport ArrayStore from \"../../data/array_store\";\nvar PATH_DELIMETER = \"/./\";\nexport var LocalStore = Class.inherit(function () {\n  var DATE_INTERVAL_SELECTORS = {\n    year: function (date) {\n      return date && date.getFullYear();\n    },\n    quarter: function (date) {\n      return date && Math.floor(date.getMonth() / 3) + 1;\n    },\n    month: function (date) {\n      return date && date.getMonth() + 1;\n    },\n    day: function (date) {\n      return date && date.getDate();\n    },\n    dayOfWeek: function (date) {\n      return date && date.getDay();\n    }\n  };\n\n  function getDataSelector(dataField) {\n    return -1 !== dataField.indexOf(\".\") ? compileGetter(dataField) : function (data) {\n      return data[dataField];\n    };\n  }\n\n  function getDateValue(dataSelector) {\n    return function (data) {\n      var value = dataSelector(data);\n\n      if (value && !(value instanceof Date)) {\n        value = dateSerialization.deserializeDate(value);\n      }\n\n      return value;\n    };\n  }\n\n  function prepareFields(fields) {\n    each(fields || [], function (_, field) {\n      var fieldSelector;\n      var intervalSelector;\n      var dataField = field.dataField;\n      var groupInterval;\n      var levels = field.levels;\n      var dataSelector;\n\n      if (!field.selector) {\n        if (!dataField) {\n          dataSelector = function (data) {\n            return data;\n          };\n        } else {\n          dataSelector = getDataSelector(dataField);\n        }\n\n        if (levels) {\n          prepareFields(levels);\n        }\n\n        if (\"date\" === field.dataType) {\n          intervalSelector = DATE_INTERVAL_SELECTORS[field.groupInterval];\n          var valueSelector = getDateValue(dataSelector);\n\n          fieldSelector = function (data) {\n            var value = valueSelector(data);\n            return intervalSelector ? intervalSelector(value) : value;\n          };\n        } else if (\"number\" === field.dataType) {\n          groupInterval = isNumeric(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\n\n          fieldSelector = function (data) {\n            var value = dataSelector(data);\n\n            if (isString(value)) {\n              value = Number(value);\n            }\n\n            return groupInterval ? Math.floor(value / groupInterval) * groupInterval : value;\n          };\n        } else {\n          fieldSelector = dataSelector;\n        }\n\n        setDefaultFieldValueFormatting(field);\n        setFieldProperty(field, \"selector\", fieldSelector);\n      }\n    });\n  }\n\n  function generateHierarchyItems(data, loadOptions, headers, headerName) {\n    var result = [0];\n    var expandIndex = loadOptions.headerName === headerName ? loadOptions.path.length : 0;\n    var expandedPaths = \"rows\" === headerName ? loadOptions.rowExpandedPaths : loadOptions.columnExpandedPaths;\n    var options = {\n      data: data,\n      childrenHash: headers[headerName + \"Hash\"],\n      dimensions: loadOptions[headerName],\n      expandedPathsHash: loadOptions.headerName !== headerName && expandedPaths && expandedPaths.hash\n    };\n    !function fillHierarchyItemIndexesCore(indexes, options, children, expandIndex, pathHash) {\n      var dimension = options.dimensions[expandIndex];\n      var expandedPathsHash = options.expandedPathsHash;\n      var dimensionValue;\n      var hierarchyItem;\n\n      if (dimension) {\n        dimensionValue = dimension.selector(options.data);\n        pathHash = void 0 !== pathHash ? pathHash + PATH_DELIMETER + dimensionValue : dimensionValue + \"\";\n\n        hierarchyItem = function (value, hierarchyItems, pathHash, childrenHash) {\n          var hierarchyItem = childrenHash[pathHash];\n\n          if (!hierarchyItem) {\n            hierarchyItem = {\n              value: value,\n              index: childrenHash.length++\n            };\n            childrenHash[pathHash] = hierarchyItem;\n            hierarchyItems.push(hierarchyItem);\n          }\n\n          return hierarchyItem;\n        }(dimensionValue, children, pathHash, options.childrenHash);\n\n        indexes.push(hierarchyItem.index);\n\n        if (expandedPathsHash && expandedPathsHash[pathHash] || dimension.expanded) {\n          if (!hierarchyItem.children) {\n            hierarchyItem.children = [];\n          }\n\n          fillHierarchyItemIndexesCore(indexes, options, hierarchyItem.children, expandIndex + 1, pathHash);\n        }\n      }\n    }(result, options, headers[headerName], expandIndex);\n    return result;\n  }\n\n  function generateAggregationCells(data, cells, headers, options) {\n    var cellSet = [];\n    var x;\n    var y;\n    var rowIndex;\n    var columnIndex;\n    var rowIndexes = generateHierarchyItems(data, options, headers, \"rows\");\n    var columnIndexes = generateHierarchyItems(data, options, headers, \"columns\");\n\n    for (y = 0; y < rowIndexes.length; y++) {\n      rowIndex = rowIndexes[y];\n      cells[rowIndex] = cells[rowIndex] || [];\n\n      for (x = 0; x < columnIndexes.length; x++) {\n        columnIndex = columnIndexes[x];\n        cellSet.push(cells[rowIndex][columnIndex] = cells[rowIndex][columnIndex] || []);\n      }\n    }\n\n    return cellSet;\n  }\n\n  function fillHashExpandedPath(expandedPaths) {\n    if (expandedPaths) {\n      var hash = expandedPaths.hash = {};\n      expandedPaths.forEach(function (path) {\n        var pathValue = path.map(function (value) {\n          return value + \"\";\n        }).join(PATH_DELIMETER);\n        hash[pathValue] = true;\n      });\n    }\n  }\n\n  function prepareLoadOption(options) {\n    options.rows = options.rows || [];\n    options.columns = options.columns || [];\n    options.filters = options.filters || [];\n    fillHashExpandedPath(options.columnExpandedPaths);\n    fillHashExpandedPath(options.rowExpandedPaths);\n    prepareFields(options.columns);\n    prepareFields(options.rows);\n    prepareFields(options.values);\n    prepareFields(options.filters);\n  }\n\n  function getAggregator(field) {\n    if (\"custom\" === field.summaryType) {\n      field.calculateCustomSummary = field.calculateCustomSummary || noop;\n      return {\n        seed: function () {\n          var options = {\n            summaryProcess: \"start\",\n            totalValue: void 0\n          };\n          field.calculateCustomSummary(options);\n          return options;\n        },\n        step: function (options, value) {\n          options.summaryProcess = \"calculate\";\n          options.value = value;\n          field.calculateCustomSummary(options);\n          return options;\n        },\n        finalize: function (options) {\n          options.summaryProcess = \"finalize\";\n          delete options.value;\n          field.calculateCustomSummary(options);\n          return options.totalValue;\n        }\n      };\n    }\n\n    return aggregators[field.summaryType] || aggregators.count;\n  }\n\n  function aggregationStep(measures, aggregationCells, data) {\n    for (var aggregatorIndex = 0; aggregatorIndex < measures.length; aggregatorIndex++) {\n      var cellField = measures[aggregatorIndex];\n      var cellValue = cellField.selector(data);\n      var aggregator = getAggregator(cellField);\n      var isAggregatorSeedFunction = \"function\" === typeof aggregator.seed;\n\n      for (var cellSetIndex = 0; cellSetIndex < aggregationCells.length; cellSetIndex++) {\n        var cell = aggregationCells[cellSetIndex];\n\n        if (cell.length <= aggregatorIndex) {\n          cell[aggregatorIndex] = isAggregatorSeedFunction ? aggregator.seed() : aggregator.seed;\n        }\n\n        if (void 0 === cell[aggregatorIndex]) {\n          cell[aggregatorIndex] = cellValue;\n        } else if (isDefined(cellValue)) {\n          cell[aggregatorIndex] = aggregator.step(cell[aggregatorIndex], cellValue);\n        }\n      }\n    }\n  }\n\n  function areValuesEqual(filterValue, fieldValue) {\n    var valueOfFilter = filterValue && filterValue.valueOf();\n    var valueOfField = fieldValue && fieldValue.valueOf();\n\n    if (Array.isArray(filterValue)) {\n      fieldValue = fieldValue || [];\n\n      for (var i = 0; i < filterValue.length; i++) {\n        valueOfFilter = filterValue[i] && filterValue[i].valueOf();\n        valueOfField = fieldValue[i] && fieldValue[i].valueOf();\n\n        if (valueOfFilter !== valueOfField) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return valueOfFilter === valueOfField;\n    }\n  }\n\n  function createDimensionFilters(dimension) {\n    var filters = [];\n    each(dimension, function (_, field) {\n      var filterValues = field.filterValues || [];\n      var groupName = field.groupName;\n\n      if (groupName && isNumeric(field.groupIndex)) {\n        return;\n      }\n\n      filterValues.length && filters.push(function (dataItem) {\n        var value = field.levels ? function (levels, data) {\n          var value = [];\n          each(levels, function (_, field) {\n            value.push(field.selector(data));\n          });\n          return value;\n        }(field.levels, dataItem) : field.selector(dataItem);\n        var result = false;\n\n        for (var i = 0; i < filterValues.length; i++) {\n          if (areValuesEqual(filterValues[i], value)) {\n            result = true;\n            break;\n          }\n        }\n\n        return \"exclude\" === field.filterType ? !result : result;\n      });\n    });\n    return filters;\n  }\n\n  function createFilter(options) {\n    var filters = createDimensionFilters(options.rows).concat(createDimensionFilters(options.columns)).concat(createDimensionFilters(options.filters));\n    var expandedDimensions = options[options.headerName];\n    var path = options.path;\n\n    if (expandedDimensions) {\n      filters.push(function (dataItem) {\n        var expandValue;\n\n        for (var i = 0; i < path.length; i++) {\n          expandValue = expandedDimensions[i].selector(dataItem);\n\n          if (toComparable(expandValue, true) !== toComparable(path[i], true)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n\n    return function (dataItem) {\n      for (var i = 0; i < filters.length; i++) {\n        if (!filters[i](dataItem)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }\n\n  function loadCore(items, options, notifyProgress) {\n    var headers = {\n      columns: [],\n      rows: [],\n      columnsHash: {\n        length: 1\n      },\n      rowsHash: {\n        length: 1\n      }\n    };\n    var values = [];\n    var aggregationCells;\n    var data;\n    var d = new Deferred();\n    var i = 0;\n    var filter = createFilter(options);\n    !function processData() {\n      var t = new Date();\n      var startIndex = i;\n\n      for (; i < items.length; i++) {\n        if (i > startIndex && i % 1e4 === 0) {\n          if (new Date() - t >= 300) {\n            notifyProgress(i / items.length);\n            setTimeout(processData, 0);\n            return;\n          }\n        }\n\n        data = items[i];\n\n        if (filter(data)) {\n          aggregationCells = generateAggregationCells(data, values, headers, options);\n          aggregationStep(options.values, aggregationCells, data);\n        }\n      }\n\n      measures = options.values, cells = values, void each(measures, function (aggregatorIndex, cellField) {\n        var aggregator = getAggregator(cellField);\n\n        if (aggregator.finalize) {\n          each(cells, function (_, row) {\n            each(row, function (_, cell) {\n              if (cell && void 0 !== cell[aggregatorIndex]) {\n                cell[aggregatorIndex] = aggregator.finalize(cell[aggregatorIndex]);\n              }\n            });\n          });\n        }\n      });\n      var measures, cells;\n      notifyProgress(1);\n      d.resolve({\n        rows: headers.rows,\n        columns: headers.columns,\n        values: values,\n        grandTotalRowIndex: 0,\n        grandTotalColumnIndex: 0\n      });\n    }();\n    return d;\n  }\n\n  function filterDataSource(dataSource, fieldSelectors) {\n    var filter = dataSource.filter();\n\n    if (dataSource.store() instanceof CustomStore && filter) {\n      filter = processFilter(filter, fieldSelectors);\n      return dataQuery(dataSource.items()).filter(filter).toArray();\n    }\n\n    return dataSource.items();\n  }\n\n  function loadDataSource(dataSource, fieldSelectors, reload) {\n    var d = new Deferred();\n\n    var customizeStoreLoadOptionsHandler = function (options) {\n      if (dataSource.store() instanceof ArrayStore) {\n        options.storeLoadOptions.filter = processFilter(options.storeLoadOptions.filter, fieldSelectors);\n      }\n    };\n\n    dataSource.on(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler);\n\n    if (!dataSource.isLoaded() || reload) {\n      var loadDeferred = reload ? dataSource.load() : dataSource.reload();\n      when(loadDeferred).done(function () {\n        loadDataSource(dataSource, fieldSelectors).done(function () {\n          d.resolve(filterDataSource(dataSource, fieldSelectors));\n        }).fail(d.reject);\n      }).fail(d.reject);\n    } else {\n      d.resolve(filterDataSource(dataSource, fieldSelectors));\n    }\n\n    return d.always(function () {\n      dataSource.off(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler);\n    });\n  }\n\n  function fillSelectorsByFields(selectors, fields) {\n    fields.forEach(function (field) {\n      if (field.dataField && \"date\" === field.dataType) {\n        var valueSelector = getDateValue(getDataSelector(field.dataField));\n\n        selectors[field.dataField] = function (data) {\n          return valueSelector(data);\n        };\n      }\n    });\n  }\n\n  function getFieldSelectors(options) {\n    var selectors = {};\n\n    if (Array.isArray(options)) {\n      fillSelectorsByFields(selectors, options);\n    } else if (options) {\n      [\"rows\", \"columns\", \"filters\"].forEach(function (area) {\n        options[area] && fillSelectorsByFields(selectors, options[area]);\n      });\n    }\n\n    return selectors;\n  }\n\n  function processFilter(filter, fieldSelectors) {\n    if (!Array.isArray(filter)) {\n      return filter;\n    }\n\n    filter = filter.slice(0);\n\n    if (isString(filter[0]) && (filter[1] instanceof Date || filter[2] instanceof Date)) {\n      filter[0] = fieldSelectors[filter[0]];\n    }\n\n    for (var i = 0; i < filter.length; i++) {\n      filter[i] = processFilter(filter[i], fieldSelectors);\n    }\n\n    return filter;\n  }\n\n  return {\n    ctor: function (options) {\n      this._progressChanged = options.onProgressChanged || noop;\n      this._dataSource = new DataSource(options);\n\n      this._dataSource.paginate(false);\n    },\n    getFields: function (fields) {\n      var dataSource = this._dataSource;\n      var d = new Deferred();\n      loadDataSource(dataSource, getFieldSelectors(fields)).done(function (data) {\n        d.resolve(discoverObjectFields(data, fields));\n      }).fail(d.reject);\n      return d;\n    },\n    key: function () {\n      return this._dataSource.key();\n    },\n    load: function (options) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var d = new Deferred();\n      prepareLoadOption(options);\n      loadDataSource(dataSource, getFieldSelectors(options), options.reload).done(function (data) {\n        when(loadCore(data, options, that._progressChanged)).done(d.resolve);\n      }).fail(d.reject);\n      return d;\n    },\n    filter: function () {\n      var dataSource = this._dataSource;\n      return dataSource.filter.apply(dataSource, arguments);\n    },\n    supportPaging: function () {\n      return false;\n    },\n    getDrillDownItems: function (loadOptions, params) {\n      loadOptions = loadOptions || {};\n      params = params || {};\n      prepareLoadOption(loadOptions);\n      var drillDownItems = [];\n\n      var items = this._dataSource.items();\n\n      var item;\n      var maxRowCount = params.maxRowCount;\n      var customColumns = params.customColumns;\n      var filter = createFilter(loadOptions);\n      var pathFilter = createFilter({\n        rows: getFiltersByPath(loadOptions.rows, params.rowPath),\n        columns: getFiltersByPath(loadOptions.columns, params.columnPath),\n        filters: []\n      });\n\n      for (var i = 0; i < items.length; i++) {\n        if (pathFilter(items[i]) && filter(items[i])) {\n          if (customColumns) {\n            item = {};\n\n            for (var j = 0; j < customColumns.length; j++) {\n              item[customColumns[j]] = items[i][customColumns[j]];\n            }\n          } else {\n            item = items[i];\n          }\n\n          drillDownItems.push(item);\n        }\n\n        if (maxRowCount > 0 && drillDownItems.length === maxRowCount) {\n          break;\n        }\n      }\n\n      return drillDownItems;\n    }\n  };\n}()).include(storeDrillDownMixin);","map":{"version":3,"names":["when","Deferred","aggregators","dataQuery","dateSerialization","DataSource","CustomStore","compileGetter","toComparable","Class","noop","isNumeric","isDefined","isString","each","getFiltersByPath","setFieldProperty","setDefaultFieldValueFormatting","storeDrillDownMixin","discoverObjectFields","ArrayStore","PATH_DELIMETER","LocalStore","inherit","DATE_INTERVAL_SELECTORS","year","date","getFullYear","quarter","Math","floor","getMonth","month","day","getDate","dayOfWeek","getDay","getDataSelector","dataField","indexOf","data","getDateValue","dataSelector","value","Date","deserializeDate","prepareFields","fields","_","field","fieldSelector","intervalSelector","groupInterval","levels","selector","dataType","valueSelector","Number","generateHierarchyItems","loadOptions","headers","headerName","result","expandIndex","path","length","expandedPaths","rowExpandedPaths","columnExpandedPaths","options","childrenHash","dimensions","expandedPathsHash","hash","fillHierarchyItemIndexesCore","indexes","children","pathHash","dimension","dimensionValue","hierarchyItem","hierarchyItems","index","push","expanded","generateAggregationCells","cells","cellSet","x","y","rowIndex","columnIndex","rowIndexes","columnIndexes","fillHashExpandedPath","forEach","pathValue","map","join","prepareLoadOption","rows","columns","filters","values","getAggregator","summaryType","calculateCustomSummary","seed","summaryProcess","totalValue","step","finalize","count","aggregationStep","measures","aggregationCells","aggregatorIndex","cellField","cellValue","aggregator","isAggregatorSeedFunction","cellSetIndex","cell","areValuesEqual","filterValue","fieldValue","valueOfFilter","valueOf","valueOfField","Array","isArray","i","createDimensionFilters","filterValues","groupName","groupIndex","dataItem","filterType","createFilter","concat","expandedDimensions","expandValue","loadCore","items","notifyProgress","columnsHash","rowsHash","d","filter","processData","t","startIndex","setTimeout","row","resolve","grandTotalRowIndex","grandTotalColumnIndex","filterDataSource","dataSource","fieldSelectors","store","processFilter","toArray","loadDataSource","reload","customizeStoreLoadOptionsHandler","storeLoadOptions","on","isLoaded","loadDeferred","load","done","fail","reject","always","off","fillSelectorsByFields","selectors","getFieldSelectors","area","slice","ctor","_progressChanged","onProgressChanged","_dataSource","paginate","getFields","key","that","apply","arguments","supportPaging","getDrillDownItems","params","drillDownItems","item","maxRowCount","customColumns","pathFilter","rowPath","columnPath","j","include"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/pivot_grid/local_store.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/local_store.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    aggregators\r\n} from \"../../data/utils\";\r\nimport dataQuery from \"../../data/query\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport {\r\n    compileGetter,\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isNumeric,\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getFiltersByPath,\r\n    setFieldProperty,\r\n    setDefaultFieldValueFormatting,\r\n    storeDrillDownMixin,\r\n    discoverObjectFields\r\n} from \"./ui.pivot_grid.utils\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nvar PATH_DELIMETER = \"/./\";\r\nexport var LocalStore = Class.inherit(function() {\r\n    var DATE_INTERVAL_SELECTORS = {\r\n        year: function(date) {\r\n            return date && date.getFullYear()\r\n        },\r\n        quarter: function(date) {\r\n            return date && Math.floor(date.getMonth() / 3) + 1\r\n        },\r\n        month: function(date) {\r\n            return date && date.getMonth() + 1\r\n        },\r\n        day: function(date) {\r\n            return date && date.getDate()\r\n        },\r\n        dayOfWeek: function(date) {\r\n            return date && date.getDay()\r\n        }\r\n    };\r\n\r\n    function getDataSelector(dataField) {\r\n        return -1 !== dataField.indexOf(\".\") ? compileGetter(dataField) : function(data) {\r\n            return data[dataField]\r\n        }\r\n    }\r\n\r\n    function getDateValue(dataSelector) {\r\n        return function(data) {\r\n            var value = dataSelector(data);\r\n            if (value && !(value instanceof Date)) {\r\n                value = dateSerialization.deserializeDate(value)\r\n            }\r\n            return value\r\n        }\r\n    }\r\n\r\n    function prepareFields(fields) {\r\n        each(fields || [], (function(_, field) {\r\n            var fieldSelector;\r\n            var intervalSelector;\r\n            var dataField = field.dataField;\r\n            var groupInterval;\r\n            var levels = field.levels;\r\n            var dataSelector;\r\n            if (!field.selector) {\r\n                if (!dataField) {\r\n                    dataSelector = function(data) {\r\n                        return data\r\n                    }\r\n                } else {\r\n                    dataSelector = getDataSelector(dataField)\r\n                }\r\n                if (levels) {\r\n                    prepareFields(levels)\r\n                }\r\n                if (\"date\" === field.dataType) {\r\n                    intervalSelector = DATE_INTERVAL_SELECTORS[field.groupInterval];\r\n                    var valueSelector = getDateValue(dataSelector);\r\n                    fieldSelector = function(data) {\r\n                        var value = valueSelector(data);\r\n                        return intervalSelector ? intervalSelector(value) : value\r\n                    }\r\n                } else if (\"number\" === field.dataType) {\r\n                    groupInterval = isNumeric(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\r\n                    fieldSelector = function(data) {\r\n                        var value = dataSelector(data);\r\n                        if (isString(value)) {\r\n                            value = Number(value)\r\n                        }\r\n                        return groupInterval ? Math.floor(value / groupInterval) * groupInterval : value\r\n                    }\r\n                } else {\r\n                    fieldSelector = dataSelector\r\n                }\r\n                setDefaultFieldValueFormatting(field);\r\n                setFieldProperty(field, \"selector\", fieldSelector)\r\n            }\r\n        }))\r\n    }\r\n\r\n    function generateHierarchyItems(data, loadOptions, headers, headerName) {\r\n        var result = [0];\r\n        var expandIndex = loadOptions.headerName === headerName ? loadOptions.path.length : 0;\r\n        var expandedPaths = \"rows\" === headerName ? loadOptions.rowExpandedPaths : loadOptions.columnExpandedPaths;\r\n        var options = {\r\n            data: data,\r\n            childrenHash: headers[headerName + \"Hash\"],\r\n            dimensions: loadOptions[headerName],\r\n            expandedPathsHash: loadOptions.headerName !== headerName && expandedPaths && expandedPaths.hash\r\n        };\r\n        ! function fillHierarchyItemIndexesCore(indexes, options, children, expandIndex, pathHash) {\r\n            var dimension = options.dimensions[expandIndex];\r\n            var expandedPathsHash = options.expandedPathsHash;\r\n            var dimensionValue;\r\n            var hierarchyItem;\r\n            if (dimension) {\r\n                dimensionValue = dimension.selector(options.data);\r\n                pathHash = void 0 !== pathHash ? pathHash + PATH_DELIMETER + dimensionValue : dimensionValue + \"\";\r\n                hierarchyItem = function(value, hierarchyItems, pathHash, childrenHash) {\r\n                    var hierarchyItem = childrenHash[pathHash];\r\n                    if (!hierarchyItem) {\r\n                        hierarchyItem = {\r\n                            value: value,\r\n                            index: childrenHash.length++\r\n                        };\r\n                        childrenHash[pathHash] = hierarchyItem;\r\n                        hierarchyItems.push(hierarchyItem)\r\n                    }\r\n                    return hierarchyItem\r\n                }(dimensionValue, children, pathHash, options.childrenHash);\r\n                indexes.push(hierarchyItem.index);\r\n                if (expandedPathsHash && expandedPathsHash[pathHash] || dimension.expanded) {\r\n                    if (!hierarchyItem.children) {\r\n                        hierarchyItem.children = []\r\n                    }\r\n                    fillHierarchyItemIndexesCore(indexes, options, hierarchyItem.children, expandIndex + 1, pathHash)\r\n                }\r\n            }\r\n        }(result, options, headers[headerName], expandIndex);\r\n        return result\r\n    }\r\n\r\n    function generateAggregationCells(data, cells, headers, options) {\r\n        var cellSet = [];\r\n        var x;\r\n        var y;\r\n        var rowIndex;\r\n        var columnIndex;\r\n        var rowIndexes = generateHierarchyItems(data, options, headers, \"rows\");\r\n        var columnIndexes = generateHierarchyItems(data, options, headers, \"columns\");\r\n        for (y = 0; y < rowIndexes.length; y++) {\r\n            rowIndex = rowIndexes[y];\r\n            cells[rowIndex] = cells[rowIndex] || [];\r\n            for (x = 0; x < columnIndexes.length; x++) {\r\n                columnIndex = columnIndexes[x];\r\n                cellSet.push(cells[rowIndex][columnIndex] = cells[rowIndex][columnIndex] || [])\r\n            }\r\n        }\r\n        return cellSet\r\n    }\r\n\r\n    function fillHashExpandedPath(expandedPaths) {\r\n        if (expandedPaths) {\r\n            var hash = expandedPaths.hash = {};\r\n            expandedPaths.forEach((function(path) {\r\n                var pathValue = path.map((function(value) {\r\n                    return value + \"\"\r\n                })).join(PATH_DELIMETER);\r\n                hash[pathValue] = true\r\n            }))\r\n        }\r\n    }\r\n\r\n    function prepareLoadOption(options) {\r\n        options.rows = options.rows || [];\r\n        options.columns = options.columns || [];\r\n        options.filters = options.filters || [];\r\n        fillHashExpandedPath(options.columnExpandedPaths);\r\n        fillHashExpandedPath(options.rowExpandedPaths);\r\n        prepareFields(options.columns);\r\n        prepareFields(options.rows);\r\n        prepareFields(options.values);\r\n        prepareFields(options.filters)\r\n    }\r\n\r\n    function getAggregator(field) {\r\n        if (\"custom\" === field.summaryType) {\r\n            field.calculateCustomSummary = field.calculateCustomSummary || noop;\r\n            return {\r\n                seed: function() {\r\n                    var options = {\r\n                        summaryProcess: \"start\",\r\n                        totalValue: void 0\r\n                    };\r\n                    field.calculateCustomSummary(options);\r\n                    return options\r\n                },\r\n                step: function(options, value) {\r\n                    options.summaryProcess = \"calculate\";\r\n                    options.value = value;\r\n                    field.calculateCustomSummary(options);\r\n                    return options\r\n                },\r\n                finalize: function(options) {\r\n                    options.summaryProcess = \"finalize\";\r\n                    delete options.value;\r\n                    field.calculateCustomSummary(options);\r\n                    return options.totalValue\r\n                }\r\n            }\r\n        }\r\n        return aggregators[field.summaryType] || aggregators.count\r\n    }\r\n\r\n    function aggregationStep(measures, aggregationCells, data) {\r\n        for (var aggregatorIndex = 0; aggregatorIndex < measures.length; aggregatorIndex++) {\r\n            var cellField = measures[aggregatorIndex];\r\n            var cellValue = cellField.selector(data);\r\n            var aggregator = getAggregator(cellField);\r\n            var isAggregatorSeedFunction = \"function\" === typeof aggregator.seed;\r\n            for (var cellSetIndex = 0; cellSetIndex < aggregationCells.length; cellSetIndex++) {\r\n                var cell = aggregationCells[cellSetIndex];\r\n                if (cell.length <= aggregatorIndex) {\r\n                    cell[aggregatorIndex] = isAggregatorSeedFunction ? aggregator.seed() : aggregator.seed\r\n                }\r\n                if (void 0 === cell[aggregatorIndex]) {\r\n                    cell[aggregatorIndex] = cellValue\r\n                } else if (isDefined(cellValue)) {\r\n                    cell[aggregatorIndex] = aggregator.step(cell[aggregatorIndex], cellValue)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function areValuesEqual(filterValue, fieldValue) {\r\n        var valueOfFilter = filterValue && filterValue.valueOf();\r\n        var valueOfField = fieldValue && fieldValue.valueOf();\r\n        if (Array.isArray(filterValue)) {\r\n            fieldValue = fieldValue || [];\r\n            for (var i = 0; i < filterValue.length; i++) {\r\n                valueOfFilter = filterValue[i] && filterValue[i].valueOf();\r\n                valueOfField = fieldValue[i] && fieldValue[i].valueOf();\r\n                if (valueOfFilter !== valueOfField) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return valueOfFilter === valueOfField\r\n        }\r\n    }\r\n\r\n    function createDimensionFilters(dimension) {\r\n        var filters = [];\r\n        each(dimension, (function(_, field) {\r\n            var filterValues = field.filterValues || [];\r\n            var groupName = field.groupName;\r\n            if (groupName && isNumeric(field.groupIndex)) {\r\n                return\r\n            }\r\n            filterValues.length && filters.push((function(dataItem) {\r\n                var value = field.levels ? function(levels, data) {\r\n                    var value = [];\r\n                    each(levels, (function(_, field) {\r\n                        value.push(field.selector(data))\r\n                    }));\r\n                    return value\r\n                }(field.levels, dataItem) : field.selector(dataItem);\r\n                var result = false;\r\n                for (var i = 0; i < filterValues.length; i++) {\r\n                    if (areValuesEqual(filterValues[i], value)) {\r\n                        result = true;\r\n                        break\r\n                    }\r\n                }\r\n                return \"exclude\" === field.filterType ? !result : result\r\n            }))\r\n        }));\r\n        return filters\r\n    }\r\n\r\n    function createFilter(options) {\r\n        var filters = createDimensionFilters(options.rows).concat(createDimensionFilters(options.columns)).concat(createDimensionFilters(options.filters));\r\n        var expandedDimensions = options[options.headerName];\r\n        var path = options.path;\r\n        if (expandedDimensions) {\r\n            filters.push((function(dataItem) {\r\n                var expandValue;\r\n                for (var i = 0; i < path.length; i++) {\r\n                    expandValue = expandedDimensions[i].selector(dataItem);\r\n                    if (toComparable(expandValue, true) !== toComparable(path[i], true)) {\r\n                        return false\r\n                    }\r\n                }\r\n                return true\r\n            }))\r\n        }\r\n        return function(dataItem) {\r\n            for (var i = 0; i < filters.length; i++) {\r\n                if (!filters[i](dataItem)) {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n    }\r\n\r\n    function loadCore(items, options, notifyProgress) {\r\n        var headers = {\r\n            columns: [],\r\n            rows: [],\r\n            columnsHash: {\r\n                length: 1\r\n            },\r\n            rowsHash: {\r\n                length: 1\r\n            }\r\n        };\r\n        var values = [];\r\n        var aggregationCells;\r\n        var data;\r\n        var d = new Deferred;\r\n        var i = 0;\r\n        var filter = createFilter(options);\r\n        ! function processData() {\r\n            var t = new Date;\r\n            var startIndex = i;\r\n            for (; i < items.length; i++) {\r\n                if (i > startIndex && i % 1e4 === 0) {\r\n                    if (new Date - t >= 300) {\r\n                        notifyProgress(i / items.length);\r\n                        setTimeout(processData, 0);\r\n                        return\r\n                    }\r\n                }\r\n                data = items[i];\r\n                if (filter(data)) {\r\n                    aggregationCells = generateAggregationCells(data, values, headers, options);\r\n                    aggregationStep(options.values, aggregationCells, data)\r\n                }\r\n            }\r\n            measures = options.values, cells = values, void each(measures, (function(aggregatorIndex, cellField) {\r\n                var aggregator = getAggregator(cellField);\r\n                if (aggregator.finalize) {\r\n                    each(cells, (function(_, row) {\r\n                        each(row, (function(_, cell) {\r\n                            if (cell && void 0 !== cell[aggregatorIndex]) {\r\n                                cell[aggregatorIndex] = aggregator.finalize(cell[aggregatorIndex])\r\n                            }\r\n                        }))\r\n                    }))\r\n                }\r\n            }));\r\n            var measures, cells;\r\n            notifyProgress(1);\r\n            d.resolve({\r\n                rows: headers.rows,\r\n                columns: headers.columns,\r\n                values: values,\r\n                grandTotalRowIndex: 0,\r\n                grandTotalColumnIndex: 0\r\n            })\r\n        }();\r\n        return d\r\n    }\r\n\r\n    function filterDataSource(dataSource, fieldSelectors) {\r\n        var filter = dataSource.filter();\r\n        if (dataSource.store() instanceof CustomStore && filter) {\r\n            filter = processFilter(filter, fieldSelectors);\r\n            return dataQuery(dataSource.items()).filter(filter).toArray()\r\n        }\r\n        return dataSource.items()\r\n    }\r\n\r\n    function loadDataSource(dataSource, fieldSelectors, reload) {\r\n        var d = new Deferred;\r\n        var customizeStoreLoadOptionsHandler = function(options) {\r\n            if (dataSource.store() instanceof ArrayStore) {\r\n                options.storeLoadOptions.filter = processFilter(options.storeLoadOptions.filter, fieldSelectors)\r\n            }\r\n        };\r\n        dataSource.on(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler);\r\n        if (!dataSource.isLoaded() || reload) {\r\n            var loadDeferred = reload ? dataSource.load() : dataSource.reload();\r\n            when(loadDeferred).done((function() {\r\n                loadDataSource(dataSource, fieldSelectors).done((function() {\r\n                    d.resolve(filterDataSource(dataSource, fieldSelectors))\r\n                })).fail(d.reject)\r\n            })).fail(d.reject)\r\n        } else {\r\n            d.resolve(filterDataSource(dataSource, fieldSelectors))\r\n        }\r\n        return d.always((function() {\r\n            dataSource.off(\"customizeStoreLoadOptions\", customizeStoreLoadOptionsHandler)\r\n        }))\r\n    }\r\n\r\n    function fillSelectorsByFields(selectors, fields) {\r\n        fields.forEach((function(field) {\r\n            if (field.dataField && \"date\" === field.dataType) {\r\n                var valueSelector = getDateValue(getDataSelector(field.dataField));\r\n                selectors[field.dataField] = function(data) {\r\n                    return valueSelector(data)\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    function getFieldSelectors(options) {\r\n        var selectors = {};\r\n        if (Array.isArray(options)) {\r\n            fillSelectorsByFields(selectors, options)\r\n        } else if (options) {\r\n            [\"rows\", \"columns\", \"filters\"].forEach((function(area) {\r\n                options[area] && fillSelectorsByFields(selectors, options[area])\r\n            }))\r\n        }\r\n        return selectors\r\n    }\r\n\r\n    function processFilter(filter, fieldSelectors) {\r\n        if (!Array.isArray(filter)) {\r\n            return filter\r\n        }\r\n        filter = filter.slice(0);\r\n        if (isString(filter[0]) && (filter[1] instanceof Date || filter[2] instanceof Date)) {\r\n            filter[0] = fieldSelectors[filter[0]]\r\n        }\r\n        for (var i = 0; i < filter.length; i++) {\r\n            filter[i] = processFilter(filter[i], fieldSelectors)\r\n        }\r\n        return filter\r\n    }\r\n    return {\r\n        ctor: function(options) {\r\n            this._progressChanged = options.onProgressChanged || noop;\r\n            this._dataSource = new DataSource(options);\r\n            this._dataSource.paginate(false)\r\n        },\r\n        getFields: function(fields) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            loadDataSource(dataSource, getFieldSelectors(fields)).done((function(data) {\r\n                d.resolve(discoverObjectFields(data, fields))\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        key: function() {\r\n            return this._dataSource.key()\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            prepareLoadOption(options);\r\n            loadDataSource(dataSource, getFieldSelectors(options), options.reload).done((function(data) {\r\n                when(loadCore(data, options, that._progressChanged)).done(d.resolve)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        filter: function() {\r\n            var dataSource = this._dataSource;\r\n            return dataSource.filter.apply(dataSource, arguments)\r\n        },\r\n        supportPaging: function() {\r\n            return false\r\n        },\r\n        getDrillDownItems: function(loadOptions, params) {\r\n            loadOptions = loadOptions || {};\r\n            params = params || {};\r\n            prepareLoadOption(loadOptions);\r\n            var drillDownItems = [];\r\n            var items = this._dataSource.items();\r\n            var item;\r\n            var maxRowCount = params.maxRowCount;\r\n            var customColumns = params.customColumns;\r\n            var filter = createFilter(loadOptions);\r\n            var pathFilter = createFilter({\r\n                rows: getFiltersByPath(loadOptions.rows, params.rowPath),\r\n                columns: getFiltersByPath(loadOptions.columns, params.columnPath),\r\n                filters: []\r\n            });\r\n            for (var i = 0; i < items.length; i++) {\r\n                if (pathFilter(items[i]) && filter(items[i])) {\r\n                    if (customColumns) {\r\n                        item = {};\r\n                        for (var j = 0; j < customColumns.length; j++) {\r\n                            item[customColumns[j]] = items[i][customColumns[j]]\r\n                        }\r\n                    } else {\r\n                        item = items[i]\r\n                    }\r\n                    drillDownItems.push(item)\r\n                }\r\n                if (maxRowCount > 0 && drillDownItems.length === maxRowCount) {\r\n                    break\r\n                }\r\n            }\r\n            return drillDownItems\r\n        }\r\n    }\r\n}()).include(storeDrillDownMixin);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/chart_components/zoom_and_pan.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeEnum, getVizRangeObject } from \"../core/utils\";\nimport { name as wheelEvent } from \"../../events/core/wheel\";\nimport * as transformEvents from \"../../events/transform\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../../events/drag\";\nvar EVENTS_NS = \".zoomAndPanNS\";\nvar DRAG_START_EVENT_NAME = dragEventStart + EVENTS_NS;\nvar DRAG_EVENT_NAME = dragEventMove + EVENTS_NS;\nvar DRAG_END_EVENT_NAME = dragEventEnd + EVENTS_NS;\nvar PINCH_START_EVENT_NAME = transformEvents.pinchstart + EVENTS_NS;\nvar PINCH_EVENT_NAME = transformEvents.pinch + EVENTS_NS;\nvar PINCH_END_EVENT_NAME = transformEvents.pinchend + EVENTS_NS;\nvar SCROLL_BAR_START_EVENT_NAME = \"dxc-scroll-start\" + EVENTS_NS;\nvar SCROLL_BAR_MOVE_EVENT_NAME = \"dxc-scroll-move\" + EVENTS_NS;\nvar SCROLL_BAR_END_EVENT_NAME = \"dxc-scroll-end\" + EVENTS_NS;\nvar GESTURE_TIMEOUT = 300;\nvar MIN_DRAG_DELTA = 5;\nvar _min = Math.min;\nvar _max = Math.max;\nvar _abs = Math.abs;\n\nfunction canvasToRect(canvas) {\n  return {\n    x: canvas.left,\n    y: canvas.top,\n    width: canvas.width - canvas.left - canvas.right,\n    height: canvas.height - canvas.top - canvas.bottom\n  };\n}\n\nfunction checkCoords(rect, coords) {\n  var x = coords.x;\n  var y = coords.y;\n  return x >= rect.x && x <= rect.width + rect.x && y >= rect.y && y <= rect.height + rect.y;\n}\n\nfunction sortAxes(axes, onlyAxisToNotify) {\n  if (onlyAxisToNotify) {\n    axes = axes.sort((a, b) => {\n      if (a === onlyAxisToNotify) {\n        return -1;\n      }\n\n      if (b === onlyAxisToNotify) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  return axes;\n}\n\nfunction getFilteredAxes(axes) {\n  return axes.filter(a => !a.getTranslator().getBusinessRange().isEmpty());\n}\n\nfunction isAxisAvailablePanning(axes) {\n  return axes.some(axis => !axis.isExtremePosition(false) || !axis.isExtremePosition(true));\n}\n\nfunction axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e) {\n  var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\n  var range = getRange(axis);\n  var {\n    stopInteraction: stopInteraction,\n    correctedRange: correctedRange\n  } = axis.checkZoomingLowerLimitOvercome(actionField, scale, range);\n  var result = axis.handleZooming(stopInteraction ? null : correctedRange, getParameters(silent), e, actionField);\n  stopInteraction && axis.handleZoomEnd();\n  return {\n    stopInteraction: stopInteraction,\n    result: result\n  };\n}\n\nfunction zoomAxes(e, axes, getRange, zoom, params, onlyAxisToNotify) {\n  axes = sortAxes(axes, onlyAxisToNotify);\n  var zoomStarted = false;\n\n  var getParameters = silent => ({\n    start: !!silent,\n    end: !!silent\n  });\n\n  getFilteredAxes(axes).some(axis => {\n    var translator = axis.getTranslator();\n    var scale = translator.getMinScale(zoom);\n    var {\n      stopInteraction: stopInteraction,\n      result: result\n    } = axisZoom(axis, onlyAxisToNotify, getRange(_extends({\n      scale: scale,\n      translator: translator,\n      axis: axis\n    }, params)), getParameters, \"zoom\", scale, e);\n    zoomStarted = !stopInteraction;\n    return onlyAxisToNotify && result.isPrevented;\n  });\n  return zoomStarted;\n}\n\nfunction cancelEvent(e) {\n  if (e.originalEvent) {\n    cancelEvent(e.originalEvent);\n  }\n\n  if (false !== e.cancelable) {\n    e.cancel = true;\n  }\n}\n\nexport default {\n  name: \"zoom_and_pan\",\n  init: function () {\n    var chart = this;\n    var renderer = this._renderer;\n\n    function getAxesCopy(zoomAndPan, actionField) {\n      var axes = [];\n      var options = zoomAndPan.options;\n      var actionData = zoomAndPan.actionData;\n\n      if (options.argumentAxis[actionField]) {\n        axes.push(chart.getArgumentAxis());\n      }\n\n      if (options.valueAxis[actionField]) {\n        axes = axes.concat(actionData.valueAxes);\n      }\n\n      return axes;\n    }\n\n    function startAxesViewportChanging(zoomAndPan, actionField, e) {\n      var axes = getAxesCopy(zoomAndPan, actionField);\n      getFilteredAxes(axes).some(axis => axis.handleZooming(null, {\n        end: true\n      }, e, actionField).isPrevented) && cancelEvent(e);\n    }\n\n    function axesViewportChanging(zoomAndPan, actionField, e, offsetCalc, centerCalc) {\n      function zoomAxes(axes, criteria, coordField, e, actionData) {\n        var zoom = {\n          zoomed: false\n        };\n        criteria && getFilteredAxes(axes).forEach(axis => {\n          var options = axis.getOptions();\n          var viewport = axis.visualRange();\n          var scale = axis.getTranslator().getEventScale(e);\n          var translate = -offsetCalc(e, actionData, coordField, scale);\n          zoom = extend(true, zoom, axis.getTranslator().zoom(translate, scale, axis.getZoomBounds()));\n          var range = axis.adjustRange(getVizRangeObject([zoom.min, zoom.max]));\n          var {\n            stopInteraction: stopInteraction,\n            correctedRange: correctedRange\n          } = axis.checkZoomingLowerLimitOvercome(actionField, scale, range);\n\n          if (!isDefined(viewport) || viewport.startValue.valueOf() !== correctedRange.startValue.valueOf() || viewport.endValue.valueOf() !== correctedRange.endValue.valueOf()) {\n            axis.handleZooming(stopInteraction ? null : correctedRange, {\n              start: true,\n              end: true\n            }, e, actionField);\n\n            if (!stopInteraction) {\n              zoom.zoomed = true;\n              zoom.deltaTranslate = translate - zoom.translate;\n            }\n          } else if (\"touch\" === e.pointerType && \"discrete\" === options.type) {\n            var isMinPosition = axis.isExtremePosition(false);\n            var isMaxPosition = axis.isExtremePosition(true);\n            var zoomInEnabled = scale > 1 && !stopInteraction;\n            var zoomOutEnabled = scale < 1 && (!isMinPosition || !isMaxPosition);\n            var panningEnabled = 1 === scale && !(isMinPosition && (translate < 0 && !options.inverted || translate > 0 && options.inverted) || isMaxPosition && (translate > 0 && !options.inverted || translate < 0 && options.inverted));\n            zoom.enabled = zoomInEnabled || zoomOutEnabled || panningEnabled;\n          }\n        });\n        return zoom;\n      }\n\n      function storeOffset(e, actionData, zoom, coordField) {\n        if (zoom.zoomed) {\n          actionData.offset[coordField] = (e.offset ? e.offset[coordField] : actionData.offset[coordField]) + zoom.deltaTranslate;\n        }\n      }\n\n      function storeCenter(center, actionData, zoom, coordField) {\n        if (zoom.zoomed) {\n          actionData.center[coordField] = center[coordField] + zoom.deltaTranslate;\n        }\n      }\n\n      var rotated = chart.option(\"rotated\");\n      var actionData = zoomAndPan.actionData;\n      var options = zoomAndPan.options;\n      var argZoom = {};\n      var valZoom = {};\n\n      if (!actionData.fallback) {\n        argZoom = zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData);\n        valZoom = zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\n\n        chart._requestChange([\"VISUAL_RANGE\"]);\n\n        storeOffset(e, actionData, argZoom, rotated ? \"y\" : \"x\");\n        storeOffset(e, actionData, valZoom, rotated ? \"x\" : \"y\");\n      }\n\n      var center = centerCalc(e);\n      storeCenter(center, actionData, argZoom, rotated ? \"y\" : \"x\");\n      storeCenter(center, actionData, valZoom, rotated ? \"x\" : \"y\");\n\n      if (!argZoom.zoomed && !valZoom.zoomed) {\n        actionData.center = center;\n      }\n\n      return argZoom.zoomed || valZoom.zoomed || actionData.fallback || argZoom.enabled || valZoom.enabled;\n    }\n\n    function finishAxesViewportChanging(zoomAndPan, actionField, e, offsetCalc) {\n      function zoomAxes(axes, coordField, actionData, onlyAxisToNotify) {\n        var zoomStarted = false;\n        var scale = e.scale || 1;\n\n        var getRange = axis => {\n          var zoom = axis.getTranslator().zoom(-offsetCalc(e, actionData, coordField, scale), scale, axis.getZoomBounds());\n          return {\n            startValue: zoom.min,\n            endValue: zoom.max\n          };\n        };\n\n        var getParameters = silent => ({\n          start: true,\n          end: silent\n        });\n\n        getFilteredAxes(axes).forEach(axis => {\n          zoomStarted = !axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e).stopInteraction;\n        });\n        return zoomStarted;\n      }\n\n      var rotated = chart.option(\"rotated\");\n      var actionData = zoomAndPan.actionData;\n      var options = zoomAndPan.options;\n      var zoomStarted = true;\n\n      if (actionData.fallback) {\n        zoomStarted &= options.argumentAxis[actionField] && zoomAxes(chart._argumentAxes, rotated ? \"y\" : \"x\", actionData, chart.getArgumentAxis());\n        zoomStarted |= options.valueAxis[actionField] && zoomAxes(actionData.valueAxes, rotated ? \"x\" : \"y\", actionData);\n      } else {\n        var axes = getAxesCopy(zoomAndPan, actionField);\n        getFilteredAxes(axes).forEach(axis => {\n          axis.handleZooming(null, {\n            start: true\n          }, e, actionField);\n        });\n        zoomStarted = axes.length;\n      }\n\n      zoomStarted && chart._requestChange([\"VISUAL_RANGE\"]);\n    }\n\n    function prepareActionData(coords, action) {\n      var axes = chart._argumentAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords));\n\n      return {\n        fallback: chart._lastRenderingTime > GESTURE_TIMEOUT,\n        cancel: !axes.length || !isDefined(action),\n        action: action,\n        curAxisRect: axes.length && canvasToRect(axes[0].getCanvas()),\n        valueAxes: axes.length && chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords)),\n        offset: {\n          x: 0,\n          y: 0\n        },\n        center: coords,\n        startCenter: coords\n      };\n    }\n\n    function getPointerCoord(rect, e) {\n      var rootOffset = renderer.getRootOffset();\n      return {\n        x: _min(_max(e.pageX - rootOffset.left, rect.x), rect.width + rect.x),\n        y: _min(_max(e.pageY - rootOffset.top, rect.y), rect.height + rect.y)\n      };\n    }\n\n    function calcCenterForPinch(e) {\n      var rootOffset = renderer.getRootOffset();\n      var x1 = e.pointers[0].pageX;\n      var x2 = e.pointers[1].pageX;\n      var y1 = e.pointers[0].pageY;\n      var y2 = e.pointers[1].pageY;\n      return {\n        x: _min(x1, x2) + _abs(x2 - x1) / 2 - rootOffset.left,\n        y: _min(y1, y2) + _abs(y2 - y1) / 2 - rootOffset.top\n      };\n    }\n\n    function calcCenterForDrag(e) {\n      var rootOffset = renderer.getRootOffset();\n      return {\n        x: e.pageX - rootOffset.left,\n        y: e.pageY - rootOffset.top\n      };\n    }\n\n    function calcOffsetForDrag(e, actionData, coordField) {\n      return e.offset[coordField] - actionData.offset[coordField];\n    }\n\n    function preventDefaults(e) {\n      if (false !== e.cancelable) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      chart._stopCurrentHandling();\n    }\n\n    var zoomAndPan = {\n      dragStartHandler: function (e) {\n        var options = zoomAndPan.options;\n        var isTouch = \"touch\" === e.pointerType;\n        var wantPan = options.argumentAxis.pan || options.valueAxis.pan;\n        var wantZoom = options.argumentAxis.zoom || options.valueAxis.zoom;\n        var panKeyPressed = isDefined(options.panKey) && e[normalizeEnum(options.panKey) + \"Key\"];\n        var dragToZoom = options.dragToZoom;\n        var action;\n        e._cancelPreventDefault = true;\n\n        if (isTouch) {\n          if (options.allowTouchGestures && wantPan) {\n            var cancelPanning = !zoomAndPan.panningVisualRangeEnabled() || zoomAndPan.skipEvent;\n            action = cancelPanning ? null : \"pan\";\n          }\n        } else if (dragToZoom && wantPan && panKeyPressed || !dragToZoom && wantPan) {\n          action = \"pan\";\n        } else if (dragToZoom && wantZoom) {\n          action = \"zoom\";\n        }\n\n        var actionData = prepareActionData(calcCenterForDrag(e), action);\n\n        if (actionData.cancel) {\n          zoomAndPan.skipEvent = false;\n\n          if (false !== e.cancelable) {\n            e.cancel = true;\n          }\n\n          return;\n        }\n\n        zoomAndPan.actionData = actionData;\n\n        if (\"zoom\" === action) {\n          actionData.startCoords = getPointerCoord(actionData.curAxisRect, e);\n          actionData.rect = renderer.rect(0, 0, 0, 0).attr(options.dragBoxStyle).append(renderer.root);\n        } else {\n          startAxesViewportChanging(zoomAndPan, \"pan\", e);\n        }\n      },\n      dragHandler: function (e) {\n        var rotated = chart.option(\"rotated\");\n        var options = zoomAndPan.options;\n        var actionData = zoomAndPan.actionData;\n        var isTouch = \"touch\" === e.pointerType;\n        e._cancelPreventDefault = true;\n\n        if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled()) {\n          return;\n        }\n\n        if (\"zoom\" === actionData.action) {\n          preventDefaults(e);\n          var curCanvas = actionData.curAxisRect;\n          var startCoords = actionData.startCoords;\n          var curCoords = getPointerCoord(curCanvas, e);\n          var zoomArg = options.argumentAxis.zoom;\n          var zoomVal = options.valueAxis.zoom;\n          var rect = {\n            x: _min(startCoords.x, curCoords.x),\n            y: _min(startCoords.y, curCoords.y),\n            width: _abs(startCoords.x - curCoords.x),\n            height: _abs(startCoords.y - curCoords.y)\n          };\n\n          if (!zoomArg || !zoomVal) {\n            if (!zoomArg && !rotated || !zoomVal && rotated) {\n              rect.x = curCanvas.x;\n              rect.width = curCanvas.width;\n            } else {\n              rect.y = curCanvas.y;\n              rect.height = curCanvas.height;\n            }\n          }\n\n          actionData.rect.attr(rect);\n        } else if (\"pan\" === actionData.action) {\n          axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, e => e.offset);\n          var deltaOffsetY = Math.abs(e.offset.y - actionData.offset.y);\n          var deltaOffsetX = Math.abs(e.offset.x - actionData.offset.x);\n\n          if (isTouch && (deltaOffsetY > MIN_DRAG_DELTA && deltaOffsetY > Math.abs(actionData.offset.x) || deltaOffsetX > MIN_DRAG_DELTA && deltaOffsetX > Math.abs(actionData.offset.y))) {\n            return;\n          }\n\n          preventDefaults(e);\n        }\n      },\n      dragEndHandler: function (e) {\n        var rotated = chart.option(\"rotated\");\n        var options = zoomAndPan.options;\n        var actionData = zoomAndPan.actionData;\n        var isTouch = \"touch\" === e.pointerType;\n\n        var getRange = _ref => {\n          var {\n            translator: translator,\n            startCoord: startCoord,\n            curCoord: curCoord\n          } = _ref;\n          return () => [translator.from(startCoord), translator.from(curCoord)];\n        };\n\n        var getCoords = (curCoords, startCoords, field) => ({\n          curCoord: curCoords[field],\n          startCoord: startCoords[field]\n        });\n\n        var needToZoom = (axisOption, coords) => axisOption.zoom && _abs(coords.curCoord - coords.startCoord) > MIN_DRAG_DELTA;\n\n        var panIsEmpty = actionData && \"pan\" === actionData.action && !actionData.fallback && 0 === actionData.offset.x && 0 === actionData.offset.y;\n\n        if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled() || panIsEmpty) {\n          return;\n        }\n\n        !isTouch && preventDefaults(e);\n\n        if (\"zoom\" === actionData.action) {\n          var curCoords = getPointerCoord(actionData.curAxisRect, e);\n          var argumentCoords = getCoords(curCoords, actionData.startCoords, rotated ? \"y\" : \"x\");\n          var valueCoords = getCoords(curCoords, actionData.startCoords, rotated ? \"x\" : \"y\");\n          var argumentAxesZoomed = needToZoom(options.argumentAxis, argumentCoords) && zoomAxes(e, chart._argumentAxes, getRange, true, argumentCoords, chart.getArgumentAxis());\n          var valueAxesZoomed = needToZoom(options.valueAxis, valueCoords) && zoomAxes(e, actionData.valueAxes, getRange, true, valueCoords);\n\n          if (valueAxesZoomed || argumentAxesZoomed) {\n            chart._requestChange([\"VISUAL_RANGE\"]);\n          }\n\n          actionData.rect.dispose();\n        } else if (\"pan\" === actionData.action) {\n          finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\n        }\n\n        zoomAndPan.actionData = null;\n      },\n      pinchStartHandler: function (e) {\n        var actionData = prepareActionData(calcCenterForPinch(e), \"zoom\");\n\n        if (actionData.cancel) {\n          cancelEvent(e);\n          return;\n        }\n\n        zoomAndPan.actionData = actionData;\n        startAxesViewportChanging(zoomAndPan, \"zoom\", e);\n      },\n      pinchHandler: function (e) {\n        if (!zoomAndPan.actionData) {\n          return;\n        }\n\n        axesViewportChanging(zoomAndPan, \"zoom\", e, (e, actionData, coordField, scale) => calcCenterForPinch(e)[coordField] - actionData.center[coordField] + (actionData.center[coordField] - actionData.center[coordField] * scale), calcCenterForPinch);\n        preventDefaults(e);\n      },\n      pinchEndHandler: function (e) {\n        if (!zoomAndPan.actionData) {\n          return;\n        }\n\n        finishAxesViewportChanging(zoomAndPan, \"zoom\", e, (e, actionData, coordField, scale) => actionData.center[coordField] - actionData.startCenter[coordField] + (actionData.startCenter[coordField] - actionData.startCenter[coordField] * scale));\n        zoomAndPan.actionData = null;\n      },\n      mouseWheelHandler: function (e) {\n        var options = zoomAndPan.options;\n        var rotated = chart.option(\"rotated\");\n\n        var getRange = _ref2 => {\n          var {\n            translator: translator,\n            coord: coord,\n            scale: scale,\n            axis: axis\n          } = _ref2;\n          return () => {\n            var zoom = translator.zoom(-(coord - coord * scale), scale, axis.getZoomBounds());\n            return {\n              startValue: zoom.min,\n              endValue: zoom.max\n            };\n          };\n        };\n\n        var coords = calcCenterForDrag(e);\n        var axesZoomed = false;\n        var targetAxes;\n\n        if (options.valueAxis.zoom) {\n          targetAxes = chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords));\n\n          if (0 === targetAxes.length) {\n            var targetCanvas = chart._valueAxes.reduce((r, axis) => {\n              if (!r && axis.coordsIn(coords.x, coords.y)) {\n                r = axis.getCanvas();\n              }\n\n              return r;\n            }, null);\n\n            if (targetCanvas) {\n              targetAxes = chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), {\n                x: targetCanvas.left,\n                y: targetCanvas.top\n              }));\n            }\n          }\n\n          axesZoomed |= zoomAxes(e, targetAxes, getRange, e.delta > 0, {\n            coord: rotated ? coords.x : coords.y\n          });\n        }\n\n        if (options.argumentAxis.zoom) {\n          var canZoom = chart._argumentAxes.some(axis => {\n            if (checkCoords(canvasToRect(axis.getCanvas()), coords) || axis.coordsIn(coords.x, coords.y)) {\n              return true;\n            }\n\n            return false;\n          });\n\n          axesZoomed |= canZoom && zoomAxes(e, chart._argumentAxes, getRange, e.delta > 0, {\n            coord: rotated ? coords.y : coords.x\n          }, chart.getArgumentAxis());\n        }\n\n        if (axesZoomed) {\n          chart._requestChange([\"VISUAL_RANGE\"]);\n\n          if (targetAxes && isAxisAvailablePanning(targetAxes) || !targetAxes && zoomAndPan.panningVisualRangeEnabled()) {\n            preventDefaults(e);\n          }\n        }\n      },\n      cleanup: function () {\n        renderer.root.off(EVENTS_NS);\n        zoomAndPan.actionData && zoomAndPan.actionData.rect && zoomAndPan.actionData.rect.dispose();\n        zoomAndPan.actionData = null;\n        renderer.root.css({\n          \"touch-action\": \"\",\n          \"-ms-touch-action\": \"\"\n        });\n      },\n      setup: function (options) {\n        zoomAndPan.cleanup();\n\n        if (!options.argumentAxis.pan) {\n          renderer.root.on(SCROLL_BAR_START_EVENT_NAME, cancelEvent);\n        }\n\n        if (options.argumentAxis.none && options.valueAxis.none) {\n          return;\n        }\n\n        zoomAndPan.options = options;\n\n        if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowMouseWheel) {\n          renderer.root.on(wheelEvent + EVENTS_NS, zoomAndPan.mouseWheelHandler);\n        }\n\n        if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowTouchGestures) {\n          renderer.root.on(PINCH_START_EVENT_NAME, {\n            passive: false\n          }, zoomAndPan.pinchStartHandler).on(PINCH_EVENT_NAME, {\n            passive: false\n          }, zoomAndPan.pinchHandler).on(PINCH_END_EVENT_NAME, zoomAndPan.pinchEndHandler);\n        }\n\n        renderer.root.on(DRAG_START_EVENT_NAME, {\n          immediate: true,\n          passive: false\n        }, zoomAndPan.dragStartHandler).on(DRAG_EVENT_NAME, {\n          immediate: true,\n          passive: false\n        }, zoomAndPan.dragHandler).on(DRAG_END_EVENT_NAME, zoomAndPan.dragEndHandler);\n        renderer.root.on(SCROLL_BAR_START_EVENT_NAME, function (e) {\n          zoomAndPan.actionData = {\n            valueAxes: [],\n            offset: {\n              x: 0,\n              y: 0\n            },\n            center: {\n              x: 0,\n              y: 0\n            }\n          };\n          preventDefaults(e);\n          startAxesViewportChanging(zoomAndPan, \"pan\", e);\n        }).on(SCROLL_BAR_MOVE_EVENT_NAME, function (e) {\n          preventDefaults(e);\n          axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, e => e.offset);\n        }).on(SCROLL_BAR_END_EVENT_NAME, function (e) {\n          preventDefaults(e);\n          finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\n          zoomAndPan.actionData = null;\n        });\n      },\n      panningVisualRangeEnabled: function () {\n        return isAxisAvailablePanning(chart._valueAxes) || isAxisAvailablePanning(chart._argumentAxes);\n      }\n    };\n    this._zoomAndPan = zoomAndPan;\n  },\n  members: {\n    _setupZoomAndPan: function () {\n      this._zoomAndPan.setup(this._themeManager.getOptions(\"zoomAndPan\"));\n    }\n  },\n  dispose: function () {\n    this._zoomAndPan.cleanup();\n  },\n  customize: function (constructor) {\n    constructor.addChange({\n      code: \"ZOOM_AND_PAN\",\n      handler: function () {\n        this._setupZoomAndPan();\n      },\n      isThemeDependent: true,\n      isOptionChange: true,\n      option: \"zoomAndPan\"\n    });\n  }\n};","map":{"version":3,"names":["_extends","isDefined","extend","normalizeEnum","getVizRangeObject","name","wheelEvent","transformEvents","start","dragEventStart","move","dragEventMove","end","dragEventEnd","EVENTS_NS","DRAG_START_EVENT_NAME","DRAG_EVENT_NAME","DRAG_END_EVENT_NAME","PINCH_START_EVENT_NAME","pinchstart","PINCH_EVENT_NAME","pinch","PINCH_END_EVENT_NAME","pinchend","SCROLL_BAR_START_EVENT_NAME","SCROLL_BAR_MOVE_EVENT_NAME","SCROLL_BAR_END_EVENT_NAME","GESTURE_TIMEOUT","MIN_DRAG_DELTA","_min","Math","min","_max","max","_abs","abs","canvasToRect","canvas","x","left","y","top","width","right","height","bottom","checkCoords","rect","coords","sortAxes","axes","onlyAxisToNotify","sort","a","b","getFilteredAxes","filter","getTranslator","getBusinessRange","isEmpty","isAxisAvailablePanning","some","axis","isExtremePosition","axisZoom","getRange","getParameters","actionField","scale","e","silent","range","stopInteraction","correctedRange","checkZoomingLowerLimitOvercome","result","handleZooming","handleZoomEnd","zoomAxes","zoom","params","zoomStarted","translator","getMinScale","isPrevented","cancelEvent","originalEvent","cancelable","cancel","init","chart","renderer","_renderer","getAxesCopy","zoomAndPan","options","actionData","argumentAxis","push","getArgumentAxis","valueAxis","concat","valueAxes","startAxesViewportChanging","axesViewportChanging","offsetCalc","centerCalc","criteria","coordField","zoomed","forEach","getOptions","viewport","visualRange","getEventScale","translate","getZoomBounds","adjustRange","startValue","valueOf","endValue","deltaTranslate","pointerType","type","isMinPosition","isMaxPosition","zoomInEnabled","zoomOutEnabled","panningEnabled","inverted","enabled","storeOffset","offset","storeCenter","center","rotated","option","argZoom","valZoom","fallback","_argumentAxes","_requestChange","finishAxesViewportChanging","length","prepareActionData","action","getCanvas","_lastRenderingTime","curAxisRect","_valueAxes","startCenter","getPointerCoord","rootOffset","getRootOffset","pageX","pageY","calcCenterForPinch","x1","pointers","x2","y1","y2","calcCenterForDrag","calcOffsetForDrag","preventDefaults","preventDefault","stopPropagation","_stopCurrentHandling","dragStartHandler","isTouch","wantPan","pan","wantZoom","panKeyPressed","panKey","dragToZoom","_cancelPreventDefault","allowTouchGestures","cancelPanning","panningVisualRangeEnabled","skipEvent","startCoords","attr","dragBoxStyle","append","root","dragHandler","curCanvas","curCoords","zoomArg","zoomVal","deltaOffsetY","deltaOffsetX","dragEndHandler","_ref","startCoord","curCoord","from","getCoords","field","needToZoom","axisOption","panIsEmpty","argumentCoords","valueCoords","argumentAxesZoomed","valueAxesZoomed","dispose","pinchStartHandler","pinchHandler","pinchEndHandler","mouseWheelHandler","_ref2","coord","axesZoomed","targetAxes","targetCanvas","reduce","r","coordsIn","delta","canZoom","cleanup","off","css","setup","on","none","allowMouseWheel","passive","immediate","_zoomAndPan","members","_setupZoomAndPan","_themeManager","customize","constructor","addChange","code","handler","isThemeDependent","isOptionChange"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/chart_components/zoom_and_pan.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/chart_components/zoom_and_pan.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeEnum,\r\n    getVizRangeObject\r\n} from \"../core/utils\";\r\nimport {\r\n    name as wheelEvent\r\n} from \"../../events/core/wheel\";\r\nimport * as transformEvents from \"../../events/transform\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nvar EVENTS_NS = \".zoomAndPanNS\";\r\nvar DRAG_START_EVENT_NAME = dragEventStart + EVENTS_NS;\r\nvar DRAG_EVENT_NAME = dragEventMove + EVENTS_NS;\r\nvar DRAG_END_EVENT_NAME = dragEventEnd + EVENTS_NS;\r\nvar PINCH_START_EVENT_NAME = transformEvents.pinchstart + EVENTS_NS;\r\nvar PINCH_EVENT_NAME = transformEvents.pinch + EVENTS_NS;\r\nvar PINCH_END_EVENT_NAME = transformEvents.pinchend + EVENTS_NS;\r\nvar SCROLL_BAR_START_EVENT_NAME = \"dxc-scroll-start\" + EVENTS_NS;\r\nvar SCROLL_BAR_MOVE_EVENT_NAME = \"dxc-scroll-move\" + EVENTS_NS;\r\nvar SCROLL_BAR_END_EVENT_NAME = \"dxc-scroll-end\" + EVENTS_NS;\r\nvar GESTURE_TIMEOUT = 300;\r\nvar MIN_DRAG_DELTA = 5;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _abs = Math.abs;\r\n\r\nfunction canvasToRect(canvas) {\r\n    return {\r\n        x: canvas.left,\r\n        y: canvas.top,\r\n        width: canvas.width - canvas.left - canvas.right,\r\n        height: canvas.height - canvas.top - canvas.bottom\r\n    }\r\n}\r\n\r\nfunction checkCoords(rect, coords) {\r\n    var x = coords.x;\r\n    var y = coords.y;\r\n    return x >= rect.x && x <= rect.width + rect.x && y >= rect.y && y <= rect.height + rect.y\r\n}\r\n\r\nfunction sortAxes(axes, onlyAxisToNotify) {\r\n    if (onlyAxisToNotify) {\r\n        axes = axes.sort((a, b) => {\r\n            if (a === onlyAxisToNotify) {\r\n                return -1\r\n            }\r\n            if (b === onlyAxisToNotify) {\r\n                return 1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n    return axes\r\n}\r\n\r\nfunction getFilteredAxes(axes) {\r\n    return axes.filter(a => !a.getTranslator().getBusinessRange().isEmpty())\r\n}\r\n\r\nfunction isAxisAvailablePanning(axes) {\r\n    return axes.some(axis => !axis.isExtremePosition(false) || !axis.isExtremePosition(true))\r\n}\r\n\r\nfunction axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e) {\r\n    var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\r\n    var range = getRange(axis);\r\n    var {\r\n        stopInteraction: stopInteraction,\r\n        correctedRange: correctedRange\r\n    } = axis.checkZoomingLowerLimitOvercome(actionField, scale, range);\r\n    var result = axis.handleZooming(stopInteraction ? null : correctedRange, getParameters(silent), e, actionField);\r\n    stopInteraction && axis.handleZoomEnd();\r\n    return {\r\n        stopInteraction: stopInteraction,\r\n        result: result\r\n    }\r\n}\r\n\r\nfunction zoomAxes(e, axes, getRange, zoom, params, onlyAxisToNotify) {\r\n    axes = sortAxes(axes, onlyAxisToNotify);\r\n    var zoomStarted = false;\r\n    var getParameters = silent => ({\r\n        start: !!silent,\r\n        end: !!silent\r\n    });\r\n    getFilteredAxes(axes).some(axis => {\r\n        var translator = axis.getTranslator();\r\n        var scale = translator.getMinScale(zoom);\r\n        var {\r\n            stopInteraction: stopInteraction,\r\n            result: result\r\n        } = axisZoom(axis, onlyAxisToNotify, getRange(_extends({\r\n            scale: scale,\r\n            translator: translator,\r\n            axis: axis\r\n        }, params)), getParameters, \"zoom\", scale, e);\r\n        zoomStarted = !stopInteraction;\r\n        return onlyAxisToNotify && result.isPrevented\r\n    });\r\n    return zoomStarted\r\n}\r\n\r\nfunction cancelEvent(e) {\r\n    if (e.originalEvent) {\r\n        cancelEvent(e.originalEvent)\r\n    }\r\n    if (false !== e.cancelable) {\r\n        e.cancel = true\r\n    }\r\n}\r\nexport default {\r\n    name: \"zoom_and_pan\",\r\n    init: function() {\r\n        var chart = this;\r\n        var renderer = this._renderer;\r\n\r\n        function getAxesCopy(zoomAndPan, actionField) {\r\n            var axes = [];\r\n            var options = zoomAndPan.options;\r\n            var actionData = zoomAndPan.actionData;\r\n            if (options.argumentAxis[actionField]) {\r\n                axes.push(chart.getArgumentAxis())\r\n            }\r\n            if (options.valueAxis[actionField]) {\r\n                axes = axes.concat(actionData.valueAxes)\r\n            }\r\n            return axes\r\n        }\r\n\r\n        function startAxesViewportChanging(zoomAndPan, actionField, e) {\r\n            var axes = getAxesCopy(zoomAndPan, actionField);\r\n            getFilteredAxes(axes).some(axis => axis.handleZooming(null, {\r\n                end: true\r\n            }, e, actionField).isPrevented) && cancelEvent(e)\r\n        }\r\n\r\n        function axesViewportChanging(zoomAndPan, actionField, e, offsetCalc, centerCalc) {\r\n            function zoomAxes(axes, criteria, coordField, e, actionData) {\r\n                var zoom = {\r\n                    zoomed: false\r\n                };\r\n                criteria && getFilteredAxes(axes).forEach(axis => {\r\n                    var options = axis.getOptions();\r\n                    var viewport = axis.visualRange();\r\n                    var scale = axis.getTranslator().getEventScale(e);\r\n                    var translate = -offsetCalc(e, actionData, coordField, scale);\r\n                    zoom = extend(true, zoom, axis.getTranslator().zoom(translate, scale, axis.getZoomBounds()));\r\n                    var range = axis.adjustRange(getVizRangeObject([zoom.min, zoom.max]));\r\n                    var {\r\n                        stopInteraction: stopInteraction,\r\n                        correctedRange: correctedRange\r\n                    } = axis.checkZoomingLowerLimitOvercome(actionField, scale, range);\r\n                    if (!isDefined(viewport) || viewport.startValue.valueOf() !== correctedRange.startValue.valueOf() || viewport.endValue.valueOf() !== correctedRange.endValue.valueOf()) {\r\n                        axis.handleZooming(stopInteraction ? null : correctedRange, {\r\n                            start: true,\r\n                            end: true\r\n                        }, e, actionField);\r\n                        if (!stopInteraction) {\r\n                            zoom.zoomed = true;\r\n                            zoom.deltaTranslate = translate - zoom.translate\r\n                        }\r\n                    } else if (\"touch\" === e.pointerType && \"discrete\" === options.type) {\r\n                        var isMinPosition = axis.isExtremePosition(false);\r\n                        var isMaxPosition = axis.isExtremePosition(true);\r\n                        var zoomInEnabled = scale > 1 && !stopInteraction;\r\n                        var zoomOutEnabled = scale < 1 && (!isMinPosition || !isMaxPosition);\r\n                        var panningEnabled = 1 === scale && !(isMinPosition && (translate < 0 && !options.inverted || translate > 0 && options.inverted) || isMaxPosition && (translate > 0 && !options.inverted || translate < 0 && options.inverted));\r\n                        zoom.enabled = zoomInEnabled || zoomOutEnabled || panningEnabled\r\n                    }\r\n                });\r\n                return zoom\r\n            }\r\n\r\n            function storeOffset(e, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.offset[coordField] = (e.offset ? e.offset[coordField] : actionData.offset[coordField]) + zoom.deltaTranslate\r\n                }\r\n            }\r\n\r\n            function storeCenter(center, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.center[coordField] = center[coordField] + zoom.deltaTranslate\r\n                }\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var argZoom = {};\r\n            var valZoom = {};\r\n            if (!actionData.fallback) {\r\n                argZoom = zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData);\r\n                valZoom = zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\r\n                chart._requestChange([\"VISUAL_RANGE\"]);\r\n                storeOffset(e, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n                storeOffset(e, actionData, valZoom, rotated ? \"x\" : \"y\")\r\n            }\r\n            var center = centerCalc(e);\r\n            storeCenter(center, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n            storeCenter(center, actionData, valZoom, rotated ? \"x\" : \"y\");\r\n            if (!argZoom.zoomed && !valZoom.zoomed) {\r\n                actionData.center = center\r\n            }\r\n            return argZoom.zoomed || valZoom.zoomed || actionData.fallback || argZoom.enabled || valZoom.enabled\r\n        }\r\n\r\n        function finishAxesViewportChanging(zoomAndPan, actionField, e, offsetCalc) {\r\n            function zoomAxes(axes, coordField, actionData, onlyAxisToNotify) {\r\n                var zoomStarted = false;\r\n                var scale = e.scale || 1;\r\n                var getRange = axis => {\r\n                    var zoom = axis.getTranslator().zoom(-offsetCalc(e, actionData, coordField, scale), scale, axis.getZoomBounds());\r\n                    return {\r\n                        startValue: zoom.min,\r\n                        endValue: zoom.max\r\n                    }\r\n                };\r\n                var getParameters = silent => ({\r\n                    start: true,\r\n                    end: silent\r\n                });\r\n                getFilteredAxes(axes).forEach(axis => {\r\n                    zoomStarted = !axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e).stopInteraction\r\n                });\r\n                return zoomStarted\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var zoomStarted = true;\r\n            if (actionData.fallback) {\r\n                zoomStarted &= options.argumentAxis[actionField] && zoomAxes(chart._argumentAxes, rotated ? \"y\" : \"x\", actionData, chart.getArgumentAxis());\r\n                zoomStarted |= options.valueAxis[actionField] && zoomAxes(actionData.valueAxes, rotated ? \"x\" : \"y\", actionData)\r\n            } else {\r\n                var axes = getAxesCopy(zoomAndPan, actionField);\r\n                getFilteredAxes(axes).forEach(axis => {\r\n                    axis.handleZooming(null, {\r\n                        start: true\r\n                    }, e, actionField)\r\n                });\r\n                zoomStarted = axes.length\r\n            }\r\n            zoomStarted && chart._requestChange([\"VISUAL_RANGE\"])\r\n        }\r\n\r\n        function prepareActionData(coords, action) {\r\n            var axes = chart._argumentAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords));\r\n            return {\r\n                fallback: chart._lastRenderingTime > GESTURE_TIMEOUT,\r\n                cancel: !axes.length || !isDefined(action),\r\n                action: action,\r\n                curAxisRect: axes.length && canvasToRect(axes[0].getCanvas()),\r\n                valueAxes: axes.length && chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords)),\r\n                offset: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                center: coords,\r\n                startCenter: coords\r\n            }\r\n        }\r\n\r\n        function getPointerCoord(rect, e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: _min(_max(e.pageX - rootOffset.left, rect.x), rect.width + rect.x),\r\n                y: _min(_max(e.pageY - rootOffset.top, rect.y), rect.height + rect.y)\r\n            }\r\n        }\r\n\r\n        function calcCenterForPinch(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            var x1 = e.pointers[0].pageX;\r\n            var x2 = e.pointers[1].pageX;\r\n            var y1 = e.pointers[0].pageY;\r\n            var y2 = e.pointers[1].pageY;\r\n            return {\r\n                x: _min(x1, x2) + _abs(x2 - x1) / 2 - rootOffset.left,\r\n                y: _min(y1, y2) + _abs(y2 - y1) / 2 - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcCenterForDrag(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: e.pageX - rootOffset.left,\r\n                y: e.pageY - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcOffsetForDrag(e, actionData, coordField) {\r\n            return e.offset[coordField] - actionData.offset[coordField]\r\n        }\r\n\r\n        function preventDefaults(e) {\r\n            if (false !== e.cancelable) {\r\n                e.preventDefault();\r\n                e.stopPropagation()\r\n            }\r\n            chart._stopCurrentHandling()\r\n        }\r\n        var zoomAndPan = {\r\n            dragStartHandler: function(e) {\r\n                var options = zoomAndPan.options;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var wantPan = options.argumentAxis.pan || options.valueAxis.pan;\r\n                var wantZoom = options.argumentAxis.zoom || options.valueAxis.zoom;\r\n                var panKeyPressed = isDefined(options.panKey) && e[normalizeEnum(options.panKey) + \"Key\"];\r\n                var dragToZoom = options.dragToZoom;\r\n                var action;\r\n                e._cancelPreventDefault = true;\r\n                if (isTouch) {\r\n                    if (options.allowTouchGestures && wantPan) {\r\n                        var cancelPanning = !zoomAndPan.panningVisualRangeEnabled() || zoomAndPan.skipEvent;\r\n                        action = cancelPanning ? null : \"pan\"\r\n                    }\r\n                } else if (dragToZoom && wantPan && panKeyPressed || !dragToZoom && wantPan) {\r\n                    action = \"pan\"\r\n                } else if (dragToZoom && wantZoom) {\r\n                    action = \"zoom\"\r\n                }\r\n                var actionData = prepareActionData(calcCenterForDrag(e), action);\r\n                if (actionData.cancel) {\r\n                    zoomAndPan.skipEvent = false;\r\n                    if (false !== e.cancelable) {\r\n                        e.cancel = true\r\n                    }\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                if (\"zoom\" === action) {\r\n                    actionData.startCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    actionData.rect = renderer.rect(0, 0, 0, 0).attr(options.dragBoxStyle).append(renderer.root)\r\n                } else {\r\n                    startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                }\r\n            },\r\n            dragHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                e._cancelPreventDefault = true;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled()) {\r\n                    return\r\n                }\r\n                if (\"zoom\" === actionData.action) {\r\n                    preventDefaults(e);\r\n                    var curCanvas = actionData.curAxisRect;\r\n                    var startCoords = actionData.startCoords;\r\n                    var curCoords = getPointerCoord(curCanvas, e);\r\n                    var zoomArg = options.argumentAxis.zoom;\r\n                    var zoomVal = options.valueAxis.zoom;\r\n                    var rect = {\r\n                        x: _min(startCoords.x, curCoords.x),\r\n                        y: _min(startCoords.y, curCoords.y),\r\n                        width: _abs(startCoords.x - curCoords.x),\r\n                        height: _abs(startCoords.y - curCoords.y)\r\n                    };\r\n                    if (!zoomArg || !zoomVal) {\r\n                        if (!zoomArg && !rotated || !zoomVal && rotated) {\r\n                            rect.x = curCanvas.x;\r\n                            rect.width = curCanvas.width\r\n                        } else {\r\n                            rect.y = curCanvas.y;\r\n                            rect.height = curCanvas.height\r\n                        }\r\n                    }\r\n                    actionData.rect.attr(rect)\r\n                } else if (\"pan\" === actionData.action) {\r\n                    axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, e => e.offset);\r\n                    var deltaOffsetY = Math.abs(e.offset.y - actionData.offset.y);\r\n                    var deltaOffsetX = Math.abs(e.offset.x - actionData.offset.x);\r\n                    if (isTouch && (deltaOffsetY > MIN_DRAG_DELTA && deltaOffsetY > Math.abs(actionData.offset.x) || deltaOffsetX > MIN_DRAG_DELTA && deltaOffsetX > Math.abs(actionData.offset.y))) {\r\n                        return\r\n                    }\r\n                    preventDefaults(e)\r\n                }\r\n            },\r\n            dragEndHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var getRange = _ref => {\r\n                    var {\r\n                        translator: translator,\r\n                        startCoord: startCoord,\r\n                        curCoord: curCoord\r\n                    } = _ref;\r\n                    return () => [translator.from(startCoord), translator.from(curCoord)]\r\n                };\r\n                var getCoords = (curCoords, startCoords, field) => ({\r\n                    curCoord: curCoords[field],\r\n                    startCoord: startCoords[field]\r\n                });\r\n                var needToZoom = (axisOption, coords) => axisOption.zoom && _abs(coords.curCoord - coords.startCoord) > MIN_DRAG_DELTA;\r\n                var panIsEmpty = actionData && \"pan\" === actionData.action && !actionData.fallback && 0 === actionData.offset.x && 0 === actionData.offset.y;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled() || panIsEmpty) {\r\n                    return\r\n                }!isTouch && preventDefaults(e);\r\n                if (\"zoom\" === actionData.action) {\r\n                    var curCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    var argumentCoords = getCoords(curCoords, actionData.startCoords, rotated ? \"y\" : \"x\");\r\n                    var valueCoords = getCoords(curCoords, actionData.startCoords, rotated ? \"x\" : \"y\");\r\n                    var argumentAxesZoomed = needToZoom(options.argumentAxis, argumentCoords) && zoomAxes(e, chart._argumentAxes, getRange, true, argumentCoords, chart.getArgumentAxis());\r\n                    var valueAxesZoomed = needToZoom(options.valueAxis, valueCoords) && zoomAxes(e, actionData.valueAxes, getRange, true, valueCoords);\r\n                    if (valueAxesZoomed || argumentAxesZoomed) {\r\n                        chart._requestChange([\"VISUAL_RANGE\"])\r\n                    }\r\n                    actionData.rect.dispose()\r\n                } else if (\"pan\" === actionData.action) {\r\n                    finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag)\r\n                }\r\n                zoomAndPan.actionData = null\r\n            },\r\n            pinchStartHandler: function(e) {\r\n                var actionData = prepareActionData(calcCenterForPinch(e), \"zoom\");\r\n                if (actionData.cancel) {\r\n                    cancelEvent(e);\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                startAxesViewportChanging(zoomAndPan, \"zoom\", e)\r\n            },\r\n            pinchHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                axesViewportChanging(zoomAndPan, \"zoom\", e, (e, actionData, coordField, scale) => calcCenterForPinch(e)[coordField] - actionData.center[coordField] + (actionData.center[coordField] - actionData.center[coordField] * scale), calcCenterForPinch);\r\n                preventDefaults(e)\r\n            },\r\n            pinchEndHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                finishAxesViewportChanging(zoomAndPan, \"zoom\", e, (e, actionData, coordField, scale) => actionData.center[coordField] - actionData.startCenter[coordField] + (actionData.startCenter[coordField] - actionData.startCenter[coordField] * scale));\r\n                zoomAndPan.actionData = null\r\n            },\r\n            mouseWheelHandler: function(e) {\r\n                var options = zoomAndPan.options;\r\n                var rotated = chart.option(\"rotated\");\r\n                var getRange = _ref2 => {\r\n                    var {\r\n                        translator: translator,\r\n                        coord: coord,\r\n                        scale: scale,\r\n                        axis: axis\r\n                    } = _ref2;\r\n                    return () => {\r\n                        var zoom = translator.zoom(-(coord - coord * scale), scale, axis.getZoomBounds());\r\n                        return {\r\n                            startValue: zoom.min,\r\n                            endValue: zoom.max\r\n                        }\r\n                    }\r\n                };\r\n                var coords = calcCenterForDrag(e);\r\n                var axesZoomed = false;\r\n                var targetAxes;\r\n                if (options.valueAxis.zoom) {\r\n                    targetAxes = chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords));\r\n                    if (0 === targetAxes.length) {\r\n                        var targetCanvas = chart._valueAxes.reduce((r, axis) => {\r\n                            if (!r && axis.coordsIn(coords.x, coords.y)) {\r\n                                r = axis.getCanvas()\r\n                            }\r\n                            return r\r\n                        }, null);\r\n                        if (targetCanvas) {\r\n                            targetAxes = chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), {\r\n                                x: targetCanvas.left,\r\n                                y: targetCanvas.top\r\n                            }))\r\n                        }\r\n                    }\r\n                    axesZoomed |= zoomAxes(e, targetAxes, getRange, e.delta > 0, {\r\n                        coord: rotated ? coords.x : coords.y\r\n                    })\r\n                }\r\n                if (options.argumentAxis.zoom) {\r\n                    var canZoom = chart._argumentAxes.some(axis => {\r\n                        if (checkCoords(canvasToRect(axis.getCanvas()), coords) || axis.coordsIn(coords.x, coords.y)) {\r\n                            return true\r\n                        }\r\n                        return false\r\n                    });\r\n                    axesZoomed |= canZoom && zoomAxes(e, chart._argumentAxes, getRange, e.delta > 0, {\r\n                        coord: rotated ? coords.y : coords.x\r\n                    }, chart.getArgumentAxis())\r\n                }\r\n                if (axesZoomed) {\r\n                    chart._requestChange([\"VISUAL_RANGE\"]);\r\n                    if (targetAxes && isAxisAvailablePanning(targetAxes) || !targetAxes && zoomAndPan.panningVisualRangeEnabled()) {\r\n                        preventDefaults(e)\r\n                    }\r\n                }\r\n            },\r\n            cleanup: function() {\r\n                renderer.root.off(EVENTS_NS);\r\n                zoomAndPan.actionData && zoomAndPan.actionData.rect && zoomAndPan.actionData.rect.dispose();\r\n                zoomAndPan.actionData = null;\r\n                renderer.root.css({\r\n                    \"touch-action\": \"\",\r\n                    \"-ms-touch-action\": \"\"\r\n                })\r\n            },\r\n            setup: function(options) {\r\n                zoomAndPan.cleanup();\r\n                if (!options.argumentAxis.pan) {\r\n                    renderer.root.on(SCROLL_BAR_START_EVENT_NAME, cancelEvent)\r\n                }\r\n                if (options.argumentAxis.none && options.valueAxis.none) {\r\n                    return\r\n                }\r\n                zoomAndPan.options = options;\r\n                if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowMouseWheel) {\r\n                    renderer.root.on(wheelEvent + EVENTS_NS, zoomAndPan.mouseWheelHandler)\r\n                }\r\n                if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowTouchGestures) {\r\n                    renderer.root.on(PINCH_START_EVENT_NAME, {\r\n                        passive: false\r\n                    }, zoomAndPan.pinchStartHandler).on(PINCH_EVENT_NAME, {\r\n                        passive: false\r\n                    }, zoomAndPan.pinchHandler).on(PINCH_END_EVENT_NAME, zoomAndPan.pinchEndHandler)\r\n                }\r\n                renderer.root.on(DRAG_START_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragStartHandler).on(DRAG_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragHandler).on(DRAG_END_EVENT_NAME, zoomAndPan.dragEndHandler);\r\n                renderer.root.on(SCROLL_BAR_START_EVENT_NAME, (function(e) {\r\n                    zoomAndPan.actionData = {\r\n                        valueAxes: [],\r\n                        offset: {\r\n                            x: 0,\r\n                            y: 0\r\n                        },\r\n                        center: {\r\n                            x: 0,\r\n                            y: 0\r\n                        }\r\n                    };\r\n                    preventDefaults(e);\r\n                    startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                })).on(SCROLL_BAR_MOVE_EVENT_NAME, (function(e) {\r\n                    preventDefaults(e);\r\n                    axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, e => e.offset)\r\n                })).on(SCROLL_BAR_END_EVENT_NAME, (function(e) {\r\n                    preventDefaults(e);\r\n                    finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\r\n                    zoomAndPan.actionData = null\r\n                }))\r\n            },\r\n            panningVisualRangeEnabled: function() {\r\n                return isAxisAvailablePanning(chart._valueAxes) || isAxisAvailablePanning(chart._argumentAxes)\r\n            }\r\n        };\r\n        this._zoomAndPan = zoomAndPan\r\n    },\r\n    members: {\r\n        _setupZoomAndPan: function() {\r\n            this._zoomAndPan.setup(this._themeManager.getOptions(\"zoomAndPan\"))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._zoomAndPan.cleanup()\r\n    },\r\n    customize: function(constructor) {\r\n        constructor.addChange({\r\n            code: \"ZOOM_AND_PAN\",\r\n            handler: function() {\r\n                this._setupZoomAndPan()\r\n            },\r\n            isThemeDependent: true,\r\n            isOptionChange: true,\r\n            option: \"zoomAndPan\"\r\n        })\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\nimport { inputType } from \"../../core/utils/support\";\nimport dateUtils from \"./ui.date_utils\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { extend } from \"../../core/utils/extend\";\nimport devices from \"../../core/devices\";\nvar NativeStrategy = DateBoxStrategy.inherit({\n  NAME: \"Native\",\n  popupConfig: function (_popupConfig) {\n    return extend({}, _popupConfig, {\n      width: \"auto\"\n    });\n  },\n  getParsedText: function (text) {\n    if (!text) {\n      return null;\n    }\n\n    if (\"datetime\" === this.dateBox.option(\"type\")) {\n      return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0]);\n    }\n\n    return dateUtils.fromStandardDateFormat(text);\n  },\n  renderPopupContent: noop,\n  _getWidgetName: noop,\n  _getWidgetOptions: noop,\n  _getDateBoxType: function () {\n    var type = this.dateBox.option(\"type\");\n\n    if (!dateUtils.SUPPORTED_FORMATS.includes(type)) {\n      type = \"date\";\n    } else if (\"datetime\" === type && !inputType(type)) {\n      type = \"datetime-local\";\n    }\n\n    return type;\n  },\n  customizeButtons: function () {\n    var dropDownButton = this.dateBox.getButton(\"dropDown\");\n\n    if (devices.real().android && dropDownButton) {\n      dropDownButton.on(\"click\", function () {\n        this.dateBox._input().get(0).click();\n      }.bind(this));\n    }\n  },\n  getDefaultOptions: function () {\n    return {\n      mode: this._getDateBoxType()\n    };\n  },\n  getDisplayFormat: function (displayFormat) {\n    var type = this._getDateBoxType();\n\n    return displayFormat || dateUtils.FORMATS_MAP[type];\n  },\n  renderInputMinMax: function ($input) {\n    $input.attr({\n      min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\n      max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\n    });\n  }\n});\nexport default NativeStrategy;","map":{"version":3,"names":["noop","DateBoxStrategy","inputType","dateUtils","dateSerialization","extend","devices","NativeStrategy","inherit","NAME","popupConfig","_popupConfig","width","getParsedText","text","dateBox","option","Date","replace","split","fromStandardDateFormat","renderPopupContent","_getWidgetName","_getWidgetOptions","_getDateBoxType","type","SUPPORTED_FORMATS","includes","customizeButtons","dropDownButton","getButton","real","android","on","_input","get","click","bind","getDefaultOptions","mode","getDisplayFormat","displayFormat","FORMATS_MAP","renderInputMinMax","$input","attr","min","serializeDate","dateOption","max"],"sources":["E:/MisaProject/MISA_EMIS/MISA.EMIS.FE/node_modules/devextreme/esm/ui/date_box/ui.date_box.strategy.native.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\r\nimport {\r\n    inputType\r\n} from \"../../core/utils/support\";\r\nimport dateUtils from \"./ui.date_utils\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nvar NativeStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"Native\",\r\n    popupConfig: function(_popupConfig) {\r\n        return extend({}, _popupConfig, {\r\n            width: \"auto\"\r\n        })\r\n    },\r\n    getParsedText: function(text) {\r\n        if (!text) {\r\n            return null\r\n        }\r\n        if (\"datetime\" === this.dateBox.option(\"type\")) {\r\n            return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0])\r\n        }\r\n        return dateUtils.fromStandardDateFormat(text)\r\n    },\r\n    renderPopupContent: noop,\r\n    _getWidgetName: noop,\r\n    _getWidgetOptions: noop,\r\n    _getDateBoxType: function() {\r\n        var type = this.dateBox.option(\"type\");\r\n        if (!dateUtils.SUPPORTED_FORMATS.includes(type)) {\r\n            type = \"date\"\r\n        } else if (\"datetime\" === type && !inputType(type)) {\r\n            type = \"datetime-local\"\r\n        }\r\n        return type\r\n    },\r\n    customizeButtons: function() {\r\n        var dropDownButton = this.dateBox.getButton(\"dropDown\");\r\n        if (devices.real().android && dropDownButton) {\r\n            dropDownButton.on(\"click\", function() {\r\n                this.dateBox._input().get(0).click()\r\n            }.bind(this))\r\n        }\r\n    },\r\n    getDefaultOptions: function() {\r\n        return {\r\n            mode: this._getDateBoxType()\r\n        }\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        var type = this._getDateBoxType();\r\n        return displayFormat || dateUtils.FORMATS_MAP[type]\r\n    },\r\n    renderInputMinMax: function($input) {\r\n        $input.attr({\r\n            min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\r\n            max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\r\n        })\r\n    }\r\n});\r\nexport default NativeStrategy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
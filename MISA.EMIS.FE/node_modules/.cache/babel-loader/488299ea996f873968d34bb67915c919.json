{"ast":null,"code":"import { DateWithZone } from './datewithzone';\nimport { iter } from './iter/index';\nimport dateutil from './dateutil';\nexport function iterSet(iterResult, _rrule, _exrule, _rdate, _exdate, tzid) {\n  var _exdateHash = {};\n  var _accept = iterResult.accept;\n\n  function evalExdate(after, before) {\n    _exrule.forEach(function (rrule) {\n      rrule.between(after, before, true).forEach(function (date) {\n        _exdateHash[Number(date)] = true;\n      });\n    });\n  }\n\n  _exdate.forEach(function (date) {\n    var zonedDate = new DateWithZone(date, tzid).rezonedDate();\n    _exdateHash[Number(zonedDate)] = true;\n  });\n\n  iterResult.accept = function (date) {\n    var dt = Number(date);\n    if (isNaN(dt)) return _accept.call(this, date);\n\n    if (!_exdateHash[dt]) {\n      evalExdate(new Date(dt - 1), new Date(dt + 1));\n\n      if (!_exdateHash[dt]) {\n        _exdateHash[dt] = true;\n        return _accept.call(this, date);\n      }\n    }\n\n    return true;\n  };\n\n  if (iterResult.method === 'between') {\n    evalExdate(iterResult.args.after, iterResult.args.before);\n\n    iterResult.accept = function (date) {\n      var dt = Number(date);\n\n      if (!_exdateHash[dt]) {\n        _exdateHash[dt] = true;\n        return _accept.call(this, date);\n      }\n\n      return true;\n    };\n  }\n\n  for (var i = 0; i < _rdate.length; i++) {\n    var zonedDate = new DateWithZone(_rdate[i], tzid).rezonedDate();\n    if (!iterResult.accept(new Date(zonedDate.getTime()))) break;\n  }\n\n  _rrule.forEach(function (rrule) {\n    iter(iterResult, rrule.options);\n  });\n\n  var res = iterResult._result;\n  dateutil.sort(res);\n\n  switch (iterResult.method) {\n    case 'all':\n    case 'between':\n      return res;\n\n    case 'before':\n      return res.length && res[res.length - 1] || null;\n\n    case 'after':\n    default:\n      return res.length && res[0] || null;\n  }\n}","map":{"version":3,"mappings":"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","names":["DateWithZone","iter","dateutil","iterSet","iterResult","_rrule","_exrule","_rdate","_exdate","tzid","_exdateHash","_accept","accept","evalExdate","after","before","forEach","rrule","between","date","Number","zonedDate","rezonedDate","dt","isNaN","call","Date","method","args","i","length","getTime","options","res","_result","sort"],"sourceRoot":"","sources":["../../../src/iterset.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
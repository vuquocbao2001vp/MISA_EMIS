{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointments/rendering_strategies/strategy.base.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport AppointmentPositioningStrategy from \"./appointmentsPositioning_strategy_base\";\nimport AdaptivePositioningStrategy from \"./appointmentsPositioning_strategy_adaptive\";\nimport { extend } from \"../../../../core/utils/extend\";\nimport dateUtils from \"../../../../core/utils/date\";\nimport { isNumeric, isObject } from \"../../../../core/utils/type\";\nimport { current as currentTheme } from \"../../../themes\";\nimport { AppointmentSettingsGenerator } from \"../settingsGenerator\";\nimport timeZoneUtils from \"../../utils.timeZone\";\nimport { createAppointmentAdapter } from \"../../appointmentAdapter\";\nimport { getAppointmentTakesAllDay } from \"../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar APPOINTMENT_MIN_SIZE = 2;\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\nvar WEEK_VIEW_COLLECTOR_OFFSET = 5;\nvar COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET = 1;\n\nclass BaseRenderingStrategy {\n  constructor(options) {\n    this.options = options;\n\n    this._initPositioningStrategy();\n  }\n\n  get isAdaptive() {\n    return this.options.adaptivityEnabled;\n  }\n\n  get rtlEnabled() {\n    return this.options.rtlEnabled;\n  }\n\n  get startDayHour() {\n    return this.options.startDayHour;\n  }\n\n  get endDayHour() {\n    return this.options.endDayHour;\n  }\n\n  get maxAppointmentsPerCell() {\n    return this.options.maxAppointmentsPerCell;\n  }\n\n  get cellWidth() {\n    return this.options.cellWidth;\n  }\n\n  get cellHeight() {\n    return this.options.cellHeight;\n  }\n\n  get allDayHeight() {\n    return this.options.allDayHeight;\n  }\n\n  get resizableStep() {\n    return this.options.resizableStep;\n  }\n\n  get isGroupedByDate() {\n    return this.options.isGroupedByDate;\n  }\n\n  get visibleDayDuration() {\n    return this.options.visibleDayDuration;\n  }\n\n  get viewStartDayHour() {\n    return this.options.viewStartDayHour;\n  }\n\n  get viewEndDayHour() {\n    return this.options.viewEndDayHour;\n  }\n\n  get cellDuration() {\n    return this.options.cellDuration;\n  }\n\n  get cellDurationInMinutes() {\n    return this.options.cellDurationInMinutes;\n  }\n\n  get leftVirtualCellCount() {\n    return this.options.leftVirtualCellCount;\n  }\n\n  get topVirtualCellCount() {\n    return this.options.topVirtualCellCount;\n  }\n\n  get positionHelper() {\n    return this.options.positionHelper;\n  }\n\n  get showAllDayPanel() {\n    return this.options.showAllDayPanel;\n  }\n\n  get isGroupedAllDayPanel() {\n    return this.options.isGroupedAllDayPanel;\n  }\n\n  get groupOrientation() {\n    return this.options.groupOrientation;\n  }\n\n  get rowCount() {\n    return this.options.rowCount;\n  }\n\n  get groupCount() {\n    return this.options.groupCount;\n  }\n\n  get currentDate() {\n    return this.options.currentDate;\n  }\n\n  get appointmentCountPerCell() {\n    return this.options.appointmentCountPerCell;\n  }\n\n  get appointmentOffset() {\n    return this.options.appointmentOffset;\n  }\n\n  get allowResizing() {\n    return this.options.allowResizing;\n  }\n\n  get allowAllDayResizing() {\n    return this.options.allowAllDayResizing;\n  }\n\n  get viewDataProvider() {\n    return this.options.viewDataProvider;\n  }\n\n  get dataAccessors() {\n    return this.options.dataAccessors;\n  }\n\n  get timeZoneCalculator() {\n    return this.options.timeZoneCalculator;\n  }\n\n  get intervalCount() {\n    return this.options.intervalCount;\n  }\n\n  get allDayPanelMode() {\n    return this.options.allDayPanelMode;\n  }\n\n  get isVirtualScrolling() {\n    return this.options.isVirtualScrolling;\n  }\n\n  _correctCollectorCoordinatesInAdaptive(coordinates, isAllDay) {\n    coordinates.top = coordinates.top + this.getCollectorTopOffset(isAllDay);\n    coordinates.left = coordinates.left + this.getCollectorLeftOffset();\n  }\n\n  _initPositioningStrategy() {\n    this._positioningStrategy = this.isAdaptive ? new AdaptivePositioningStrategy(this) : new AppointmentPositioningStrategy(this);\n  }\n\n  getPositioningStrategy() {\n    return this._positioningStrategy;\n  }\n\n  getAppointmentMinSize() {\n    return APPOINTMENT_MIN_SIZE;\n  }\n\n  keepAppointmentSettings() {\n    return false;\n  }\n\n  getDeltaTime() {}\n\n  getAppointmentGeometry(coordinates) {\n    return coordinates;\n  }\n\n  needCorrectAppointmentDates() {\n    return true;\n  }\n\n  getDirection() {\n    return \"horizontal\";\n  }\n\n  createTaskPositionMap(items) {\n    delete this._maxAppointmentCountPerCell;\n    var length = null === items || void 0 === items ? void 0 : items.length;\n\n    if (!length) {\n      return;\n    }\n\n    var map = [];\n\n    for (var i = 0; i < length; i++) {\n      var coordinates = this._getItemPosition(items[i]);\n\n      if (coordinates.length && this.rtlEnabled) {\n        coordinates = this._correctRtlCoordinates(coordinates);\n      }\n\n      coordinates.forEach(item => {\n        item.leftVirtualCellCount = this.leftVirtualCellCount;\n        item.topVirtualCellCount = this.topVirtualCellCount;\n        item.leftVirtualWidth = this.leftVirtualCellCount * this.cellWidth;\n        item.topVirtualHeight = this.topVirtualCellCount * this.cellHeight;\n      });\n      map.push(coordinates);\n    }\n\n    var positionArray = this._getSortedPositions(map);\n\n    var resultPositions = this._getResultPositions(positionArray);\n\n    return this._getExtendedPositionMap(map, resultPositions);\n  }\n\n  _getDeltaWidth(args, initialSize) {\n    var intervalWidth = this.resizableStep || this.getAppointmentMinSize();\n    var initialWidth = initialSize.width;\n    return Math.round((args.width - initialWidth) / intervalWidth);\n  }\n\n  _correctRtlCoordinates(coordinates) {\n    var width = coordinates[0].width || this._getAppointmentMaxWidth();\n\n    coordinates.forEach(coordinate => {\n      if (!coordinate.appointmentReduced) {\n        coordinate.left -= width;\n      }\n    });\n    return coordinates;\n  }\n\n  _getAppointmentMaxWidth() {\n    return this.cellWidth;\n  }\n\n  _getItemPosition(appointment) {\n    var position = this.generateAppointmentSettings(appointment);\n    var allDay = this.isAllDay(appointment);\n    var result = [];\n\n    for (var j = 0; j < position.length; j++) {\n      var height = this.calculateAppointmentHeight(appointment, position[j]);\n      var width = this.calculateAppointmentWidth(appointment, position[j]);\n      var resultWidth = width;\n      var appointmentReduced = null;\n      var multiWeekAppointmentParts = [];\n      var initialRowIndex = position[j].rowIndex;\n      var initialColumnIndex = position[j].columnIndex;\n\n      if (this._needVerifyItemSize() || allDay) {\n        var currentMaxAllowedPosition = position[j].hMax;\n\n        if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\n          left: position[j].left,\n          width: width\n        })) {\n          appointmentReduced = \"head\";\n          initialRowIndex = position[j].rowIndex;\n          initialColumnIndex = position[j].columnIndex;\n          resultWidth = this._reduceMultiWeekAppointment(width, {\n            left: position[j].left,\n            right: currentMaxAllowedPosition\n          });\n          multiWeekAppointmentParts = this._getAppointmentParts({\n            sourceAppointmentWidth: width,\n            reducedWidth: resultWidth,\n            height: height\n          }, position[j]);\n\n          if (this.rtlEnabled) {\n            position[j].left = currentMaxAllowedPosition;\n          }\n        }\n      }\n\n      extend(position[j], {\n        height: height,\n        width: resultWidth,\n        allDay: allDay,\n        rowIndex: initialRowIndex,\n        columnIndex: initialColumnIndex,\n        appointmentReduced: appointmentReduced\n      });\n      result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result);\n    }\n\n    return result;\n  }\n\n  _getAppointmentPartsPosition(appointmentParts, position, result) {\n    if (appointmentParts.length) {\n      appointmentParts.unshift(position);\n      result = result.concat(appointmentParts);\n    } else {\n      result.push(position);\n    }\n\n    return result;\n  }\n\n  getAppointmentSettingsGenerator(rawAppointment) {\n    return new AppointmentSettingsGenerator(_extends({\n      rawAppointment: rawAppointment,\n      appointmentTakesAllDay: this.isAppointmentTakesAllDay(rawAppointment),\n      getPositionShiftCallback: this.getPositionShift.bind(this)\n    }, this.options));\n  }\n\n  generateAppointmentSettings(rawAppointment) {\n    return this.getAppointmentSettingsGenerator(rawAppointment).create();\n  }\n\n  isAppointmentTakesAllDay(rawAppointment) {\n    var adapter = createAppointmentAdapter(rawAppointment, this.dataAccessors, this.timeZoneCalculator);\n    return getAppointmentTakesAllDay(adapter, this.viewStartDayHour, this.viewEndDayHour, this.allDayPanelMode);\n  }\n\n  _getAppointmentParts() {\n    return [];\n  }\n\n  _getCompactAppointmentParts(appointmentWidth) {\n    var cellWidth = this.cellWidth || this.getAppointmentMinSize();\n    return Math.round(appointmentWidth / cellWidth);\n  }\n\n  _reduceMultiWeekAppointment(sourceAppointmentWidth, bound) {\n    if (this.rtlEnabled) {\n      sourceAppointmentWidth = Math.floor(bound.left - bound.right);\n    } else {\n      sourceAppointmentWidth = bound.right - Math.floor(bound.left);\n    }\n\n    return sourceAppointmentWidth;\n  }\n\n  calculateAppointmentHeight() {\n    return 0;\n  }\n\n  calculateAppointmentWidth() {\n    return 0;\n  }\n\n  isAppointmentGreaterThan(etalon, comparisonParameters) {\n    var result = comparisonParameters.left + comparisonParameters.width - etalon;\n\n    if (this.rtlEnabled) {\n      result = etalon + comparisonParameters.width - comparisonParameters.left;\n    }\n\n    return result > this.cellWidth / 2;\n  }\n\n  isAllDay() {\n    return false;\n  }\n\n  cropAppointmentWidth(width, cellWidth) {\n    return this.isGroupedByDate ? cellWidth : width;\n  }\n\n  _getSortedPositions(positionList) {\n    var result = [];\n\n    var round = value => Math.round(100 * value) / 100;\n\n    var createItem = (rowIndex, columnIndex, top, left, bottom, right, position, allDay) => ({\n      i: rowIndex,\n      j: columnIndex,\n      top: round(top),\n      left: round(left),\n      bottom: round(bottom),\n      right: round(right),\n      cellPosition: position,\n      allDay: allDay\n    });\n\n    for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\n      for (var columnIndex = 0, cellCount = positionList[rowIndex].length; columnIndex < cellCount; columnIndex++) {\n        var {\n          top: top,\n          left: left,\n          height: height,\n          width: width,\n          cellPosition: cellPosition,\n          allDay: allDay\n        } = positionList[rowIndex][columnIndex];\n        result.push(createItem(rowIndex, columnIndex, top, left, top + height, left + width, cellPosition, allDay));\n      }\n    }\n\n    return result.sort((a, b) => this._sortCondition(a, b));\n  }\n\n  _sortCondition() {}\n\n  _getConditions(a, b) {\n    var isSomeEdge = this._isSomeEdge(a, b);\n\n    return {\n      columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\n      rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\n      cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\n    };\n  }\n\n  _rowCondition(a, b) {\n    var conditions = this._getConditions(a, b);\n\n    return conditions.columnCondition || conditions.rowCondition;\n  }\n\n  _columnCondition(a, b) {\n    var conditions = this._getConditions(a, b);\n\n    return conditions.rowCondition || conditions.columnCondition;\n  }\n\n  _isSomeEdge(a, b) {\n    return a.i === b.i && a.j === b.j;\n  }\n\n  _normalizeCondition(first, second) {\n    var result = first - second;\n    return Math.abs(result) > 1 ? result : 0;\n  }\n\n  _isItemsCross(firstItem, secondItem) {\n    var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;\n    var areItemsAllDay = firstItem.allDay && secondItem.allDay;\n\n    if (areItemsInTheSameTable) {\n      var orientation = this._getOrientation(areItemsAllDay);\n\n      return this._checkItemsCrossing(firstItem, secondItem, orientation);\n    } else {\n      return false;\n    }\n  }\n\n  _checkItemsCrossing(firstItem, secondItem, orientation) {\n    var firstItemSide_1 = Math.floor(firstItem[orientation[0]]);\n    var firstItemSide_2 = Math.floor(firstItem[orientation[1]]);\n    var secondItemSide_1 = Math.ceil(secondItem[orientation[0]]);\n    var secondItemSide_2 = Math.ceil(secondItem[orientation[1]]);\n    var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;\n    return isItemCross && (firstItemSide_1 <= secondItemSide_1 && firstItemSide_2 > secondItemSide_1 || firstItemSide_1 < secondItemSide_2 && firstItemSide_2 >= secondItemSide_2 || firstItemSide_1 === secondItemSide_1 && firstItemSide_2 === secondItemSide_2);\n  }\n\n  _getOrientation(isAllDay) {\n    return isAllDay ? [\"left\", \"right\", \"top\"] : [\"top\", \"bottom\", \"left\"];\n  }\n\n  _getResultPositions(sortedArray) {\n    var result = [];\n    var i;\n    var sortedIndex = 0;\n    var currentItem;\n    var indexes;\n    var itemIndex;\n    var maxIndexInStack = 0;\n    var stack = {};\n\n    var findFreeIndex = (indexes, index) => {\n      var isFind = indexes.some(item => item === index);\n\n      if (isFind) {\n        return findFreeIndex(indexes, ++index);\n      } else {\n        return index;\n      }\n    };\n\n    var createItem = (currentItem, index) => {\n      var currentIndex = index || 0;\n      return {\n        index: currentIndex,\n        i: currentItem.i,\n        j: currentItem.j,\n        left: currentItem.left,\n        right: currentItem.right,\n        top: currentItem.top,\n        bottom: currentItem.bottom,\n        allDay: currentItem.allDay,\n        sortedIndex: this._skipSortedIndex(currentIndex) ? null : sortedIndex++\n      };\n    };\n\n    var startNewStack = currentItem => {\n      stack.items = [createItem(currentItem)];\n      stack.left = currentItem.left;\n      stack.right = currentItem.right;\n      stack.top = currentItem.top;\n      stack.bottom = currentItem.bottom;\n      stack.allDay = currentItem.allDay;\n    };\n\n    var pushItemsInResult = items => {\n      items.forEach(item => {\n        result.push({\n          index: item.index,\n          count: maxIndexInStack + 1,\n          i: item.i,\n          j: item.j,\n          sortedIndex: item.sortedIndex\n        });\n      });\n    };\n\n    for (i = 0; i < sortedArray.length; i++) {\n      currentItem = sortedArray[i];\n      indexes = [];\n\n      if (!stack.items) {\n        startNewStack(currentItem);\n      } else if (this._isItemsCross(stack, currentItem)) {\n        stack.items.forEach((item, index) => {\n          if (this._isItemsCross(item, currentItem)) {\n            indexes.push(item.index);\n          }\n        });\n        itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\n        stack.items.push(createItem(currentItem, itemIndex));\n        maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\n        stack.left = Math.min(stack.left, currentItem.left);\n        stack.right = Math.max(stack.right, currentItem.right);\n        stack.top = Math.min(stack.top, currentItem.top);\n        stack.bottom = Math.max(stack.bottom, currentItem.bottom);\n        stack.allDay = currentItem.allDay;\n      } else {\n        pushItemsInResult(stack.items);\n        stack = {};\n        startNewStack(currentItem);\n        maxIndexInStack = 0;\n      }\n    }\n\n    if (stack.items) {\n      pushItemsInResult(stack.items);\n    }\n\n    return result.sort(function (a, b) {\n      var columnCondition = a.j - b.j;\n      var rowCondition = a.i - b.i;\n      return rowCondition ? rowCondition : columnCondition;\n    });\n  }\n\n  _skipSortedIndex(index) {\n    return index > this._getMaxAppointmentCountPerCell() - 1;\n  }\n\n  _findIndexByKey(arr, iKey, jKey, iValue, jValue) {\n    var result = 0;\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\n        result = i;\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  _getExtendedPositionMap(map, positions) {\n    var positionCounter = 0;\n    var result = [];\n\n    for (var i = 0, mapLength = map.length; i < mapLength; i++) {\n      var resultString = [];\n\n      for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\n        map[i][j].index = positions[positionCounter].index;\n        map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\n        map[i][j].count = positions[positionCounter++].count;\n        resultString.push(map[i][j]);\n\n        this._checkLongCompactAppointment(map[i][j], resultString);\n      }\n\n      result.push(resultString);\n    }\n\n    return result;\n  }\n\n  _checkLongCompactAppointment(item, result) {\n    this._splitLongCompactAppointment(item, result);\n\n    return result;\n  }\n\n  _splitLongCompactAppointment(item, result) {\n    var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\n\n    var compactCount = 0;\n\n    if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\n      item.isCompact = true;\n      compactCount = this._getCompactAppointmentParts(item.width);\n\n      for (var k = 1; k < compactCount; k++) {\n        var compactPart = extend(true, {}, item);\n        compactPart.left = this._getCompactLeftCoordinate(item.left, k);\n        compactPart.columnIndex = compactPart.columnIndex + k;\n        compactPart.sortedIndex = null;\n        result.push(compactPart);\n      }\n    }\n\n    return result;\n  }\n\n  _adjustDurationByDaylightDiff(duration, startDate, endDate) {\n    var daylightDiff = timeZoneUtils.getDaylightOffset(startDate, endDate);\n    return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration;\n  }\n\n  _needAdjustDuration(diff) {\n    return 0 !== diff;\n  }\n\n  _calculateDurationByDaylightDiff(duration, diff) {\n    return duration + diff * toMs(\"minute\");\n  }\n\n  _getCollectorLeftOffset(isAllDay) {\n    if (isAllDay || !this.isApplyCompactAppointmentOffset()) {\n      return 0;\n    }\n\n    var dropDownButtonWidth = this.getDropDownAppointmentWidth(this.intervalCount, isAllDay);\n    var rightOffset = this._isCompactTheme() ? COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET : WEEK_VIEW_COLLECTOR_OFFSET;\n    return this.cellWidth - dropDownButtonWidth - rightOffset;\n  }\n\n  _markAppointmentAsVirtual(coordinates) {\n    var isAllDay = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;\n\n    var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\n\n    if (coordinates.count - countFullWidthAppointmentInCell > 0) {\n      var {\n        top: top,\n        left: left\n      } = coordinates;\n      var compactRender = this.isAdaptive || !isAllDay && this.supportCompactDropDownAppointments();\n      coordinates.virtual = {\n        left: left + this._getCollectorLeftOffset(isAllDay),\n        top: top,\n        width: this.getDropDownAppointmentWidth(this.intervalCount, isAllDay),\n        height: this.getDropDownAppointmentHeight(),\n        index: this._generateAppointmentCollectorIndex(coordinates, isAllDay),\n        isAllDay: isAllDay,\n        groupIndex: coordinates.groupIndex,\n        isCompact: compactRender\n      };\n    }\n  }\n\n  isApplyCompactAppointmentOffset() {\n    return this.supportCompactDropDownAppointments();\n  }\n\n  supportCompactDropDownAppointments() {\n    return true;\n  }\n\n  _generateAppointmentCollectorIndex(_ref, isAllDay) {\n    var {\n      groupIndex: groupIndex,\n      rowIndex: rowIndex,\n      columnIndex: columnIndex\n    } = _ref;\n    return \"\".concat(groupIndex, \"-\").concat(rowIndex, \"-\").concat(columnIndex, \"-\").concat(isAllDay);\n  }\n\n  _getMaxAppointmentCountPerCellByType(isAllDay) {\n    var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\n\n    if (isObject(appointmentCountPerCell)) {\n      return isAllDay ? appointmentCountPerCell.allDay : appointmentCountPerCell.simple;\n    } else {\n      return appointmentCountPerCell;\n    }\n  }\n\n  getDropDownAppointmentWidth(intervalCount, isAllDay) {\n    return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay);\n  }\n\n  getDropDownAppointmentHeight() {\n    return this.getPositioningStrategy().getDropDownAppointmentHeight();\n  }\n\n  getDropDownButtonAdaptiveSize() {\n    return DROP_DOWN_BUTTON_ADAPTIVE_SIZE;\n  }\n\n  getCollectorTopOffset(allDay) {\n    return this.getPositioningStrategy().getCollectorTopOffset(allDay);\n  }\n\n  getCollectorLeftOffset() {\n    return this.getPositioningStrategy().getCollectorLeftOffset();\n  }\n\n  getAppointmentDataCalculator() {}\n\n  _customizeCoordinates(coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\n    var index = coordinates.index;\n    var appointmentHeight = height / appointmentCountPerCell;\n    var appointmentTop = coordinates.top + index * appointmentHeight;\n    var top = appointmentTop + topOffset;\n    var width = coordinates.width;\n    var left = coordinates.left;\n\n    if (coordinates.isCompact) {\n      this.isAdaptive && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);\n\n      this._markAppointmentAsVirtual(coordinates, isAllDay);\n    }\n\n    return {\n      height: appointmentHeight,\n      width: width,\n      top: top,\n      left: left,\n      empty: this._isAppointmentEmpty(height, width)\n    };\n  }\n\n  _isAppointmentEmpty(height, width) {\n    return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth();\n  }\n\n  _calculateGeometryConfig(coordinates) {\n    var overlappingMode = this.maxAppointmentsPerCell;\n\n    var offsets = this._getOffsets();\n\n    var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\n\n    var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\n\n    var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\n\n    var maxHeight = this._getMaxHeight();\n\n    if (!isNumeric(appointmentCountPerCell)) {\n      appointmentCountPerCell = coordinates.count;\n      ratio = (maxHeight - offsets.unlimited) / maxHeight;\n    }\n\n    var topOffset = (1 - ratio) * maxHeight;\n\n    if (\"auto\" === overlappingMode || isNumeric(overlappingMode)) {\n      ratio = 1;\n      maxHeight -= appointmentDefaultOffset;\n      topOffset = appointmentDefaultOffset;\n    }\n\n    return {\n      height: ratio * maxHeight,\n      appointmentCountPerCell: appointmentCountPerCell,\n      offset: topOffset\n    };\n  }\n\n  _getAppointmentCount() {}\n\n  _getDefaultRatio() {}\n\n  _getOffsets() {}\n\n  _getMaxHeight() {}\n\n  _needVerifyItemSize() {\n    return false;\n  }\n\n  _getMaxAppointmentCountPerCell() {\n    if (!this._maxAppointmentCountPerCell) {\n      var overlappingMode = this.maxAppointmentsPerCell;\n      var appointmentCountPerCell;\n\n      if (isNumeric(overlappingMode)) {\n        appointmentCountPerCell = overlappingMode;\n      }\n\n      if (\"auto\" === overlappingMode) {\n        appointmentCountPerCell = this._getDynamicAppointmentCountPerCell();\n      }\n\n      if (\"unlimited\" === overlappingMode) {\n        appointmentCountPerCell = void 0;\n      }\n\n      this._maxAppointmentCountPerCell = appointmentCountPerCell;\n    }\n\n    return this._maxAppointmentCountPerCell;\n  }\n\n  _getDynamicAppointmentCountPerCell() {\n    return this.getPositioningStrategy().getDynamicAppointmentCountPerCell();\n  }\n\n  allDaySupported() {\n    return false;\n  }\n\n  _isCompactTheme() {\n    return \"compact\" === (currentTheme() || \"\").split(\".\").pop();\n  }\n\n  _getAppointmentDefaultOffset() {\n    return this.getPositioningStrategy().getAppointmentDefaultOffset();\n  }\n\n  _getAppointmentDefaultHeight() {\n    return this._getAppointmentHeightByTheme();\n  }\n\n  _getAppointmentMinHeight() {\n    return this._getAppointmentDefaultHeight();\n  }\n\n  _getAppointmentHeightByTheme() {\n    return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT;\n  }\n\n  _getAppointmentDefaultWidth() {\n    return this.getPositioningStrategy()._getAppointmentDefaultWidth();\n  }\n\n  _getAppointmentMinWidth() {\n    return this._getAppointmentDefaultWidth();\n  }\n\n  _needVerticalGroupBounds() {\n    return false;\n  }\n\n  _needHorizontalGroupBounds() {\n    return false;\n  }\n\n  getAppointmentDurationInMs(apptStartDate, apptEndDate, allDay) {\n    if (allDay) {\n      var appointmentDuration = apptEndDate.getTime() - apptStartDate.getTime();\n      var ceilQuantityOfDays = Math.ceil(appointmentDuration / toMs(\"day\"));\n      return ceilQuantityOfDays * this.visibleDayDuration;\n    }\n\n    var msInHour = toMs(\"hour\");\n    var trimmedStartDate = dateUtils.trimTime(apptStartDate);\n    var trimmedEndDate = dateUtils.trimTime(apptEndDate);\n    var deltaDate = trimmedEndDate - trimmedStartDate;\n    var quantityOfDays = deltaDate / toMs(\"day\") + 1;\n    var dayVisibleHours = this.endDayHour - this.startDayHour;\n    var appointmentDayHours = dayVisibleHours * quantityOfDays;\n    var startHours = (apptStartDate - trimmedStartDate) / msInHour;\n    var apptStartDelta = Math.max(0, startHours - this.startDayHour);\n    var endHours = Math.max(0, (apptEndDate - trimmedEndDate) / msInHour - this.startDayHour);\n    var apptEndDelta = Math.max(0, dayVisibleHours - endHours);\n    var result = (appointmentDayHours - (apptStartDelta + apptEndDelta)) * msInHour;\n    return result;\n  }\n\n  getPositionShift(timeShift, isAllDay) {\n    return {\n      top: timeShift * this.cellHeight,\n      left: 0,\n      cellPosition: 0\n    };\n  }\n\n}\n\nexport default BaseRenderingStrategy;","map":{"version":3,"names":["_extends","AppointmentPositioningStrategy","AdaptivePositioningStrategy","extend","dateUtils","isNumeric","isObject","current","currentTheme","AppointmentSettingsGenerator","timeZoneUtils","createAppointmentAdapter","getAppointmentTakesAllDay","toMs","dateToMilliseconds","APPOINTMENT_MIN_SIZE","APPOINTMENT_DEFAULT_HEIGHT","COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT","DROP_DOWN_BUTTON_ADAPTIVE_SIZE","WEEK_VIEW_COLLECTOR_OFFSET","COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET","BaseRenderingStrategy","constructor","options","_initPositioningStrategy","isAdaptive","adaptivityEnabled","rtlEnabled","startDayHour","endDayHour","maxAppointmentsPerCell","cellWidth","cellHeight","allDayHeight","resizableStep","isGroupedByDate","visibleDayDuration","viewStartDayHour","viewEndDayHour","cellDuration","cellDurationInMinutes","leftVirtualCellCount","topVirtualCellCount","positionHelper","showAllDayPanel","isGroupedAllDayPanel","groupOrientation","rowCount","groupCount","currentDate","appointmentCountPerCell","appointmentOffset","allowResizing","allowAllDayResizing","viewDataProvider","dataAccessors","timeZoneCalculator","intervalCount","allDayPanelMode","isVirtualScrolling","_correctCollectorCoordinatesInAdaptive","coordinates","isAllDay","top","getCollectorTopOffset","left","getCollectorLeftOffset","_positioningStrategy","getPositioningStrategy","getAppointmentMinSize","keepAppointmentSettings","getDeltaTime","getAppointmentGeometry","needCorrectAppointmentDates","getDirection","createTaskPositionMap","items","_maxAppointmentCountPerCell","length","map","i","_getItemPosition","_correctRtlCoordinates","forEach","item","leftVirtualWidth","topVirtualHeight","push","positionArray","_getSortedPositions","resultPositions","_getResultPositions","_getExtendedPositionMap","_getDeltaWidth","args","initialSize","intervalWidth","initialWidth","width","Math","round","_getAppointmentMaxWidth","coordinate","appointmentReduced","appointment","position","generateAppointmentSettings","allDay","result","j","height","calculateAppointmentHeight","calculateAppointmentWidth","resultWidth","multiWeekAppointmentParts","initialRowIndex","rowIndex","initialColumnIndex","columnIndex","_needVerifyItemSize","currentMaxAllowedPosition","hMax","isAppointmentGreaterThan","_reduceMultiWeekAppointment","right","_getAppointmentParts","sourceAppointmentWidth","reducedWidth","_getAppointmentPartsPosition","appointmentParts","unshift","concat","getAppointmentSettingsGenerator","rawAppointment","appointmentTakesAllDay","isAppointmentTakesAllDay","getPositionShiftCallback","getPositionShift","bind","create","adapter","_getCompactAppointmentParts","appointmentWidth","bound","floor","etalon","comparisonParameters","cropAppointmentWidth","positionList","value","createItem","bottom","cellPosition","cellCount","sort","a","b","_sortCondition","_getConditions","isSomeEdge","_isSomeEdge","columnCondition","_normalizeCondition","rowCondition","cellPositionCondition","_rowCondition","conditions","_columnCondition","first","second","abs","_isItemsCross","firstItem","secondItem","areItemsInTheSameTable","areItemsAllDay","orientation","_getOrientation","_checkItemsCrossing","firstItemSide_1","firstItemSide_2","secondItemSide_1","ceil","secondItemSide_2","isItemCross","sortedArray","sortedIndex","currentItem","indexes","itemIndex","maxIndexInStack","stack","findFreeIndex","index","isFind","some","currentIndex","_skipSortedIndex","startNewStack","pushItemsInResult","count","max","min","_getMaxAppointmentCountPerCell","_findIndexByKey","arr","iKey","jKey","iValue","jValue","len","positions","positionCounter","mapLength","resultString","itemLength","_checkLongCompactAppointment","_splitLongCompactAppointment","_getMaxAppointmentCountPerCellByType","compactCount","isCompact","k","compactPart","_getCompactLeftCoordinate","_adjustDurationByDaylightDiff","duration","startDate","endDate","daylightDiff","getDaylightOffset","_needAdjustDuration","_calculateDurationByDaylightDiff","diff","_getCollectorLeftOffset","isApplyCompactAppointmentOffset","dropDownButtonWidth","getDropDownAppointmentWidth","rightOffset","_isCompactTheme","_markAppointmentAsVirtual","arguments","countFullWidthAppointmentInCell","compactRender","supportCompactDropDownAppointments","virtual","getDropDownAppointmentHeight","_generateAppointmentCollectorIndex","groupIndex","_ref","simple","getDropDownButtonAdaptiveSize","getAppointmentDataCalculator","_customizeCoordinates","topOffset","appointmentHeight","appointmentTop","empty","_isAppointmentEmpty","_getAppointmentMinHeight","_getAppointmentMinWidth","_calculateGeometryConfig","overlappingMode","offsets","_getOffsets","appointmentDefaultOffset","_getAppointmentDefaultOffset","_getAppointmentCount","ratio","_getDefaultRatio","maxHeight","_getMaxHeight","unlimited","offset","_getDynamicAppointmentCountPerCell","getDynamicAppointmentCountPerCell","allDaySupported","split","pop","getAppointmentDefaultOffset","_getAppointmentDefaultHeight","_getAppointmentHeightByTheme","_getAppointmentDefaultWidth","_needVerticalGroupBounds","_needHorizontalGroupBounds","getAppointmentDurationInMs","apptStartDate","apptEndDate","appointmentDuration","getTime","ceilQuantityOfDays","msInHour","trimmedStartDate","trimTime","trimmedEndDate","deltaDate","quantityOfDays","dayVisibleHours","appointmentDayHours","startHours","apptStartDelta","endHours","apptEndDelta","timeShift"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/scheduler/appointments/rendering_strategies/strategy.base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointments/rendering_strategies/strategy.base.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport AppointmentPositioningStrategy from \"./appointmentsPositioning_strategy_base\";\r\nimport AdaptivePositioningStrategy from \"./appointmentsPositioning_strategy_adaptive\";\r\nimport {\r\n    extend\r\n} from \"../../../../core/utils/extend\";\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nimport {\r\n    isNumeric,\r\n    isObject\r\n} from \"../../../../core/utils/type\";\r\nimport {\r\n    current as currentTheme\r\n} from \"../../../themes\";\r\nimport {\r\n    AppointmentSettingsGenerator\r\n} from \"../settingsGenerator\";\r\nimport timeZoneUtils from \"../../utils.timeZone\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../../appointmentAdapter\";\r\nimport {\r\n    getAppointmentTakesAllDay\r\n} from \"../../../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar APPOINTMENT_MIN_SIZE = 2;\r\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\r\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\r\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\r\nvar WEEK_VIEW_COLLECTOR_OFFSET = 5;\r\nvar COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET = 1;\r\nclass BaseRenderingStrategy {\r\n    constructor(options) {\r\n        this.options = options;\r\n        this._initPositioningStrategy()\r\n    }\r\n    get isAdaptive() {\r\n        return this.options.adaptivityEnabled\r\n    }\r\n    get rtlEnabled() {\r\n        return this.options.rtlEnabled\r\n    }\r\n    get startDayHour() {\r\n        return this.options.startDayHour\r\n    }\r\n    get endDayHour() {\r\n        return this.options.endDayHour\r\n    }\r\n    get maxAppointmentsPerCell() {\r\n        return this.options.maxAppointmentsPerCell\r\n    }\r\n    get cellWidth() {\r\n        return this.options.cellWidth\r\n    }\r\n    get cellHeight() {\r\n        return this.options.cellHeight\r\n    }\r\n    get allDayHeight() {\r\n        return this.options.allDayHeight\r\n    }\r\n    get resizableStep() {\r\n        return this.options.resizableStep\r\n    }\r\n    get isGroupedByDate() {\r\n        return this.options.isGroupedByDate\r\n    }\r\n    get visibleDayDuration() {\r\n        return this.options.visibleDayDuration\r\n    }\r\n    get viewStartDayHour() {\r\n        return this.options.viewStartDayHour\r\n    }\r\n    get viewEndDayHour() {\r\n        return this.options.viewEndDayHour\r\n    }\r\n    get cellDuration() {\r\n        return this.options.cellDuration\r\n    }\r\n    get cellDurationInMinutes() {\r\n        return this.options.cellDurationInMinutes\r\n    }\r\n    get leftVirtualCellCount() {\r\n        return this.options.leftVirtualCellCount\r\n    }\r\n    get topVirtualCellCount() {\r\n        return this.options.topVirtualCellCount\r\n    }\r\n    get positionHelper() {\r\n        return this.options.positionHelper\r\n    }\r\n    get showAllDayPanel() {\r\n        return this.options.showAllDayPanel\r\n    }\r\n    get isGroupedAllDayPanel() {\r\n        return this.options.isGroupedAllDayPanel\r\n    }\r\n    get groupOrientation() {\r\n        return this.options.groupOrientation\r\n    }\r\n    get rowCount() {\r\n        return this.options.rowCount\r\n    }\r\n    get groupCount() {\r\n        return this.options.groupCount\r\n    }\r\n    get currentDate() {\r\n        return this.options.currentDate\r\n    }\r\n    get appointmentCountPerCell() {\r\n        return this.options.appointmentCountPerCell\r\n    }\r\n    get appointmentOffset() {\r\n        return this.options.appointmentOffset\r\n    }\r\n    get allowResizing() {\r\n        return this.options.allowResizing\r\n    }\r\n    get allowAllDayResizing() {\r\n        return this.options.allowAllDayResizing\r\n    }\r\n    get viewDataProvider() {\r\n        return this.options.viewDataProvider\r\n    }\r\n    get dataAccessors() {\r\n        return this.options.dataAccessors\r\n    }\r\n    get timeZoneCalculator() {\r\n        return this.options.timeZoneCalculator\r\n    }\r\n    get intervalCount() {\r\n        return this.options.intervalCount\r\n    }\r\n    get allDayPanelMode() {\r\n        return this.options.allDayPanelMode\r\n    }\r\n    get isVirtualScrolling() {\r\n        return this.options.isVirtualScrolling\r\n    }\r\n    _correctCollectorCoordinatesInAdaptive(coordinates, isAllDay) {\r\n        coordinates.top = coordinates.top + this.getCollectorTopOffset(isAllDay);\r\n        coordinates.left = coordinates.left + this.getCollectorLeftOffset()\r\n    }\r\n    _initPositioningStrategy() {\r\n        this._positioningStrategy = this.isAdaptive ? new AdaptivePositioningStrategy(this) : new AppointmentPositioningStrategy(this)\r\n    }\r\n    getPositioningStrategy() {\r\n        return this._positioningStrategy\r\n    }\r\n    getAppointmentMinSize() {\r\n        return APPOINTMENT_MIN_SIZE\r\n    }\r\n    keepAppointmentSettings() {\r\n        return false\r\n    }\r\n    getDeltaTime() {}\r\n    getAppointmentGeometry(coordinates) {\r\n        return coordinates\r\n    }\r\n    needCorrectAppointmentDates() {\r\n        return true\r\n    }\r\n    getDirection() {\r\n        return \"horizontal\"\r\n    }\r\n    createTaskPositionMap(items) {\r\n        delete this._maxAppointmentCountPerCell;\r\n        var length = null === items || void 0 === items ? void 0 : items.length;\r\n        if (!length) {\r\n            return\r\n        }\r\n        var map = [];\r\n        for (var i = 0; i < length; i++) {\r\n            var coordinates = this._getItemPosition(items[i]);\r\n            if (coordinates.length && this.rtlEnabled) {\r\n                coordinates = this._correctRtlCoordinates(coordinates)\r\n            }\r\n            coordinates.forEach(item => {\r\n                item.leftVirtualCellCount = this.leftVirtualCellCount;\r\n                item.topVirtualCellCount = this.topVirtualCellCount;\r\n                item.leftVirtualWidth = this.leftVirtualCellCount * this.cellWidth;\r\n                item.topVirtualHeight = this.topVirtualCellCount * this.cellHeight\r\n            });\r\n            map.push(coordinates)\r\n        }\r\n        var positionArray = this._getSortedPositions(map);\r\n        var resultPositions = this._getResultPositions(positionArray);\r\n        return this._getExtendedPositionMap(map, resultPositions)\r\n    }\r\n    _getDeltaWidth(args, initialSize) {\r\n        var intervalWidth = this.resizableStep || this.getAppointmentMinSize();\r\n        var initialWidth = initialSize.width;\r\n        return Math.round((args.width - initialWidth) / intervalWidth)\r\n    }\r\n    _correctRtlCoordinates(coordinates) {\r\n        var width = coordinates[0].width || this._getAppointmentMaxWidth();\r\n        coordinates.forEach(coordinate => {\r\n            if (!coordinate.appointmentReduced) {\r\n                coordinate.left -= width\r\n            }\r\n        });\r\n        return coordinates\r\n    }\r\n    _getAppointmentMaxWidth() {\r\n        return this.cellWidth\r\n    }\r\n    _getItemPosition(appointment) {\r\n        var position = this.generateAppointmentSettings(appointment);\r\n        var allDay = this.isAllDay(appointment);\r\n        var result = [];\r\n        for (var j = 0; j < position.length; j++) {\r\n            var height = this.calculateAppointmentHeight(appointment, position[j]);\r\n            var width = this.calculateAppointmentWidth(appointment, position[j]);\r\n            var resultWidth = width;\r\n            var appointmentReduced = null;\r\n            var multiWeekAppointmentParts = [];\r\n            var initialRowIndex = position[j].rowIndex;\r\n            var initialColumnIndex = position[j].columnIndex;\r\n            if (this._needVerifyItemSize() || allDay) {\r\n                var currentMaxAllowedPosition = position[j].hMax;\r\n                if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\r\n                        left: position[j].left,\r\n                        width: width\r\n                    })) {\r\n                    appointmentReduced = \"head\";\r\n                    initialRowIndex = position[j].rowIndex;\r\n                    initialColumnIndex = position[j].columnIndex;\r\n                    resultWidth = this._reduceMultiWeekAppointment(width, {\r\n                        left: position[j].left,\r\n                        right: currentMaxAllowedPosition\r\n                    });\r\n                    multiWeekAppointmentParts = this._getAppointmentParts({\r\n                        sourceAppointmentWidth: width,\r\n                        reducedWidth: resultWidth,\r\n                        height: height\r\n                    }, position[j]);\r\n                    if (this.rtlEnabled) {\r\n                        position[j].left = currentMaxAllowedPosition\r\n                    }\r\n                }\r\n            }\r\n            extend(position[j], {\r\n                height: height,\r\n                width: resultWidth,\r\n                allDay: allDay,\r\n                rowIndex: initialRowIndex,\r\n                columnIndex: initialColumnIndex,\r\n                appointmentReduced: appointmentReduced\r\n            });\r\n            result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result)\r\n        }\r\n        return result\r\n    }\r\n    _getAppointmentPartsPosition(appointmentParts, position, result) {\r\n        if (appointmentParts.length) {\r\n            appointmentParts.unshift(position);\r\n            result = result.concat(appointmentParts)\r\n        } else {\r\n            result.push(position)\r\n        }\r\n        return result\r\n    }\r\n    getAppointmentSettingsGenerator(rawAppointment) {\r\n        return new AppointmentSettingsGenerator(_extends({\r\n            rawAppointment: rawAppointment,\r\n            appointmentTakesAllDay: this.isAppointmentTakesAllDay(rawAppointment),\r\n            getPositionShiftCallback: this.getPositionShift.bind(this)\r\n        }, this.options))\r\n    }\r\n    generateAppointmentSettings(rawAppointment) {\r\n        return this.getAppointmentSettingsGenerator(rawAppointment).create()\r\n    }\r\n    isAppointmentTakesAllDay(rawAppointment) {\r\n        var adapter = createAppointmentAdapter(rawAppointment, this.dataAccessors, this.timeZoneCalculator);\r\n        return getAppointmentTakesAllDay(adapter, this.viewStartDayHour, this.viewEndDayHour, this.allDayPanelMode)\r\n    }\r\n    _getAppointmentParts() {\r\n        return []\r\n    }\r\n    _getCompactAppointmentParts(appointmentWidth) {\r\n        var cellWidth = this.cellWidth || this.getAppointmentMinSize();\r\n        return Math.round(appointmentWidth / cellWidth)\r\n    }\r\n    _reduceMultiWeekAppointment(sourceAppointmentWidth, bound) {\r\n        if (this.rtlEnabled) {\r\n            sourceAppointmentWidth = Math.floor(bound.left - bound.right)\r\n        } else {\r\n            sourceAppointmentWidth = bound.right - Math.floor(bound.left)\r\n        }\r\n        return sourceAppointmentWidth\r\n    }\r\n    calculateAppointmentHeight() {\r\n        return 0\r\n    }\r\n    calculateAppointmentWidth() {\r\n        return 0\r\n    }\r\n    isAppointmentGreaterThan(etalon, comparisonParameters) {\r\n        var result = comparisonParameters.left + comparisonParameters.width - etalon;\r\n        if (this.rtlEnabled) {\r\n            result = etalon + comparisonParameters.width - comparisonParameters.left\r\n        }\r\n        return result > this.cellWidth / 2\r\n    }\r\n    isAllDay() {\r\n        return false\r\n    }\r\n    cropAppointmentWidth(width, cellWidth) {\r\n        return this.isGroupedByDate ? cellWidth : width\r\n    }\r\n    _getSortedPositions(positionList) {\r\n        var result = [];\r\n        var round = value => Math.round(100 * value) / 100;\r\n        var createItem = (rowIndex, columnIndex, top, left, bottom, right, position, allDay) => ({\r\n            i: rowIndex,\r\n            j: columnIndex,\r\n            top: round(top),\r\n            left: round(left),\r\n            bottom: round(bottom),\r\n            right: round(right),\r\n            cellPosition: position,\r\n            allDay: allDay\r\n        });\r\n        for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\r\n            for (var columnIndex = 0, cellCount = positionList[rowIndex].length; columnIndex < cellCount; columnIndex++) {\r\n                var {\r\n                    top: top,\r\n                    left: left,\r\n                    height: height,\r\n                    width: width,\r\n                    cellPosition: cellPosition,\r\n                    allDay: allDay\r\n                } = positionList[rowIndex][columnIndex];\r\n                result.push(createItem(rowIndex, columnIndex, top, left, top + height, left + width, cellPosition, allDay))\r\n            }\r\n        }\r\n        return result.sort((a, b) => this._sortCondition(a, b))\r\n    }\r\n    _sortCondition() {}\r\n    _getConditions(a, b) {\r\n        var isSomeEdge = this._isSomeEdge(a, b);\r\n        return {\r\n            columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\r\n            rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\r\n            cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\r\n        }\r\n    }\r\n    _rowCondition(a, b) {\r\n        var conditions = this._getConditions(a, b);\r\n        return conditions.columnCondition || conditions.rowCondition\r\n    }\r\n    _columnCondition(a, b) {\r\n        var conditions = this._getConditions(a, b);\r\n        return conditions.rowCondition || conditions.columnCondition\r\n    }\r\n    _isSomeEdge(a, b) {\r\n        return a.i === b.i && a.j === b.j\r\n    }\r\n    _normalizeCondition(first, second) {\r\n        var result = first - second;\r\n        return Math.abs(result) > 1 ? result : 0\r\n    }\r\n    _isItemsCross(firstItem, secondItem) {\r\n        var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;\r\n        var areItemsAllDay = firstItem.allDay && secondItem.allDay;\r\n        if (areItemsInTheSameTable) {\r\n            var orientation = this._getOrientation(areItemsAllDay);\r\n            return this._checkItemsCrossing(firstItem, secondItem, orientation)\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    _checkItemsCrossing(firstItem, secondItem, orientation) {\r\n        var firstItemSide_1 = Math.floor(firstItem[orientation[0]]);\r\n        var firstItemSide_2 = Math.floor(firstItem[orientation[1]]);\r\n        var secondItemSide_1 = Math.ceil(secondItem[orientation[0]]);\r\n        var secondItemSide_2 = Math.ceil(secondItem[orientation[1]]);\r\n        var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;\r\n        return isItemCross && (firstItemSide_1 <= secondItemSide_1 && firstItemSide_2 > secondItemSide_1 || firstItemSide_1 < secondItemSide_2 && firstItemSide_2 >= secondItemSide_2 || firstItemSide_1 === secondItemSide_1 && firstItemSide_2 === secondItemSide_2)\r\n    }\r\n    _getOrientation(isAllDay) {\r\n        return isAllDay ? [\"left\", \"right\", \"top\"] : [\"top\", \"bottom\", \"left\"]\r\n    }\r\n    _getResultPositions(sortedArray) {\r\n        var result = [];\r\n        var i;\r\n        var sortedIndex = 0;\r\n        var currentItem;\r\n        var indexes;\r\n        var itemIndex;\r\n        var maxIndexInStack = 0;\r\n        var stack = {};\r\n        var findFreeIndex = (indexes, index) => {\r\n            var isFind = indexes.some(item => item === index);\r\n            if (isFind) {\r\n                return findFreeIndex(indexes, ++index)\r\n            } else {\r\n                return index\r\n            }\r\n        };\r\n        var createItem = (currentItem, index) => {\r\n            var currentIndex = index || 0;\r\n            return {\r\n                index: currentIndex,\r\n                i: currentItem.i,\r\n                j: currentItem.j,\r\n                left: currentItem.left,\r\n                right: currentItem.right,\r\n                top: currentItem.top,\r\n                bottom: currentItem.bottom,\r\n                allDay: currentItem.allDay,\r\n                sortedIndex: this._skipSortedIndex(currentIndex) ? null : sortedIndex++\r\n            }\r\n        };\r\n        var startNewStack = currentItem => {\r\n            stack.items = [createItem(currentItem)];\r\n            stack.left = currentItem.left;\r\n            stack.right = currentItem.right;\r\n            stack.top = currentItem.top;\r\n            stack.bottom = currentItem.bottom;\r\n            stack.allDay = currentItem.allDay\r\n        };\r\n        var pushItemsInResult = items => {\r\n            items.forEach(item => {\r\n                result.push({\r\n                    index: item.index,\r\n                    count: maxIndexInStack + 1,\r\n                    i: item.i,\r\n                    j: item.j,\r\n                    sortedIndex: item.sortedIndex\r\n                })\r\n            })\r\n        };\r\n        for (i = 0; i < sortedArray.length; i++) {\r\n            currentItem = sortedArray[i];\r\n            indexes = [];\r\n            if (!stack.items) {\r\n                startNewStack(currentItem)\r\n            } else if (this._isItemsCross(stack, currentItem)) {\r\n                stack.items.forEach((item, index) => {\r\n                    if (this._isItemsCross(item, currentItem)) {\r\n                        indexes.push(item.index)\r\n                    }\r\n                });\r\n                itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\r\n                stack.items.push(createItem(currentItem, itemIndex));\r\n                maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\r\n                stack.left = Math.min(stack.left, currentItem.left);\r\n                stack.right = Math.max(stack.right, currentItem.right);\r\n                stack.top = Math.min(stack.top, currentItem.top);\r\n                stack.bottom = Math.max(stack.bottom, currentItem.bottom);\r\n                stack.allDay = currentItem.allDay\r\n            } else {\r\n                pushItemsInResult(stack.items);\r\n                stack = {};\r\n                startNewStack(currentItem);\r\n                maxIndexInStack = 0\r\n            }\r\n        }\r\n        if (stack.items) {\r\n            pushItemsInResult(stack.items)\r\n        }\r\n        return result.sort((function(a, b) {\r\n            var columnCondition = a.j - b.j;\r\n            var rowCondition = a.i - b.i;\r\n            return rowCondition ? rowCondition : columnCondition\r\n        }))\r\n    }\r\n    _skipSortedIndex(index) {\r\n        return index > this._getMaxAppointmentCountPerCell() - 1\r\n    }\r\n    _findIndexByKey(arr, iKey, jKey, iValue, jValue) {\r\n        var result = 0;\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\r\n                result = i;\r\n                break\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _getExtendedPositionMap(map, positions) {\r\n        var positionCounter = 0;\r\n        var result = [];\r\n        for (var i = 0, mapLength = map.length; i < mapLength; i++) {\r\n            var resultString = [];\r\n            for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\r\n                map[i][j].index = positions[positionCounter].index;\r\n                map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\r\n                map[i][j].count = positions[positionCounter++].count;\r\n                resultString.push(map[i][j]);\r\n                this._checkLongCompactAppointment(map[i][j], resultString)\r\n            }\r\n            result.push(resultString)\r\n        }\r\n        return result\r\n    }\r\n    _checkLongCompactAppointment(item, result) {\r\n        this._splitLongCompactAppointment(item, result);\r\n        return result\r\n    }\r\n    _splitLongCompactAppointment(item, result) {\r\n        var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\r\n        var compactCount = 0;\r\n        if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\r\n            item.isCompact = true;\r\n            compactCount = this._getCompactAppointmentParts(item.width);\r\n            for (var k = 1; k < compactCount; k++) {\r\n                var compactPart = extend(true, {}, item);\r\n                compactPart.left = this._getCompactLeftCoordinate(item.left, k);\r\n                compactPart.columnIndex = compactPart.columnIndex + k;\r\n                compactPart.sortedIndex = null;\r\n                result.push(compactPart)\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _adjustDurationByDaylightDiff(duration, startDate, endDate) {\r\n        var daylightDiff = timeZoneUtils.getDaylightOffset(startDate, endDate);\r\n        return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration\r\n    }\r\n    _needAdjustDuration(diff) {\r\n        return 0 !== diff\r\n    }\r\n    _calculateDurationByDaylightDiff(duration, diff) {\r\n        return duration + diff * toMs(\"minute\")\r\n    }\r\n    _getCollectorLeftOffset(isAllDay) {\r\n        if (isAllDay || !this.isApplyCompactAppointmentOffset()) {\r\n            return 0\r\n        }\r\n        var dropDownButtonWidth = this.getDropDownAppointmentWidth(this.intervalCount, isAllDay);\r\n        var rightOffset = this._isCompactTheme() ? COMPACT_THEME_WEEK_VIEW_COLLECTOR_OFFSET : WEEK_VIEW_COLLECTOR_OFFSET;\r\n        return this.cellWidth - dropDownButtonWidth - rightOffset\r\n    }\r\n    _markAppointmentAsVirtual(coordinates) {\r\n        var isAllDay = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;\r\n        var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\r\n        if (coordinates.count - countFullWidthAppointmentInCell > 0) {\r\n            var {\r\n                top: top,\r\n                left: left\r\n            } = coordinates;\r\n            var compactRender = this.isAdaptive || !isAllDay && this.supportCompactDropDownAppointments();\r\n            coordinates.virtual = {\r\n                left: left + this._getCollectorLeftOffset(isAllDay),\r\n                top: top,\r\n                width: this.getDropDownAppointmentWidth(this.intervalCount, isAllDay),\r\n                height: this.getDropDownAppointmentHeight(),\r\n                index: this._generateAppointmentCollectorIndex(coordinates, isAllDay),\r\n                isAllDay: isAllDay,\r\n                groupIndex: coordinates.groupIndex,\r\n                isCompact: compactRender\r\n            }\r\n        }\r\n    }\r\n    isApplyCompactAppointmentOffset() {\r\n        return this.supportCompactDropDownAppointments()\r\n    }\r\n    supportCompactDropDownAppointments() {\r\n        return true\r\n    }\r\n    _generateAppointmentCollectorIndex(_ref, isAllDay) {\r\n        var {\r\n            groupIndex: groupIndex,\r\n            rowIndex: rowIndex,\r\n            columnIndex: columnIndex\r\n        } = _ref;\r\n        return \"\".concat(groupIndex, \"-\").concat(rowIndex, \"-\").concat(columnIndex, \"-\").concat(isAllDay)\r\n    }\r\n    _getMaxAppointmentCountPerCellByType(isAllDay) {\r\n        var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\r\n        if (isObject(appointmentCountPerCell)) {\r\n            return isAllDay ? appointmentCountPerCell.allDay : appointmentCountPerCell.simple\r\n        } else {\r\n            return appointmentCountPerCell\r\n        }\r\n    }\r\n    getDropDownAppointmentWidth(intervalCount, isAllDay) {\r\n        return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay)\r\n    }\r\n    getDropDownAppointmentHeight() {\r\n        return this.getPositioningStrategy().getDropDownAppointmentHeight()\r\n    }\r\n    getDropDownButtonAdaptiveSize() {\r\n        return DROP_DOWN_BUTTON_ADAPTIVE_SIZE\r\n    }\r\n    getCollectorTopOffset(allDay) {\r\n        return this.getPositioningStrategy().getCollectorTopOffset(allDay)\r\n    }\r\n    getCollectorLeftOffset() {\r\n        return this.getPositioningStrategy().getCollectorLeftOffset()\r\n    }\r\n    getAppointmentDataCalculator() {}\r\n    _customizeCoordinates(coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\r\n        var index = coordinates.index;\r\n        var appointmentHeight = height / appointmentCountPerCell;\r\n        var appointmentTop = coordinates.top + index * appointmentHeight;\r\n        var top = appointmentTop + topOffset;\r\n        var width = coordinates.width;\r\n        var left = coordinates.left;\r\n        if (coordinates.isCompact) {\r\n            this.isAdaptive && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);\r\n            this._markAppointmentAsVirtual(coordinates, isAllDay)\r\n        }\r\n        return {\r\n            height: appointmentHeight,\r\n            width: width,\r\n            top: top,\r\n            left: left,\r\n            empty: this._isAppointmentEmpty(height, width)\r\n        }\r\n    }\r\n    _isAppointmentEmpty(height, width) {\r\n        return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth()\r\n    }\r\n    _calculateGeometryConfig(coordinates) {\r\n        var overlappingMode = this.maxAppointmentsPerCell;\r\n        var offsets = this._getOffsets();\r\n        var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\r\n        var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\r\n        var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\r\n        var maxHeight = this._getMaxHeight();\r\n        if (!isNumeric(appointmentCountPerCell)) {\r\n            appointmentCountPerCell = coordinates.count;\r\n            ratio = (maxHeight - offsets.unlimited) / maxHeight\r\n        }\r\n        var topOffset = (1 - ratio) * maxHeight;\r\n        if (\"auto\" === overlappingMode || isNumeric(overlappingMode)) {\r\n            ratio = 1;\r\n            maxHeight -= appointmentDefaultOffset;\r\n            topOffset = appointmentDefaultOffset\r\n        }\r\n        return {\r\n            height: ratio * maxHeight,\r\n            appointmentCountPerCell: appointmentCountPerCell,\r\n            offset: topOffset\r\n        }\r\n    }\r\n    _getAppointmentCount() {}\r\n    _getDefaultRatio() {}\r\n    _getOffsets() {}\r\n    _getMaxHeight() {}\r\n    _needVerifyItemSize() {\r\n        return false\r\n    }\r\n    _getMaxAppointmentCountPerCell() {\r\n        if (!this._maxAppointmentCountPerCell) {\r\n            var overlappingMode = this.maxAppointmentsPerCell;\r\n            var appointmentCountPerCell;\r\n            if (isNumeric(overlappingMode)) {\r\n                appointmentCountPerCell = overlappingMode\r\n            }\r\n            if (\"auto\" === overlappingMode) {\r\n                appointmentCountPerCell = this._getDynamicAppointmentCountPerCell()\r\n            }\r\n            if (\"unlimited\" === overlappingMode) {\r\n                appointmentCountPerCell = void 0\r\n            }\r\n            this._maxAppointmentCountPerCell = appointmentCountPerCell\r\n        }\r\n        return this._maxAppointmentCountPerCell\r\n    }\r\n    _getDynamicAppointmentCountPerCell() {\r\n        return this.getPositioningStrategy().getDynamicAppointmentCountPerCell()\r\n    }\r\n    allDaySupported() {\r\n        return false\r\n    }\r\n    _isCompactTheme() {\r\n        return \"compact\" === (currentTheme() || \"\").split(\".\").pop()\r\n    }\r\n    _getAppointmentDefaultOffset() {\r\n        return this.getPositioningStrategy().getAppointmentDefaultOffset()\r\n    }\r\n    _getAppointmentDefaultHeight() {\r\n        return this._getAppointmentHeightByTheme()\r\n    }\r\n    _getAppointmentMinHeight() {\r\n        return this._getAppointmentDefaultHeight()\r\n    }\r\n    _getAppointmentHeightByTheme() {\r\n        return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT\r\n    }\r\n    _getAppointmentDefaultWidth() {\r\n        return this.getPositioningStrategy()._getAppointmentDefaultWidth()\r\n    }\r\n    _getAppointmentMinWidth() {\r\n        return this._getAppointmentDefaultWidth()\r\n    }\r\n    _needVerticalGroupBounds() {\r\n        return false\r\n    }\r\n    _needHorizontalGroupBounds() {\r\n        return false\r\n    }\r\n    getAppointmentDurationInMs(apptStartDate, apptEndDate, allDay) {\r\n        if (allDay) {\r\n            var appointmentDuration = apptEndDate.getTime() - apptStartDate.getTime();\r\n            var ceilQuantityOfDays = Math.ceil(appointmentDuration / toMs(\"day\"));\r\n            return ceilQuantityOfDays * this.visibleDayDuration\r\n        }\r\n        var msInHour = toMs(\"hour\");\r\n        var trimmedStartDate = dateUtils.trimTime(apptStartDate);\r\n        var trimmedEndDate = dateUtils.trimTime(apptEndDate);\r\n        var deltaDate = trimmedEndDate - trimmedStartDate;\r\n        var quantityOfDays = deltaDate / toMs(\"day\") + 1;\r\n        var dayVisibleHours = this.endDayHour - this.startDayHour;\r\n        var appointmentDayHours = dayVisibleHours * quantityOfDays;\r\n        var startHours = (apptStartDate - trimmedStartDate) / msInHour;\r\n        var apptStartDelta = Math.max(0, startHours - this.startDayHour);\r\n        var endHours = Math.max(0, (apptEndDate - trimmedEndDate) / msInHour - this.startDayHour);\r\n        var apptEndDelta = Math.max(0, dayVisibleHours - endHours);\r\n        var result = (appointmentDayHours - (apptStartDelta + apptEndDelta)) * msInHour;\r\n        return result\r\n    }\r\n    getPositionShift(timeShift, isAllDay) {\r\n        return {\r\n            top: timeShift * this.cellHeight,\r\n            left: 0,\r\n            cellPosition: 0\r\n        }\r\n    }\r\n}\r\nexport default BaseRenderingStrategy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
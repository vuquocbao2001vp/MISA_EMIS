{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth, getHeight, getOuterHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport LoadIndicator from \"../load_indicator\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isFunction, isDefined } from \"../../core/utils/type\";\nimport { compileSetter, compileGetter } from \"../../core/utils/data\";\nimport positionUtils from \"../../animation/position\";\nimport { getDiagram } from \"./diagram.importer\";\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nimport { getPublicElement } from \"../../core/element\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport messageLocalization from \"../../localization/message\";\nimport numberLocalization from \"../../localization/number\";\nimport * as zIndexPool from \"../overlay/z_index\";\nimport Overlay from \"../overlay/ui.overlay\";\nimport DiagramToolbar from \"./ui.diagram.toolbar\";\nimport DiagramMainToolbar from \"./ui.diagram.main_toolbar\";\nimport DiagramHistoryToolbar from \"./ui.diagram.history_toolbar\";\nimport DiagramViewToolbar from \"./ui.diagram.view_toolbar\";\nimport DiagramPropertiesToolbar from \"./ui.diagram.properties_toolbar\";\nimport diagramContextMenuModule from \"./ui.diagram.context_menu\";\nimport DiagramContextToolbox from \"./ui.diagram.context_toolbox\";\nimport DiagramDialog from \"./ui.diagram.dialogs\";\nimport DiagramScrollView from \"./ui.diagram.scroll_view\";\nimport DiagramToolboxManager from \"./diagram.toolbox_manager\";\nimport DiagramToolbox from \"./ui.diagram.toolbox\";\nimport DiagramPropertiesPanel from \"./ui.diagram.properties_panel\";\nimport DiagramOptionsUpdateBar from \"./diagram.options_update\";\nimport DiagramDialogManager from \"./ui.diagram.dialog_manager\";\nimport DiagramCommandsManager from \"./diagram.commands_manager\";\nimport NodesOption from \"./diagram.nodes_option\";\nimport EdgesOption from \"./diagram.edges_option\";\nvar DIAGRAM_CLASS = \"dx-diagram\";\nvar DIAGRAM_FULLSCREEN_CLASS = \"dx-diagram-fullscreen\";\nvar DIAGRAM_TOOLBAR_WRAPPER_CLASS = DIAGRAM_CLASS + \"-toolbar-wrapper\";\nvar DIAGRAM_CONTENT_WRAPPER_CLASS = DIAGRAM_CLASS + \"-content-wrapper\";\nvar DIAGRAM_CONTENT_CLASS = DIAGRAM_CLASS + \"-content\";\nvar DIAGRAM_SCROLL_VIEW_CLASS = DIAGRAM_CLASS + \"-scroll-view\";\nvar DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-floating-toolbar-container\";\nvar DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-properties-panel-toolbar-container\";\nvar DIAGRAM_LOADING_INDICATOR_CLASS = DIAGRAM_CLASS + \"-loading-indicator\";\nvar DIAGRAM_FLOATING_PANEL_OFFSET = 12;\nvar DIAGRAM_DEFAULT_UNIT = \"in\";\nvar DIAGRAM_DEFAULT_ZOOMLEVEL = 1;\nvar DIAGRAM_DEFAULT_AUTOZOOM_MODE = \"disabled\";\nvar DIAGRAM_DEFAULT_PAGE_ORIENTATION = \"portrait\";\nvar DIAGRAM_DEFAULT_PAGE_COLOR = \"#ffffff\";\nvar DIAGRAM_MAX_MOBILE_WINDOW_WIDTH = 576;\nvar DIAGRAM_TOOLBOX_SHAPE_SPACING = 12;\nvar DIAGRAM_TOOLBOX_SHAPES_PER_ROW = 3;\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING = 12;\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW = 4;\nvar DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH = 152;\nvar DIAGRAM_NAMESPACE = \"dxDiagramEvent\";\nvar FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"fullscreenchange\", DIAGRAM_NAMESPACE);\nvar IE_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"msfullscreenchange\", DIAGRAM_NAMESPACE);\nvar WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"webkitfullscreenchange\", DIAGRAM_NAMESPACE);\nvar MOZ_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"mozfullscreenchange\", DIAGRAM_NAMESPACE);\n\nclass Diagram extends Widget {\n  _init() {\n    this._updateDiagramLockCount = 0;\n    this.toggleFullscreenLock = 0;\n    this._toolbars = [];\n\n    super._init();\n\n    this._initDiagram();\n\n    this._createCustomCommand();\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    this._toolbars = [];\n    delete this._isMobileScreenSize;\n    var isServerSide = !hasWindow();\n    this.$element().addClass(DIAGRAM_CLASS);\n    delete this._mainToolbar;\n\n    if (this.option(\"mainToolbar.visible\")) {\n      this._renderMainToolbar();\n    }\n\n    var $contentWrapper = $(\"<div>\").addClass(DIAGRAM_CONTENT_WRAPPER_CLASS).appendTo(this.$element());\n    delete this._historyToolbar;\n    delete this._historyToolbarResizeCallback;\n\n    if (this._isHistoryToolbarVisible()) {\n      this._renderHistoryToolbar($contentWrapper);\n    }\n\n    delete this._propertiesToolbar;\n    delete this._propertiesToolbarResizeCallback;\n\n    if (this._isPropertiesPanelEnabled()) {\n      this._renderPropertiesToolbar($contentWrapper);\n    }\n\n    delete this._viewToolbar;\n    delete this._viewToolbarResizeCallback;\n\n    if (this.option(\"viewToolbar.visible\")) {\n      this._renderViewToolbar($contentWrapper);\n    }\n\n    delete this._toolbox;\n    delete this._toolboxResizeCallback;\n\n    if (this._isToolboxEnabled()) {\n      this._renderToolbox($contentWrapper);\n    }\n\n    delete this._propertiesPanel;\n    delete this._propertiesPanelResizeCallback;\n\n    if (this._isPropertiesPanelEnabled()) {\n      this._renderPropertiesPanel($contentWrapper);\n    }\n\n    this._$content = $(\"<div>\").addClass(DIAGRAM_CONTENT_CLASS).appendTo($contentWrapper);\n    delete this._contextMenu;\n    this._diagramInstance.settings.contextMenuEnabled = this.option(\"contextMenu.enabled\");\n\n    if (this._diagramInstance.settings.contextMenuEnabled) {\n      this._renderContextMenu($contentWrapper);\n    }\n\n    delete this._contextToolbox;\n\n    if (this.option(\"contextToolbox.enabled\")) {\n      this._renderContextToolbox($contentWrapper);\n    }\n\n    this._renderDialog($contentWrapper);\n\n    if (!isServerSide) {\n      var $scrollViewWrapper = $(\"<div>\").addClass(DIAGRAM_SCROLL_VIEW_CLASS).appendTo(this._$content);\n\n      this._createComponent($scrollViewWrapper, DiagramScrollView, {\n        useNativeScrolling: this.option(\"useNativeScrolling\"),\n        onCreateDiagram: e => {\n          this._diagramInstance.createDocument(e.$parent[0], e.scrollView, $contentWrapper[0]);\n        }\n      });\n    }\n\n    this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, this._isPropertiesPanelVisible());\n\n    this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, this._isToolboxVisible());\n\n    this._createOptionsUpdateBar();\n  }\n\n  _dimensionChanged() {\n    this._isMobileScreenSize = void 0;\n\n    this._processDiagramResize();\n  }\n\n  _visibilityChanged(visible) {\n    if (visible) {\n      this._bindDiagramData();\n\n      this.repaint();\n    }\n  }\n\n  _processDiagramResize() {\n    this._diagramInstance.onDimensionChanged();\n\n    if (this._historyToolbarResizeCallback) {\n      this._historyToolbarResizeCallback.call(this);\n    }\n\n    if (this._propertiesToolbarResizeCallback) {\n      this._propertiesToolbarResizeCallback.call(this);\n    }\n\n    if (this._propertiesPanelResizeCallback) {\n      this._propertiesPanelResizeCallback.call(this);\n    }\n\n    if (this._viewToolbarResizeCallback) {\n      this._viewToolbarResizeCallback.call(this);\n    }\n\n    if (this._toolboxResizeCallback) {\n      this._toolboxResizeCallback.call(this);\n    }\n  }\n\n  isMobileScreenSize() {\n    if (void 0 === this._isMobileScreenSize) {\n      this._isMobileScreenSize = hasWindow() && getOuterWidth(this.$element()) < DIAGRAM_MAX_MOBILE_WINDOW_WIDTH;\n    }\n\n    return this._isMobileScreenSize;\n  }\n\n  _captureFocus() {\n    if (this._diagramInstance) {\n      this._diagramInstance.captureFocus();\n    }\n  }\n\n  _captureFocusOnTimeout() {\n    this._captureFocusTimeout = setTimeout(() => {\n      this._captureFocus();\n\n      delete this._captureFocusTimeout;\n    }, 100);\n  }\n\n  _killCaptureFocusTimeout() {\n    if (this._captureFocusTimeout) {\n      clearTimeout(this._captureFocusTimeout);\n      delete this._captureFocusTimeout;\n    }\n  }\n\n  notifyBarCommandExecuted() {\n    this._captureFocusOnTimeout();\n  }\n\n  _registerToolbar(component) {\n    this._registerBar(component);\n\n    this._toolbars.push(component);\n  }\n\n  _registerBar(component) {\n    component.bar.onChanged.add(this);\n\n    this._diagramInstance.registerBar(component.bar);\n  }\n\n  _getExcludeCommands() {\n    var excludeCommands = [];\n\n    if (!this._isToolboxEnabled()) {\n      excludeCommands.push(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME);\n    }\n\n    if (!this._isPropertiesPanelEnabled()) {\n      excludeCommands.push(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME);\n    }\n\n    return excludeCommands;\n  }\n\n  _getToolbarBaseOptions() {\n    return {\n      onContentReady: _ref => {\n        var {\n          component: component\n        } = _ref;\n        return this._registerToolbar(component);\n      },\n      onSubMenuVisibilityChanging: _ref2 => {\n        var {\n          component: component\n        } = _ref2;\n        return this._diagramInstance.updateBarItemsState(component.bar);\n      },\n      onPointerUp: this._onPanelPointerUp.bind(this),\n      export: this.option(\"export\"),\n      excludeCommands: this._getExcludeCommands(),\n      onInternalCommand: this._onInternalCommand.bind(this),\n      onCustomCommand: this._onCustomCommand.bind(this),\n      isMobileView: this.isMobileScreenSize()\n    };\n  }\n\n  _onInternalCommand(e) {\n    switch (e.command) {\n      case DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME:\n        if (this._toolbox) {\n          this._toolbox.toggle();\n        }\n\n        break;\n\n      case DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME:\n        if (this._propertiesPanel) {\n          this._propertiesPanel.toggle();\n        }\n\n    }\n  }\n\n  _onCustomCommand(e) {\n    this._customCommandAction({\n      name: e.name\n    });\n  }\n\n  _renderMainToolbar() {\n    var $toolbarWrapper = $(\"<div>\").addClass(DIAGRAM_TOOLBAR_WRAPPER_CLASS).appendTo(this.$element());\n    this._mainToolbar = this._createComponent($toolbarWrapper, DiagramMainToolbar, extend(this._getToolbarBaseOptions(), {\n      commands: this.option(\"mainToolbar.commands\"),\n      skipAdjustSize: true\n    }));\n  }\n\n  _isHistoryToolbarVisible() {\n    return this.option(\"historyToolbar.visible\") && !this.isReadOnlyMode();\n  }\n\n  _renderHistoryToolbar($parent) {\n    var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\n    this._historyToolbar = this._createComponent($container, DiagramHistoryToolbar, extend(this._getToolbarBaseOptions(), {\n      commands: this.option(\"historyToolbar.commands\"),\n      locateInMenu: \"never\"\n    }));\n\n    this._updateHistoryToolbarPosition();\n\n    this._historyToolbarResizeCallback = () => {\n      this._historyToolbar.option(\"isMobileView\", this.isMobileScreenSize());\n    };\n  }\n\n  _updateHistoryToolbarPosition() {\n    if (!hasWindow()) {\n      return;\n    }\n\n    positionUtils.setup(this._historyToolbar.$element(), {\n      my: \"left top\",\n      at: \"left top\",\n      of: this._historyToolbar.$element().parent(),\n      offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" \" + DIAGRAM_FLOATING_PANEL_OFFSET\n    });\n  }\n\n  _isToolboxEnabled() {\n    return \"disabled\" !== this.option(\"toolbox.visibility\") && !this.isReadOnlyMode();\n  }\n\n  _isToolboxVisible() {\n    return \"visible\" === this.option(\"toolbox.visibility\") || \"auto\" === this.option(\"toolbox.visibility\") && !this.isMobileScreenSize();\n  }\n\n  _renderToolbox($parent) {\n    var isServerSide = !hasWindow();\n    var $toolBox = $(\"<div>\").appendTo($parent);\n\n    var bounds = this._getToolboxBounds($parent, isServerSide);\n\n    this._toolbox = this._createComponent($toolBox, DiagramToolbox, {\n      isMobileView: this.isMobileScreenSize(),\n      isVisible: this._isToolboxVisible(),\n      container: this.$element(),\n      height: bounds.height,\n      offsetParent: $parent,\n      offsetX: bounds.offsetX,\n      offsetY: bounds.offsetY,\n      showSearch: this.option(\"toolbox.showSearch\"),\n      toolboxGroups: this._getToolboxGroups(),\n      toolboxWidth: this.option(\"toolbox.width\"),\n      onShapeCategoryRendered: e => {\n        if (isServerSide) {\n          return;\n        }\n\n        this._diagramInstance.createToolbox(e.$element[0], \"texts\" === e.displayMode, e.shapes || e.category, {\n          shapeIconSpacing: DIAGRAM_TOOLBOX_SHAPE_SPACING,\n          shapeIconCountInRow: this.option(\"toolbox.shapeIconsPerRow\"),\n          shapeIconAttributes: {\n            \"data-toggle\": e.dataToggle\n          }\n        });\n      },\n      onFilterChanged: e => {\n        if (isServerSide) {\n          return;\n        }\n\n        this._diagramInstance.applyToolboxFilter(e.text, e.filteringToolboxes);\n      },\n      onVisibilityChanging: e => {\n        if (isServerSide) {\n          return;\n        }\n\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, e.visible);\n\n        if (this._propertiesPanel) {\n          if (e.visible && this.isMobileScreenSize()) {\n            this._propertiesPanel.hide();\n          }\n        }\n\n        if (this._historyToolbar) {\n          if (e.visible && this.isMobileScreenSize()) {\n            this._historyToolbarZIndex = zIndexPool.create(Overlay.baseZIndex());\n\n            this._historyToolbar.$element().css(\"zIndex\", this._historyToolbarZIndex);\n\n            this._historyToolbar.$element().css(\"boxShadow\", \"none\");\n          }\n        }\n\n        if (this._viewToolbar) {\n          this._viewToolbar.$element().css(\"opacity\", e.visible && this.isMobileScreenSize() ? \"0\" : \"1\");\n\n          this._viewToolbar.$element().css(\"pointerEvents\", e.visible && this.isMobileScreenSize() ? \"none\" : \"\");\n        }\n      },\n      onVisibilityChanged: e => {\n        if (!e.visible && !this._textInputStarted) {\n          this._captureFocus();\n        }\n\n        if (!isServerSide) {\n          if (this._historyToolbar) {\n            if (!e.visible && this.isMobileScreenSize() && this._historyToolbarZIndex) {\n              zIndexPool.remove(this._historyToolbarZIndex);\n\n              this._historyToolbar.$element().css(\"zIndex\", \"\");\n\n              this._historyToolbar.$element().css(\"boxShadow\", \"\");\n\n              this._historyToolbarZIndex = void 0;\n            }\n          }\n        }\n      },\n      onPointerUp: this._onPanelPointerUp.bind(this)\n    });\n\n    this._toolbox._popup.option(\"propagateOutsideClick\", !this.option(\"fullScreen\"));\n\n    this._toolboxResizeCallback = () => {\n      var bounds = this._getToolboxBounds($parent, isServerSide);\n\n      this._toolbox.option(\"height\", bounds.height);\n\n      var prevIsMobileView = this._toolbox.option(\"isMobileView\");\n\n      if (prevIsMobileView !== this.isMobileScreenSize()) {\n        this._toolbox.option({\n          isMobileView: this.isMobileScreenSize(),\n          isVisible: this._isToolboxVisible()\n        });\n\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, this._isToolboxVisible());\n      }\n\n      this._toolbox.updateMaxHeight();\n    };\n  }\n\n  _getToolboxBounds($parent, isServerSide) {\n    var result = {\n      offsetX: DIAGRAM_FLOATING_PANEL_OFFSET,\n      offsetY: DIAGRAM_FLOATING_PANEL_OFFSET,\n      height: !isServerSide ? getHeight($parent) - 2 * DIAGRAM_FLOATING_PANEL_OFFSET : 0\n    };\n\n    if (this._historyToolbar && !isServerSide) {\n      result.offsetY += getOuterHeight(this._historyToolbar.$element()) + DIAGRAM_FLOATING_PANEL_OFFSET;\n      result.height -= getOuterHeight(this._historyToolbar.$element()) + DIAGRAM_FLOATING_PANEL_OFFSET;\n    }\n\n    if (this._viewToolbar && !isServerSide) {\n      result.height -= getOuterHeight(this._viewToolbar.$element()) + this._getViewToolbarYOffset(isServerSide);\n    }\n\n    return result;\n  }\n\n  _renderViewToolbar($parent) {\n    var isServerSide = !hasWindow();\n    var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\n    this._viewToolbar = this._createComponent($container, DiagramViewToolbar, extend(this._getToolbarBaseOptions(), {\n      commands: this.option(\"viewToolbar.commands\"),\n      locateInMenu: \"never\"\n    }));\n\n    this._updateViewToolbarPosition($container, $parent, isServerSide);\n\n    this._viewToolbarResizeCallback = () => {\n      this._updateViewToolbarPosition($container, $parent, isServerSide);\n    };\n  }\n\n  _getViewToolbarYOffset(isServerSide) {\n    if (isServerSide) {\n      return;\n    }\n\n    var result = DIAGRAM_FLOATING_PANEL_OFFSET;\n\n    if (this._viewToolbar && this._propertiesToolbar) {\n      result += (getOuterHeight(this._propertiesToolbar.$element()) - getOuterHeight(this._viewToolbar.$element())) / 2;\n    }\n\n    return result;\n  }\n\n  _updateViewToolbarPosition($container, $parent, isServerSide) {\n    if (isServerSide) {\n      return;\n    }\n\n    positionUtils.setup($container, {\n      my: \"left bottom\",\n      at: \"left bottom\",\n      of: $parent,\n      offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + this._getViewToolbarYOffset(isServerSide)\n    });\n  }\n\n  _isPropertiesPanelEnabled() {\n    return \"disabled\" !== this.option(\"propertiesPanel.visibility\") && !this.isReadOnlyMode();\n  }\n\n  _isPropertiesPanelVisible() {\n    return \"visible\" === this.option(\"propertiesPanel.visibility\");\n  }\n\n  _renderPropertiesToolbar($parent) {\n    var isServerSide = !hasWindow();\n    var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).addClass(DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\n    this._propertiesToolbar = this._createComponent($container, DiagramPropertiesToolbar, extend(this._getToolbarBaseOptions(), {\n      buttonStylingMode: \"contained\",\n      buttonType: \"default\",\n      locateInMenu: \"never\"\n    }));\n\n    this._updatePropertiesToolbarPosition($container, $parent, isServerSide);\n\n    this._propertiesToolbarResizeCallback = () => {\n      this._updatePropertiesToolbarPosition($container, $parent, isServerSide);\n    };\n  }\n\n  _updatePropertiesToolbarPosition($container, $parent, isServerSide) {\n    if (isServerSide) {\n      return;\n    }\n\n    positionUtils.setup($container, {\n      my: \"right bottom\",\n      at: \"right bottom\",\n      of: $parent,\n      offset: \"-\" + DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + DIAGRAM_FLOATING_PANEL_OFFSET\n    });\n  }\n\n  _renderPropertiesPanel($parent) {\n    var isServerSide = !hasWindow();\n    var $propertiesPanel = $(\"<div>\").appendTo($parent);\n    var offsetX = DIAGRAM_FLOATING_PANEL_OFFSET;\n    var offsetY = 2 * DIAGRAM_FLOATING_PANEL_OFFSET + (!isServerSide ? getOuterHeight(this._propertiesToolbar.$element()) : 0);\n    this._propertiesPanel = this._createComponent($propertiesPanel, DiagramPropertiesPanel, {\n      isMobileView: this.isMobileScreenSize(),\n      isVisible: this._isPropertiesPanelVisible(),\n      container: this.$element(),\n      offsetParent: $parent,\n      offsetX: offsetX,\n      offsetY: offsetY,\n      propertyTabs: this.option(\"propertiesPanel.tabs\"),\n      onCreateToolbar: e => {\n        e.toolbar = this._createComponent(e.$parent, DiagramToolbar, extend(this._getToolbarBaseOptions(), {\n          commands: e.commands,\n          locateInMenu: \"never\",\n          editorStylingMode: \"outlined\"\n        }));\n      },\n      onVisibilityChanging: e => {\n        if (isServerSide) {\n          return;\n        }\n\n        this._updatePropertiesPanelGroupBars(e.component);\n\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, e.visible);\n\n        if (this._toolbox) {\n          if (e.visible && this.isMobileScreenSize()) {\n            this._toolbox.hide();\n          }\n        }\n      },\n      onVisibilityChanged: e => {\n        if (!e.visible && !this._textInputStarted) {\n          this._captureFocus();\n        }\n      },\n      onSelectedGroupChanged: _ref3 => {\n        var {\n          component: component\n        } = _ref3;\n        return this._updatePropertiesPanelGroupBars(component);\n      },\n      onPointerUp: this._onPanelPointerUp.bind(this)\n    });\n\n    this._propertiesPanelResizeCallback = () => {\n      var prevIsMobileView = this._propertiesPanel.option(\"isMobileView\");\n\n      if (prevIsMobileView !== this.isMobileScreenSize()) {\n        this._propertiesPanel.option({\n          isMobileView: this.isMobileScreenSize(),\n          isVisible: this._isPropertiesPanelVisible()\n        });\n\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, this._isPropertiesPanelVisible());\n      }\n    };\n  }\n\n  _updatePropertiesPanelGroupBars(component) {\n    component.getActiveToolbars().forEach(toolbar => {\n      this._diagramInstance.updateBarItemsState(toolbar.bar);\n    });\n  }\n\n  _onPanelPointerUp() {\n    this._captureFocusOnTimeout();\n  }\n\n  _renderContextMenu($parent) {\n    var $contextMenu = $(\"<div>\").appendTo($parent);\n    this._contextMenu = this._createComponent($contextMenu, diagramContextMenuModule.DiagramContextMenuWrapper, {\n      commands: this.option(\"contextMenu.commands\"),\n      onContentReady: _ref4 => {\n        var {\n          component: component\n        } = _ref4;\n        return this._registerBar(component);\n      },\n      onVisibilityChanging: _ref5 => {\n        var {\n          component: component\n        } = _ref5;\n        return this._diagramInstance.updateBarItemsState(component.bar);\n      },\n      onItemClick: itemData => this._onBeforeCommandExecuted(itemData.command),\n      export: this.option(\"export\"),\n      excludeCommands: this._getExcludeCommands(),\n      onInternalCommand: this._onInternalCommand.bind(this),\n      onCustomCommand: this._onCustomCommand.bind(this)\n    });\n  }\n\n  _renderContextToolbox($parent) {\n    var isServerSide = !hasWindow();\n    var category = this.option(\"contextToolbox.category\");\n    var displayMode = this.option(\"contextToolbox.displayMode\");\n    var shapes = this.option(\"contextToolbox.shapes\");\n    var $contextToolbox = $(\"<div>\").appendTo($parent);\n    this._contextToolbox = this._createComponent($contextToolbox, DiagramContextToolbox, {\n      toolboxWidth: this.option(\"contextToolbox.width\"),\n      onShown: e => {\n        if (isServerSide) {\n          return;\n        }\n\n        var $toolboxContainer = $(e.$element);\n        var isTextGroup = \"texts\" === displayMode;\n\n        if (!shapes && !category && !isTextGroup) {\n          var group = this._getToolboxGroups().filter(function (g) {\n            return g.category === e.category;\n          })[0];\n\n          if (group) {\n            isTextGroup = \"texts\" === group.displayMode;\n          }\n        }\n\n        this._diagramInstance.createContextToolbox($toolboxContainer[0], isTextGroup, shapes || category || e.category, {\n          shapeIconSpacing: DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING,\n          shapeIconCountInRow: this.option(\"contextToolbox.shapeIconsPerRow\")\n        }, shapeType => {\n          e.callback(shapeType);\n\n          this._captureFocus();\n\n          e.hide();\n        });\n      }\n    });\n  }\n\n  _setCustomCommandChecked(command, checked) {\n    this._toolbars.forEach(tb => {\n      tb.setCommandChecked(command, checked);\n    });\n  }\n\n  _onBeforeCommandExecuted(command) {\n    var dialogParameters = DiagramDialogManager.getDialogParameters(command);\n\n    if (dialogParameters) {\n      this._showDialog(dialogParameters);\n    }\n\n    return !!dialogParameters;\n  }\n\n  _renderDialog($parent) {\n    var $dialogElement = $(\"<div>\").appendTo($parent);\n    this._dialogInstance = this._createComponent($dialogElement, DiagramDialog, {});\n  }\n\n  _showDialog(dialogParameters) {\n    if (this._dialogInstance) {\n      this._dialogInstance.option(\"onGetContent\", dialogParameters.onGetContent);\n\n      this._dialogInstance.option(\"onHidden\", function () {\n        this._captureFocus();\n      }.bind(this));\n\n      this._dialogInstance.option(\"command\", this._diagramInstance.getCommand(dialogParameters.command));\n\n      this._dialogInstance.option(\"title\", dialogParameters.title);\n\n      this._dialogInstance._show();\n    }\n  }\n\n  _showLoadingIndicator() {\n    this._loadingIndicator = $(\"<div>\").addClass(DIAGRAM_LOADING_INDICATOR_CLASS);\n\n    this._createComponent(this._loadingIndicator, LoadIndicator, {});\n\n    var $parent = this._$content || this.$element();\n    $parent.append(this._loadingIndicator);\n  }\n\n  _hideLoadingIndicator() {\n    if (!this._loadingIndicator) {\n      return;\n    }\n\n    this._loadingIndicator.remove();\n\n    this._loadingIndicator = null;\n  }\n\n  _initDiagram() {\n    var {\n      DiagramControl: DiagramControl\n    } = getDiagram();\n    this._diagramInstance = new DiagramControl();\n    this._diagramInstance.onChanged = this._raiseDataChangeAction.bind(this);\n    this._diagramInstance.onEdgeInserted = this._raiseEdgeInsertedAction.bind(this);\n    this._diagramInstance.onEdgeUpdated = this._raiseEdgeUpdatedAction.bind(this);\n    this._diagramInstance.onEdgeRemoved = this._raiseEdgeRemovedAction.bind(this);\n    this._diagramInstance.onNodeInserted = this._raiseNodeInsertedAction.bind(this);\n    this._diagramInstance.onNodeUpdated = this._raiseNodeUpdatedAction.bind(this);\n    this._diagramInstance.onNodeRemoved = this._raiseNodeRemovedAction.bind(this);\n    this._diagramInstance.onToolboxDragStart = this._raiseToolboxDragStart.bind(this);\n    this._diagramInstance.onToolboxDragEnd = this._raiseToolboxDragEnd.bind(this);\n    this._diagramInstance.onTextInputStart = this._raiseTextInputStart.bind(this);\n    this._diagramInstance.onTextInputEnd = this._raiseTextInputEnd.bind(this);\n    this._diagramInstance.onToggleFullscreen = this._onToggleFullScreen.bind(this);\n    this._diagramInstance.onShowContextMenu = this._onShowContextMenu.bind(this);\n    this._diagramInstance.onHideContextMenu = this._onHideContextMenu.bind(this);\n    this._diagramInstance.onShowContextToolbox = this._onShowContextToolbox.bind(this);\n    this._diagramInstance.onHideContextToolbox = this._onHideContextToolbox.bind(this);\n\n    this._diagramInstance.onNativeAction.add({\n      notifyItemClick: this._raiseItemClickAction.bind(this),\n      notifyItemDblClick: this._raiseItemDblClickAction.bind(this),\n      notifySelectionChanged: this._raiseSelectionChanged.bind(this)\n    });\n\n    this._diagramInstance.onRequestOperation = this._raiseRequestEditOperation.bind(this);\n\n    this._updateEventSubscriptionMethods();\n\n    this._updateDefaultItemProperties();\n\n    this._updateEditingSettings();\n\n    this._updateShapeTexts();\n\n    this._updateUnitItems();\n\n    this._updateFormatUnitsMethod();\n\n    if (this.option(\"units\") !== DIAGRAM_DEFAULT_UNIT) {\n      this._updateUnitsState();\n    }\n\n    if (this.isReadOnlyMode()) {\n      this._updateReadOnlyState();\n    }\n\n    if (this.option(\"pageSize\")) {\n      if (this.option(\"pageSize.items\")) {\n        this._updatePageSizeItemsState();\n      }\n\n      if (this.option(\"pageSize.width\") && this.option(\"pageSize.height\")) {\n        this._updatePageSizeState();\n      }\n    }\n\n    if (this.option(\"pageOrientation\") !== DIAGRAM_DEFAULT_PAGE_ORIENTATION) {\n      this._updatePageOrientationState();\n    }\n\n    if (this.option(\"pageColor\") !== DIAGRAM_DEFAULT_PAGE_COLOR) {\n      this._updatePageColorState();\n    }\n\n    if (this.option(\"viewUnits\") !== DIAGRAM_DEFAULT_UNIT) {\n      this._updateViewUnitsState();\n    }\n\n    if (!this.option(\"showGrid\")) {\n      this._updateShowGridState();\n    }\n\n    if (!this.option(\"snapToGrid\")) {\n      this._updateSnapToGridState();\n    }\n\n    if (this.option(\"gridSize\")) {\n      this._updateGridSizeState();\n    }\n\n    if (this.option(\"zoomLevel\") !== DIAGRAM_DEFAULT_ZOOMLEVEL) {\n      this._updateZoomLevelState();\n    }\n\n    if (this.option(\"simpleView\")) {\n      this._updateSimpleViewState();\n    }\n\n    if (this.option(\"autoZoomMode\") !== DIAGRAM_DEFAULT_AUTOZOOM_MODE) {\n      this._updateAutoZoomState();\n    }\n\n    if (this.option(\"fullScreen\")) {\n      var window = getWindow();\n\n      if (window && window.self !== window.top) {\n        this.option(\"fullScreen\", false);\n      } else {\n        this._updateFullscreenState();\n      }\n    }\n\n    this._createOptionsUpdateBar();\n\n    if (hasWindow()) {\n      this._diagramInstance.initMeasurer(this.$element()[0]);\n    }\n\n    this._updateCustomShapes(this._getCustomShapes());\n\n    this._refreshDataSources();\n  }\n\n  _createOptionsUpdateBar() {\n    if (!this.optionsUpdateBar) {\n      this.optionsUpdateBar = new DiagramOptionsUpdateBar(this);\n\n      this._diagramInstance.registerBar(this.optionsUpdateBar);\n    }\n  }\n\n  _deleteOptionsUpdateBar() {\n    delete this.optionsUpdateBar;\n  }\n\n  _clean() {\n    if (this._diagramInstance) {\n      this._diagramInstance.cleanMarkup(element => {\n        $(element).empty();\n      });\n\n      this._deleteOptionsUpdateBar();\n    }\n\n    super._clean();\n  }\n\n  _dispose() {\n    this._killCaptureFocusTimeout();\n\n    super._dispose();\n\n    if (this._diagramInstance) {\n      this._diagramInstance.dispose();\n\n      this._diagramInstance = void 0;\n    }\n  }\n\n  _executeDiagramCommand(command, parameter) {\n    this._diagramInstance.getCommand(command).execute(parameter);\n  }\n\n  getNodeDataSource() {\n    return this._nodesOption && this._nodesOption.getDataSource();\n  }\n\n  getEdgeDataSource() {\n    return this._edgesOption && this._edgesOption.getDataSource();\n  }\n\n  _refreshDataSources() {\n    this._beginUpdateDiagram();\n\n    this._refreshNodesDataSource();\n\n    this._refreshEdgesDataSource();\n\n    this._endUpdateDiagram();\n  }\n\n  _refreshNodesDataSource() {\n    if (this._nodesOption) {\n      this._nodesOption._disposeDataSource();\n\n      delete this._nodesOption;\n    }\n\n    if (this.option(\"nodes.dataSource\")) {\n      this._nodesOption = new NodesOption(this);\n\n      this._nodesOption.option(\"dataSource\", this.option(\"nodes.dataSource\"));\n\n      this._nodesOption._refreshDataSource();\n    }\n  }\n\n  _refreshEdgesDataSource() {\n    if (this._edgesOption) {\n      this._edgesOption._disposeDataSource();\n\n      delete this._edgesOption;\n    }\n\n    if (this.option(\"edges.dataSource\")) {\n      this._edgesOption = new EdgesOption(this);\n\n      this._edgesOption.option(\"dataSource\", this.option(\"edges.dataSource\"));\n\n      this._edgesOption._refreshDataSource();\n    }\n  }\n\n  _getDiagramData() {\n    var value;\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.Export, function (data) {\n      value = data;\n    });\n\n    return value;\n  }\n\n  _setDiagramData(data, keepExistingItems) {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.Import, {\n      data: data,\n      keepExistingItems: keepExistingItems\n    });\n  }\n\n  isReadOnlyMode() {\n    return this.option(\"readOnly\") || this.option(\"disabled\");\n  }\n\n  _onDataSourceChanged() {\n    this._bindDiagramData();\n  }\n\n  _getChangesKeys(changes) {\n    return changes.map(change => {\n      if (isDefined(change.internalKey)) {\n        return change.internalKey;\n      } else if (isDefined(change.key)) {\n        return change.key;\n      } else {\n        return null;\n      }\n    }).filter(key => isDefined(key));\n  }\n\n  _createOptionGetter(optionName) {\n    var expr = this.option(optionName);\n    return expr && compileGetter(expr);\n  }\n\n  _onRequestUpdateLayout(changes) {\n    if (!this._requestLayoutUpdateAction) {\n      this._createRequestLayoutUpdateAction();\n    }\n\n    var eventArgs = {\n      changes: changes,\n      allowed: false\n    };\n\n    this._requestLayoutUpdateAction(eventArgs);\n\n    return eventArgs.allowed;\n  }\n\n  _createOptionSetter(optionName) {\n    var expr = this.option(optionName);\n\n    if (isFunction(expr)) {\n      return expr;\n    }\n\n    return expr && compileSetter(expr);\n  }\n\n  _bindDiagramData() {\n    if (this._updateDiagramLockCount || !this._isBindingMode()) {\n      return;\n    }\n\n    var {\n      DiagramCommand: DiagramCommand,\n      ConnectorLineOption: ConnectorLineOption,\n      ConnectorLineEnding: ConnectorLineEnding\n    } = getDiagram();\n    var lineOptionGetter;\n    var lineOptionSetter;\n    var startLineEndingGetter;\n    var startLineEndingSetter;\n    var endLineEndingGetter;\n    var endLineEndingSetter;\n    var containerChildrenGetter;\n    var containerChildrenSetter;\n    var data = {\n      nodeDataSource: this._nodesOption && this._nodesOption.getItems(),\n      edgeDataSource: this._edgesOption && this._edgesOption.getItems(),\n      nodeDataImporter: {\n        getKey: this._createOptionGetter(\"nodes.keyExpr\"),\n        setKey: this._createOptionSetter(\"nodes.keyExpr\"),\n        getCustomData: this._createOptionGetter(\"nodes.customDataExpr\"),\n        setCustomData: this._createOptionSetter(\"nodes.customDataExpr\"),\n        getLocked: this._createOptionGetter(\"nodes.lockedExpr\"),\n        setLocked: this._createOptionSetter(\"nodes.lockedExpr\"),\n        getStyle: this._createOptionGetter(\"nodes.styleExpr\"),\n        setStyle: this._createOptionSetter(\"nodes.styleExpr\"),\n        getStyleText: this._createOptionGetter(\"nodes.textStyleExpr\"),\n        setStyleText: this._createOptionSetter(\"nodes.textStyleExpr\"),\n        getZIndex: this._createOptionGetter(\"nodes.zIndexExpr\"),\n        setZIndex: this._createOptionSetter(\"nodes.zIndexExpr\"),\n        getType: this._createOptionGetter(\"nodes.typeExpr\"),\n        setType: this._createOptionSetter(\"nodes.typeExpr\"),\n        getText: this._createOptionGetter(\"nodes.textExpr\"),\n        setText: this._createOptionSetter(\"nodes.textExpr\"),\n        getImage: this._createOptionGetter(\"nodes.imageUrlExpr\"),\n        setImage: this._createOptionSetter(\"nodes.imageUrlExpr\"),\n        getLeft: this._createOptionGetter(\"nodes.leftExpr\"),\n        setLeft: this._createOptionSetter(\"nodes.leftExpr\"),\n        getTop: this._createOptionGetter(\"nodes.topExpr\"),\n        setTop: this._createOptionSetter(\"nodes.topExpr\"),\n        getWidth: this._createOptionGetter(\"nodes.widthExpr\"),\n        setWidth: this._createOptionSetter(\"nodes.widthExpr\"),\n        getHeight: this._createOptionGetter(\"nodes.heightExpr\"),\n        setHeight: this._createOptionSetter(\"nodes.heightExpr\"),\n        getParentKey: this._createOptionGetter(\"nodes.parentKeyExpr\"),\n        setParentKey: this._createOptionSetter(\"nodes.parentKeyExpr\"),\n        getItems: this._createOptionGetter(\"nodes.itemsExpr\"),\n        setItems: this._createOptionSetter(\"nodes.itemsExpr\"),\n        getChildren: containerChildrenGetter = this._createOptionGetter(\"nodes.containerChildrenExpr\"),\n        setChildren: containerChildrenSetter = this._createOptionSetter(\"nodes.containerChildrenExpr\"),\n        getContainerKey: !containerChildrenGetter && !containerChildrenSetter && this._createOptionGetter(\"nodes.containerKeyExpr\"),\n        setContainerKey: !containerChildrenGetter && !containerChildrenSetter && this._createOptionSetter(\"nodes.containerKeyExpr\")\n      },\n      edgeDataImporter: {\n        getKey: this._createOptionGetter(\"edges.keyExpr\"),\n        setKey: this._createOptionSetter(\"edges.keyExpr\"),\n        getCustomData: this._createOptionGetter(\"edges.customDataExpr\"),\n        setCustomData: this._createOptionSetter(\"edges.customDataExpr\"),\n        getLocked: this._createOptionGetter(\"edges.lockedExpr\"),\n        setLocked: this._createOptionSetter(\"edges.lockedExpr\"),\n        getStyle: this._createOptionGetter(\"edges.styleExpr\"),\n        setStyle: this._createOptionSetter(\"edges.styleExpr\"),\n        getStyleText: this._createOptionGetter(\"edges.textStyleExpr\"),\n        setStyleText: this._createOptionSetter(\"edges.textStyleExpr\"),\n        getZIndex: this._createOptionGetter(\"edges.zIndexExpr\"),\n        setZIndex: this._createOptionSetter(\"edges.zIndexExpr\"),\n        getFrom: this._createOptionGetter(\"edges.fromExpr\"),\n        setFrom: this._createOptionSetter(\"edges.fromExpr\"),\n        getFromPointIndex: this._createOptionGetter(\"edges.fromPointIndexExpr\"),\n        setFromPointIndex: this._createOptionSetter(\"edges.fromPointIndexExpr\"),\n        getTo: this._createOptionGetter(\"edges.toExpr\"),\n        setTo: this._createOptionSetter(\"edges.toExpr\"),\n        getToPointIndex: this._createOptionGetter(\"edges.toPointIndexExpr\"),\n        setToPointIndex: this._createOptionSetter(\"edges.toPointIndexExpr\"),\n        getPoints: this._createOptionGetter(\"edges.pointsExpr\"),\n        setPoints: this._createOptionSetter(\"edges.pointsExpr\"),\n        getText: this._createOptionGetter(\"edges.textExpr\"),\n        setText: this._createOptionSetter(\"edges.textExpr\"),\n        getLineOption: (lineOptionGetter = this._createOptionGetter(\"edges.lineTypeExpr\")) && function (obj) {\n          var lineType = lineOptionGetter(obj);\n          return this._getConnectorLineOption(lineType);\n        }.bind(this),\n        setLineOption: (lineOptionSetter = this._createOptionSetter(\"edges.lineTypeExpr\")) && function (obj, value) {\n          switch (value) {\n            case ConnectorLineOption.Straight:\n              value = \"straight\";\n              break;\n\n            case ConnectorLineOption.Orthogonal:\n              value = \"orthogonal\";\n          }\n\n          lineOptionSetter(obj, value);\n        }.bind(this),\n        getStartLineEnding: (startLineEndingGetter = this._createOptionGetter(\"edges.fromLineEndExpr\")) && function (obj) {\n          var lineEnd = startLineEndingGetter(obj);\n          return this._getConnectorLineEnding(lineEnd);\n        }.bind(this),\n        setStartLineEnding: (startLineEndingSetter = this._createOptionSetter(\"edges.fromLineEndExpr\")) && function (obj, value) {\n          switch (value) {\n            case ConnectorLineEnding.Arrow:\n              value = \"arrow\";\n              break;\n\n            case ConnectorLineEnding.OutlinedTriangle:\n              value = \"outlinedTriangle\";\n              break;\n\n            case ConnectorLineEnding.FilledTriangle:\n              value = \"filledTriangle\";\n              break;\n\n            case ConnectorLineEnding.None:\n              value = \"none\";\n          }\n\n          startLineEndingSetter(obj, value);\n        }.bind(this),\n        getEndLineEnding: (endLineEndingGetter = this._createOptionGetter(\"edges.toLineEndExpr\")) && function (obj) {\n          var lineEnd = endLineEndingGetter(obj);\n          return this._getConnectorLineEnding(lineEnd);\n        }.bind(this),\n        setEndLineEnding: (endLineEndingSetter = this._createOptionSetter(\"edges.toLineEndExpr\")) && function (obj, value) {\n          switch (value) {\n            case ConnectorLineEnding.Arrow:\n              value = \"arrow\";\n              break;\n\n            case ConnectorLineEnding.OutlinedTriangle:\n              value = \"outlinedTriangle\";\n              break;\n\n            case ConnectorLineEnding.FilledTriangle:\n              value = \"filledTriangle\";\n              break;\n\n            case ConnectorLineEnding.None:\n              value = \"none\";\n          }\n\n          endLineEndingSetter(obj, value);\n        }.bind(this)\n      },\n      layoutParameters: this._getDataBindingLayoutParameters()\n    };\n\n    this._executeDiagramCommand(DiagramCommand.BindDocument, data);\n  }\n\n  _reloadContentByChanges(changes, isExternalChanges) {\n    var keys = this._getChangesKeys(changes);\n\n    var applyLayout = this._onRequestUpdateLayout(changes);\n\n    this._reloadContent(keys, applyLayout, isExternalChanges);\n  }\n\n  _reloadContent(itemKeys, applyLayout, isExternalChanges) {\n    this._diagramInstance.reloadContent(itemKeys, () => {\n      var nodeDataSource;\n      var edgeDataSource;\n\n      if (this._nodesOption && isExternalChanges) {\n        nodeDataSource = this._nodesOption.getItems();\n      }\n\n      if (this._edgesOption && isExternalChanges) {\n        edgeDataSource = this._edgesOption.getItems();\n      }\n\n      return {\n        nodeDataSource: nodeDataSource,\n        edgeDataSource: edgeDataSource\n      };\n    }, applyLayout && this._getDataBindingLayoutParameters(), isExternalChanges);\n  }\n\n  _getConnectorLineOption(lineType) {\n    var {\n      ConnectorLineOption: ConnectorLineOption\n    } = getDiagram();\n\n    switch (lineType) {\n      case \"straight\":\n        return ConnectorLineOption.Straight;\n\n      default:\n        return ConnectorLineOption.Orthogonal;\n    }\n  }\n\n  _getConnectorLineEnding(lineEnd) {\n    var {\n      ConnectorLineEnding: ConnectorLineEnding\n    } = getDiagram();\n\n    switch (lineEnd) {\n      case \"arrow\":\n        return ConnectorLineEnding.Arrow;\n\n      case \"outlinedTriangle\":\n        return ConnectorLineEnding.OutlinedTriangle;\n\n      case \"filledTriangle\":\n        return ConnectorLineEnding.FilledTriangle;\n\n      default:\n        return ConnectorLineEnding.None;\n    }\n  }\n\n  _getDataBindingLayoutParameters() {\n    var {\n      DataLayoutType: DataLayoutType,\n      DataLayoutOrientation: DataLayoutOrientation\n    } = getDiagram();\n    var layoutParametersOption = this.option(\"nodes.autoLayout\") || \"off\";\n    var layoutType = layoutParametersOption.type || layoutParametersOption;\n    var parameters = {};\n\n    if (\"off\" !== layoutType && (\"auto\" !== layoutType || !this._hasNodePositionExprs())) {\n      switch (layoutType) {\n        case \"tree\":\n          parameters.type = DataLayoutType.Tree;\n          break;\n\n        default:\n          parameters.type = DataLayoutType.Sugiyama;\n      }\n\n      switch (layoutParametersOption.orientation) {\n        case \"vertical\":\n          parameters.orientation = DataLayoutOrientation.Vertical;\n          break;\n\n        case \"horizontal\":\n          parameters.orientation = DataLayoutOrientation.Horizontal;\n      }\n\n      if (this.option(\"edges.fromPointIndexExpr\") || this.option(\"edges.toPointIndexExpr\")) {\n        parameters.skipPointIndices = true;\n      }\n    }\n\n    parameters.autoSizeEnabled = !!this.option(\"nodes.autoSizeEnabled\");\n    return parameters;\n  }\n\n  _hasNodePositionExprs() {\n    return this.option(\"nodes.topExpr\") && this.option(\"nodes.leftExpr\");\n  }\n\n  _getAutoZoomValue(option) {\n    var {\n      AutoZoomMode: AutoZoomMode\n    } = getDiagram();\n\n    switch (option) {\n      case \"fitContent\":\n        return AutoZoomMode.FitContent;\n\n      case \"fitWidth\":\n        return AutoZoomMode.FitToWidth;\n\n      default:\n        return AutoZoomMode.Disabled;\n    }\n  }\n\n  _isBindingMode() {\n    return this._nodesOption && this._nodesOption.hasItems() || this._edgesOption && this._edgesOption.hasItems();\n  }\n\n  _beginUpdateDiagram() {\n    this._updateDiagramLockCount++;\n  }\n\n  _endUpdateDiagram() {\n    this._updateDiagramLockCount = Math.max(this._updateDiagramLockCount - 1, 0);\n\n    if (!this._updateDiagramLockCount) {\n      this._bindDiagramData();\n    }\n  }\n\n  _getCustomShapes() {\n    return this.option(\"customShapes\") || [];\n  }\n\n  _getToolboxGroups() {\n    return DiagramToolboxManager.getGroups(this.option(\"toolbox.groups\"));\n  }\n\n  _updateAllCustomShapes() {\n    this._diagramInstance.removeAllCustomShapes();\n\n    this._updateCustomShapes(this._getCustomShapes());\n  }\n\n  _updateCustomShapes(customShapes, prevCustomShapes) {\n    if (Array.isArray(prevCustomShapes)) {\n      this._diagramInstance.removeCustomShapes(prevCustomShapes.map(s => s.type));\n    }\n\n    if (Array.isArray(customShapes)) {\n      this._diagramInstance.addCustomShapes(customShapes.map(s => {\n        var templateOption = s.template || this.option(\"customShapeTemplate\");\n\n        var template = templateOption && this._getTemplate(templateOption);\n\n        var toolboxTemplateOption = s.toolboxTemplate || this.option(\"customShapeToolboxTemplate\");\n\n        var toolboxTemplate = toolboxTemplateOption && this._getTemplate(toolboxTemplateOption);\n\n        return {\n          category: s.category,\n          type: s.type,\n          baseType: s.baseType,\n          title: s.title,\n          svgUrl: s.backgroundImageUrl,\n          svgToolboxUrl: s.backgroundImageToolboxUrl,\n          svgLeft: s.backgroundImageLeft,\n          svgTop: s.backgroundImageTop,\n          svgWidth: s.backgroundImageWidth,\n          svgHeight: s.backgroundImageHeight,\n          defaultWidth: s.defaultWidth,\n          defaultHeight: s.defaultHeight,\n          toolboxWidthToHeightRatio: s.toolboxWidthToHeightRatio,\n          minWidth: s.minWidth,\n          minHeight: s.minHeight,\n          maxWidth: s.maxWidth,\n          maxHeight: s.maxHeight,\n          allowResize: s.allowResize,\n          defaultText: s.defaultText,\n          allowEditText: s.allowEditText,\n          textLeft: s.textLeft,\n          textTop: s.textTop,\n          textWidth: s.textWidth,\n          textHeight: s.textHeight,\n          defaultImageUrl: s.defaultImageUrl,\n          allowEditImage: s.allowEditImage,\n          imageLeft: s.imageLeft,\n          imageTop: s.imageTop,\n          imageWidth: s.imageWidth,\n          imageHeight: s.imageHeight,\n          connectionPoints: s.connectionPoints && s.connectionPoints.map(pt => ({\n            x: pt.x,\n            y: pt.y\n          })),\n          createTemplate: template && ((container, item) => {\n            template.render({\n              model: this._nativeItemToDiagramItem(item),\n              container: getPublicElement($(container))\n            });\n          }),\n          createToolboxTemplate: toolboxTemplate && ((container, item) => {\n            toolboxTemplate.render({\n              model: this._nativeItemToDiagramItem(item),\n              container: getPublicElement($(container))\n            });\n          }),\n          destroyTemplate: template && (container => {\n            $(container).empty();\n          }),\n          templateLeft: s.templateLeft,\n          templateTop: s.templateTop,\n          templateWidth: s.templateWidth,\n          templateHeight: s.templateHeight,\n          keepRatioOnAutoSize: s.keepRatioOnAutoSize\n        };\n      }));\n    }\n  }\n\n  _getViewport() {\n    var $viewPort = this.$element().closest(\".dx-viewport\");\n    return $viewPort.length ? $viewPort : $(\"body\");\n  }\n\n  _onToggleFullScreen(fullScreen) {\n    if (this.toggleFullscreenLock > 0) {\n      return;\n    }\n\n    this._changeNativeFullscreen(fullScreen);\n\n    if (fullScreen) {\n      this._prevParent = this.$element().parent();\n      this._prevFullScreenZIndex = this.$element().css(\"zIndex\");\n      this._fullScreenZIndex = zIndexPool.create(Overlay.baseZIndex());\n      this.$element().css(\"zIndex\", this._fullScreenZIndex);\n      this.$element().appendTo(this._getViewport());\n    } else {\n      this.$element().appendTo(this._prevParent);\n\n      if (this._fullScreenZIndex) {\n        zIndexPool.remove(this._fullScreenZIndex);\n        this.$element().css(\"zIndex\", this._prevFullScreenZIndex);\n      }\n    }\n\n    this.$element().toggleClass(DIAGRAM_FULLSCREEN_CLASS, fullScreen);\n\n    this._processDiagramResize();\n\n    if (this._toolbox) {\n      this._toolbox.repaint();\n\n      this._toolbox._popup.option(\"propagateOutsideClick\", !fullScreen);\n    }\n\n    if (this._propertiesPanel) {\n      this._propertiesPanel.repaint();\n    }\n\n    if (this._historyToolbar) {\n      this._updateHistoryToolbarPosition();\n    }\n  }\n\n  _changeNativeFullscreen(setModeOn) {\n    var window = getWindow();\n\n    if (window.self === window.top || setModeOn === this._inNativeFullscreen()) {\n      return;\n    }\n\n    if (setModeOn) {\n      this._subscribeFullscreenNativeChanged();\n    } else {\n      this._unsubscribeFullscreenNativeChanged();\n    }\n\n    this._setNativeFullscreen(setModeOn);\n  }\n\n  _setNativeFullscreen(on) {\n    var window = getWindow();\n    var document = window.self.document;\n    var body = window.self.document.body;\n\n    if (on) {\n      if (body.requestFullscreen) {\n        body.requestFullscreen();\n      } else if (body.mozRequestFullscreen) {\n        body.mozRequestFullscreen();\n      } else if (body.webkitRequestFullscreen) {\n        body.webkitRequestFullscreen();\n      } else if (body.msRequestFullscreen) {\n        body.msRequestFullscreen();\n      }\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullscreen) {\n      document.mozCancelFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n\n  _inNativeFullscreen() {\n    var document = getWindow().document;\n    var fullscreenElement = document.fullscreenElement || document.msFullscreenElement || document.webkitFullscreenElement;\n    var isInFullscreen = fullscreenElement === document.body || document.webkitIsFullscreen;\n    return !!isInFullscreen;\n  }\n\n  _subscribeFullscreenNativeChanged() {\n    var document = getWindow().document;\n\n    var handler = this._onNativeFullscreenChangeHandler.bind(this);\n\n    eventsEngine.on(document, FULLSCREEN_CHANGE_EVENT_NAME, handler);\n    eventsEngine.on(document, IE_FULLSCREEN_CHANGE_EVENT_NAME, handler);\n    eventsEngine.on(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME, handler);\n    eventsEngine.on(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME, handler);\n  }\n\n  _unsubscribeFullscreenNativeChanged() {\n    var document = getWindow().document;\n    eventsEngine.off(document, FULLSCREEN_CHANGE_EVENT_NAME);\n    eventsEngine.off(document, IE_FULLSCREEN_CHANGE_EVENT_NAME);\n    eventsEngine.off(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME);\n    eventsEngine.off(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME);\n  }\n\n  _onNativeFullscreenChangeHandler() {\n    if (!this._inNativeFullscreen()) {\n      this._unsubscribeFullscreenNativeChanged();\n\n      this.option(\"fullScreen\", false);\n    }\n  }\n\n  _executeDiagramFullscreenCommand(fullscreen) {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n    this.toggleFullscreenLock++;\n\n    this._executeDiagramCommand(DiagramCommand.Fullscreen, fullscreen);\n\n    this.toggleFullscreenLock--;\n  }\n\n  _onShowContextMenu(x, y, selection) {\n    if (this._contextMenu) {\n      this._contextMenu._show(x, y, selection);\n    }\n  }\n\n  _onHideContextMenu() {\n    if (this._contextMenu) {\n      this._contextMenu._hide();\n    }\n  }\n\n  _onShowContextToolbox(x, y, side, category, callback) {\n    if (this._contextToolbox) {\n      this._contextToolbox._show(x, y, side, category, callback);\n    }\n  }\n\n  _onHideContextToolbox() {\n    if (this._contextToolbox) {\n      this._contextToolbox._hide();\n    }\n  }\n\n  _getDiagramUnitValue(value) {\n    var {\n      DiagramUnit: DiagramUnit\n    } = getDiagram();\n\n    switch (value) {\n      case \"in\":\n        return DiagramUnit.In;\n\n      case \"cm\":\n        return DiagramUnit.Cm;\n\n      case \"px\":\n        return DiagramUnit.Px;\n\n      default:\n        return DiagramUnit.In;\n    }\n  }\n\n  _updateReadOnlyState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n    var readOnly = this.isReadOnlyMode();\n\n    this._executeDiagramCommand(DiagramCommand.ToggleReadOnly, readOnly);\n  }\n\n  _updateZoomLevelState() {\n    if (this.option(\"zoomLevel.items\")) {\n      this._updateZoomLevelItemsState();\n\n      var zoomLevel = this.option(\"zoomLevel.value\");\n\n      if (!zoomLevel) {\n        return;\n      }\n\n      var {\n        DiagramCommand: DiagramCommand\n      } = getDiagram();\n\n      this._executeDiagramCommand(DiagramCommand.ZoomLevel, zoomLevel);\n    } else {\n      var _zoomLevel = this.option(\"zoomLevel.value\") || this.option(\"zoomLevel\");\n\n      if (!_zoomLevel) {\n        return;\n      }\n\n      var {\n        DiagramCommand: _DiagramCommand\n      } = getDiagram();\n\n      this._executeDiagramCommand(_DiagramCommand.ZoomLevel, _zoomLevel);\n    }\n  }\n\n  _updateZoomLevelItemsState() {\n    var zoomLevelItems = this.option(\"zoomLevel.items\");\n\n    if (!Array.isArray(zoomLevelItems)) {\n      return;\n    }\n\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.ZoomLevelItems, zoomLevelItems);\n  }\n\n  _updateAutoZoomState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.SwitchAutoZoom, this._getAutoZoomValue(this.option(\"autoZoomMode\")));\n  }\n\n  _updateSimpleViewState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.ToggleSimpleView, this.option(\"simpleView\"));\n  }\n\n  _updateFullscreenState() {\n    var fullscreen = this.option(\"fullScreen\");\n\n    this._executeDiagramFullscreenCommand(fullscreen);\n\n    this._onToggleFullScreen(fullscreen);\n  }\n\n  _updateShowGridState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.ShowGrid, this.option(\"showGrid\"));\n  }\n\n  _updateSnapToGridState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.SnapToGrid, this.option(\"snapToGrid\"));\n  }\n\n  _updateGridSizeState() {\n    if (this.option(\"gridSize.items\")) {\n      this._updateGridSizeItemsState();\n\n      var gridSize = this.option(\"gridSize.value\");\n\n      if (!gridSize) {\n        return;\n      }\n\n      var {\n        DiagramCommand: DiagramCommand\n      } = getDiagram();\n\n      this._executeDiagramCommand(DiagramCommand.GridSize, gridSize);\n    } else {\n      var _gridSize = this.option(\"gridSize.value\") || this.option(\"gridSize\");\n\n      if (!_gridSize) {\n        return;\n      }\n\n      var {\n        DiagramCommand: _DiagramCommand2\n      } = getDiagram();\n\n      this._executeDiagramCommand(_DiagramCommand2.GridSize, _gridSize);\n    }\n  }\n\n  _updateGridSizeItemsState() {\n    var gridSizeItems = this.option(\"gridSize.items\");\n\n    if (!Array.isArray(gridSizeItems)) {\n      return;\n    }\n\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.GridSizeItems, gridSizeItems);\n  }\n\n  _updateUnitItems() {\n    var {\n      DiagramLocalizationService: DiagramLocalizationService\n    } = getDiagram();\n\n    var items = this._getUnitItems();\n\n    if (this._unitItems !== items) {\n      this._unitItems = items;\n      DiagramLocalizationService.unitItems = items;\n    }\n  }\n\n  _getUnitItems() {\n    var {\n      DiagramUnit: DiagramUnit\n    } = getDiagram();\n    var items = {};\n    items[DiagramUnit.In] = messageLocalization.format(\"dxDiagram-unitIn\");\n    items[DiagramUnit.Cm] = messageLocalization.format(\"dxDiagram-unitCm\");\n    items[DiagramUnit.Px] = messageLocalization.format(\"dxDiagram-unitPx\");\n    return items;\n  }\n\n  _updateFormatUnitsMethod() {\n    var {\n      DiagramLocalizationService: DiagramLocalizationService\n    } = getDiagram();\n\n    DiagramLocalizationService.formatUnit = function (value) {\n      return numberLocalization.format(value);\n    };\n  }\n\n  _updateViewUnitsState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.ViewUnits, this._getDiagramUnitValue(this.option(\"viewUnits\")));\n  }\n\n  _updateUnitsState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.Units, this._getDiagramUnitValue(this.option(\"units\")));\n  }\n\n  _updatePageSizeState() {\n    var pageSize = this.option(\"pageSize\");\n\n    if (!pageSize || !pageSize.width || !pageSize.height) {\n      return;\n    }\n\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.PageSize, pageSize);\n  }\n\n  _updatePageSizeItemsState() {\n    var pageSizeItems = this.option(\"pageSize.items\");\n\n    if (!Array.isArray(pageSizeItems)) {\n      return;\n    }\n\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.PageSizeItems, pageSizeItems);\n  }\n\n  _updatePageOrientationState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.PageLandscape, \"landscape\" === this.option(\"pageOrientation\"));\n  }\n\n  _updatePageColorState() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.PageColor, this.option(\"pageColor\"));\n  }\n\n  _updateShapeTexts() {\n    var {\n      DiagramLocalizationService: DiagramLocalizationService\n    } = getDiagram();\n\n    var texts = this._getShapeTexts();\n\n    if (this._shapeTexts !== texts) {\n      this._shapeTexts = texts;\n      DiagramLocalizationService.shapeTexts = texts;\n    }\n  }\n\n  _getShapeTexts() {\n    var {\n      ShapeTypes: ShapeTypes\n    } = getDiagram();\n    var texts = {};\n    texts[ShapeTypes.Text] = messageLocalization.format(\"dxDiagram-shapeText\");\n    texts[ShapeTypes.Rectangle] = messageLocalization.format(\"dxDiagram-shapeRectangle\");\n    texts[ShapeTypes.Ellipse] = messageLocalization.format(\"dxDiagram-shapeEllipse\");\n    texts[ShapeTypes.Cross] = messageLocalization.format(\"dxDiagram-shapeCross\");\n    texts[ShapeTypes.Triangle] = messageLocalization.format(\"dxDiagram-shapeTriangle\");\n    texts[ShapeTypes.Diamond] = messageLocalization.format(\"dxDiagram-shapeDiamond\");\n    texts[ShapeTypes.Heart] = messageLocalization.format(\"dxDiagram-shapeHeart\");\n    texts[ShapeTypes.Pentagon] = messageLocalization.format(\"dxDiagram-shapePentagon\");\n    texts[ShapeTypes.Hexagon] = messageLocalization.format(\"dxDiagram-shapeHexagon\");\n    texts[ShapeTypes.Octagon] = messageLocalization.format(\"dxDiagram-shapeOctagon\");\n    texts[ShapeTypes.Star] = messageLocalization.format(\"dxDiagram-shapeStar\");\n    texts[ShapeTypes.ArrowLeft] = messageLocalization.format(\"dxDiagram-shapeArrowLeft\");\n    texts[ShapeTypes.ArrowUp] = messageLocalization.format(\"dxDiagram-shapeArrowUp\");\n    texts[ShapeTypes.ArrowRight] = messageLocalization.format(\"dxDiagram-shapeArrowRight\");\n    texts[ShapeTypes.ArrowDown] = messageLocalization.format(\"dxDiagram-shapeArrowDown\");\n    texts[ShapeTypes.ArrowUpDown] = messageLocalization.format(\"dxDiagram-shapeArrowUpDown\");\n    texts[ShapeTypes.ArrowLeftRight] = messageLocalization.format(\"dxDiagram-shapeArrowLeftRight\");\n    texts[ShapeTypes.Process] = messageLocalization.format(\"dxDiagram-shapeProcess\");\n    texts[ShapeTypes.Decision] = messageLocalization.format(\"dxDiagram-shapeDecision\");\n    texts[ShapeTypes.Terminator] = messageLocalization.format(\"dxDiagram-shapeTerminator\");\n    texts[ShapeTypes.PredefinedProcess] = messageLocalization.format(\"dxDiagram-shapePredefinedProcess\");\n    texts[ShapeTypes.Document] = messageLocalization.format(\"dxDiagram-shapeDocument\");\n    texts[ShapeTypes.MultipleDocuments] = messageLocalization.format(\"dxDiagram-shapeMultipleDocuments\");\n    texts[ShapeTypes.ManualInput] = messageLocalization.format(\"dxDiagram-shapeManualInput\");\n    texts[ShapeTypes.Preparation] = messageLocalization.format(\"dxDiagram-shapePreparation\");\n    texts[ShapeTypes.Data] = messageLocalization.format(\"dxDiagram-shapeData\");\n    texts[ShapeTypes.Database] = messageLocalization.format(\"dxDiagram-shapeDatabase\");\n    texts[ShapeTypes.HardDisk] = messageLocalization.format(\"dxDiagram-shapeHardDisk\");\n    texts[ShapeTypes.InternalStorage] = messageLocalization.format(\"dxDiagram-shapeInternalStorage\");\n    texts[ShapeTypes.PaperTape] = messageLocalization.format(\"dxDiagram-shapePaperTape\");\n    texts[ShapeTypes.ManualOperation] = messageLocalization.format(\"dxDiagram-shapeManualOperation\");\n    texts[ShapeTypes.Delay] = messageLocalization.format(\"dxDiagram-shapeDelay\");\n    texts[ShapeTypes.StoredData] = messageLocalization.format(\"dxDiagram-shapeStoredData\");\n    texts[ShapeTypes.Display] = messageLocalization.format(\"dxDiagram-shapeDisplay\");\n    texts[ShapeTypes.Merge] = messageLocalization.format(\"dxDiagram-shapeMerge\");\n    texts[ShapeTypes.Connector] = messageLocalization.format(\"dxDiagram-shapeConnector\");\n    texts[ShapeTypes.Or] = messageLocalization.format(\"dxDiagram-shapeOr\");\n    texts[ShapeTypes.SummingJunction] = messageLocalization.format(\"dxDiagram-shapeSummingJunction\");\n    texts[ShapeTypes.Container] = messageLocalization.format(\"dxDiagram-shapeContainerDefaultText\");\n    texts[ShapeTypes.VerticalContainer] = messageLocalization.format(\"dxDiagram-shapeVerticalContainer\");\n    texts[ShapeTypes.HorizontalContainer] = messageLocalization.format(\"dxDiagram-shapeHorizontalContainer\");\n    texts[ShapeTypes.Card] = messageLocalization.format(\"dxDiagram-shapeCardDefaultText\");\n    texts[ShapeTypes.CardWithImageOnLeft] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnLeft\");\n    texts[ShapeTypes.CardWithImageOnTop] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnTop\");\n    texts[ShapeTypes.CardWithImageOnRight] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnRight\");\n    return texts;\n  }\n\n  _updateEventSubscriptionMethods() {\n    var {\n      RenderHelper: RenderHelper\n    } = getDiagram();\n\n    RenderHelper.addEventListener = (element, eventName, handler) => {\n      eventsEngine.on(element, eventName, handler);\n    };\n\n    RenderHelper.removeEventListener = (element, eventName, handler) => {\n      eventsEngine.off(element, eventName, handler);\n    };\n  }\n\n  _updateDefaultItemProperties() {\n    if (this.option(\"defaultItemProperties.style\")) {\n      this._diagramInstance.setInitialStyleProperties(this.option(\"defaultItemProperties.style\"));\n    }\n\n    if (this.option(\"defaultItemProperties.textStyle\")) {\n      this._diagramInstance.setInitialTextStyleProperties(this.option(\"defaultItemProperties.textStyle\"));\n    }\n\n    this._diagramInstance.setInitialConnectorProperties({\n      lineOption: this._getConnectorLineOption(this.option(\"defaultItemProperties.connectorLineType\")),\n      startLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineStart\")),\n      endLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineEnd\"))\n    });\n\n    this._diagramInstance.applyShapeSizeSettings({\n      shapeMinWidth: this.option(\"defaultItemProperties.shapeMinWidth\"),\n      shapeMaxWidth: this.option(\"defaultItemProperties.shapeMaxWidth\"),\n      shapeMinHeight: this.option(\"defaultItemProperties.shapeMinHeight\"),\n      shapeMaxHeight: this.option(\"defaultItemProperties.shapeMaxHeight\")\n    });\n  }\n\n  _updateEditingSettings() {\n    this._diagramInstance.applyOperationSettings({\n      addShape: this.option(\"editing.allowAddShape\"),\n      addShapeFromToolbox: this.option(\"editing.allowAddShape\"),\n      deleteShape: this.option(\"editing.allowDeleteShape\"),\n      deleteConnector: this.option(\"editing.allowDeleteConnector\"),\n      changeConnection: this.option(\"editing.allowChangeConnection\"),\n      changeConnectorPoints: this.option(\"editing.allowChangeConnectorPoints\"),\n      changeShapeText: this.option(\"editing.allowChangeShapeText\"),\n      changeConnectorText: this.option(\"editing.allowChangeConnectorText\"),\n      resizeShape: this.option(\"editing.allowResizeShape\"),\n      moveShape: this.option(\"editing.allowMoveShape\")\n    });\n  }\n\n  fitToContent() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.FitToScreen);\n  }\n\n  fitToWidth() {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    this._executeDiagramCommand(DiagramCommand.FitToWidth);\n  }\n\n  focus() {\n    this._captureFocus();\n  }\n\n  export() {\n    return this._getDiagramData();\n  }\n\n  exportTo(format, callback) {\n    var command = this._getDiagramExportToCommand(format);\n\n    this._executeDiagramCommand(command, callback);\n  }\n\n  _getDiagramExportToCommand(format) {\n    var {\n      DiagramCommand: DiagramCommand\n    } = getDiagram();\n\n    switch (format) {\n      case \"png\":\n        return DiagramCommand.ExportPng;\n\n      case \"jpg\":\n        return DiagramCommand.ExportJpg;\n\n      default:\n        return DiagramCommand.ExportSvg;\n    }\n  }\n\n  import(data, updateExistingItemsOnly) {\n    this._setDiagramData(data, updateExistingItemsOnly);\n\n    this._raiseDataChangeAction();\n  }\n\n  updateToolbox() {\n    this._diagramInstance && this._diagramInstance.refreshToolbox();\n\n    if (this._toolbox) {\n      this._toolbox.updateTooltips();\n\n      this._toolbox.updateFilter();\n\n      this._toolbox.updateMaxHeight();\n    }\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      readOnly: false,\n      zoomLevel: DIAGRAM_DEFAULT_ZOOMLEVEL,\n      simpleView: false,\n      autoZoomMode: DIAGRAM_DEFAULT_AUTOZOOM_MODE,\n      fullScreen: false,\n      showGrid: true,\n      snapToGrid: true,\n      units: DIAGRAM_DEFAULT_UNIT,\n      viewUnits: DIAGRAM_DEFAULT_UNIT,\n      pageOrientation: DIAGRAM_DEFAULT_PAGE_ORIENTATION,\n      pageColor: DIAGRAM_DEFAULT_PAGE_COLOR,\n      hasChanges: false,\n      nodes: {\n        dataSource: null,\n        keyExpr: \"id\",\n        customDataExpr: void 0,\n        lockedExpr: void 0,\n        styleExpr: void 0,\n        textStyleExpr: void 0,\n        zIndexExpr: void 0,\n        typeExpr: \"type\",\n        textExpr: \"text\",\n        imageUrlExpr: void 0,\n        parentKeyExpr: void 0,\n        itemsExpr: void 0,\n        leftExpr: void 0,\n        topExpr: void 0,\n        widthExpr: void 0,\n        heightExpr: void 0,\n        containerKeyExpr: \"containerKey\",\n        containerChildrenExpr: void 0,\n        autoLayout: \"auto\",\n        autoSizeEnabled: true\n      },\n      edges: {\n        dataSource: null,\n        keyExpr: \"id\",\n        customDataExpr: void 0,\n        lockedExpr: void 0,\n        styleExpr: void 0,\n        textStyleExpr: void 0,\n        zIndexExpr: void 0,\n        fromExpr: \"from\",\n        fromPointIndexExpr: void 0,\n        toExpr: \"to\",\n        toPointIndexExpr: void 0,\n        pointsExpr: void 0,\n        textExpr: void 0,\n        lineTypeExpr: void 0,\n        fromLineEndExpr: void 0,\n        toLineEndExpr: void 0\n      },\n      customShapes: [],\n      toolbox: {\n        visibility: \"auto\",\n        shapeIconsPerRow: DIAGRAM_TOOLBOX_SHAPES_PER_ROW,\n        showSearch: true\n      },\n      mainToolbar: {\n        visible: false\n      },\n      historyToolbar: {\n        visible: true\n      },\n      viewToolbar: {\n        visible: true\n      },\n      contextMenu: {\n        enabled: true\n      },\n      contextToolbox: {\n        enabled: true,\n        shapeIconsPerRow: DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW,\n        width: DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH\n      },\n      propertiesPanel: {\n        visibility: \"auto\"\n      },\n      defaultItemProperties: {\n        connectorLineType: \"orthogonal\",\n        connectorLineStart: \"none\",\n        connectorLineEnd: \"arrow\"\n      },\n      editing: {\n        allowAddShape: true,\n        allowDeleteShape: true,\n        allowDeleteConnector: true,\n        allowChangeConnection: true,\n        allowChangeConnectorPoints: true,\n        allowChangeShapeText: true,\n        allowChangeConnectorText: true,\n        allowResizeShape: true,\n        allowMoveShape: true\n      },\n      export: {\n        fileName: \"Diagram\",\n        proxyUrl: void 0\n      },\n      onItemClick: null,\n      onItemDblClick: null,\n      onSelectionChanged: null,\n      onRequestEditOperation: null,\n      onRequestLayoutUpdate: null\n    });\n  }\n\n  _raiseDataChangeAction() {\n    if (this._initialized) {\n      this.option(\"hasChanges\", true);\n    }\n  }\n\n  _raiseEdgeInsertedAction(data, callback, errorCallback) {\n    if (this._edgesOption) {\n      this._edgesOption.insert(data, callback, errorCallback);\n    }\n  }\n\n  _raiseEdgeUpdatedAction(key, data, callback, errorCallback) {\n    if (this._edgesOption) {\n      this._edgesOption.update(key, data, callback, errorCallback);\n    }\n  }\n\n  _raiseEdgeRemovedAction(key, data, callback, errorCallback) {\n    if (this._edgesOption) {\n      this._edgesOption.remove(key, data, callback, errorCallback);\n    }\n  }\n\n  _raiseNodeInsertedAction(data, callback, errorCallback) {\n    if (this._nodesOption) {\n      this._nodesOption.insert(data, callback, errorCallback);\n    }\n  }\n\n  _raiseNodeUpdatedAction(key, data, callback, errorCallback) {\n    if (this._nodesOption) {\n      this._nodesOption.update(key, data, callback, errorCallback);\n    }\n  }\n\n  _raiseNodeRemovedAction(key, data, callback, errorCallback) {\n    if (this._nodesOption) {\n      this._nodesOption.remove(key, data, callback, errorCallback);\n    }\n  }\n\n  _raiseToolboxDragStart() {\n    if (this._toolbox && this.isMobileScreenSize()) {\n      this._toolbox.hide();\n\n      this._toolboxDragHidden = true;\n    }\n  }\n\n  _raiseToolboxDragEnd() {\n    if (this._toolbox && this._toolboxDragHidden) {\n      this._toolbox.show();\n\n      delete this._toolboxDragHidden;\n    }\n  }\n\n  _raiseTextInputStart() {\n    this._textInputStarted = true;\n\n    if (this._propertiesPanel) {\n      if (this.isMobileScreenSize() && this._propertiesPanel.isVisible()) {\n        this._propertiesPanel.hide();\n\n        this._propertiesPanelTextInputHidden = true;\n      }\n    }\n\n    if (this._toolbox) {\n      if (this.isMobileScreenSize() && this._toolbox.isVisible()) {\n        this._toolbox.hide();\n\n        this._toolboxTextInputHidden = true;\n      }\n    }\n  }\n\n  _raiseTextInputEnd() {\n    if (this._propertiesPanel) {\n      if (this._propertiesPanelTextInputHidden) {\n        this._propertiesPanel.show();\n\n        delete this._propertiesPanelTextInputHidden;\n      }\n    }\n\n    if (this._toolbox) {\n      if (this._toolboxTextInputHidden) {\n        this._toolbox.show();\n\n        delete this._toolboxTextInputHidden;\n      }\n    }\n\n    this._textInputStarted = false;\n  }\n\n  _createItemClickAction() {\n    this._itemClickAction = this._createActionByOption(\"onItemClick\");\n  }\n\n  _createItemDblClickAction() {\n    this._itemDblClickAction = this._createActionByOption(\"onItemDblClick\");\n  }\n\n  _createSelectionChangedAction() {\n    this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n  }\n\n  _createRequestEditOperationAction() {\n    this._requestEditOperationAction = this._createActionByOption(\"onRequestEditOperation\");\n  }\n\n  _createRequestLayoutUpdateAction() {\n    this._requestLayoutUpdateAction = this._createActionByOption(\"onRequestLayoutUpdate\");\n  }\n\n  _createCustomCommand() {\n    this._customCommandAction = this._createActionByOption(\"onCustomCommand\");\n  }\n\n  _raiseItemClickAction(nativeItem) {\n    if (!this._itemClickAction) {\n      this._createItemClickAction();\n    }\n\n    this._itemClickAction({\n      item: this._nativeItemToDiagramItem(nativeItem)\n    });\n  }\n\n  _raiseItemDblClickAction(nativeItem) {\n    if (!this._itemDblClickAction) {\n      this._createItemDblClickAction();\n    }\n\n    this._itemDblClickAction({\n      item: this._nativeItemToDiagramItem(nativeItem)\n    });\n  }\n\n  _raiseSelectionChanged(nativeItems) {\n    if (!this._selectionChangedAction) {\n      this._createSelectionChangedAction();\n    }\n\n    this._selectionChangedAction({\n      items: nativeItems.map(this._nativeItemToDiagramItem.bind(this))\n    });\n  }\n\n  _raiseRequestEditOperation(operation, args) {\n    if (!this._requestEditOperationAction) {\n      this._createRequestEditOperationAction();\n    }\n\n    var eventArgs = this._getRequestEditOperationEventArgs(operation, args);\n\n    this._requestEditOperationAction(eventArgs);\n\n    args.allowed = eventArgs.allowed;\n  }\n\n  _getModelOperation(operation) {\n    var {\n      DiagramModelOperation: DiagramModelOperation\n    } = getDiagram();\n\n    switch (operation) {\n      case DiagramModelOperation.AddShape:\n        return \"addShape\";\n\n      case DiagramModelOperation.AddShapeFromToolbox:\n        return \"addShapeFromToolbox\";\n\n      case DiagramModelOperation.DeleteShape:\n        return \"deleteShape\";\n\n      case DiagramModelOperation.DeleteConnector:\n        return \"deleteConnector\";\n\n      case DiagramModelOperation.ChangeConnection:\n        return \"changeConnection\";\n\n      case DiagramModelOperation.ChangeConnectorPoints:\n        return \"changeConnectorPoints\";\n\n      case DiagramModelOperation.BeforeChangeShapeText:\n        return \"beforeChangeShapeText\";\n\n      case DiagramModelOperation.ChangeShapeText:\n        return \"changeShapeText\";\n\n      case DiagramModelOperation.BeforeChangeConnectorText:\n        return \"beforeChangeConnectorText\";\n\n      case DiagramModelOperation.ChangeConnectorText:\n        return \"changeConnectorText\";\n\n      case DiagramModelOperation.ResizeShape:\n        return \"resizeShape\";\n\n      case DiagramModelOperation.MoveShape:\n        return \"moveShape\";\n    }\n  }\n\n  _getRequestEditOperationEventArgs(operation, args) {\n    var {\n      DiagramModelOperation: DiagramModelOperation,\n      ConnectorPosition: ConnectorPosition\n    } = getDiagram();\n    var eventArgs = {\n      operation: this._getModelOperation(operation),\n      allowed: args.allowed,\n      updateUI: args.updateUI,\n      reason: args.updateUI ? \"checkUIElementAvailability\" : \"modelModification\"\n    };\n\n    switch (operation) {\n      case DiagramModelOperation.AddShape:\n        eventArgs.args = {\n          shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n          position: args.position && {\n            x: args.position.x,\n            y: args.position.y\n          }\n        };\n        break;\n\n      case DiagramModelOperation.AddShapeFromToolbox:\n        eventArgs.args = {\n          shapeType: args.shapeType\n        };\n        break;\n\n      case DiagramModelOperation.DeleteShape:\n        eventArgs.args = {\n          shape: args.shape && this._nativeItemToDiagramItem(args.shape)\n        };\n        break;\n\n      case DiagramModelOperation.DeleteConnector:\n        eventArgs.args = {\n          connector: args.connector && this._nativeItemToDiagramItem(args.connector)\n        };\n        break;\n\n      case DiagramModelOperation.ChangeConnection:\n        eventArgs.args = {\n          newShape: args.shape && this._nativeItemToDiagramItem(args.shape),\n          oldShape: args.oldShape && this._nativeItemToDiagramItem(args.oldShape),\n          connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n          connectionPointIndex: args.connectionPointIndex,\n          connectorPosition: args.position === ConnectorPosition.Begin ? \"start\" : \"end\"\n        };\n        break;\n\n      case DiagramModelOperation.ChangeConnectorPoints:\n        eventArgs.args = {\n          connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n          newPoints: args.points && args.points.map(pt => ({\n            x: pt.x,\n            y: pt.y\n          })),\n          oldPoints: args.oldPoints && args.oldPoints.map(pt => ({\n            x: pt.x,\n            y: pt.y\n          }))\n        };\n        break;\n\n      case DiagramModelOperation.BeforeChangeShapeText:\n        eventArgs.args = {\n          shape: args.shape && this._nativeItemToDiagramItem(args.shape)\n        };\n        break;\n\n      case DiagramModelOperation.ChangeShapeText:\n        eventArgs.args = {\n          shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n          text: args.text\n        };\n        break;\n\n      case DiagramModelOperation.BeforeChangeConnectorText:\n        eventArgs.args = {\n          connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n          index: args.index\n        };\n        break;\n\n      case DiagramModelOperation.ChangeConnectorText:\n        eventArgs.args = {\n          connector: args.connector && this._nativeItemToDiagramItem(args.connector),\n          index: args.index,\n          text: args.text\n        };\n        break;\n\n      case DiagramModelOperation.ResizeShape:\n        eventArgs.args = {\n          shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n          newSize: args.size && {\n            width: args.size.width,\n            height: args.size.height\n          },\n          oldSize: args.oldSize && {\n            width: args.oldSize.width,\n            height: args.oldSize.height\n          }\n        };\n        break;\n\n      case DiagramModelOperation.MoveShape:\n        eventArgs.args = {\n          shape: args.shape && this._nativeItemToDiagramItem(args.shape),\n          newPosition: args.position && {\n            x: args.position.x,\n            y: args.position.y\n          },\n          oldPosition: args.oldPosition && {\n            x: args.oldPosition.x,\n            y: args.oldPosition.y\n          }\n        };\n    }\n\n    return eventArgs;\n  }\n\n  _nativeItemToDiagramItem(nativeItem) {\n    var {\n      NativeShape: NativeShape\n    } = getDiagram();\n    var createMethod = nativeItem instanceof NativeShape ? this._nativeShapeToDiagramShape.bind(this) : this._nativeConnectorToDiagramConnector.bind(this);\n    return extend({\n      id: nativeItem.id,\n      key: nativeItem.key,\n      dataItem: void 0\n    }, createMethod(nativeItem));\n  }\n\n  _nativeShapeToDiagramShape(nativeShape) {\n    return {\n      dataItem: this._nodesOption && this._nodesOption.findItem(nativeShape.key),\n      itemType: \"shape\",\n      text: nativeShape.text,\n      type: nativeShape.type,\n      position: {\n        x: nativeShape.position.x,\n        y: nativeShape.position.y\n      },\n      size: {\n        width: nativeShape.size.width,\n        height: nativeShape.size.height\n      },\n      attachedConnectorIds: nativeShape.attachedConnectorIds,\n      containerId: nativeShape.containerId,\n      containerChildItemIds: nativeShape.containerChildItemIds,\n      containerExpanded: nativeShape.containerExpanded\n    };\n  }\n\n  _nativeConnectorToDiagramConnector(nativeConnector) {\n    return {\n      dataItem: this._edgesOption && this._edgesOption.findItem(nativeConnector.key),\n      itemType: \"connector\",\n      texts: nativeConnector.texts,\n      fromKey: nativeConnector.fromKey,\n      toKey: nativeConnector.toKey,\n      fromId: nativeConnector.fromId,\n      fromPointIndex: nativeConnector.fromPointIndex,\n      toId: nativeConnector.toId,\n      toPointIndex: nativeConnector.toPointIndex,\n      points: nativeConnector.points.map(pt => ({\n        x: pt.x,\n        y: pt.y\n      }))\n    };\n  }\n\n  getItemByKey(key) {\n    var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByDataKey(key);\n\n    return nativeItem && this._nativeItemToDiagramItem(nativeItem);\n  }\n\n  getItemById(id) {\n    var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByKey(id);\n\n    return nativeItem && this._nativeItemToDiagramItem(nativeItem);\n  }\n\n  getItems() {\n    return this._diagramInstance.getNativeItems().map(nativeItem => nativeItem && this._nativeItemToDiagramItem(nativeItem));\n  }\n\n  getSelectedItems() {\n    return this._diagramInstance.getNativeSelectedItems().map(nativeItem => nativeItem && this._nativeItemToDiagramItem(nativeItem));\n  }\n\n  setSelectedItems(items) {\n    return this._diagramInstance.setSelectedItems(items.map(item => item.id));\n  }\n\n  scrollToItem(item) {\n    return this._diagramInstance.scrollToItems([item.id]);\n  }\n\n  _invalidateContextMenuCommands() {\n    if (this._contextMenu) {\n      this._contextMenu.option({\n        commands: this.option(\"contextMenu.commands\")\n      });\n    }\n  }\n\n  _invalidateMainToolbarCommands() {\n    if (this._mainToolbar) {\n      this._mainToolbar.option({\n        commands: this.option(\"mainToolbar.commands\")\n      });\n    }\n  }\n\n  _invalidateHistoryToolbarCommands() {\n    if (this._historyToolbar) {\n      this._historyToolbar.option({\n        commands: this.option(\"historyToolbar.commands\")\n      });\n    }\n  }\n\n  _invalidateViewToolbarCommands() {\n    if (this._viewToolbar) {\n      this._viewToolbar.option({\n        commands: this.option(\"viewToolbar.commands\")\n      });\n    }\n  }\n\n  _invalidateToolboxGroups() {\n    if (this._toolbox) {\n      this._toolbox.option({\n        toolboxGroups: this._getToolboxGroups()\n      });\n    }\n  }\n\n  _optionChanged(args) {\n    if (!this.optionsUpdateBar || this.optionsUpdateBar.isUpdateLocked()) {\n      return;\n    }\n\n    this.optionsUpdateBar.beginUpdate();\n\n    try {\n      this._optionChangedCore(args);\n    } finally {\n      this.optionsUpdateBar.endUpdate();\n    }\n  }\n\n  _optionChangedCore(args) {\n    switch (args.name) {\n      case \"readOnly\":\n      case \"disabled\":\n        this._updateReadOnlyState();\n\n        this._invalidate();\n\n        break;\n\n      case \"zoomLevel\":\n        if (\"zoomLevel\" === args.fullName || \"zoomLevel.items\" === args.fullName || \"zoomLevel.value\" === args.fullName) {\n          this._updateZoomLevelState();\n        }\n\n        break;\n\n      case \"autoZoomMode\":\n        this._updateAutoZoomState();\n\n        break;\n\n      case \"simpleView\":\n        this._updateSimpleViewState();\n\n        break;\n\n      case \"useNativeScrolling\":\n        this._invalidate();\n\n        break;\n\n      case \"fullScreen\":\n        this._updateFullscreenState();\n\n        break;\n\n      case \"showGrid\":\n        this._updateShowGridState();\n\n        break;\n\n      case \"snapToGrid\":\n        this._updateSnapToGridState();\n\n        break;\n\n      case \"gridSize\":\n        if (\"gridSize\" === args.fullName || \"gridSize.items\" === args.fullName || \"gridSize.value\" === args.fullName) {\n          this._updateGridSizeState();\n        }\n\n        break;\n\n      case \"viewUnits\":\n        this._updateViewUnitsState();\n\n        break;\n\n      case \"units\":\n        this._updateUnitsState();\n\n        break;\n\n      case \"pageSize\":\n        if (\"pageSize\" === args.fullName || \"pageSize.items\" === args.fullName) {\n          this._updatePageSizeItemsState();\n        }\n\n        if (\"pageSize\" === args.fullName || \"pageSize.width\" === args.fullName || \"pageSize.height\" === args.fullName) {\n          this._updatePageSizeState();\n        }\n\n        break;\n\n      case \"pageOrientation\":\n        this._updatePageOrientationState();\n\n        break;\n\n      case \"pageColor\":\n        this._updatePageColorState();\n\n        break;\n\n      case \"nodes\":\n        if (0 === args.fullName.indexOf(\"nodes.autoLayout\")) {\n          this._refreshDataSources();\n        } else {\n          this._refreshNodesDataSource();\n        }\n\n        break;\n\n      case \"edges\":\n        this._refreshEdgesDataSource();\n\n        break;\n\n      case \"customShapes\":\n        if (args.fullName !== args.name) {\n          this._updateAllCustomShapes();\n        } else {\n          this._updateCustomShapes(args.value, args.previousValue);\n        }\n\n        this._invalidate();\n\n        break;\n\n      case \"contextMenu\":\n        if (\"contextMenu.commands\" === args.fullName) {\n          this._invalidateContextMenuCommands();\n        } else {\n          this._invalidate();\n        }\n\n        break;\n\n      case \"contextToolbox\":\n      case \"propertiesPanel\":\n        this._invalidate();\n\n        break;\n\n      case \"toolbox\":\n        if (\"toolbox.groups\" === args.fullName) {\n          this._invalidateToolboxGroups();\n        } else {\n          this._invalidate();\n        }\n\n        break;\n\n      case \"mainToolbar\":\n        if (\"mainToolbar.commands\" === args.fullName) {\n          this._invalidateMainToolbarCommands();\n        } else {\n          this._invalidate();\n        }\n\n        break;\n\n      case \"historyToolbar\":\n        if (\"historyToolbar.commands\" === args.fullName) {\n          this._invalidateHistoryToolbarCommands();\n        } else {\n          this._invalidate();\n        }\n\n        break;\n\n      case \"viewToolbar\":\n        if (\"viewToolbar.commands\" === args.fullName) {\n          this._invalidateViewToolbarCommands();\n        } else {\n          this._invalidate();\n        }\n\n        break;\n\n      case \"onItemClick\":\n        this._createItemClickAction();\n\n        break;\n\n      case \"onItemDblClick\":\n        this._createItemDblClickAction();\n\n        break;\n\n      case \"onSelectionChanged\":\n        this._createSelectionChangedAction();\n\n        break;\n\n      case \"onRequestEditOperation\":\n        this._createRequestEditOperationAction();\n\n        break;\n\n      case \"onRequestLayoutUpdate\":\n        this._createRequestLayoutUpdateAction();\n\n        break;\n\n      case \"onCustomCommand\":\n        this._createCustomCommand();\n\n        break;\n\n      case \"defaultItemProperties\":\n        this._updateDefaultItemProperties();\n\n        break;\n\n      case \"editing\":\n        this._updateEditingSettings();\n\n        break;\n\n      case \"export\":\n        this._toolbars.forEach(toolbar => {\n          toolbar.option(\"export\", this.option(\"export\"));\n        });\n\n        if (this._contextMenu) {\n          this._contextMenu.option(\"export\", this.option(\"export\"));\n        }\n\n        break;\n\n      case \"hasChanges\":\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n}\n\nregisterComponent(\"dxDiagram\", Diagram);\nexport default Diagram;","map":{"version":3,"names":["getOuterWidth","getHeight","getOuterHeight","$","Widget","LoadIndicator","registerComponent","extend","isFunction","isDefined","compileSetter","compileGetter","positionUtils","getDiagram","getWindow","hasWindow","getPublicElement","eventsEngine","addNamespace","messageLocalization","numberLocalization","zIndexPool","Overlay","DiagramToolbar","DiagramMainToolbar","DiagramHistoryToolbar","DiagramViewToolbar","DiagramPropertiesToolbar","diagramContextMenuModule","DiagramContextToolbox","DiagramDialog","DiagramScrollView","DiagramToolboxManager","DiagramToolbox","DiagramPropertiesPanel","DiagramOptionsUpdateBar","DiagramDialogManager","DiagramCommandsManager","NodesOption","EdgesOption","DIAGRAM_CLASS","DIAGRAM_FULLSCREEN_CLASS","DIAGRAM_TOOLBAR_WRAPPER_CLASS","DIAGRAM_CONTENT_WRAPPER_CLASS","DIAGRAM_CONTENT_CLASS","DIAGRAM_SCROLL_VIEW_CLASS","DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS","DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS","DIAGRAM_LOADING_INDICATOR_CLASS","DIAGRAM_FLOATING_PANEL_OFFSET","DIAGRAM_DEFAULT_UNIT","DIAGRAM_DEFAULT_ZOOMLEVEL","DIAGRAM_DEFAULT_AUTOZOOM_MODE","DIAGRAM_DEFAULT_PAGE_ORIENTATION","DIAGRAM_DEFAULT_PAGE_COLOR","DIAGRAM_MAX_MOBILE_WINDOW_WIDTH","DIAGRAM_TOOLBOX_SHAPE_SPACING","DIAGRAM_TOOLBOX_SHAPES_PER_ROW","DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING","DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW","DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH","DIAGRAM_NAMESPACE","FULLSCREEN_CHANGE_EVENT_NAME","IE_FULLSCREEN_CHANGE_EVENT_NAME","WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME","MOZ_FULLSCREEN_CHANGE_EVENT_NAME","Diagram","_init","_updateDiagramLockCount","toggleFullscreenLock","_toolbars","_initDiagram","_createCustomCommand","_initMarkup","_isMobileScreenSize","isServerSide","$element","addClass","_mainToolbar","option","_renderMainToolbar","$contentWrapper","appendTo","_historyToolbar","_historyToolbarResizeCallback","_isHistoryToolbarVisible","_renderHistoryToolbar","_propertiesToolbar","_propertiesToolbarResizeCallback","_isPropertiesPanelEnabled","_renderPropertiesToolbar","_viewToolbar","_viewToolbarResizeCallback","_renderViewToolbar","_toolbox","_toolboxResizeCallback","_isToolboxEnabled","_renderToolbox","_propertiesPanel","_propertiesPanelResizeCallback","_renderPropertiesPanel","_$content","_contextMenu","_diagramInstance","settings","contextMenuEnabled","_renderContextMenu","_contextToolbox","_renderContextToolbox","_renderDialog","$scrollViewWrapper","_createComponent","useNativeScrolling","onCreateDiagram","e","createDocument","$parent","scrollView","_setCustomCommandChecked","SHOW_PROPERTIES_PANEL_COMMAND_NAME","_isPropertiesPanelVisible","SHOW_TOOLBOX_COMMAND_NAME","_isToolboxVisible","_createOptionsUpdateBar","_dimensionChanged","_processDiagramResize","_visibilityChanged","visible","_bindDiagramData","repaint","onDimensionChanged","call","isMobileScreenSize","_captureFocus","captureFocus","_captureFocusOnTimeout","_captureFocusTimeout","setTimeout","_killCaptureFocusTimeout","clearTimeout","notifyBarCommandExecuted","_registerToolbar","component","_registerBar","push","bar","onChanged","add","registerBar","_getExcludeCommands","excludeCommands","_getToolbarBaseOptions","onContentReady","_ref","onSubMenuVisibilityChanging","_ref2","updateBarItemsState","onPointerUp","_onPanelPointerUp","bind","export","onInternalCommand","_onInternalCommand","onCustomCommand","_onCustomCommand","isMobileView","command","toggle","_customCommandAction","name","$toolbarWrapper","commands","skipAdjustSize","isReadOnlyMode","$container","locateInMenu","_updateHistoryToolbarPosition","setup","my","at","of","parent","offset","$toolBox","bounds","_getToolboxBounds","isVisible","container","height","offsetParent","offsetX","offsetY","showSearch","toolboxGroups","_getToolboxGroups","toolboxWidth","onShapeCategoryRendered","createToolbox","displayMode","shapes","category","shapeIconSpacing","shapeIconCountInRow","shapeIconAttributes","dataToggle","onFilterChanged","applyToolboxFilter","text","filteringToolboxes","onVisibilityChanging","hide","_historyToolbarZIndex","create","baseZIndex","css","onVisibilityChanged","_textInputStarted","remove","_popup","prevIsMobileView","updateMaxHeight","result","_getViewToolbarYOffset","_updateViewToolbarPosition","buttonStylingMode","buttonType","_updatePropertiesToolbarPosition","$propertiesPanel","propertyTabs","onCreateToolbar","toolbar","editorStylingMode","_updatePropertiesPanelGroupBars","onSelectedGroupChanged","_ref3","getActiveToolbars","forEach","$contextMenu","DiagramContextMenuWrapper","_ref4","_ref5","onItemClick","itemData","_onBeforeCommandExecuted","$contextToolbox","onShown","$toolboxContainer","isTextGroup","group","filter","g","createContextToolbox","shapeType","callback","checked","tb","setCommandChecked","dialogParameters","getDialogParameters","_showDialog","$dialogElement","_dialogInstance","onGetContent","getCommand","title","_show","_showLoadingIndicator","_loadingIndicator","append","_hideLoadingIndicator","DiagramControl","_raiseDataChangeAction","onEdgeInserted","_raiseEdgeInsertedAction","onEdgeUpdated","_raiseEdgeUpdatedAction","onEdgeRemoved","_raiseEdgeRemovedAction","onNodeInserted","_raiseNodeInsertedAction","onNodeUpdated","_raiseNodeUpdatedAction","onNodeRemoved","_raiseNodeRemovedAction","onToolboxDragStart","_raiseToolboxDragStart","onToolboxDragEnd","_raiseToolboxDragEnd","onTextInputStart","_raiseTextInputStart","onTextInputEnd","_raiseTextInputEnd","onToggleFullscreen","_onToggleFullScreen","onShowContextMenu","_onShowContextMenu","onHideContextMenu","_onHideContextMenu","onShowContextToolbox","_onShowContextToolbox","onHideContextToolbox","_onHideContextToolbox","onNativeAction","notifyItemClick","_raiseItemClickAction","notifyItemDblClick","_raiseItemDblClickAction","notifySelectionChanged","_raiseSelectionChanged","onRequestOperation","_raiseRequestEditOperation","_updateEventSubscriptionMethods","_updateDefaultItemProperties","_updateEditingSettings","_updateShapeTexts","_updateUnitItems","_updateFormatUnitsMethod","_updateUnitsState","_updateReadOnlyState","_updatePageSizeItemsState","_updatePageSizeState","_updatePageOrientationState","_updatePageColorState","_updateViewUnitsState","_updateShowGridState","_updateSnapToGridState","_updateGridSizeState","_updateZoomLevelState","_updateSimpleViewState","_updateAutoZoomState","window","self","top","_updateFullscreenState","initMeasurer","_updateCustomShapes","_getCustomShapes","_refreshDataSources","optionsUpdateBar","_deleteOptionsUpdateBar","_clean","cleanMarkup","element","empty","_dispose","dispose","_executeDiagramCommand","parameter","execute","getNodeDataSource","_nodesOption","getDataSource","getEdgeDataSource","_edgesOption","_beginUpdateDiagram","_refreshNodesDataSource","_refreshEdgesDataSource","_endUpdateDiagram","_disposeDataSource","_refreshDataSource","_getDiagramData","value","DiagramCommand","Export","data","_setDiagramData","keepExistingItems","Import","_onDataSourceChanged","_getChangesKeys","changes","map","change","internalKey","key","_createOptionGetter","optionName","expr","_onRequestUpdateLayout","_requestLayoutUpdateAction","_createRequestLayoutUpdateAction","eventArgs","allowed","_createOptionSetter","_isBindingMode","ConnectorLineOption","ConnectorLineEnding","lineOptionGetter","lineOptionSetter","startLineEndingGetter","startLineEndingSetter","endLineEndingGetter","endLineEndingSetter","containerChildrenGetter","containerChildrenSetter","nodeDataSource","getItems","edgeDataSource","nodeDataImporter","getKey","setKey","getCustomData","setCustomData","getLocked","setLocked","getStyle","setStyle","getStyleText","setStyleText","getZIndex","setZIndex","getType","setType","getText","setText","getImage","setImage","getLeft","setLeft","getTop","setTop","getWidth","setWidth","setHeight","getParentKey","setParentKey","setItems","getChildren","setChildren","getContainerKey","setContainerKey","edgeDataImporter","getFrom","setFrom","getFromPointIndex","setFromPointIndex","getTo","setTo","getToPointIndex","setToPointIndex","getPoints","setPoints","getLineOption","obj","lineType","_getConnectorLineOption","setLineOption","Straight","Orthogonal","getStartLineEnding","lineEnd","_getConnectorLineEnding","setStartLineEnding","Arrow","OutlinedTriangle","FilledTriangle","None","getEndLineEnding","setEndLineEnding","layoutParameters","_getDataBindingLayoutParameters","BindDocument","_reloadContentByChanges","isExternalChanges","keys","applyLayout","_reloadContent","itemKeys","reloadContent","DataLayoutType","DataLayoutOrientation","layoutParametersOption","layoutType","type","parameters","_hasNodePositionExprs","Tree","Sugiyama","orientation","Vertical","Horizontal","skipPointIndices","autoSizeEnabled","_getAutoZoomValue","AutoZoomMode","FitContent","FitToWidth","Disabled","hasItems","Math","max","getGroups","_updateAllCustomShapes","removeAllCustomShapes","customShapes","prevCustomShapes","Array","isArray","removeCustomShapes","s","addCustomShapes","templateOption","template","_getTemplate","toolboxTemplateOption","toolboxTemplate","baseType","svgUrl","backgroundImageUrl","svgToolboxUrl","backgroundImageToolboxUrl","svgLeft","backgroundImageLeft","svgTop","backgroundImageTop","svgWidth","backgroundImageWidth","svgHeight","backgroundImageHeight","defaultWidth","defaultHeight","toolboxWidthToHeightRatio","minWidth","minHeight","maxWidth","maxHeight","allowResize","defaultText","allowEditText","textLeft","textTop","textWidth","textHeight","defaultImageUrl","allowEditImage","imageLeft","imageTop","imageWidth","imageHeight","connectionPoints","pt","x","y","createTemplate","item","render","model","_nativeItemToDiagramItem","createToolboxTemplate","destroyTemplate","templateLeft","templateTop","templateWidth","templateHeight","keepRatioOnAutoSize","_getViewport","$viewPort","closest","length","fullScreen","_changeNativeFullscreen","_prevParent","_prevFullScreenZIndex","_fullScreenZIndex","toggleClass","setModeOn","_inNativeFullscreen","_subscribeFullscreenNativeChanged","_unsubscribeFullscreenNativeChanged","_setNativeFullscreen","on","document","body","requestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullscreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","msFullscreenElement","webkitFullscreenElement","isInFullscreen","webkitIsFullscreen","handler","_onNativeFullscreenChangeHandler","off","_executeDiagramFullscreenCommand","fullscreen","Fullscreen","selection","_hide","side","_getDiagramUnitValue","DiagramUnit","In","Cm","Px","readOnly","ToggleReadOnly","_updateZoomLevelItemsState","zoomLevel","ZoomLevel","_zoomLevel","_DiagramCommand","zoomLevelItems","ZoomLevelItems","SwitchAutoZoom","ToggleSimpleView","ShowGrid","SnapToGrid","_updateGridSizeItemsState","gridSize","GridSize","_gridSize","_DiagramCommand2","gridSizeItems","GridSizeItems","DiagramLocalizationService","items","_getUnitItems","_unitItems","unitItems","format","formatUnit","ViewUnits","Units","pageSize","width","PageSize","pageSizeItems","PageSizeItems","PageLandscape","PageColor","texts","_getShapeTexts","_shapeTexts","shapeTexts","ShapeTypes","Text","Rectangle","Ellipse","Cross","Triangle","Diamond","Heart","Pentagon","Hexagon","Octagon","Star","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","ArrowUpDown","ArrowLeftRight","Process","Decision","Terminator","PredefinedProcess","Document","MultipleDocuments","ManualInput","Preparation","Data","Database","HardDisk","InternalStorage","PaperTape","ManualOperation","Delay","StoredData","Display","Merge","Connector","Or","SummingJunction","Container","VerticalContainer","HorizontalContainer","Card","CardWithImageOnLeft","CardWithImageOnTop","CardWithImageOnRight","RenderHelper","addEventListener","eventName","removeEventListener","setInitialStyleProperties","setInitialTextStyleProperties","setInitialConnectorProperties","lineOption","startLineEnding","endLineEnding","applyShapeSizeSettings","shapeMinWidth","shapeMaxWidth","shapeMinHeight","shapeMaxHeight","applyOperationSettings","addShape","addShapeFromToolbox","deleteShape","deleteConnector","changeConnection","changeConnectorPoints","changeShapeText","changeConnectorText","resizeShape","moveShape","fitToContent","FitToScreen","fitToWidth","focus","exportTo","_getDiagramExportToCommand","ExportPng","ExportJpg","ExportSvg","import","updateExistingItemsOnly","updateToolbox","refreshToolbox","updateTooltips","updateFilter","_getDefaultOptions","simpleView","autoZoomMode","showGrid","snapToGrid","units","viewUnits","pageOrientation","pageColor","hasChanges","nodes","dataSource","keyExpr","customDataExpr","lockedExpr","styleExpr","textStyleExpr","zIndexExpr","typeExpr","textExpr","imageUrlExpr","parentKeyExpr","itemsExpr","leftExpr","topExpr","widthExpr","heightExpr","containerKeyExpr","containerChildrenExpr","autoLayout","edges","fromExpr","fromPointIndexExpr","toExpr","toPointIndexExpr","pointsExpr","lineTypeExpr","fromLineEndExpr","toLineEndExpr","toolbox","visibility","shapeIconsPerRow","mainToolbar","historyToolbar","viewToolbar","contextMenu","enabled","contextToolbox","propertiesPanel","defaultItemProperties","connectorLineType","connectorLineStart","connectorLineEnd","editing","allowAddShape","allowDeleteShape","allowDeleteConnector","allowChangeConnection","allowChangeConnectorPoints","allowChangeShapeText","allowChangeConnectorText","allowResizeShape","allowMoveShape","fileName","proxyUrl","onItemDblClick","onSelectionChanged","onRequestEditOperation","onRequestLayoutUpdate","_initialized","errorCallback","insert","update","_toolboxDragHidden","show","_propertiesPanelTextInputHidden","_toolboxTextInputHidden","_createItemClickAction","_itemClickAction","_createActionByOption","_createItemDblClickAction","_itemDblClickAction","_createSelectionChangedAction","_selectionChangedAction","_createRequestEditOperationAction","_requestEditOperationAction","nativeItem","nativeItems","operation","args","_getRequestEditOperationEventArgs","_getModelOperation","DiagramModelOperation","AddShape","AddShapeFromToolbox","DeleteShape","DeleteConnector","ChangeConnection","ChangeConnectorPoints","BeforeChangeShapeText","ChangeShapeText","BeforeChangeConnectorText","ChangeConnectorText","ResizeShape","MoveShape","ConnectorPosition","updateUI","reason","shape","position","connector","newShape","oldShape","connectionPointIndex","connectorPosition","Begin","newPoints","points","oldPoints","index","newSize","size","oldSize","newPosition","oldPosition","NativeShape","createMethod","_nativeShapeToDiagramShape","_nativeConnectorToDiagramConnector","id","dataItem","nativeShape","findItem","itemType","attachedConnectorIds","containerId","containerChildItemIds","containerExpanded","nativeConnector","fromKey","toKey","fromId","fromPointIndex","toId","toPointIndex","getItemByKey","getNativeItemByDataKey","getItemById","getNativeItemByKey","getNativeItems","getSelectedItems","getNativeSelectedItems","setSelectedItems","scrollToItem","scrollToItems","_invalidateContextMenuCommands","_invalidateMainToolbarCommands","_invalidateHistoryToolbarCommands","_invalidateViewToolbarCommands","_invalidateToolboxGroups","_optionChanged","isUpdateLocked","beginUpdate","_optionChangedCore","endUpdate","_invalidate","fullName","indexOf","previousValue"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/diagram/ui.diagram.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileSetter,\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    getDiagram\r\n} from \"./diagram.importer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport numberLocalization from \"../../localization/number\";\r\nimport * as zIndexPool from \"../overlay/z_index\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport DiagramToolbar from \"./ui.diagram.toolbar\";\r\nimport DiagramMainToolbar from \"./ui.diagram.main_toolbar\";\r\nimport DiagramHistoryToolbar from \"./ui.diagram.history_toolbar\";\r\nimport DiagramViewToolbar from \"./ui.diagram.view_toolbar\";\r\nimport DiagramPropertiesToolbar from \"./ui.diagram.properties_toolbar\";\r\nimport diagramContextMenuModule from \"./ui.diagram.context_menu\";\r\nimport DiagramContextToolbox from \"./ui.diagram.context_toolbox\";\r\nimport DiagramDialog from \"./ui.diagram.dialogs\";\r\nimport DiagramScrollView from \"./ui.diagram.scroll_view\";\r\nimport DiagramToolboxManager from \"./diagram.toolbox_manager\";\r\nimport DiagramToolbox from \"./ui.diagram.toolbox\";\r\nimport DiagramPropertiesPanel from \"./ui.diagram.properties_panel\";\r\nimport DiagramOptionsUpdateBar from \"./diagram.options_update\";\r\nimport DiagramDialogManager from \"./ui.diagram.dialog_manager\";\r\nimport DiagramCommandsManager from \"./diagram.commands_manager\";\r\nimport NodesOption from \"./diagram.nodes_option\";\r\nimport EdgesOption from \"./diagram.edges_option\";\r\nvar DIAGRAM_CLASS = \"dx-diagram\";\r\nvar DIAGRAM_FULLSCREEN_CLASS = \"dx-diagram-fullscreen\";\r\nvar DIAGRAM_TOOLBAR_WRAPPER_CLASS = DIAGRAM_CLASS + \"-toolbar-wrapper\";\r\nvar DIAGRAM_CONTENT_WRAPPER_CLASS = DIAGRAM_CLASS + \"-content-wrapper\";\r\nvar DIAGRAM_CONTENT_CLASS = DIAGRAM_CLASS + \"-content\";\r\nvar DIAGRAM_SCROLL_VIEW_CLASS = DIAGRAM_CLASS + \"-scroll-view\";\r\nvar DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-floating-toolbar-container\";\r\nvar DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS = DIAGRAM_CLASS + \"-properties-panel-toolbar-container\";\r\nvar DIAGRAM_LOADING_INDICATOR_CLASS = DIAGRAM_CLASS + \"-loading-indicator\";\r\nvar DIAGRAM_FLOATING_PANEL_OFFSET = 12;\r\nvar DIAGRAM_DEFAULT_UNIT = \"in\";\r\nvar DIAGRAM_DEFAULT_ZOOMLEVEL = 1;\r\nvar DIAGRAM_DEFAULT_AUTOZOOM_MODE = \"disabled\";\r\nvar DIAGRAM_DEFAULT_PAGE_ORIENTATION = \"portrait\";\r\nvar DIAGRAM_DEFAULT_PAGE_COLOR = \"#ffffff\";\r\nvar DIAGRAM_MAX_MOBILE_WINDOW_WIDTH = 576;\r\nvar DIAGRAM_TOOLBOX_SHAPE_SPACING = 12;\r\nvar DIAGRAM_TOOLBOX_SHAPES_PER_ROW = 3;\r\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING = 12;\r\nvar DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW = 4;\r\nvar DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH = 152;\r\nvar DIAGRAM_NAMESPACE = \"dxDiagramEvent\";\r\nvar FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"fullscreenchange\", DIAGRAM_NAMESPACE);\r\nvar IE_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"msfullscreenchange\", DIAGRAM_NAMESPACE);\r\nvar WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"webkitfullscreenchange\", DIAGRAM_NAMESPACE);\r\nvar MOZ_FULLSCREEN_CHANGE_EVENT_NAME = addNamespace(\"mozfullscreenchange\", DIAGRAM_NAMESPACE);\r\nclass Diagram extends Widget {\r\n    _init() {\r\n        this._updateDiagramLockCount = 0;\r\n        this.toggleFullscreenLock = 0;\r\n        this._toolbars = [];\r\n        super._init();\r\n        this._initDiagram();\r\n        this._createCustomCommand()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._toolbars = [];\r\n        delete this._isMobileScreenSize;\r\n        var isServerSide = !hasWindow();\r\n        this.$element().addClass(DIAGRAM_CLASS);\r\n        delete this._mainToolbar;\r\n        if (this.option(\"mainToolbar.visible\")) {\r\n            this._renderMainToolbar()\r\n        }\r\n        var $contentWrapper = $(\"<div>\").addClass(DIAGRAM_CONTENT_WRAPPER_CLASS).appendTo(this.$element());\r\n        delete this._historyToolbar;\r\n        delete this._historyToolbarResizeCallback;\r\n        if (this._isHistoryToolbarVisible()) {\r\n            this._renderHistoryToolbar($contentWrapper)\r\n        }\r\n        delete this._propertiesToolbar;\r\n        delete this._propertiesToolbarResizeCallback;\r\n        if (this._isPropertiesPanelEnabled()) {\r\n            this._renderPropertiesToolbar($contentWrapper)\r\n        }\r\n        delete this._viewToolbar;\r\n        delete this._viewToolbarResizeCallback;\r\n        if (this.option(\"viewToolbar.visible\")) {\r\n            this._renderViewToolbar($contentWrapper)\r\n        }\r\n        delete this._toolbox;\r\n        delete this._toolboxResizeCallback;\r\n        if (this._isToolboxEnabled()) {\r\n            this._renderToolbox($contentWrapper)\r\n        }\r\n        delete this._propertiesPanel;\r\n        delete this._propertiesPanelResizeCallback;\r\n        if (this._isPropertiesPanelEnabled()) {\r\n            this._renderPropertiesPanel($contentWrapper)\r\n        }\r\n        this._$content = $(\"<div>\").addClass(DIAGRAM_CONTENT_CLASS).appendTo($contentWrapper);\r\n        delete this._contextMenu;\r\n        this._diagramInstance.settings.contextMenuEnabled = this.option(\"contextMenu.enabled\");\r\n        if (this._diagramInstance.settings.contextMenuEnabled) {\r\n            this._renderContextMenu($contentWrapper)\r\n        }\r\n        delete this._contextToolbox;\r\n        if (this.option(\"contextToolbox.enabled\")) {\r\n            this._renderContextToolbox($contentWrapper)\r\n        }\r\n        this._renderDialog($contentWrapper);\r\n        if (!isServerSide) {\r\n            var $scrollViewWrapper = $(\"<div>\").addClass(DIAGRAM_SCROLL_VIEW_CLASS).appendTo(this._$content);\r\n            this._createComponent($scrollViewWrapper, DiagramScrollView, {\r\n                useNativeScrolling: this.option(\"useNativeScrolling\"),\r\n                onCreateDiagram: e => {\r\n                    this._diagramInstance.createDocument(e.$parent[0], e.scrollView, $contentWrapper[0])\r\n                }\r\n            })\r\n        }\r\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, this._isPropertiesPanelVisible());\r\n        this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, this._isToolboxVisible());\r\n        this._createOptionsUpdateBar()\r\n    }\r\n    _dimensionChanged() {\r\n        this._isMobileScreenSize = void 0;\r\n        this._processDiagramResize()\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            this._bindDiagramData();\r\n            this.repaint()\r\n        }\r\n    }\r\n    _processDiagramResize() {\r\n        this._diagramInstance.onDimensionChanged();\r\n        if (this._historyToolbarResizeCallback) {\r\n            this._historyToolbarResizeCallback.call(this)\r\n        }\r\n        if (this._propertiesToolbarResizeCallback) {\r\n            this._propertiesToolbarResizeCallback.call(this)\r\n        }\r\n        if (this._propertiesPanelResizeCallback) {\r\n            this._propertiesPanelResizeCallback.call(this)\r\n        }\r\n        if (this._viewToolbarResizeCallback) {\r\n            this._viewToolbarResizeCallback.call(this)\r\n        }\r\n        if (this._toolboxResizeCallback) {\r\n            this._toolboxResizeCallback.call(this)\r\n        }\r\n    }\r\n    isMobileScreenSize() {\r\n        if (void 0 === this._isMobileScreenSize) {\r\n            this._isMobileScreenSize = hasWindow() && getOuterWidth(this.$element()) < DIAGRAM_MAX_MOBILE_WINDOW_WIDTH\r\n        }\r\n        return this._isMobileScreenSize\r\n    }\r\n    _captureFocus() {\r\n        if (this._diagramInstance) {\r\n            this._diagramInstance.captureFocus()\r\n        }\r\n    }\r\n    _captureFocusOnTimeout() {\r\n        this._captureFocusTimeout = setTimeout(() => {\r\n            this._captureFocus();\r\n            delete this._captureFocusTimeout\r\n        }, 100)\r\n    }\r\n    _killCaptureFocusTimeout() {\r\n        if (this._captureFocusTimeout) {\r\n            clearTimeout(this._captureFocusTimeout);\r\n            delete this._captureFocusTimeout\r\n        }\r\n    }\r\n    notifyBarCommandExecuted() {\r\n        this._captureFocusOnTimeout()\r\n    }\r\n    _registerToolbar(component) {\r\n        this._registerBar(component);\r\n        this._toolbars.push(component)\r\n    }\r\n    _registerBar(component) {\r\n        component.bar.onChanged.add(this);\r\n        this._diagramInstance.registerBar(component.bar)\r\n    }\r\n    _getExcludeCommands() {\r\n        var excludeCommands = [];\r\n        if (!this._isToolboxEnabled()) {\r\n            excludeCommands.push(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME)\r\n        }\r\n        if (!this._isPropertiesPanelEnabled()) {\r\n            excludeCommands.push(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME)\r\n        }\r\n        return excludeCommands\r\n    }\r\n    _getToolbarBaseOptions() {\r\n        return {\r\n            onContentReady: _ref => {\r\n                var {\r\n                    component: component\r\n                } = _ref;\r\n                return this._registerToolbar(component)\r\n            },\r\n            onSubMenuVisibilityChanging: _ref2 => {\r\n                var {\r\n                    component: component\r\n                } = _ref2;\r\n                return this._diagramInstance.updateBarItemsState(component.bar)\r\n            },\r\n            onPointerUp: this._onPanelPointerUp.bind(this),\r\n            export: this.option(\"export\"),\r\n            excludeCommands: this._getExcludeCommands(),\r\n            onInternalCommand: this._onInternalCommand.bind(this),\r\n            onCustomCommand: this._onCustomCommand.bind(this),\r\n            isMobileView: this.isMobileScreenSize()\r\n        }\r\n    }\r\n    _onInternalCommand(e) {\r\n        switch (e.command) {\r\n            case DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME:\r\n                if (this._toolbox) {\r\n                    this._toolbox.toggle()\r\n                }\r\n                break;\r\n            case DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME:\r\n                if (this._propertiesPanel) {\r\n                    this._propertiesPanel.toggle()\r\n                }\r\n        }\r\n    }\r\n    _onCustomCommand(e) {\r\n        this._customCommandAction({\r\n            name: e.name\r\n        })\r\n    }\r\n    _renderMainToolbar() {\r\n        var $toolbarWrapper = $(\"<div>\").addClass(DIAGRAM_TOOLBAR_WRAPPER_CLASS).appendTo(this.$element());\r\n        this._mainToolbar = this._createComponent($toolbarWrapper, DiagramMainToolbar, extend(this._getToolbarBaseOptions(), {\r\n            commands: this.option(\"mainToolbar.commands\"),\r\n            skipAdjustSize: true\r\n        }))\r\n    }\r\n    _isHistoryToolbarVisible() {\r\n        return this.option(\"historyToolbar.visible\") && !this.isReadOnlyMode()\r\n    }\r\n    _renderHistoryToolbar($parent) {\r\n        var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\r\n        this._historyToolbar = this._createComponent($container, DiagramHistoryToolbar, extend(this._getToolbarBaseOptions(), {\r\n            commands: this.option(\"historyToolbar.commands\"),\r\n            locateInMenu: \"never\"\r\n        }));\r\n        this._updateHistoryToolbarPosition();\r\n        this._historyToolbarResizeCallback = () => {\r\n            this._historyToolbar.option(\"isMobileView\", this.isMobileScreenSize())\r\n        }\r\n    }\r\n    _updateHistoryToolbarPosition() {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        positionUtils.setup(this._historyToolbar.$element(), {\r\n            my: \"left top\",\r\n            at: \"left top\",\r\n            of: this._historyToolbar.$element().parent(),\r\n            offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" \" + DIAGRAM_FLOATING_PANEL_OFFSET\r\n        })\r\n    }\r\n    _isToolboxEnabled() {\r\n        return \"disabled\" !== this.option(\"toolbox.visibility\") && !this.isReadOnlyMode()\r\n    }\r\n    _isToolboxVisible() {\r\n        return \"visible\" === this.option(\"toolbox.visibility\") || \"auto\" === this.option(\"toolbox.visibility\") && !this.isMobileScreenSize()\r\n    }\r\n    _renderToolbox($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $toolBox = $(\"<div>\").appendTo($parent);\r\n        var bounds = this._getToolboxBounds($parent, isServerSide);\r\n        this._toolbox = this._createComponent($toolBox, DiagramToolbox, {\r\n            isMobileView: this.isMobileScreenSize(),\r\n            isVisible: this._isToolboxVisible(),\r\n            container: this.$element(),\r\n            height: bounds.height,\r\n            offsetParent: $parent,\r\n            offsetX: bounds.offsetX,\r\n            offsetY: bounds.offsetY,\r\n            showSearch: this.option(\"toolbox.showSearch\"),\r\n            toolboxGroups: this._getToolboxGroups(),\r\n            toolboxWidth: this.option(\"toolbox.width\"),\r\n            onShapeCategoryRendered: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._diagramInstance.createToolbox(e.$element[0], \"texts\" === e.displayMode, e.shapes || e.category, {\r\n                    shapeIconSpacing: DIAGRAM_TOOLBOX_SHAPE_SPACING,\r\n                    shapeIconCountInRow: this.option(\"toolbox.shapeIconsPerRow\"),\r\n                    shapeIconAttributes: {\r\n                        \"data-toggle\": e.dataToggle\r\n                    }\r\n                })\r\n            },\r\n            onFilterChanged: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._diagramInstance.applyToolboxFilter(e.text, e.filteringToolboxes)\r\n            },\r\n            onVisibilityChanging: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, e.visible);\r\n                if (this._propertiesPanel) {\r\n                    if (e.visible && this.isMobileScreenSize()) {\r\n                        this._propertiesPanel.hide()\r\n                    }\r\n                }\r\n                if (this._historyToolbar) {\r\n                    if (e.visible && this.isMobileScreenSize()) {\r\n                        this._historyToolbarZIndex = zIndexPool.create(Overlay.baseZIndex());\r\n                        this._historyToolbar.$element().css(\"zIndex\", this._historyToolbarZIndex);\r\n                        this._historyToolbar.$element().css(\"boxShadow\", \"none\")\r\n                    }\r\n                }\r\n                if (this._viewToolbar) {\r\n                    this._viewToolbar.$element().css(\"opacity\", e.visible && this.isMobileScreenSize() ? \"0\" : \"1\");\r\n                    this._viewToolbar.$element().css(\"pointerEvents\", e.visible && this.isMobileScreenSize() ? \"none\" : \"\")\r\n                }\r\n            },\r\n            onVisibilityChanged: e => {\r\n                if (!e.visible && !this._textInputStarted) {\r\n                    this._captureFocus()\r\n                }\r\n                if (!isServerSide) {\r\n                    if (this._historyToolbar) {\r\n                        if (!e.visible && this.isMobileScreenSize() && this._historyToolbarZIndex) {\r\n                            zIndexPool.remove(this._historyToolbarZIndex);\r\n                            this._historyToolbar.$element().css(\"zIndex\", \"\");\r\n                            this._historyToolbar.$element().css(\"boxShadow\", \"\");\r\n                            this._historyToolbarZIndex = void 0\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            onPointerUp: this._onPanelPointerUp.bind(this)\r\n        });\r\n        this._toolbox._popup.option(\"propagateOutsideClick\", !this.option(\"fullScreen\"));\r\n        this._toolboxResizeCallback = () => {\r\n            var bounds = this._getToolboxBounds($parent, isServerSide);\r\n            this._toolbox.option(\"height\", bounds.height);\r\n            var prevIsMobileView = this._toolbox.option(\"isMobileView\");\r\n            if (prevIsMobileView !== this.isMobileScreenSize()) {\r\n                this._toolbox.option({\r\n                    isMobileView: this.isMobileScreenSize(),\r\n                    isVisible: this._isToolboxVisible()\r\n                });\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_TOOLBOX_COMMAND_NAME, this._isToolboxVisible())\r\n            }\r\n            this._toolbox.updateMaxHeight()\r\n        }\r\n    }\r\n    _getToolboxBounds($parent, isServerSide) {\r\n        var result = {\r\n            offsetX: DIAGRAM_FLOATING_PANEL_OFFSET,\r\n            offsetY: DIAGRAM_FLOATING_PANEL_OFFSET,\r\n            height: !isServerSide ? getHeight($parent) - 2 * DIAGRAM_FLOATING_PANEL_OFFSET : 0\r\n        };\r\n        if (this._historyToolbar && !isServerSide) {\r\n            result.offsetY += getOuterHeight(this._historyToolbar.$element()) + DIAGRAM_FLOATING_PANEL_OFFSET;\r\n            result.height -= getOuterHeight(this._historyToolbar.$element()) + DIAGRAM_FLOATING_PANEL_OFFSET\r\n        }\r\n        if (this._viewToolbar && !isServerSide) {\r\n            result.height -= getOuterHeight(this._viewToolbar.$element()) + this._getViewToolbarYOffset(isServerSide)\r\n        }\r\n        return result\r\n    }\r\n    _renderViewToolbar($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\r\n        this._viewToolbar = this._createComponent($container, DiagramViewToolbar, extend(this._getToolbarBaseOptions(), {\r\n            commands: this.option(\"viewToolbar.commands\"),\r\n            locateInMenu: \"never\"\r\n        }));\r\n        this._updateViewToolbarPosition($container, $parent, isServerSide);\r\n        this._viewToolbarResizeCallback = () => {\r\n            this._updateViewToolbarPosition($container, $parent, isServerSide)\r\n        }\r\n    }\r\n    _getViewToolbarYOffset(isServerSide) {\r\n        if (isServerSide) {\r\n            return\r\n        }\r\n        var result = DIAGRAM_FLOATING_PANEL_OFFSET;\r\n        if (this._viewToolbar && this._propertiesToolbar) {\r\n            result += (getOuterHeight(this._propertiesToolbar.$element()) - getOuterHeight(this._viewToolbar.$element())) / 2\r\n        }\r\n        return result\r\n    }\r\n    _updateViewToolbarPosition($container, $parent, isServerSide) {\r\n        if (isServerSide) {\r\n            return\r\n        }\r\n        positionUtils.setup($container, {\r\n            my: \"left bottom\",\r\n            at: \"left bottom\",\r\n            of: $parent,\r\n            offset: DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + this._getViewToolbarYOffset(isServerSide)\r\n        })\r\n    }\r\n    _isPropertiesPanelEnabled() {\r\n        return \"disabled\" !== this.option(\"propertiesPanel.visibility\") && !this.isReadOnlyMode()\r\n    }\r\n    _isPropertiesPanelVisible() {\r\n        return \"visible\" === this.option(\"propertiesPanel.visibility\")\r\n    }\r\n    _renderPropertiesToolbar($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $container = $(\"<div>\").addClass(DIAGRAM_FLOATING_TOOLBAR_CONTAINER_CLASS).addClass(DIAGRAM_PROPERTIES_PANEL_TOOLBAR_CONTAINER_CLASS).appendTo($parent);\r\n        this._propertiesToolbar = this._createComponent($container, DiagramPropertiesToolbar, extend(this._getToolbarBaseOptions(), {\r\n            buttonStylingMode: \"contained\",\r\n            buttonType: \"default\",\r\n            locateInMenu: \"never\"\r\n        }));\r\n        this._updatePropertiesToolbarPosition($container, $parent, isServerSide);\r\n        this._propertiesToolbarResizeCallback = () => {\r\n            this._updatePropertiesToolbarPosition($container, $parent, isServerSide)\r\n        }\r\n    }\r\n    _updatePropertiesToolbarPosition($container, $parent, isServerSide) {\r\n        if (isServerSide) {\r\n            return\r\n        }\r\n        positionUtils.setup($container, {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: $parent,\r\n            offset: \"-\" + DIAGRAM_FLOATING_PANEL_OFFSET + \" -\" + DIAGRAM_FLOATING_PANEL_OFFSET\r\n        })\r\n    }\r\n    _renderPropertiesPanel($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var $propertiesPanel = $(\"<div>\").appendTo($parent);\r\n        var offsetX = DIAGRAM_FLOATING_PANEL_OFFSET;\r\n        var offsetY = 2 * DIAGRAM_FLOATING_PANEL_OFFSET + (!isServerSide ? getOuterHeight(this._propertiesToolbar.$element()) : 0);\r\n        this._propertiesPanel = this._createComponent($propertiesPanel, DiagramPropertiesPanel, {\r\n            isMobileView: this.isMobileScreenSize(),\r\n            isVisible: this._isPropertiesPanelVisible(),\r\n            container: this.$element(),\r\n            offsetParent: $parent,\r\n            offsetX: offsetX,\r\n            offsetY: offsetY,\r\n            propertyTabs: this.option(\"propertiesPanel.tabs\"),\r\n            onCreateToolbar: e => {\r\n                e.toolbar = this._createComponent(e.$parent, DiagramToolbar, extend(this._getToolbarBaseOptions(), {\r\n                    commands: e.commands,\r\n                    locateInMenu: \"never\",\r\n                    editorStylingMode: \"outlined\"\r\n                }))\r\n            },\r\n            onVisibilityChanging: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                this._updatePropertiesPanelGroupBars(e.component);\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, e.visible);\r\n                if (this._toolbox) {\r\n                    if (e.visible && this.isMobileScreenSize()) {\r\n                        this._toolbox.hide()\r\n                    }\r\n                }\r\n            },\r\n            onVisibilityChanged: e => {\r\n                if (!e.visible && !this._textInputStarted) {\r\n                    this._captureFocus()\r\n                }\r\n            },\r\n            onSelectedGroupChanged: _ref3 => {\r\n                var {\r\n                    component: component\r\n                } = _ref3;\r\n                return this._updatePropertiesPanelGroupBars(component)\r\n            },\r\n            onPointerUp: this._onPanelPointerUp.bind(this)\r\n        });\r\n        this._propertiesPanelResizeCallback = () => {\r\n            var prevIsMobileView = this._propertiesPanel.option(\"isMobileView\");\r\n            if (prevIsMobileView !== this.isMobileScreenSize()) {\r\n                this._propertiesPanel.option({\r\n                    isMobileView: this.isMobileScreenSize(),\r\n                    isVisible: this._isPropertiesPanelVisible()\r\n                });\r\n                this._setCustomCommandChecked(DiagramCommandsManager.SHOW_PROPERTIES_PANEL_COMMAND_NAME, this._isPropertiesPanelVisible())\r\n            }\r\n        }\r\n    }\r\n    _updatePropertiesPanelGroupBars(component) {\r\n        component.getActiveToolbars().forEach(toolbar => {\r\n            this._diagramInstance.updateBarItemsState(toolbar.bar)\r\n        })\r\n    }\r\n    _onPanelPointerUp() {\r\n        this._captureFocusOnTimeout()\r\n    }\r\n    _renderContextMenu($parent) {\r\n        var $contextMenu = $(\"<div>\").appendTo($parent);\r\n        this._contextMenu = this._createComponent($contextMenu, diagramContextMenuModule.DiagramContextMenuWrapper, {\r\n            commands: this.option(\"contextMenu.commands\"),\r\n            onContentReady: _ref4 => {\r\n                var {\r\n                    component: component\r\n                } = _ref4;\r\n                return this._registerBar(component)\r\n            },\r\n            onVisibilityChanging: _ref5 => {\r\n                var {\r\n                    component: component\r\n                } = _ref5;\r\n                return this._diagramInstance.updateBarItemsState(component.bar)\r\n            },\r\n            onItemClick: itemData => this._onBeforeCommandExecuted(itemData.command),\r\n            export: this.option(\"export\"),\r\n            excludeCommands: this._getExcludeCommands(),\r\n            onInternalCommand: this._onInternalCommand.bind(this),\r\n            onCustomCommand: this._onCustomCommand.bind(this)\r\n        })\r\n    }\r\n    _renderContextToolbox($parent) {\r\n        var isServerSide = !hasWindow();\r\n        var category = this.option(\"contextToolbox.category\");\r\n        var displayMode = this.option(\"contextToolbox.displayMode\");\r\n        var shapes = this.option(\"contextToolbox.shapes\");\r\n        var $contextToolbox = $(\"<div>\").appendTo($parent);\r\n        this._contextToolbox = this._createComponent($contextToolbox, DiagramContextToolbox, {\r\n            toolboxWidth: this.option(\"contextToolbox.width\"),\r\n            onShown: e => {\r\n                if (isServerSide) {\r\n                    return\r\n                }\r\n                var $toolboxContainer = $(e.$element);\r\n                var isTextGroup = \"texts\" === displayMode;\r\n                if (!shapes && !category && !isTextGroup) {\r\n                    var group = this._getToolboxGroups().filter((function(g) {\r\n                        return g.category === e.category\r\n                    }))[0];\r\n                    if (group) {\r\n                        isTextGroup = \"texts\" === group.displayMode\r\n                    }\r\n                }\r\n                this._diagramInstance.createContextToolbox($toolboxContainer[0], isTextGroup, shapes || category || e.category, {\r\n                    shapeIconSpacing: DIAGRAM_CONTEXT_TOOLBOX_SHAPE_SPACING,\r\n                    shapeIconCountInRow: this.option(\"contextToolbox.shapeIconsPerRow\")\r\n                }, shapeType => {\r\n                    e.callback(shapeType);\r\n                    this._captureFocus();\r\n                    e.hide()\r\n                })\r\n            }\r\n        })\r\n    }\r\n    _setCustomCommandChecked(command, checked) {\r\n        this._toolbars.forEach(tb => {\r\n            tb.setCommandChecked(command, checked)\r\n        })\r\n    }\r\n    _onBeforeCommandExecuted(command) {\r\n        var dialogParameters = DiagramDialogManager.getDialogParameters(command);\r\n        if (dialogParameters) {\r\n            this._showDialog(dialogParameters)\r\n        }\r\n        return !!dialogParameters\r\n    }\r\n    _renderDialog($parent) {\r\n        var $dialogElement = $(\"<div>\").appendTo($parent);\r\n        this._dialogInstance = this._createComponent($dialogElement, DiagramDialog, {})\r\n    }\r\n    _showDialog(dialogParameters) {\r\n        if (this._dialogInstance) {\r\n            this._dialogInstance.option(\"onGetContent\", dialogParameters.onGetContent);\r\n            this._dialogInstance.option(\"onHidden\", function() {\r\n                this._captureFocus()\r\n            }.bind(this));\r\n            this._dialogInstance.option(\"command\", this._diagramInstance.getCommand(dialogParameters.command));\r\n            this._dialogInstance.option(\"title\", dialogParameters.title);\r\n            this._dialogInstance._show()\r\n        }\r\n    }\r\n    _showLoadingIndicator() {\r\n        this._loadingIndicator = $(\"<div>\").addClass(DIAGRAM_LOADING_INDICATOR_CLASS);\r\n        this._createComponent(this._loadingIndicator, LoadIndicator, {});\r\n        var $parent = this._$content || this.$element();\r\n        $parent.append(this._loadingIndicator)\r\n    }\r\n    _hideLoadingIndicator() {\r\n        if (!this._loadingIndicator) {\r\n            return\r\n        }\r\n        this._loadingIndicator.remove();\r\n        this._loadingIndicator = null\r\n    }\r\n    _initDiagram() {\r\n        var {\r\n            DiagramControl: DiagramControl\r\n        } = getDiagram();\r\n        this._diagramInstance = new DiagramControl;\r\n        this._diagramInstance.onChanged = this._raiseDataChangeAction.bind(this);\r\n        this._diagramInstance.onEdgeInserted = this._raiseEdgeInsertedAction.bind(this);\r\n        this._diagramInstance.onEdgeUpdated = this._raiseEdgeUpdatedAction.bind(this);\r\n        this._diagramInstance.onEdgeRemoved = this._raiseEdgeRemovedAction.bind(this);\r\n        this._diagramInstance.onNodeInserted = this._raiseNodeInsertedAction.bind(this);\r\n        this._diagramInstance.onNodeUpdated = this._raiseNodeUpdatedAction.bind(this);\r\n        this._diagramInstance.onNodeRemoved = this._raiseNodeRemovedAction.bind(this);\r\n        this._diagramInstance.onToolboxDragStart = this._raiseToolboxDragStart.bind(this);\r\n        this._diagramInstance.onToolboxDragEnd = this._raiseToolboxDragEnd.bind(this);\r\n        this._diagramInstance.onTextInputStart = this._raiseTextInputStart.bind(this);\r\n        this._diagramInstance.onTextInputEnd = this._raiseTextInputEnd.bind(this);\r\n        this._diagramInstance.onToggleFullscreen = this._onToggleFullScreen.bind(this);\r\n        this._diagramInstance.onShowContextMenu = this._onShowContextMenu.bind(this);\r\n        this._diagramInstance.onHideContextMenu = this._onHideContextMenu.bind(this);\r\n        this._diagramInstance.onShowContextToolbox = this._onShowContextToolbox.bind(this);\r\n        this._diagramInstance.onHideContextToolbox = this._onHideContextToolbox.bind(this);\r\n        this._diagramInstance.onNativeAction.add({\r\n            notifyItemClick: this._raiseItemClickAction.bind(this),\r\n            notifyItemDblClick: this._raiseItemDblClickAction.bind(this),\r\n            notifySelectionChanged: this._raiseSelectionChanged.bind(this)\r\n        });\r\n        this._diagramInstance.onRequestOperation = this._raiseRequestEditOperation.bind(this);\r\n        this._updateEventSubscriptionMethods();\r\n        this._updateDefaultItemProperties();\r\n        this._updateEditingSettings();\r\n        this._updateShapeTexts();\r\n        this._updateUnitItems();\r\n        this._updateFormatUnitsMethod();\r\n        if (this.option(\"units\") !== DIAGRAM_DEFAULT_UNIT) {\r\n            this._updateUnitsState()\r\n        }\r\n        if (this.isReadOnlyMode()) {\r\n            this._updateReadOnlyState()\r\n        }\r\n        if (this.option(\"pageSize\")) {\r\n            if (this.option(\"pageSize.items\")) {\r\n                this._updatePageSizeItemsState()\r\n            }\r\n            if (this.option(\"pageSize.width\") && this.option(\"pageSize.height\")) {\r\n                this._updatePageSizeState()\r\n            }\r\n        }\r\n        if (this.option(\"pageOrientation\") !== DIAGRAM_DEFAULT_PAGE_ORIENTATION) {\r\n            this._updatePageOrientationState()\r\n        }\r\n        if (this.option(\"pageColor\") !== DIAGRAM_DEFAULT_PAGE_COLOR) {\r\n            this._updatePageColorState()\r\n        }\r\n        if (this.option(\"viewUnits\") !== DIAGRAM_DEFAULT_UNIT) {\r\n            this._updateViewUnitsState()\r\n        }\r\n        if (!this.option(\"showGrid\")) {\r\n            this._updateShowGridState()\r\n        }\r\n        if (!this.option(\"snapToGrid\")) {\r\n            this._updateSnapToGridState()\r\n        }\r\n        if (this.option(\"gridSize\")) {\r\n            this._updateGridSizeState()\r\n        }\r\n        if (this.option(\"zoomLevel\") !== DIAGRAM_DEFAULT_ZOOMLEVEL) {\r\n            this._updateZoomLevelState()\r\n        }\r\n        if (this.option(\"simpleView\")) {\r\n            this._updateSimpleViewState()\r\n        }\r\n        if (this.option(\"autoZoomMode\") !== DIAGRAM_DEFAULT_AUTOZOOM_MODE) {\r\n            this._updateAutoZoomState()\r\n        }\r\n        if (this.option(\"fullScreen\")) {\r\n            var window = getWindow();\r\n            if (window && window.self !== window.top) {\r\n                this.option(\"fullScreen\", false)\r\n            } else {\r\n                this._updateFullscreenState()\r\n            }\r\n        }\r\n        this._createOptionsUpdateBar();\r\n        if (hasWindow()) {\r\n            this._diagramInstance.initMeasurer(this.$element()[0])\r\n        }\r\n        this._updateCustomShapes(this._getCustomShapes());\r\n        this._refreshDataSources()\r\n    }\r\n    _createOptionsUpdateBar() {\r\n        if (!this.optionsUpdateBar) {\r\n            this.optionsUpdateBar = new DiagramOptionsUpdateBar(this);\r\n            this._diagramInstance.registerBar(this.optionsUpdateBar)\r\n        }\r\n    }\r\n    _deleteOptionsUpdateBar() {\r\n        delete this.optionsUpdateBar\r\n    }\r\n    _clean() {\r\n        if (this._diagramInstance) {\r\n            this._diagramInstance.cleanMarkup(element => {\r\n                $(element).empty()\r\n            });\r\n            this._deleteOptionsUpdateBar()\r\n        }\r\n        super._clean()\r\n    }\r\n    _dispose() {\r\n        this._killCaptureFocusTimeout();\r\n        super._dispose();\r\n        if (this._diagramInstance) {\r\n            this._diagramInstance.dispose();\r\n            this._diagramInstance = void 0\r\n        }\r\n    }\r\n    _executeDiagramCommand(command, parameter) {\r\n        this._diagramInstance.getCommand(command).execute(parameter)\r\n    }\r\n    getNodeDataSource() {\r\n        return this._nodesOption && this._nodesOption.getDataSource()\r\n    }\r\n    getEdgeDataSource() {\r\n        return this._edgesOption && this._edgesOption.getDataSource()\r\n    }\r\n    _refreshDataSources() {\r\n        this._beginUpdateDiagram();\r\n        this._refreshNodesDataSource();\r\n        this._refreshEdgesDataSource();\r\n        this._endUpdateDiagram()\r\n    }\r\n    _refreshNodesDataSource() {\r\n        if (this._nodesOption) {\r\n            this._nodesOption._disposeDataSource();\r\n            delete this._nodesOption\r\n        }\r\n        if (this.option(\"nodes.dataSource\")) {\r\n            this._nodesOption = new NodesOption(this);\r\n            this._nodesOption.option(\"dataSource\", this.option(\"nodes.dataSource\"));\r\n            this._nodesOption._refreshDataSource()\r\n        }\r\n    }\r\n    _refreshEdgesDataSource() {\r\n        if (this._edgesOption) {\r\n            this._edgesOption._disposeDataSource();\r\n            delete this._edgesOption\r\n        }\r\n        if (this.option(\"edges.dataSource\")) {\r\n            this._edgesOption = new EdgesOption(this);\r\n            this._edgesOption.option(\"dataSource\", this.option(\"edges.dataSource\"));\r\n            this._edgesOption._refreshDataSource()\r\n        }\r\n    }\r\n    _getDiagramData() {\r\n        var value;\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.Export, (function(data) {\r\n            value = data\r\n        }));\r\n        return value\r\n    }\r\n    _setDiagramData(data, keepExistingItems) {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.Import, {\r\n            data: data,\r\n            keepExistingItems: keepExistingItems\r\n        })\r\n    }\r\n    isReadOnlyMode() {\r\n        return this.option(\"readOnly\") || this.option(\"disabled\")\r\n    }\r\n    _onDataSourceChanged() {\r\n        this._bindDiagramData()\r\n    }\r\n    _getChangesKeys(changes) {\r\n        return changes.map(change => {\r\n            if (isDefined(change.internalKey)) {\r\n                return change.internalKey\r\n            } else if (isDefined(change.key)) {\r\n                return change.key\r\n            } else {\r\n                return null\r\n            }\r\n        }).filter(key => isDefined(key))\r\n    }\r\n    _createOptionGetter(optionName) {\r\n        var expr = this.option(optionName);\r\n        return expr && compileGetter(expr)\r\n    }\r\n    _onRequestUpdateLayout(changes) {\r\n        if (!this._requestLayoutUpdateAction) {\r\n            this._createRequestLayoutUpdateAction()\r\n        }\r\n        var eventArgs = {\r\n            changes: changes,\r\n            allowed: false\r\n        };\r\n        this._requestLayoutUpdateAction(eventArgs);\r\n        return eventArgs.allowed\r\n    }\r\n    _createOptionSetter(optionName) {\r\n        var expr = this.option(optionName);\r\n        if (isFunction(expr)) {\r\n            return expr\r\n        }\r\n        return expr && compileSetter(expr)\r\n    }\r\n    _bindDiagramData() {\r\n        if (this._updateDiagramLockCount || !this._isBindingMode()) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand,\r\n            ConnectorLineOption: ConnectorLineOption,\r\n            ConnectorLineEnding: ConnectorLineEnding\r\n        } = getDiagram();\r\n        var lineOptionGetter;\r\n        var lineOptionSetter;\r\n        var startLineEndingGetter;\r\n        var startLineEndingSetter;\r\n        var endLineEndingGetter;\r\n        var endLineEndingSetter;\r\n        var containerChildrenGetter;\r\n        var containerChildrenSetter;\r\n        var data = {\r\n            nodeDataSource: this._nodesOption && this._nodesOption.getItems(),\r\n            edgeDataSource: this._edgesOption && this._edgesOption.getItems(),\r\n            nodeDataImporter: {\r\n                getKey: this._createOptionGetter(\"nodes.keyExpr\"),\r\n                setKey: this._createOptionSetter(\"nodes.keyExpr\"),\r\n                getCustomData: this._createOptionGetter(\"nodes.customDataExpr\"),\r\n                setCustomData: this._createOptionSetter(\"nodes.customDataExpr\"),\r\n                getLocked: this._createOptionGetter(\"nodes.lockedExpr\"),\r\n                setLocked: this._createOptionSetter(\"nodes.lockedExpr\"),\r\n                getStyle: this._createOptionGetter(\"nodes.styleExpr\"),\r\n                setStyle: this._createOptionSetter(\"nodes.styleExpr\"),\r\n                getStyleText: this._createOptionGetter(\"nodes.textStyleExpr\"),\r\n                setStyleText: this._createOptionSetter(\"nodes.textStyleExpr\"),\r\n                getZIndex: this._createOptionGetter(\"nodes.zIndexExpr\"),\r\n                setZIndex: this._createOptionSetter(\"nodes.zIndexExpr\"),\r\n                getType: this._createOptionGetter(\"nodes.typeExpr\"),\r\n                setType: this._createOptionSetter(\"nodes.typeExpr\"),\r\n                getText: this._createOptionGetter(\"nodes.textExpr\"),\r\n                setText: this._createOptionSetter(\"nodes.textExpr\"),\r\n                getImage: this._createOptionGetter(\"nodes.imageUrlExpr\"),\r\n                setImage: this._createOptionSetter(\"nodes.imageUrlExpr\"),\r\n                getLeft: this._createOptionGetter(\"nodes.leftExpr\"),\r\n                setLeft: this._createOptionSetter(\"nodes.leftExpr\"),\r\n                getTop: this._createOptionGetter(\"nodes.topExpr\"),\r\n                setTop: this._createOptionSetter(\"nodes.topExpr\"),\r\n                getWidth: this._createOptionGetter(\"nodes.widthExpr\"),\r\n                setWidth: this._createOptionSetter(\"nodes.widthExpr\"),\r\n                getHeight: this._createOptionGetter(\"nodes.heightExpr\"),\r\n                setHeight: this._createOptionSetter(\"nodes.heightExpr\"),\r\n                getParentKey: this._createOptionGetter(\"nodes.parentKeyExpr\"),\r\n                setParentKey: this._createOptionSetter(\"nodes.parentKeyExpr\"),\r\n                getItems: this._createOptionGetter(\"nodes.itemsExpr\"),\r\n                setItems: this._createOptionSetter(\"nodes.itemsExpr\"),\r\n                getChildren: containerChildrenGetter = this._createOptionGetter(\"nodes.containerChildrenExpr\"),\r\n                setChildren: containerChildrenSetter = this._createOptionSetter(\"nodes.containerChildrenExpr\"),\r\n                getContainerKey: !containerChildrenGetter && !containerChildrenSetter && this._createOptionGetter(\"nodes.containerKeyExpr\"),\r\n                setContainerKey: !containerChildrenGetter && !containerChildrenSetter && this._createOptionSetter(\"nodes.containerKeyExpr\")\r\n            },\r\n            edgeDataImporter: {\r\n                getKey: this._createOptionGetter(\"edges.keyExpr\"),\r\n                setKey: this._createOptionSetter(\"edges.keyExpr\"),\r\n                getCustomData: this._createOptionGetter(\"edges.customDataExpr\"),\r\n                setCustomData: this._createOptionSetter(\"edges.customDataExpr\"),\r\n                getLocked: this._createOptionGetter(\"edges.lockedExpr\"),\r\n                setLocked: this._createOptionSetter(\"edges.lockedExpr\"),\r\n                getStyle: this._createOptionGetter(\"edges.styleExpr\"),\r\n                setStyle: this._createOptionSetter(\"edges.styleExpr\"),\r\n                getStyleText: this._createOptionGetter(\"edges.textStyleExpr\"),\r\n                setStyleText: this._createOptionSetter(\"edges.textStyleExpr\"),\r\n                getZIndex: this._createOptionGetter(\"edges.zIndexExpr\"),\r\n                setZIndex: this._createOptionSetter(\"edges.zIndexExpr\"),\r\n                getFrom: this._createOptionGetter(\"edges.fromExpr\"),\r\n                setFrom: this._createOptionSetter(\"edges.fromExpr\"),\r\n                getFromPointIndex: this._createOptionGetter(\"edges.fromPointIndexExpr\"),\r\n                setFromPointIndex: this._createOptionSetter(\"edges.fromPointIndexExpr\"),\r\n                getTo: this._createOptionGetter(\"edges.toExpr\"),\r\n                setTo: this._createOptionSetter(\"edges.toExpr\"),\r\n                getToPointIndex: this._createOptionGetter(\"edges.toPointIndexExpr\"),\r\n                setToPointIndex: this._createOptionSetter(\"edges.toPointIndexExpr\"),\r\n                getPoints: this._createOptionGetter(\"edges.pointsExpr\"),\r\n                setPoints: this._createOptionSetter(\"edges.pointsExpr\"),\r\n                getText: this._createOptionGetter(\"edges.textExpr\"),\r\n                setText: this._createOptionSetter(\"edges.textExpr\"),\r\n                getLineOption: (lineOptionGetter = this._createOptionGetter(\"edges.lineTypeExpr\")) && function(obj) {\r\n                    var lineType = lineOptionGetter(obj);\r\n                    return this._getConnectorLineOption(lineType)\r\n                }.bind(this),\r\n                setLineOption: (lineOptionSetter = this._createOptionSetter(\"edges.lineTypeExpr\")) && function(obj, value) {\r\n                    switch (value) {\r\n                        case ConnectorLineOption.Straight:\r\n                            value = \"straight\";\r\n                            break;\r\n                        case ConnectorLineOption.Orthogonal:\r\n                            value = \"orthogonal\"\r\n                    }\r\n                    lineOptionSetter(obj, value)\r\n                }.bind(this),\r\n                getStartLineEnding: (startLineEndingGetter = this._createOptionGetter(\"edges.fromLineEndExpr\")) && function(obj) {\r\n                    var lineEnd = startLineEndingGetter(obj);\r\n                    return this._getConnectorLineEnding(lineEnd)\r\n                }.bind(this),\r\n                setStartLineEnding: (startLineEndingSetter = this._createOptionSetter(\"edges.fromLineEndExpr\")) && function(obj, value) {\r\n                    switch (value) {\r\n                        case ConnectorLineEnding.Arrow:\r\n                            value = \"arrow\";\r\n                            break;\r\n                        case ConnectorLineEnding.OutlinedTriangle:\r\n                            value = \"outlinedTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.FilledTriangle:\r\n                            value = \"filledTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.None:\r\n                            value = \"none\"\r\n                    }\r\n                    startLineEndingSetter(obj, value)\r\n                }.bind(this),\r\n                getEndLineEnding: (endLineEndingGetter = this._createOptionGetter(\"edges.toLineEndExpr\")) && function(obj) {\r\n                    var lineEnd = endLineEndingGetter(obj);\r\n                    return this._getConnectorLineEnding(lineEnd)\r\n                }.bind(this),\r\n                setEndLineEnding: (endLineEndingSetter = this._createOptionSetter(\"edges.toLineEndExpr\")) && function(obj, value) {\r\n                    switch (value) {\r\n                        case ConnectorLineEnding.Arrow:\r\n                            value = \"arrow\";\r\n                            break;\r\n                        case ConnectorLineEnding.OutlinedTriangle:\r\n                            value = \"outlinedTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.FilledTriangle:\r\n                            value = \"filledTriangle\";\r\n                            break;\r\n                        case ConnectorLineEnding.None:\r\n                            value = \"none\"\r\n                    }\r\n                    endLineEndingSetter(obj, value)\r\n                }.bind(this)\r\n            },\r\n            layoutParameters: this._getDataBindingLayoutParameters()\r\n        };\r\n        this._executeDiagramCommand(DiagramCommand.BindDocument, data)\r\n    }\r\n    _reloadContentByChanges(changes, isExternalChanges) {\r\n        var keys = this._getChangesKeys(changes);\r\n        var applyLayout = this._onRequestUpdateLayout(changes);\r\n        this._reloadContent(keys, applyLayout, isExternalChanges)\r\n    }\r\n    _reloadContent(itemKeys, applyLayout, isExternalChanges) {\r\n        this._diagramInstance.reloadContent(itemKeys, () => {\r\n            var nodeDataSource;\r\n            var edgeDataSource;\r\n            if (this._nodesOption && isExternalChanges) {\r\n                nodeDataSource = this._nodesOption.getItems()\r\n            }\r\n            if (this._edgesOption && isExternalChanges) {\r\n                edgeDataSource = this._edgesOption.getItems()\r\n            }\r\n            return {\r\n                nodeDataSource: nodeDataSource,\r\n                edgeDataSource: edgeDataSource\r\n            }\r\n        }, applyLayout && this._getDataBindingLayoutParameters(), isExternalChanges)\r\n    }\r\n    _getConnectorLineOption(lineType) {\r\n        var {\r\n            ConnectorLineOption: ConnectorLineOption\r\n        } = getDiagram();\r\n        switch (lineType) {\r\n            case \"straight\":\r\n                return ConnectorLineOption.Straight;\r\n            default:\r\n                return ConnectorLineOption.Orthogonal\r\n        }\r\n    }\r\n    _getConnectorLineEnding(lineEnd) {\r\n        var {\r\n            ConnectorLineEnding: ConnectorLineEnding\r\n        } = getDiagram();\r\n        switch (lineEnd) {\r\n            case \"arrow\":\r\n                return ConnectorLineEnding.Arrow;\r\n            case \"outlinedTriangle\":\r\n                return ConnectorLineEnding.OutlinedTriangle;\r\n            case \"filledTriangle\":\r\n                return ConnectorLineEnding.FilledTriangle;\r\n            default:\r\n                return ConnectorLineEnding.None\r\n        }\r\n    }\r\n    _getDataBindingLayoutParameters() {\r\n        var {\r\n            DataLayoutType: DataLayoutType,\r\n            DataLayoutOrientation: DataLayoutOrientation\r\n        } = getDiagram();\r\n        var layoutParametersOption = this.option(\"nodes.autoLayout\") || \"off\";\r\n        var layoutType = layoutParametersOption.type || layoutParametersOption;\r\n        var parameters = {};\r\n        if (\"off\" !== layoutType && (\"auto\" !== layoutType || !this._hasNodePositionExprs())) {\r\n            switch (layoutType) {\r\n                case \"tree\":\r\n                    parameters.type = DataLayoutType.Tree;\r\n                    break;\r\n                default:\r\n                    parameters.type = DataLayoutType.Sugiyama\r\n            }\r\n            switch (layoutParametersOption.orientation) {\r\n                case \"vertical\":\r\n                    parameters.orientation = DataLayoutOrientation.Vertical;\r\n                    break;\r\n                case \"horizontal\":\r\n                    parameters.orientation = DataLayoutOrientation.Horizontal\r\n            }\r\n            if (this.option(\"edges.fromPointIndexExpr\") || this.option(\"edges.toPointIndexExpr\")) {\r\n                parameters.skipPointIndices = true\r\n            }\r\n        }\r\n        parameters.autoSizeEnabled = !!this.option(\"nodes.autoSizeEnabled\");\r\n        return parameters\r\n    }\r\n    _hasNodePositionExprs() {\r\n        return this.option(\"nodes.topExpr\") && this.option(\"nodes.leftExpr\")\r\n    }\r\n    _getAutoZoomValue(option) {\r\n        var {\r\n            AutoZoomMode: AutoZoomMode\r\n        } = getDiagram();\r\n        switch (option) {\r\n            case \"fitContent\":\r\n                return AutoZoomMode.FitContent;\r\n            case \"fitWidth\":\r\n                return AutoZoomMode.FitToWidth;\r\n            default:\r\n                return AutoZoomMode.Disabled\r\n        }\r\n    }\r\n    _isBindingMode() {\r\n        return this._nodesOption && this._nodesOption.hasItems() || this._edgesOption && this._edgesOption.hasItems()\r\n    }\r\n    _beginUpdateDiagram() {\r\n        this._updateDiagramLockCount++\r\n    }\r\n    _endUpdateDiagram() {\r\n        this._updateDiagramLockCount = Math.max(this._updateDiagramLockCount - 1, 0);\r\n        if (!this._updateDiagramLockCount) {\r\n            this._bindDiagramData()\r\n        }\r\n    }\r\n    _getCustomShapes() {\r\n        return this.option(\"customShapes\") || []\r\n    }\r\n    _getToolboxGroups() {\r\n        return DiagramToolboxManager.getGroups(this.option(\"toolbox.groups\"))\r\n    }\r\n    _updateAllCustomShapes() {\r\n        this._diagramInstance.removeAllCustomShapes();\r\n        this._updateCustomShapes(this._getCustomShapes())\r\n    }\r\n    _updateCustomShapes(customShapes, prevCustomShapes) {\r\n        if (Array.isArray(prevCustomShapes)) {\r\n            this._diagramInstance.removeCustomShapes(prevCustomShapes.map(s => s.type))\r\n        }\r\n        if (Array.isArray(customShapes)) {\r\n            this._diagramInstance.addCustomShapes(customShapes.map(s => {\r\n                var templateOption = s.template || this.option(\"customShapeTemplate\");\r\n                var template = templateOption && this._getTemplate(templateOption);\r\n                var toolboxTemplateOption = s.toolboxTemplate || this.option(\"customShapeToolboxTemplate\");\r\n                var toolboxTemplate = toolboxTemplateOption && this._getTemplate(toolboxTemplateOption);\r\n                return {\r\n                    category: s.category,\r\n                    type: s.type,\r\n                    baseType: s.baseType,\r\n                    title: s.title,\r\n                    svgUrl: s.backgroundImageUrl,\r\n                    svgToolboxUrl: s.backgroundImageToolboxUrl,\r\n                    svgLeft: s.backgroundImageLeft,\r\n                    svgTop: s.backgroundImageTop,\r\n                    svgWidth: s.backgroundImageWidth,\r\n                    svgHeight: s.backgroundImageHeight,\r\n                    defaultWidth: s.defaultWidth,\r\n                    defaultHeight: s.defaultHeight,\r\n                    toolboxWidthToHeightRatio: s.toolboxWidthToHeightRatio,\r\n                    minWidth: s.minWidth,\r\n                    minHeight: s.minHeight,\r\n                    maxWidth: s.maxWidth,\r\n                    maxHeight: s.maxHeight,\r\n                    allowResize: s.allowResize,\r\n                    defaultText: s.defaultText,\r\n                    allowEditText: s.allowEditText,\r\n                    textLeft: s.textLeft,\r\n                    textTop: s.textTop,\r\n                    textWidth: s.textWidth,\r\n                    textHeight: s.textHeight,\r\n                    defaultImageUrl: s.defaultImageUrl,\r\n                    allowEditImage: s.allowEditImage,\r\n                    imageLeft: s.imageLeft,\r\n                    imageTop: s.imageTop,\r\n                    imageWidth: s.imageWidth,\r\n                    imageHeight: s.imageHeight,\r\n                    connectionPoints: s.connectionPoints && s.connectionPoints.map(pt => ({\r\n                        x: pt.x,\r\n                        y: pt.y\r\n                    })),\r\n                    createTemplate: template && ((container, item) => {\r\n                        template.render({\r\n                            model: this._nativeItemToDiagramItem(item),\r\n                            container: getPublicElement($(container))\r\n                        })\r\n                    }),\r\n                    createToolboxTemplate: toolboxTemplate && ((container, item) => {\r\n                        toolboxTemplate.render({\r\n                            model: this._nativeItemToDiagramItem(item),\r\n                            container: getPublicElement($(container))\r\n                        })\r\n                    }),\r\n                    destroyTemplate: template && (container => {\r\n                        $(container).empty()\r\n                    }),\r\n                    templateLeft: s.templateLeft,\r\n                    templateTop: s.templateTop,\r\n                    templateWidth: s.templateWidth,\r\n                    templateHeight: s.templateHeight,\r\n                    keepRatioOnAutoSize: s.keepRatioOnAutoSize\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    _getViewport() {\r\n        var $viewPort = this.$element().closest(\".dx-viewport\");\r\n        return $viewPort.length ? $viewPort : $(\"body\")\r\n    }\r\n    _onToggleFullScreen(fullScreen) {\r\n        if (this.toggleFullscreenLock > 0) {\r\n            return\r\n        }\r\n        this._changeNativeFullscreen(fullScreen);\r\n        if (fullScreen) {\r\n            this._prevParent = this.$element().parent();\r\n            this._prevFullScreenZIndex = this.$element().css(\"zIndex\");\r\n            this._fullScreenZIndex = zIndexPool.create(Overlay.baseZIndex());\r\n            this.$element().css(\"zIndex\", this._fullScreenZIndex);\r\n            this.$element().appendTo(this._getViewport())\r\n        } else {\r\n            this.$element().appendTo(this._prevParent);\r\n            if (this._fullScreenZIndex) {\r\n                zIndexPool.remove(this._fullScreenZIndex);\r\n                this.$element().css(\"zIndex\", this._prevFullScreenZIndex)\r\n            }\r\n        }\r\n        this.$element().toggleClass(DIAGRAM_FULLSCREEN_CLASS, fullScreen);\r\n        this._processDiagramResize();\r\n        if (this._toolbox) {\r\n            this._toolbox.repaint();\r\n            this._toolbox._popup.option(\"propagateOutsideClick\", !fullScreen)\r\n        }\r\n        if (this._propertiesPanel) {\r\n            this._propertiesPanel.repaint()\r\n        }\r\n        if (this._historyToolbar) {\r\n            this._updateHistoryToolbarPosition()\r\n        }\r\n    }\r\n    _changeNativeFullscreen(setModeOn) {\r\n        var window = getWindow();\r\n        if (window.self === window.top || setModeOn === this._inNativeFullscreen()) {\r\n            return\r\n        }\r\n        if (setModeOn) {\r\n            this._subscribeFullscreenNativeChanged()\r\n        } else {\r\n            this._unsubscribeFullscreenNativeChanged()\r\n        }\r\n        this._setNativeFullscreen(setModeOn)\r\n    }\r\n    _setNativeFullscreen(on) {\r\n        var window = getWindow();\r\n        var document = window.self.document;\r\n        var body = window.self.document.body;\r\n        if (on) {\r\n            if (body.requestFullscreen) {\r\n                body.requestFullscreen()\r\n            } else if (body.mozRequestFullscreen) {\r\n                body.mozRequestFullscreen()\r\n            } else if (body.webkitRequestFullscreen) {\r\n                body.webkitRequestFullscreen()\r\n            } else if (body.msRequestFullscreen) {\r\n                body.msRequestFullscreen()\r\n            }\r\n        } else if (document.exitFullscreen) {\r\n            document.exitFullscreen()\r\n        } else if (document.mozCancelFullscreen) {\r\n            document.mozCancelFullscreen()\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen()\r\n        } else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen()\r\n        }\r\n    }\r\n    _inNativeFullscreen() {\r\n        var document = getWindow().document;\r\n        var fullscreenElement = document.fullscreenElement || document.msFullscreenElement || document.webkitFullscreenElement;\r\n        var isInFullscreen = fullscreenElement === document.body || document.webkitIsFullscreen;\r\n        return !!isInFullscreen\r\n    }\r\n    _subscribeFullscreenNativeChanged() {\r\n        var document = getWindow().document;\r\n        var handler = this._onNativeFullscreenChangeHandler.bind(this);\r\n        eventsEngine.on(document, FULLSCREEN_CHANGE_EVENT_NAME, handler);\r\n        eventsEngine.on(document, IE_FULLSCREEN_CHANGE_EVENT_NAME, handler);\r\n        eventsEngine.on(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME, handler);\r\n        eventsEngine.on(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME, handler)\r\n    }\r\n    _unsubscribeFullscreenNativeChanged() {\r\n        var document = getWindow().document;\r\n        eventsEngine.off(document, FULLSCREEN_CHANGE_EVENT_NAME);\r\n        eventsEngine.off(document, IE_FULLSCREEN_CHANGE_EVENT_NAME);\r\n        eventsEngine.off(document, WEBKIT_FULLSCREEN_CHANGE_EVENT_NAME);\r\n        eventsEngine.off(document, MOZ_FULLSCREEN_CHANGE_EVENT_NAME)\r\n    }\r\n    _onNativeFullscreenChangeHandler() {\r\n        if (!this._inNativeFullscreen()) {\r\n            this._unsubscribeFullscreenNativeChanged();\r\n            this.option(\"fullScreen\", false)\r\n        }\r\n    }\r\n    _executeDiagramFullscreenCommand(fullscreen) {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this.toggleFullscreenLock++;\r\n        this._executeDiagramCommand(DiagramCommand.Fullscreen, fullscreen);\r\n        this.toggleFullscreenLock--\r\n    }\r\n    _onShowContextMenu(x, y, selection) {\r\n        if (this._contextMenu) {\r\n            this._contextMenu._show(x, y, selection)\r\n        }\r\n    }\r\n    _onHideContextMenu() {\r\n        if (this._contextMenu) {\r\n            this._contextMenu._hide()\r\n        }\r\n    }\r\n    _onShowContextToolbox(x, y, side, category, callback) {\r\n        if (this._contextToolbox) {\r\n            this._contextToolbox._show(x, y, side, category, callback)\r\n        }\r\n    }\r\n    _onHideContextToolbox() {\r\n        if (this._contextToolbox) {\r\n            this._contextToolbox._hide()\r\n        }\r\n    }\r\n    _getDiagramUnitValue(value) {\r\n        var {\r\n            DiagramUnit: DiagramUnit\r\n        } = getDiagram();\r\n        switch (value) {\r\n            case \"in\":\r\n                return DiagramUnit.In;\r\n            case \"cm\":\r\n                return DiagramUnit.Cm;\r\n            case \"px\":\r\n                return DiagramUnit.Px;\r\n            default:\r\n                return DiagramUnit.In\r\n        }\r\n    }\r\n    _updateReadOnlyState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        var readOnly = this.isReadOnlyMode();\r\n        this._executeDiagramCommand(DiagramCommand.ToggleReadOnly, readOnly)\r\n    }\r\n    _updateZoomLevelState() {\r\n        if (this.option(\"zoomLevel.items\")) {\r\n            this._updateZoomLevelItemsState();\r\n            var zoomLevel = this.option(\"zoomLevel.value\");\r\n            if (!zoomLevel) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: DiagramCommand\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(DiagramCommand.ZoomLevel, zoomLevel)\r\n        } else {\r\n            var _zoomLevel = this.option(\"zoomLevel.value\") || this.option(\"zoomLevel\");\r\n            if (!_zoomLevel) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: _DiagramCommand\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(_DiagramCommand.ZoomLevel, _zoomLevel)\r\n        }\r\n    }\r\n    _updateZoomLevelItemsState() {\r\n        var zoomLevelItems = this.option(\"zoomLevel.items\");\r\n        if (!Array.isArray(zoomLevelItems)) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ZoomLevelItems, zoomLevelItems)\r\n    }\r\n    _updateAutoZoomState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.SwitchAutoZoom, this._getAutoZoomValue(this.option(\"autoZoomMode\")))\r\n    }\r\n    _updateSimpleViewState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ToggleSimpleView, this.option(\"simpleView\"))\r\n    }\r\n    _updateFullscreenState() {\r\n        var fullscreen = this.option(\"fullScreen\");\r\n        this._executeDiagramFullscreenCommand(fullscreen);\r\n        this._onToggleFullScreen(fullscreen)\r\n    }\r\n    _updateShowGridState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ShowGrid, this.option(\"showGrid\"))\r\n    }\r\n    _updateSnapToGridState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.SnapToGrid, this.option(\"snapToGrid\"))\r\n    }\r\n    _updateGridSizeState() {\r\n        if (this.option(\"gridSize.items\")) {\r\n            this._updateGridSizeItemsState();\r\n            var gridSize = this.option(\"gridSize.value\");\r\n            if (!gridSize) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: DiagramCommand\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(DiagramCommand.GridSize, gridSize)\r\n        } else {\r\n            var _gridSize = this.option(\"gridSize.value\") || this.option(\"gridSize\");\r\n            if (!_gridSize) {\r\n                return\r\n            }\r\n            var {\r\n                DiagramCommand: _DiagramCommand2\r\n            } = getDiagram();\r\n            this._executeDiagramCommand(_DiagramCommand2.GridSize, _gridSize)\r\n        }\r\n    }\r\n    _updateGridSizeItemsState() {\r\n        var gridSizeItems = this.option(\"gridSize.items\");\r\n        if (!Array.isArray(gridSizeItems)) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.GridSizeItems, gridSizeItems)\r\n    }\r\n    _updateUnitItems() {\r\n        var {\r\n            DiagramLocalizationService: DiagramLocalizationService\r\n        } = getDiagram();\r\n        var items = this._getUnitItems();\r\n        if (this._unitItems !== items) {\r\n            this._unitItems = items;\r\n            DiagramLocalizationService.unitItems = items\r\n        }\r\n    }\r\n    _getUnitItems() {\r\n        var {\r\n            DiagramUnit: DiagramUnit\r\n        } = getDiagram();\r\n        var items = {};\r\n        items[DiagramUnit.In] = messageLocalization.format(\"dxDiagram-unitIn\");\r\n        items[DiagramUnit.Cm] = messageLocalization.format(\"dxDiagram-unitCm\");\r\n        items[DiagramUnit.Px] = messageLocalization.format(\"dxDiagram-unitPx\");\r\n        return items\r\n    }\r\n    _updateFormatUnitsMethod() {\r\n        var {\r\n            DiagramLocalizationService: DiagramLocalizationService\r\n        } = getDiagram();\r\n        DiagramLocalizationService.formatUnit = function(value) {\r\n            return numberLocalization.format(value)\r\n        }\r\n    }\r\n    _updateViewUnitsState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.ViewUnits, this._getDiagramUnitValue(this.option(\"viewUnits\")))\r\n    }\r\n    _updateUnitsState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.Units, this._getDiagramUnitValue(this.option(\"units\")))\r\n    }\r\n    _updatePageSizeState() {\r\n        var pageSize = this.option(\"pageSize\");\r\n        if (!pageSize || !pageSize.width || !pageSize.height) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageSize, pageSize)\r\n    }\r\n    _updatePageSizeItemsState() {\r\n        var pageSizeItems = this.option(\"pageSize.items\");\r\n        if (!Array.isArray(pageSizeItems)) {\r\n            return\r\n        }\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageSizeItems, pageSizeItems)\r\n    }\r\n    _updatePageOrientationState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageLandscape, \"landscape\" === this.option(\"pageOrientation\"))\r\n    }\r\n    _updatePageColorState() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.PageColor, this.option(\"pageColor\"))\r\n    }\r\n    _updateShapeTexts() {\r\n        var {\r\n            DiagramLocalizationService: DiagramLocalizationService\r\n        } = getDiagram();\r\n        var texts = this._getShapeTexts();\r\n        if (this._shapeTexts !== texts) {\r\n            this._shapeTexts = texts;\r\n            DiagramLocalizationService.shapeTexts = texts\r\n        }\r\n    }\r\n    _getShapeTexts() {\r\n        var {\r\n            ShapeTypes: ShapeTypes\r\n        } = getDiagram();\r\n        var texts = {};\r\n        texts[ShapeTypes.Text] = messageLocalization.format(\"dxDiagram-shapeText\");\r\n        texts[ShapeTypes.Rectangle] = messageLocalization.format(\"dxDiagram-shapeRectangle\");\r\n        texts[ShapeTypes.Ellipse] = messageLocalization.format(\"dxDiagram-shapeEllipse\");\r\n        texts[ShapeTypes.Cross] = messageLocalization.format(\"dxDiagram-shapeCross\");\r\n        texts[ShapeTypes.Triangle] = messageLocalization.format(\"dxDiagram-shapeTriangle\");\r\n        texts[ShapeTypes.Diamond] = messageLocalization.format(\"dxDiagram-shapeDiamond\");\r\n        texts[ShapeTypes.Heart] = messageLocalization.format(\"dxDiagram-shapeHeart\");\r\n        texts[ShapeTypes.Pentagon] = messageLocalization.format(\"dxDiagram-shapePentagon\");\r\n        texts[ShapeTypes.Hexagon] = messageLocalization.format(\"dxDiagram-shapeHexagon\");\r\n        texts[ShapeTypes.Octagon] = messageLocalization.format(\"dxDiagram-shapeOctagon\");\r\n        texts[ShapeTypes.Star] = messageLocalization.format(\"dxDiagram-shapeStar\");\r\n        texts[ShapeTypes.ArrowLeft] = messageLocalization.format(\"dxDiagram-shapeArrowLeft\");\r\n        texts[ShapeTypes.ArrowUp] = messageLocalization.format(\"dxDiagram-shapeArrowUp\");\r\n        texts[ShapeTypes.ArrowRight] = messageLocalization.format(\"dxDiagram-shapeArrowRight\");\r\n        texts[ShapeTypes.ArrowDown] = messageLocalization.format(\"dxDiagram-shapeArrowDown\");\r\n        texts[ShapeTypes.ArrowUpDown] = messageLocalization.format(\"dxDiagram-shapeArrowUpDown\");\r\n        texts[ShapeTypes.ArrowLeftRight] = messageLocalization.format(\"dxDiagram-shapeArrowLeftRight\");\r\n        texts[ShapeTypes.Process] = messageLocalization.format(\"dxDiagram-shapeProcess\");\r\n        texts[ShapeTypes.Decision] = messageLocalization.format(\"dxDiagram-shapeDecision\");\r\n        texts[ShapeTypes.Terminator] = messageLocalization.format(\"dxDiagram-shapeTerminator\");\r\n        texts[ShapeTypes.PredefinedProcess] = messageLocalization.format(\"dxDiagram-shapePredefinedProcess\");\r\n        texts[ShapeTypes.Document] = messageLocalization.format(\"dxDiagram-shapeDocument\");\r\n        texts[ShapeTypes.MultipleDocuments] = messageLocalization.format(\"dxDiagram-shapeMultipleDocuments\");\r\n        texts[ShapeTypes.ManualInput] = messageLocalization.format(\"dxDiagram-shapeManualInput\");\r\n        texts[ShapeTypes.Preparation] = messageLocalization.format(\"dxDiagram-shapePreparation\");\r\n        texts[ShapeTypes.Data] = messageLocalization.format(\"dxDiagram-shapeData\");\r\n        texts[ShapeTypes.Database] = messageLocalization.format(\"dxDiagram-shapeDatabase\");\r\n        texts[ShapeTypes.HardDisk] = messageLocalization.format(\"dxDiagram-shapeHardDisk\");\r\n        texts[ShapeTypes.InternalStorage] = messageLocalization.format(\"dxDiagram-shapeInternalStorage\");\r\n        texts[ShapeTypes.PaperTape] = messageLocalization.format(\"dxDiagram-shapePaperTape\");\r\n        texts[ShapeTypes.ManualOperation] = messageLocalization.format(\"dxDiagram-shapeManualOperation\");\r\n        texts[ShapeTypes.Delay] = messageLocalization.format(\"dxDiagram-shapeDelay\");\r\n        texts[ShapeTypes.StoredData] = messageLocalization.format(\"dxDiagram-shapeStoredData\");\r\n        texts[ShapeTypes.Display] = messageLocalization.format(\"dxDiagram-shapeDisplay\");\r\n        texts[ShapeTypes.Merge] = messageLocalization.format(\"dxDiagram-shapeMerge\");\r\n        texts[ShapeTypes.Connector] = messageLocalization.format(\"dxDiagram-shapeConnector\");\r\n        texts[ShapeTypes.Or] = messageLocalization.format(\"dxDiagram-shapeOr\");\r\n        texts[ShapeTypes.SummingJunction] = messageLocalization.format(\"dxDiagram-shapeSummingJunction\");\r\n        texts[ShapeTypes.Container] = messageLocalization.format(\"dxDiagram-shapeContainerDefaultText\");\r\n        texts[ShapeTypes.VerticalContainer] = messageLocalization.format(\"dxDiagram-shapeVerticalContainer\");\r\n        texts[ShapeTypes.HorizontalContainer] = messageLocalization.format(\"dxDiagram-shapeHorizontalContainer\");\r\n        texts[ShapeTypes.Card] = messageLocalization.format(\"dxDiagram-shapeCardDefaultText\");\r\n        texts[ShapeTypes.CardWithImageOnLeft] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnLeft\");\r\n        texts[ShapeTypes.CardWithImageOnTop] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnTop\");\r\n        texts[ShapeTypes.CardWithImageOnRight] = messageLocalization.format(\"dxDiagram-shapeCardWithImageOnRight\");\r\n        return texts\r\n    }\r\n    _updateEventSubscriptionMethods() {\r\n        var {\r\n            RenderHelper: RenderHelper\r\n        } = getDiagram();\r\n        RenderHelper.addEventListener = (element, eventName, handler) => {\r\n            eventsEngine.on(element, eventName, handler)\r\n        };\r\n        RenderHelper.removeEventListener = (element, eventName, handler) => {\r\n            eventsEngine.off(element, eventName, handler)\r\n        }\r\n    }\r\n    _updateDefaultItemProperties() {\r\n        if (this.option(\"defaultItemProperties.style\")) {\r\n            this._diagramInstance.setInitialStyleProperties(this.option(\"defaultItemProperties.style\"))\r\n        }\r\n        if (this.option(\"defaultItemProperties.textStyle\")) {\r\n            this._diagramInstance.setInitialTextStyleProperties(this.option(\"defaultItemProperties.textStyle\"))\r\n        }\r\n        this._diagramInstance.setInitialConnectorProperties({\r\n            lineOption: this._getConnectorLineOption(this.option(\"defaultItemProperties.connectorLineType\")),\r\n            startLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineStart\")),\r\n            endLineEnding: this._getConnectorLineEnding(this.option(\"defaultItemProperties.connectorLineEnd\"))\r\n        });\r\n        this._diagramInstance.applyShapeSizeSettings({\r\n            shapeMinWidth: this.option(\"defaultItemProperties.shapeMinWidth\"),\r\n            shapeMaxWidth: this.option(\"defaultItemProperties.shapeMaxWidth\"),\r\n            shapeMinHeight: this.option(\"defaultItemProperties.shapeMinHeight\"),\r\n            shapeMaxHeight: this.option(\"defaultItemProperties.shapeMaxHeight\")\r\n        })\r\n    }\r\n    _updateEditingSettings() {\r\n        this._diagramInstance.applyOperationSettings({\r\n            addShape: this.option(\"editing.allowAddShape\"),\r\n            addShapeFromToolbox: this.option(\"editing.allowAddShape\"),\r\n            deleteShape: this.option(\"editing.allowDeleteShape\"),\r\n            deleteConnector: this.option(\"editing.allowDeleteConnector\"),\r\n            changeConnection: this.option(\"editing.allowChangeConnection\"),\r\n            changeConnectorPoints: this.option(\"editing.allowChangeConnectorPoints\"),\r\n            changeShapeText: this.option(\"editing.allowChangeShapeText\"),\r\n            changeConnectorText: this.option(\"editing.allowChangeConnectorText\"),\r\n            resizeShape: this.option(\"editing.allowResizeShape\"),\r\n            moveShape: this.option(\"editing.allowMoveShape\")\r\n        })\r\n    }\r\n    fitToContent() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.FitToScreen)\r\n    }\r\n    fitToWidth() {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        this._executeDiagramCommand(DiagramCommand.FitToWidth)\r\n    }\r\n    focus() {\r\n        this._captureFocus()\r\n    }\r\n    export () {\r\n        return this._getDiagramData()\r\n    }\r\n    exportTo(format, callback) {\r\n        var command = this._getDiagramExportToCommand(format);\r\n        this._executeDiagramCommand(command, callback)\r\n    }\r\n    _getDiagramExportToCommand(format) {\r\n        var {\r\n            DiagramCommand: DiagramCommand\r\n        } = getDiagram();\r\n        switch (format) {\r\n            case \"png\":\r\n                return DiagramCommand.ExportPng;\r\n            case \"jpg\":\r\n                return DiagramCommand.ExportJpg;\r\n            default:\r\n                return DiagramCommand.ExportSvg\r\n        }\r\n    }\r\n    import(data, updateExistingItemsOnly) {\r\n        this._setDiagramData(data, updateExistingItemsOnly);\r\n        this._raiseDataChangeAction()\r\n    }\r\n    updateToolbox() {\r\n        this._diagramInstance && this._diagramInstance.refreshToolbox();\r\n        if (this._toolbox) {\r\n            this._toolbox.updateTooltips();\r\n            this._toolbox.updateFilter();\r\n            this._toolbox.updateMaxHeight()\r\n        }\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            readOnly: false,\r\n            zoomLevel: DIAGRAM_DEFAULT_ZOOMLEVEL,\r\n            simpleView: false,\r\n            autoZoomMode: DIAGRAM_DEFAULT_AUTOZOOM_MODE,\r\n            fullScreen: false,\r\n            showGrid: true,\r\n            snapToGrid: true,\r\n            units: DIAGRAM_DEFAULT_UNIT,\r\n            viewUnits: DIAGRAM_DEFAULT_UNIT,\r\n            pageOrientation: DIAGRAM_DEFAULT_PAGE_ORIENTATION,\r\n            pageColor: DIAGRAM_DEFAULT_PAGE_COLOR,\r\n            hasChanges: false,\r\n            nodes: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                customDataExpr: void 0,\r\n                lockedExpr: void 0,\r\n                styleExpr: void 0,\r\n                textStyleExpr: void 0,\r\n                zIndexExpr: void 0,\r\n                typeExpr: \"type\",\r\n                textExpr: \"text\",\r\n                imageUrlExpr: void 0,\r\n                parentKeyExpr: void 0,\r\n                itemsExpr: void 0,\r\n                leftExpr: void 0,\r\n                topExpr: void 0,\r\n                widthExpr: void 0,\r\n                heightExpr: void 0,\r\n                containerKeyExpr: \"containerKey\",\r\n                containerChildrenExpr: void 0,\r\n                autoLayout: \"auto\",\r\n                autoSizeEnabled: true\r\n            },\r\n            edges: {\r\n                dataSource: null,\r\n                keyExpr: \"id\",\r\n                customDataExpr: void 0,\r\n                lockedExpr: void 0,\r\n                styleExpr: void 0,\r\n                textStyleExpr: void 0,\r\n                zIndexExpr: void 0,\r\n                fromExpr: \"from\",\r\n                fromPointIndexExpr: void 0,\r\n                toExpr: \"to\",\r\n                toPointIndexExpr: void 0,\r\n                pointsExpr: void 0,\r\n                textExpr: void 0,\r\n                lineTypeExpr: void 0,\r\n                fromLineEndExpr: void 0,\r\n                toLineEndExpr: void 0\r\n            },\r\n            customShapes: [],\r\n            toolbox: {\r\n                visibility: \"auto\",\r\n                shapeIconsPerRow: DIAGRAM_TOOLBOX_SHAPES_PER_ROW,\r\n                showSearch: true\r\n            },\r\n            mainToolbar: {\r\n                visible: false\r\n            },\r\n            historyToolbar: {\r\n                visible: true\r\n            },\r\n            viewToolbar: {\r\n                visible: true\r\n            },\r\n            contextMenu: {\r\n                enabled: true\r\n            },\r\n            contextToolbox: {\r\n                enabled: true,\r\n                shapeIconsPerRow: DIAGRAM_CONTEXT_TOOLBOX_SHAPES_PER_ROW,\r\n                width: DIAGRAM_CONTEXT_TOOLBOX_DEFAULT_WIDTH\r\n            },\r\n            propertiesPanel: {\r\n                visibility: \"auto\"\r\n            },\r\n            defaultItemProperties: {\r\n                connectorLineType: \"orthogonal\",\r\n                connectorLineStart: \"none\",\r\n                connectorLineEnd: \"arrow\"\r\n            },\r\n            editing: {\r\n                allowAddShape: true,\r\n                allowDeleteShape: true,\r\n                allowDeleteConnector: true,\r\n                allowChangeConnection: true,\r\n                allowChangeConnectorPoints: true,\r\n                allowChangeShapeText: true,\r\n                allowChangeConnectorText: true,\r\n                allowResizeShape: true,\r\n                allowMoveShape: true\r\n            },\r\n            export: {\r\n                fileName: \"Diagram\",\r\n                proxyUrl: void 0\r\n            },\r\n            onItemClick: null,\r\n            onItemDblClick: null,\r\n            onSelectionChanged: null,\r\n            onRequestEditOperation: null,\r\n            onRequestLayoutUpdate: null\r\n        })\r\n    }\r\n    _raiseDataChangeAction() {\r\n        if (this._initialized) {\r\n            this.option(\"hasChanges\", true)\r\n        }\r\n    }\r\n    _raiseEdgeInsertedAction(data, callback, errorCallback) {\r\n        if (this._edgesOption) {\r\n            this._edgesOption.insert(data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseEdgeUpdatedAction(key, data, callback, errorCallback) {\r\n        if (this._edgesOption) {\r\n            this._edgesOption.update(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseEdgeRemovedAction(key, data, callback, errorCallback) {\r\n        if (this._edgesOption) {\r\n            this._edgesOption.remove(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseNodeInsertedAction(data, callback, errorCallback) {\r\n        if (this._nodesOption) {\r\n            this._nodesOption.insert(data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseNodeUpdatedAction(key, data, callback, errorCallback) {\r\n        if (this._nodesOption) {\r\n            this._nodesOption.update(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseNodeRemovedAction(key, data, callback, errorCallback) {\r\n        if (this._nodesOption) {\r\n            this._nodesOption.remove(key, data, callback, errorCallback)\r\n        }\r\n    }\r\n    _raiseToolboxDragStart() {\r\n        if (this._toolbox && this.isMobileScreenSize()) {\r\n            this._toolbox.hide();\r\n            this._toolboxDragHidden = true\r\n        }\r\n    }\r\n    _raiseToolboxDragEnd() {\r\n        if (this._toolbox && this._toolboxDragHidden) {\r\n            this._toolbox.show();\r\n            delete this._toolboxDragHidden\r\n        }\r\n    }\r\n    _raiseTextInputStart() {\r\n        this._textInputStarted = true;\r\n        if (this._propertiesPanel) {\r\n            if (this.isMobileScreenSize() && this._propertiesPanel.isVisible()) {\r\n                this._propertiesPanel.hide();\r\n                this._propertiesPanelTextInputHidden = true\r\n            }\r\n        }\r\n        if (this._toolbox) {\r\n            if (this.isMobileScreenSize() && this._toolbox.isVisible()) {\r\n                this._toolbox.hide();\r\n                this._toolboxTextInputHidden = true\r\n            }\r\n        }\r\n    }\r\n    _raiseTextInputEnd() {\r\n        if (this._propertiesPanel) {\r\n            if (this._propertiesPanelTextInputHidden) {\r\n                this._propertiesPanel.show();\r\n                delete this._propertiesPanelTextInputHidden\r\n            }\r\n        }\r\n        if (this._toolbox) {\r\n            if (this._toolboxTextInputHidden) {\r\n                this._toolbox.show();\r\n                delete this._toolboxTextInputHidden\r\n            }\r\n        }\r\n        this._textInputStarted = false\r\n    }\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    }\r\n    _createItemDblClickAction() {\r\n        this._itemDblClickAction = this._createActionByOption(\"onItemDblClick\")\r\n    }\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    }\r\n    _createRequestEditOperationAction() {\r\n        this._requestEditOperationAction = this._createActionByOption(\"onRequestEditOperation\")\r\n    }\r\n    _createRequestLayoutUpdateAction() {\r\n        this._requestLayoutUpdateAction = this._createActionByOption(\"onRequestLayoutUpdate\")\r\n    }\r\n    _createCustomCommand() {\r\n        this._customCommandAction = this._createActionByOption(\"onCustomCommand\")\r\n    }\r\n    _raiseItemClickAction(nativeItem) {\r\n        if (!this._itemClickAction) {\r\n            this._createItemClickAction()\r\n        }\r\n        this._itemClickAction({\r\n            item: this._nativeItemToDiagramItem(nativeItem)\r\n        })\r\n    }\r\n    _raiseItemDblClickAction(nativeItem) {\r\n        if (!this._itemDblClickAction) {\r\n            this._createItemDblClickAction()\r\n        }\r\n        this._itemDblClickAction({\r\n            item: this._nativeItemToDiagramItem(nativeItem)\r\n        })\r\n    }\r\n    _raiseSelectionChanged(nativeItems) {\r\n        if (!this._selectionChangedAction) {\r\n            this._createSelectionChangedAction()\r\n        }\r\n        this._selectionChangedAction({\r\n            items: nativeItems.map(this._nativeItemToDiagramItem.bind(this))\r\n        })\r\n    }\r\n    _raiseRequestEditOperation(operation, args) {\r\n        if (!this._requestEditOperationAction) {\r\n            this._createRequestEditOperationAction()\r\n        }\r\n        var eventArgs = this._getRequestEditOperationEventArgs(operation, args);\r\n        this._requestEditOperationAction(eventArgs);\r\n        args.allowed = eventArgs.allowed\r\n    }\r\n    _getModelOperation(operation) {\r\n        var {\r\n            DiagramModelOperation: DiagramModelOperation\r\n        } = getDiagram();\r\n        switch (operation) {\r\n            case DiagramModelOperation.AddShape:\r\n                return \"addShape\";\r\n            case DiagramModelOperation.AddShapeFromToolbox:\r\n                return \"addShapeFromToolbox\";\r\n            case DiagramModelOperation.DeleteShape:\r\n                return \"deleteShape\";\r\n            case DiagramModelOperation.DeleteConnector:\r\n                return \"deleteConnector\";\r\n            case DiagramModelOperation.ChangeConnection:\r\n                return \"changeConnection\";\r\n            case DiagramModelOperation.ChangeConnectorPoints:\r\n                return \"changeConnectorPoints\";\r\n            case DiagramModelOperation.BeforeChangeShapeText:\r\n                return \"beforeChangeShapeText\";\r\n            case DiagramModelOperation.ChangeShapeText:\r\n                return \"changeShapeText\";\r\n            case DiagramModelOperation.BeforeChangeConnectorText:\r\n                return \"beforeChangeConnectorText\";\r\n            case DiagramModelOperation.ChangeConnectorText:\r\n                return \"changeConnectorText\";\r\n            case DiagramModelOperation.ResizeShape:\r\n                return \"resizeShape\";\r\n            case DiagramModelOperation.MoveShape:\r\n                return \"moveShape\"\r\n        }\r\n    }\r\n    _getRequestEditOperationEventArgs(operation, args) {\r\n        var {\r\n            DiagramModelOperation: DiagramModelOperation,\r\n            ConnectorPosition: ConnectorPosition\r\n        } = getDiagram();\r\n        var eventArgs = {\r\n            operation: this._getModelOperation(operation),\r\n            allowed: args.allowed,\r\n            updateUI: args.updateUI,\r\n            reason: args.updateUI ? \"checkUIElementAvailability\" : \"modelModification\"\r\n        };\r\n        switch (operation) {\r\n            case DiagramModelOperation.AddShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    position: args.position && {\r\n                        x: args.position.x,\r\n                        y: args.position.y\r\n                    }\r\n                };\r\n                break;\r\n            case DiagramModelOperation.AddShapeFromToolbox:\r\n                eventArgs.args = {\r\n                    shapeType: args.shapeType\r\n                };\r\n                break;\r\n            case DiagramModelOperation.DeleteShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape)\r\n                };\r\n                break;\r\n            case DiagramModelOperation.DeleteConnector:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector)\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeConnection:\r\n                eventArgs.args = {\r\n                    newShape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    oldShape: args.oldShape && this._nativeItemToDiagramItem(args.oldShape),\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    connectionPointIndex: args.connectionPointIndex,\r\n                    connectorPosition: args.position === ConnectorPosition.Begin ? \"start\" : \"end\"\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeConnectorPoints:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    newPoints: args.points && args.points.map(pt => ({\r\n                        x: pt.x,\r\n                        y: pt.y\r\n                    })),\r\n                    oldPoints: args.oldPoints && args.oldPoints.map(pt => ({\r\n                        x: pt.x,\r\n                        y: pt.y\r\n                    }))\r\n                };\r\n                break;\r\n            case DiagramModelOperation.BeforeChangeShapeText:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape)\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeShapeText:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    text: args.text\r\n                };\r\n                break;\r\n            case DiagramModelOperation.BeforeChangeConnectorText:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    index: args.index\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ChangeConnectorText:\r\n                eventArgs.args = {\r\n                    connector: args.connector && this._nativeItemToDiagramItem(args.connector),\r\n                    index: args.index,\r\n                    text: args.text\r\n                };\r\n                break;\r\n            case DiagramModelOperation.ResizeShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    newSize: args.size && {\r\n                        width: args.size.width,\r\n                        height: args.size.height\r\n                    },\r\n                    oldSize: args.oldSize && {\r\n                        width: args.oldSize.width,\r\n                        height: args.oldSize.height\r\n                    }\r\n                };\r\n                break;\r\n            case DiagramModelOperation.MoveShape:\r\n                eventArgs.args = {\r\n                    shape: args.shape && this._nativeItemToDiagramItem(args.shape),\r\n                    newPosition: args.position && {\r\n                        x: args.position.x,\r\n                        y: args.position.y\r\n                    },\r\n                    oldPosition: args.oldPosition && {\r\n                        x: args.oldPosition.x,\r\n                        y: args.oldPosition.y\r\n                    }\r\n                }\r\n        }\r\n        return eventArgs\r\n    }\r\n    _nativeItemToDiagramItem(nativeItem) {\r\n        var {\r\n            NativeShape: NativeShape\r\n        } = getDiagram();\r\n        var createMethod = nativeItem instanceof NativeShape ? this._nativeShapeToDiagramShape.bind(this) : this._nativeConnectorToDiagramConnector.bind(this);\r\n        return extend({\r\n            id: nativeItem.id,\r\n            key: nativeItem.key,\r\n            dataItem: void 0\r\n        }, createMethod(nativeItem))\r\n    }\r\n    _nativeShapeToDiagramShape(nativeShape) {\r\n        return {\r\n            dataItem: this._nodesOption && this._nodesOption.findItem(nativeShape.key),\r\n            itemType: \"shape\",\r\n            text: nativeShape.text,\r\n            type: nativeShape.type,\r\n            position: {\r\n                x: nativeShape.position.x,\r\n                y: nativeShape.position.y\r\n            },\r\n            size: {\r\n                width: nativeShape.size.width,\r\n                height: nativeShape.size.height\r\n            },\r\n            attachedConnectorIds: nativeShape.attachedConnectorIds,\r\n            containerId: nativeShape.containerId,\r\n            containerChildItemIds: nativeShape.containerChildItemIds,\r\n            containerExpanded: nativeShape.containerExpanded\r\n        }\r\n    }\r\n    _nativeConnectorToDiagramConnector(nativeConnector) {\r\n        return {\r\n            dataItem: this._edgesOption && this._edgesOption.findItem(nativeConnector.key),\r\n            itemType: \"connector\",\r\n            texts: nativeConnector.texts,\r\n            fromKey: nativeConnector.fromKey,\r\n            toKey: nativeConnector.toKey,\r\n            fromId: nativeConnector.fromId,\r\n            fromPointIndex: nativeConnector.fromPointIndex,\r\n            toId: nativeConnector.toId,\r\n            toPointIndex: nativeConnector.toPointIndex,\r\n            points: nativeConnector.points.map(pt => ({\r\n                x: pt.x,\r\n                y: pt.y\r\n            }))\r\n        }\r\n    }\r\n    getItemByKey(key) {\r\n        var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByDataKey(key);\r\n        return nativeItem && this._nativeItemToDiagramItem(nativeItem)\r\n    }\r\n    getItemById(id) {\r\n        var nativeItem = this._diagramInstance && this._diagramInstance.getNativeItemByKey(id);\r\n        return nativeItem && this._nativeItemToDiagramItem(nativeItem)\r\n    }\r\n    getItems() {\r\n        return this._diagramInstance.getNativeItems().map(nativeItem => nativeItem && this._nativeItemToDiagramItem(nativeItem))\r\n    }\r\n    getSelectedItems() {\r\n        return this._diagramInstance.getNativeSelectedItems().map(nativeItem => nativeItem && this._nativeItemToDiagramItem(nativeItem))\r\n    }\r\n    setSelectedItems(items) {\r\n        return this._diagramInstance.setSelectedItems(items.map(item => item.id))\r\n    }\r\n    scrollToItem(item) {\r\n        return this._diagramInstance.scrollToItems([item.id])\r\n    }\r\n    _invalidateContextMenuCommands() {\r\n        if (this._contextMenu) {\r\n            this._contextMenu.option({\r\n                commands: this.option(\"contextMenu.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateMainToolbarCommands() {\r\n        if (this._mainToolbar) {\r\n            this._mainToolbar.option({\r\n                commands: this.option(\"mainToolbar.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateHistoryToolbarCommands() {\r\n        if (this._historyToolbar) {\r\n            this._historyToolbar.option({\r\n                commands: this.option(\"historyToolbar.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateViewToolbarCommands() {\r\n        if (this._viewToolbar) {\r\n            this._viewToolbar.option({\r\n                commands: this.option(\"viewToolbar.commands\")\r\n            })\r\n        }\r\n    }\r\n    _invalidateToolboxGroups() {\r\n        if (this._toolbox) {\r\n            this._toolbox.option({\r\n                toolboxGroups: this._getToolboxGroups()\r\n            })\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (!this.optionsUpdateBar || this.optionsUpdateBar.isUpdateLocked()) {\r\n            return\r\n        }\r\n        this.optionsUpdateBar.beginUpdate();\r\n        try {\r\n            this._optionChangedCore(args)\r\n        } finally {\r\n            this.optionsUpdateBar.endUpdate()\r\n        }\r\n    }\r\n    _optionChangedCore(args) {\r\n        switch (args.name) {\r\n            case \"readOnly\":\r\n            case \"disabled\":\r\n                this._updateReadOnlyState();\r\n                this._invalidate();\r\n                break;\r\n            case \"zoomLevel\":\r\n                if (\"zoomLevel\" === args.fullName || \"zoomLevel.items\" === args.fullName || \"zoomLevel.value\" === args.fullName) {\r\n                    this._updateZoomLevelState()\r\n                }\r\n                break;\r\n            case \"autoZoomMode\":\r\n                this._updateAutoZoomState();\r\n                break;\r\n            case \"simpleView\":\r\n                this._updateSimpleViewState();\r\n                break;\r\n            case \"useNativeScrolling\":\r\n                this._invalidate();\r\n                break;\r\n            case \"fullScreen\":\r\n                this._updateFullscreenState();\r\n                break;\r\n            case \"showGrid\":\r\n                this._updateShowGridState();\r\n                break;\r\n            case \"snapToGrid\":\r\n                this._updateSnapToGridState();\r\n                break;\r\n            case \"gridSize\":\r\n                if (\"gridSize\" === args.fullName || \"gridSize.items\" === args.fullName || \"gridSize.value\" === args.fullName) {\r\n                    this._updateGridSizeState()\r\n                }\r\n                break;\r\n            case \"viewUnits\":\r\n                this._updateViewUnitsState();\r\n                break;\r\n            case \"units\":\r\n                this._updateUnitsState();\r\n                break;\r\n            case \"pageSize\":\r\n                if (\"pageSize\" === args.fullName || \"pageSize.items\" === args.fullName) {\r\n                    this._updatePageSizeItemsState()\r\n                }\r\n                if (\"pageSize\" === args.fullName || \"pageSize.width\" === args.fullName || \"pageSize.height\" === args.fullName) {\r\n                    this._updatePageSizeState()\r\n                }\r\n                break;\r\n            case \"pageOrientation\":\r\n                this._updatePageOrientationState();\r\n                break;\r\n            case \"pageColor\":\r\n                this._updatePageColorState();\r\n                break;\r\n            case \"nodes\":\r\n                if (0 === args.fullName.indexOf(\"nodes.autoLayout\")) {\r\n                    this._refreshDataSources()\r\n                } else {\r\n                    this._refreshNodesDataSource()\r\n                }\r\n                break;\r\n            case \"edges\":\r\n                this._refreshEdgesDataSource();\r\n                break;\r\n            case \"customShapes\":\r\n                if (args.fullName !== args.name) {\r\n                    this._updateAllCustomShapes()\r\n                } else {\r\n                    this._updateCustomShapes(args.value, args.previousValue)\r\n                }\r\n                this._invalidate();\r\n                break;\r\n            case \"contextMenu\":\r\n                if (\"contextMenu.commands\" === args.fullName) {\r\n                    this._invalidateContextMenuCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"contextToolbox\":\r\n            case \"propertiesPanel\":\r\n                this._invalidate();\r\n                break;\r\n            case \"toolbox\":\r\n                if (\"toolbox.groups\" === args.fullName) {\r\n                    this._invalidateToolboxGroups()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"mainToolbar\":\r\n                if (\"mainToolbar.commands\" === args.fullName) {\r\n                    this._invalidateMainToolbarCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"historyToolbar\":\r\n                if (\"historyToolbar.commands\" === args.fullName) {\r\n                    this._invalidateHistoryToolbarCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"viewToolbar\":\r\n                if (\"viewToolbar.commands\" === args.fullName) {\r\n                    this._invalidateViewToolbarCommands()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onItemDblClick\":\r\n                this._createItemDblClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"onRequestEditOperation\":\r\n                this._createRequestEditOperationAction();\r\n                break;\r\n            case \"onRequestLayoutUpdate\":\r\n                this._createRequestLayoutUpdateAction();\r\n                break;\r\n            case \"onCustomCommand\":\r\n                this._createCustomCommand();\r\n                break;\r\n            case \"defaultItemProperties\":\r\n                this._updateDefaultItemProperties();\r\n                break;\r\n            case \"editing\":\r\n                this._updateEditingSettings();\r\n                break;\r\n            case \"export\":\r\n                this._toolbars.forEach(toolbar => {\r\n                    toolbar.option(\"export\", this.option(\"export\"))\r\n                });\r\n                if (this._contextMenu) {\r\n                    this._contextMenu.option(\"export\", this.option(\"export\"))\r\n                }\r\n                break;\r\n            case \"hasChanges\":\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxDiagram\", Diagram);\r\nexport default Diagram;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
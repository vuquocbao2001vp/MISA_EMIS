{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.gradient.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { addColorizer, createColorCodeGetter as _createColorCodeGetter } from \"./colorizing\";\nvar _min = Math.min;\nvar _max = Math.max;\n\nfunction createSimpleColorizer(getColor, range) {\n  return function (node) {\n    return getColor(node, range);\n  };\n}\n\nfunction getRangeData(range) {\n  return [Number(range[0]) || 0, range[1] - range[0] || 1];\n}\n\nfunction calculateRange(nodes, getValue) {\n  var i;\n  var ii = nodes.length;\n  var codes = [];\n  var code;\n\n  for (i = 0; i < ii; ++i) {\n    code = getValue(nodes[i]);\n\n    if (isFinite(code)) {\n      codes.push(code);\n    }\n  }\n\n  return getRangeData([_min.apply(null, codes), _max.apply(null, codes)]);\n}\n\nfunction createGuessingColorizer(getColor, getValue) {\n  var ranges = {};\n  return function (node) {\n    var parent = node.parent;\n    return getColor(node, ranges[parent._id] || (ranges[parent._id] = calculateRange(parent.nodes, getValue)));\n  };\n}\n\nfunction gradientColorizer(options, themeManager) {\n  var palette = themeManager.createGradientPalette(options.palette);\n\n  var getValue = _createColorCodeGetter(options);\n\n  return \"range\" in options ? createSimpleColorizer(getColor, getRangeData(options.range || [])) : createGuessingColorizer(getColor, getValue);\n\n  function getColor(node, arg) {\n    return palette.getColor((getValue(node) - arg[0]) / arg[1]);\n  }\n}\n\naddColorizer(\"gradient\", gradientColorizer);\nexport default gradientColorizer;","map":{"version":3,"names":["addColorizer","createColorCodeGetter","_createColorCodeGetter","_min","Math","min","_max","max","createSimpleColorizer","getColor","range","node","getRangeData","Number","calculateRange","nodes","getValue","i","ii","length","codes","code","isFinite","push","apply","createGuessingColorizer","ranges","parent","_id","gradientColorizer","options","themeManager","palette","createGradientPalette","arg"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/tree_map/colorizing.gradient.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.gradient.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    addColorizer,\r\n    createColorCodeGetter as _createColorCodeGetter\r\n} from \"./colorizing\";\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\n\r\nfunction createSimpleColorizer(getColor, range) {\r\n    return function(node) {\r\n        return getColor(node, range)\r\n    }\r\n}\r\n\r\nfunction getRangeData(range) {\r\n    return [Number(range[0]) || 0, range[1] - range[0] || 1]\r\n}\r\n\r\nfunction calculateRange(nodes, getValue) {\r\n    var i;\r\n    var ii = nodes.length;\r\n    var codes = [];\r\n    var code;\r\n    for (i = 0; i < ii; ++i) {\r\n        code = getValue(nodes[i]);\r\n        if (isFinite(code)) {\r\n            codes.push(code)\r\n        }\r\n    }\r\n    return getRangeData([_min.apply(null, codes), _max.apply(null, codes)])\r\n}\r\n\r\nfunction createGuessingColorizer(getColor, getValue) {\r\n    var ranges = {};\r\n    return function(node) {\r\n        var parent = node.parent;\r\n        return getColor(node, ranges[parent._id] || (ranges[parent._id] = calculateRange(parent.nodes, getValue)))\r\n    }\r\n}\r\n\r\nfunction gradientColorizer(options, themeManager) {\r\n    var palette = themeManager.createGradientPalette(options.palette);\r\n    var getValue = _createColorCodeGetter(options);\r\n    return \"range\" in options ? createSimpleColorizer(getColor, getRangeData(options.range || [])) : createGuessingColorizer(getColor, getValue);\r\n\r\n    function getColor(node, arg) {\r\n        return palette.getColor((getValue(node) - arg[0]) / arg[1])\r\n    }\r\n}\r\naddColorizer(\"gradient\", gradientColorizer);\r\nexport default gradientColorizer;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,YADJ,EAEIC,qBAAqB,IAAIC,sBAF7B,QAGO,cAHP;AAIA,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAhB;AACA,IAAIC,IAAI,GAAGF,IAAI,CAACG,GAAhB;;AAEA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyCC,KAAzC,EAAgD;EAC5C,OAAO,UAASC,IAAT,EAAe;IAClB,OAAOF,QAAQ,CAACE,IAAD,EAAOD,KAAP,CAAf;EACH,CAFD;AAGH;;AAED,SAASE,YAAT,CAAsBF,KAAtB,EAA6B;EACzB,OAAO,CAACG,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAAN,IAAoB,CAArB,EAAwBA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhB,IAAuB,CAA/C,CAAP;AACH;;AAED,SAASI,cAAT,CAAwBC,KAAxB,EAA+BC,QAA/B,EAAyC;EACrC,IAAIC,CAAJ;EACA,IAAIC,EAAE,GAAGH,KAAK,CAACI,MAAf;EACA,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAIC,IAAJ;;EACA,KAAKJ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,EAAhB,EAAoB,EAAED,CAAtB,EAAyB;IACrBI,IAAI,GAAGL,QAAQ,CAACD,KAAK,CAACE,CAAD,CAAN,CAAf;;IACA,IAAIK,QAAQ,CAACD,IAAD,CAAZ,EAAoB;MAChBD,KAAK,CAACG,IAAN,CAAWF,IAAX;IACH;EACJ;;EACD,OAAOT,YAAY,CAAC,CAACT,IAAI,CAACqB,KAAL,CAAW,IAAX,EAAiBJ,KAAjB,CAAD,EAA0Bd,IAAI,CAACkB,KAAL,CAAW,IAAX,EAAiBJ,KAAjB,CAA1B,CAAD,CAAnB;AACH;;AAED,SAASK,uBAAT,CAAiChB,QAAjC,EAA2CO,QAA3C,EAAqD;EACjD,IAAIU,MAAM,GAAG,EAAb;EACA,OAAO,UAASf,IAAT,EAAe;IAClB,IAAIgB,MAAM,GAAGhB,IAAI,CAACgB,MAAlB;IACA,OAAOlB,QAAQ,CAACE,IAAD,EAAOe,MAAM,CAACC,MAAM,CAACC,GAAR,CAAN,KAAuBF,MAAM,CAACC,MAAM,CAACC,GAAR,CAAN,GAAqBd,cAAc,CAACa,MAAM,CAACZ,KAAR,EAAeC,QAAf,CAA1D,CAAP,CAAf;EACH,CAHD;AAIH;;AAED,SAASa,iBAAT,CAA2BC,OAA3B,EAAoCC,YAApC,EAAkD;EAC9C,IAAIC,OAAO,GAAGD,YAAY,CAACE,qBAAb,CAAmCH,OAAO,CAACE,OAA3C,CAAd;;EACA,IAAIhB,QAAQ,GAAGd,sBAAsB,CAAC4B,OAAD,CAArC;;EACA,OAAO,WAAWA,OAAX,GAAqBtB,qBAAqB,CAACC,QAAD,EAAWG,YAAY,CAACkB,OAAO,CAACpB,KAAR,IAAiB,EAAlB,CAAvB,CAA1C,GAA0Fe,uBAAuB,CAAChB,QAAD,EAAWO,QAAX,CAAxH;;EAEA,SAASP,QAAT,CAAkBE,IAAlB,EAAwBuB,GAAxB,EAA6B;IACzB,OAAOF,OAAO,CAACvB,QAAR,CAAiB,CAACO,QAAQ,CAACL,IAAD,CAAR,GAAiBuB,GAAG,CAAC,CAAD,CAArB,IAA4BA,GAAG,CAAC,CAAD,CAAhD,CAAP;EACH;AACJ;;AACDlC,YAAY,CAAC,UAAD,EAAa6B,iBAAb,CAAZ;AACA,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}
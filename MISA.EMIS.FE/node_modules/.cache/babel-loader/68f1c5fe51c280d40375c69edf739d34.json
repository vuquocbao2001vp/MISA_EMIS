{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getOuterWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeKeyName } from \"../../events/utils/index\";\nimport { each, map } from \"../../core/utils/iterator\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport messageLocalization from \"../../localization/message\";\nimport Editor from \"../editor/editor\";\nimport Overlay from \"../overlay/ui.overlay\";\nimport Menu from \"../menu\";\nimport { selectView } from \"../shared/accessibility\";\nvar OPERATION_ICONS = {\n  \"=\": \"filter-operation-equals\",\n  \"<>\": \"filter-operation-not-equals\",\n  \"<\": \"filter-operation-less\",\n  \"<=\": \"filter-operation-less-equal\",\n  \">\": \"filter-operation-greater\",\n  \">=\": \"filter-operation-greater-equal\",\n  default: \"filter-operation-default\",\n  notcontains: \"filter-operation-not-contains\",\n  contains: \"filter-operation-contains\",\n  startswith: \"filter-operation-starts-with\",\n  endswith: \"filter-operation-ends-with\",\n  between: \"filter-operation-between\"\n};\nvar OPERATION_DESCRIPTORS = {\n  \"=\": \"equal\",\n  \"<>\": \"notEqual\",\n  \"<\": \"lessThan\",\n  \"<=\": \"lessThanOrEqual\",\n  \">\": \"greaterThan\",\n  \">=\": \"greaterThanOrEqual\",\n  startswith: \"startsWith\",\n  contains: \"contains\",\n  notcontains: \"notContains\",\n  endswith: \"endsWith\",\n  between: \"between\"\n};\nvar FILTERING_TIMEOUT = 700;\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\nvar FILTER_ROW_CLASS = \"filter-row\";\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\nvar MENU_CLASS = \"dx-menu\";\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\nvar FILTER_MENU = \"dx-filter-menu\";\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\nvar FOCUSED_CLASS = \"dx-focused\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\n\nfunction isOnClickApplyFilterMode(that) {\n  return \"onClick\" === that.option(\"filterRow.applyFilter\");\n}\n\nvar getEditorInstance = function ($editorContainer) {\n  var $editor = $editorContainer && $editorContainer.children();\n  var componentNames = $editor && $editor.data(\"dxComponents\");\n  var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\n\n  if (editor instanceof Editor) {\n    return editor;\n  }\n};\n\nvar ColumnHeadersViewFilterRowExtender = function () {\n  var getRangeTextByFilterValue = function (that, column) {\n    var result = \"\";\n    var rangeEnd = \"\";\n    var filterValue = getColumnFilterValue(that, column);\n    var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"filterRow\");\n\n    if (Array.isArray(filterValue)) {\n      result = gridCoreUtils.formatValue(filterValue[0], formatOptions);\n      rangeEnd = gridCoreUtils.formatValue(filterValue[1], formatOptions);\n\n      if (\"\" !== rangeEnd) {\n        result += \" - \" + rangeEnd;\n      }\n    } else if (isDefined(filterValue)) {\n      result = gridCoreUtils.formatValue(filterValue, formatOptions);\n    }\n\n    return result;\n  };\n\n  function getColumnFilterValue(that, column) {\n    if (column) {\n      return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue;\n    }\n  }\n\n  var getColumnSelectedFilterOperation = function (that, column) {\n    if (column) {\n      return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation;\n    }\n  };\n\n  var getFilterValue = function (that, columnIndex, $editorContainer) {\n    var column = that._columnsController.columnOption(columnIndex);\n\n    var filterValue = getColumnFilterValue(that, column);\n    var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\n    var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\n\n    if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\n      if (isRangeStart) {\n        return filterValue[0];\n      } else {\n        return filterValue[1];\n      }\n    }\n\n    return !isFilterRange && function (filterValue, column) {\n      if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\n        return false;\n      }\n\n      return void 0 !== filterValue;\n    }(filterValue, column) ? filterValue : null;\n  };\n\n  var updateFilterValue = function (that, options) {\n    var value = \"\" === options.value ? null : options.value;\n    var $editorContainer = options.container;\n\n    var column = that._columnsController.columnOption(options.column.index);\n\n    var filterValue = getFilterValue(that, column.index, $editorContainer);\n\n    if (!isDefined(filterValue) && !isDefined(value)) {\n      return;\n    }\n\n    that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\n\n    var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\n\n    var normalizedValue = function (that, filterValue, column, $editorContainer) {\n      if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n        var columnFilterValue = getColumnFilterValue(that, column);\n\n        if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\n          return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0];\n        } else {\n          return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue];\n        }\n      }\n\n      return filterValue;\n    }(that, value, column, $editorContainer);\n\n    var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\n    var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\n\n    that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent);\n  };\n\n  return {\n    _updateEditorValue: function (column, $editorContainer) {\n      var editor = getEditorInstance($editorContainer);\n      editor && editor.option(\"value\", getFilterValue(this, column.index, $editorContainer));\n    },\n    _columnOptionChanged: function (e) {\n      var optionNames = e.optionNames;\n      var $cell;\n      var $editorContainer;\n      var $editorRangeElements;\n      var $menu;\n\n      if (gridCoreUtils.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\", \"filterValues\", \"filterType\"]) && void 0 !== e.columnIndex) {\n        var visibleIndex = this._columnsController.getVisibleIndex(e.columnIndex);\n\n        var column = this._columnsController.columnOption(e.columnIndex);\n\n        $cell = this._getCellElement(this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || $();\n        $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\n\n        if (optionNames.filterValue || optionNames.bufferedFilterValue) {\n          this._updateEditorValue(column, $editorContainer);\n\n          var overlayInstance = $cell.find(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\n\n          if (overlayInstance) {\n            $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\n\n            this._updateEditorValue(column, $editorRangeElements.first());\n\n            this._updateEditorValue(column, $editorRangeElements.last());\n          }\n\n          if (!overlayInstance || !overlayInstance.option(\"visible\")) {\n            this._updateFilterRangeContent($cell, getRangeTextByFilterValue(this, column));\n          }\n        }\n\n        if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\n          if (visibleIndex >= 0 && column) {\n            $menu = $cell.find(\".\" + MENU_CLASS);\n\n            if ($menu.length) {\n              this._updateFilterOperationChooser($menu, column, $editorContainer);\n\n              if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\n                this._renderFilterRangeContent($cell, column);\n              } else if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\n                this._renderEditor($editorContainer, this._getEditorOptions($editorContainer, column));\n\n                this._hideFilterRange();\n              }\n            }\n          }\n        }\n\n        return;\n      }\n\n      this.callBase(e);\n    },\n    _renderCore: function () {\n      this._filterRangeOverlayInstance = null;\n      this.callBase.apply(this, arguments);\n    },\n    _resizeCore: function () {\n      this.callBase.apply(this, arguments);\n      this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint();\n    },\n    isFilterRowVisible: function () {\n      return this._isElementVisible(this.option(\"filterRow\"));\n    },\n    isVisible: function () {\n      return this.callBase() || this.isFilterRowVisible();\n    },\n    init: function () {\n      this.callBase();\n      this._applyFilterViewController = this.getController(\"applyFilter\");\n    },\n    _initFilterRangeOverlay: function ($cell, column) {\n      var that = this;\n      var sharedData = {};\n      var $editorContainer = $cell.find(\".dx-editor-container\");\n      var $overlay = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\n      return that._createComponent($overlay, Overlay, {\n        height: \"auto\",\n        shading: false,\n        showTitle: false,\n        focusStateEnabled: false,\n        hideOnOutsideClick: true,\n        copyRootClassesToWrapper: true,\n        _ignoreCopyRootClassesToWrapperDeprecation: true,\n        animation: false,\n        position: {\n          my: \"top\",\n          at: \"top\",\n          of: $editorContainer.length && $editorContainer || $cell,\n          offset: \"0 -1\"\n        },\n        contentTemplate: function (contentElement) {\n          var editorOptions;\n          var $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\n          column = that._columnsController.columnOption(column.index);\n          editorOptions = that._getEditorOptions($editor, column);\n          editorOptions.sharedData = sharedData;\n\n          that._renderEditor($editor, editorOptions);\n\n          eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function (e) {\n            var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\n\n            if (\"tab\" === normalizeKeyName(e) && e.shiftKey) {\n              e.preventDefault();\n\n              that._hideFilterRange();\n\n              if (!$prevElement.length) {\n                $prevElement = $cell.prev().find(\"[tabindex]\").last();\n              }\n\n              eventsEngine.trigger($prevElement, \"focus\");\n            }\n          });\n          $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\n          editorOptions = that._getEditorOptions($editor, column);\n          editorOptions.sharedData = sharedData;\n\n          that._renderEditor($editor, editorOptions);\n\n          eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function (e) {\n            if (\"tab\" === normalizeKeyName(e) && !e.shiftKey) {\n              e.preventDefault();\n\n              that._hideFilterRange();\n\n              eventsEngine.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\");\n            }\n          });\n          return $(contentElement).addClass(that.getWidgetContainerClass());\n        },\n        onShown: function (e) {\n          var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\n          eventsEngine.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\");\n        },\n        onHidden: function () {\n          column = that._columnsController.columnOption(column.index);\n          $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\n\n          if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n\n            that.component.updateDimensions();\n          }\n        }\n      });\n    },\n    _updateFilterRangeOverlay: function (options) {\n      var overlayInstance = this._filterRangeOverlayInstance;\n      overlayInstance && overlayInstance.option(options);\n    },\n    _showFilterRange: function ($cell, column) {\n      var $overlay = $cell.children(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\n      var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\n\n      if (!overlayInstance && column) {\n        overlayInstance = this._initFilterRangeOverlay($cell, column);\n      }\n\n      if (!overlayInstance.option(\"visible\")) {\n        this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide();\n        this._filterRangeOverlayInstance = overlayInstance;\n\n        this._updateFilterRangeOverlay({\n          width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\n        });\n\n        this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show();\n      }\n    },\n    _hideFilterRange: function () {\n      var overlayInstance = this._filterRangeOverlayInstance;\n      overlayInstance && overlayInstance.hide();\n    },\n    getFilterRangeOverlayInstance: function () {\n      return this._filterRangeOverlayInstance;\n    },\n    _createRow: function (row) {\n      var $row = this.callBase(row);\n\n      if (\"filter\" === row.rowType) {\n        $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\n\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\n          eventsEngine.on($row, \"keydown\", event => selectView(\"filterRow\", this, event));\n        }\n      }\n\n      return $row;\n    },\n    _getRows: function () {\n      var result = this.callBase();\n\n      if (this.isFilterRowVisible()) {\n        result.push({\n          rowType: \"filter\"\n        });\n      }\n\n      return result;\n    },\n    _renderFilterCell: function (cell, options) {\n      var column = options.column;\n      var $cell = $(cell);\n\n      if (this.component.option(\"showColumnHeaders\")) {\n        this.setAria(\"describedby\", column.headerId, $cell);\n      }\n\n      this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaFilterCell\"), $cell);\n      $cell.addClass(EDITOR_CELL_CLASS);\n      var $container = $(\"<div>\").appendTo($cell);\n      var $editorContainer = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\n\n      if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\n        this._renderFilterRangeContent($cell, column);\n      } else {\n        var editorOptions = this._getEditorOptions($editorContainer, column);\n\n        this._renderEditor($editorContainer, editorOptions);\n      }\n\n      var alignment = column.alignment;\n\n      if (alignment && \"center\" !== alignment) {\n        $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment);\n      }\n\n      if (column.filterOperations && column.filterOperations.length) {\n        this._renderFilterOperationChooser($container, column, $editorContainer);\n      }\n    },\n    _renderCellContent: function ($cell, options) {\n      var that = this;\n      var column = options.column;\n\n      if (\"filter\" === options.rowType) {\n        if (column.command) {\n          $cell.html(\"&nbsp;\");\n        } else if (column.allowFiltering) {\n          that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(() => {\n            that._updateCell($cell, options);\n          });\n          return;\n        }\n      }\n\n      that.callBase($cell, options);\n    },\n    _getEditorOptions: function ($editorContainer, column) {\n      var that = this;\n      var accessibilityOptions = {\n        editorOptions: {\n          inputAttr: that._getFilterInputAccessibilityAttributes(column)\n        }\n      };\n      var result = extend(accessibilityOptions, column, {\n        value: getFilterValue(that, column.index, $editorContainer),\n        parentType: \"filterRow\",\n        showAllText: that.option(\"filterRow.showAllText\"),\n        updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\n        width: null,\n        setValue: function (value, notFireEvent) {\n          updateFilterValue(that, {\n            column: column,\n            value: value,\n            container: $editorContainer,\n            notFireEvent: notFireEvent\n          });\n        }\n      });\n\n      if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n        if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\n          result.placeholder = that.option(\"filterRow.betweenStartText\");\n        } else {\n          result.placeholder = that.option(\"filterRow.betweenEndText\");\n        }\n      }\n\n      return result;\n    },\n    _getFilterInputAccessibilityAttributes: function (column) {\n      var columnAriaLabel = messageLocalization.format(\"dxDataGrid-ariaFilterCell\");\n\n      if (this.component.option(\"showColumnHeaders\")) {\n        return {\n          \"aria-label\": columnAriaLabel,\n          \"aria-describedby\": column.headerId\n        };\n      }\n\n      return {\n        \"aria-label\": columnAriaLabel\n      };\n    },\n    _renderEditor: function ($editorContainer, options) {\n      $editorContainer.empty();\n      var $element = $(\"<div>\").appendTo($editorContainer);\n      var editorController = this.getController(\"editorFactory\");\n      var dataSource = this.getController(\"data\").dataSource();\n      var filterRowController = this.getController(\"applyFilter\");\n\n      if (options.lookup && this.option(\"syncLookupFilterValues\")) {\n        filterRowController.setCurrentColumnForFiltering(options);\n        var filter = this.getController(\"data\").getCombinedFilter();\n        filterRowController.setCurrentColumnForFiltering(null);\n        var lookupDataSource = gridCoreUtils.getWrappedLookupDataSource(options, dataSource, filter);\n\n        var lookupOptions = _extends({}, options, {\n          lookup: _extends({}, options.lookup, {\n            dataSource: lookupDataSource\n          })\n        });\n\n        return editorController.createEditor($element, lookupOptions);\n      } else {\n        return editorController.createEditor($element, options);\n      }\n    },\n    _renderFilterRangeContent: function ($cell, column) {\n      var that = this;\n      var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\n      $editorContainer.empty();\n      var $filterRangeContent = $(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\n      eventsEngine.on($filterRangeContent, \"focusin\", function () {\n        that._showFilterRange($cell, column);\n      });\n      $filterRangeContent.appendTo($editorContainer);\n\n      that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n    },\n    _updateFilterRangeContent: function ($cell, value) {\n      var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\n\n      if ($filterRangeContent.length) {\n        if (\"\" === value) {\n          $filterRangeContent.html(\"&nbsp;\");\n        } else {\n          $filterRangeContent.text(value);\n        }\n      }\n    },\n    _updateFilterOperationChooser: function ($menu, column, $editorContainer) {\n      var that = this;\n      var isCellWasFocused;\n\n      var restoreFocus = function () {\n        var menu = Menu.getInstance($menu);\n        menu && menu.option(\"focusedElement\", null);\n        isCellWasFocused && that._focusEditor($editorContainer);\n      };\n\n      that._createComponent($menu, Menu, {\n        integrationOptions: {},\n        activeStateEnabled: false,\n        selectionMode: \"single\",\n        cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\n        showFirstSubmenuMode: \"onHover\",\n        hideSubmenuOnMouseLeave: true,\n        items: [{\n          disabled: column.filterOperations && column.filterOperations.length ? false : true,\n          icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\n          selectable: false,\n          items: that._getFilterOperationMenuItems(column)\n        }],\n        onItemClick: function (properties) {\n          var selectedFilterOperation = properties.itemData.name;\n          var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\n          var notFocusEditor = false;\n          var isOnClickMode = isOnClickApplyFilterMode(that);\n          var options = {};\n\n          if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\n            return;\n          }\n\n          if (selectedFilterOperation) {\n            options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\n\n            if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\n              notFocusEditor = \"between\" === selectedFilterOperation;\n              options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\n            }\n          } else {\n            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\n            options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null;\n          }\n\n          that._columnsController.columnOption(column.index, options);\n\n          that._applyFilterViewController.setHighLight($editorContainer, true);\n\n          if (!selectedFilterOperation) {\n            var editor = getEditorInstance($editorContainer);\n\n            if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\n              editor.reset();\n              editor.option(\"isValid\", true);\n            }\n          }\n\n          if (!notFocusEditor) {\n            that._focusEditor($editorContainer);\n          } else {\n            that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column);\n          }\n        },\n        onSubmenuShown: function () {\n          isCellWasFocused = that._isEditorFocused($editorContainer);\n          that.getController(\"editorFactory\").loseFocus();\n        },\n        onSubmenuHiding: function () {\n          eventsEngine.trigger($menu, \"blur\");\n          restoreFocus();\n        },\n        onContentReady: function (e) {\n          eventsEngine.on($menu, \"blur\", () => {\n            var menu = e.component;\n\n            menu._hideSubmenu(menu._visibleSubmenu);\n\n            restoreFocus();\n          });\n        },\n        rtlEnabled: that.option(\"rtlEnabled\")\n      });\n    },\n    _isEditorFocused: function ($container) {\n      return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length;\n    },\n    _focusEditor: function ($container) {\n      this.getController(\"editorFactory\").focus($container);\n      eventsEngine.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\");\n    },\n    _renderFilterOperationChooser: function ($container, column, $editorContainer) {\n      var $menu;\n\n      if (this.option(\"filterRow.showOperationChooser\")) {\n        $container.addClass(EDITOR_WITH_MENU_CLASS);\n        $menu = $(\"<div>\").prependTo($container);\n\n        this._updateFilterOperationChooser($menu, column, $editorContainer);\n      }\n    },\n    _getFilterOperationMenuItems: function (column) {\n      var that = this;\n      var result = [{}];\n      var filterRowOptions = that.option(\"filterRow\");\n      var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\n\n      if (column.filterOperations && column.filterOperations.length) {\n        var availableFilterOperations = column.filterOperations.filter(function (value) {\n          return isDefined(OPERATION_DESCRIPTORS[value]);\n        });\n        result = map(availableFilterOperations, function (value) {\n          var descriptionName = OPERATION_DESCRIPTORS[value];\n          return {\n            name: value,\n            selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\n            text: operationDescriptions[descriptionName],\n            icon: OPERATION_ICONS[value]\n          };\n        });\n        result.push({\n          name: null,\n          text: filterRowOptions && filterRowOptions.resetOperationText,\n          icon: OPERATION_ICONS.default\n        });\n      }\n\n      return result;\n    },\n    _handleDataChanged: function (e) {\n      var _e$operationTypes, _e$operationTypes2;\n\n      this.callBase.apply(this, arguments);\n\n      if (null !== (_e$operationTypes = e.operationTypes) && void 0 !== _e$operationTypes && _e$operationTypes.filtering || null !== (_e$operationTypes2 = e.operationTypes) && void 0 !== _e$operationTypes2 && _e$operationTypes2.fullReload) {\n        this.updateLookupDataSource();\n      }\n    },\n    updateLookupDataSource: function () {\n      if (!this.option(\"syncLookupFilterValues\")) {\n        return;\n      }\n\n      if (!this.element()) {\n        return;\n      }\n\n      var columns = this._columnsController.getVisibleColumns();\n\n      var dataSource = this._dataController.dataSource();\n\n      var applyFilterViewController = this._applyFilterViewController;\n      var rowIndex = this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index();\n\n      if (-1 === rowIndex) {\n        return;\n      }\n\n      columns.forEach((column, index) => {\n        if (!column.lookup) {\n          return;\n        }\n\n        var $cell = this._getCellElement(rowIndex, index);\n\n        var editor = getEditorInstance(null === $cell || void 0 === $cell ? void 0 : $cell.find(\".dx-editor-container\"));\n\n        if (editor) {\n          applyFilterViewController.setCurrentColumnForFiltering(column);\n\n          var filter = this._dataController.getCombinedFilter();\n\n          applyFilterViewController.setCurrentColumnForFiltering(null);\n          var lookupDataSource = gridCoreUtils.getWrappedLookupDataSource(column, dataSource, filter);\n          editor.option(\"dataSource\", lookupDataSource);\n        }\n      });\n    },\n    optionChanged: function (args) {\n      switch (args.name) {\n        case \"filterRow\":\n        case \"showColumnLines\":\n          this._invalidate(true, true);\n\n          args.handled = true;\n          break;\n\n        case \"syncLookupFilterValues\":\n          if (args.value) {\n            this.updateLookupDataSource();\n          } else {\n            this.render();\n          }\n\n          args.handled = true;\n          break;\n\n        default:\n          this.callBase(args);\n      }\n    }\n  };\n}();\n\nvar DataControllerFilterRowExtender = {\n  skipCalculateColumnFilters: function () {\n    return false;\n  },\n  _calculateAdditionalFilter: function () {\n    if (this.skipCalculateColumnFilters()) {\n      return this.callBase();\n    }\n\n    var filters = [this.callBase()];\n\n    var columns = this._columnsController.getVisibleColumns(null, true);\n\n    var filterRowController = this.getController(\"applyFilter\");\n    each(columns, function () {\n      var _filterRowController$;\n\n      var shouldSkip = (null === (_filterRowController$ = filterRowController.getCurrentColumnForFiltering()) || void 0 === _filterRowController$ ? void 0 : _filterRowController$.index) === this.index;\n\n      if (this.allowFiltering && this.calculateFilterExpression && isDefined(this.filterValue) && !shouldSkip) {\n        var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\n        filters.push(filter);\n      }\n    });\n    return gridCoreUtils.combineFilters(filters);\n  }\n};\nvar ApplyFilterViewController = modules.ViewController.inherit({\n  _getHeaderPanel: function () {\n    if (!this._headerPanel) {\n      this._headerPanel = this.getView(\"headerPanel\");\n    }\n\n    return this._headerPanel;\n  },\n  setHighLight: function ($element, value) {\n    if (isOnClickApplyFilterMode(this)) {\n      $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\n\n      this._getHeaderPanel().enableApplyButton(value);\n    }\n  },\n  applyFilter: function () {\n    var columnsController = this.getController(\"columns\");\n    var columns = columnsController.getColumns();\n    columnsController.beginUpdate();\n\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[i];\n\n      if (void 0 !== column.bufferedFilterValue) {\n        columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\n        column.bufferedFilterValue = void 0;\n      }\n\n      if (void 0 !== column.bufferedSelectedFilterOperation) {\n        columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\n        column.bufferedSelectedFilterOperation = void 0;\n      }\n    }\n\n    columnsController.endUpdate();\n    this.removeHighLights();\n  },\n  removeHighLights: function () {\n    if (isOnClickApplyFilterMode(this)) {\n      var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\n      columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\n      columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\n\n      this._getHeaderPanel().enableApplyButton(false);\n    }\n  },\n  setCurrentColumnForFiltering: function (column) {\n    this._currentColumn = column;\n  },\n  getCurrentColumnForFiltering: function () {\n    return this._currentColumn;\n  }\n});\nexport var filterRowModule = {\n  defaultOptions: function () {\n    return {\n      syncLookupFilterValues: true,\n      filterRow: {\n        visible: false,\n        showOperationChooser: true,\n        showAllText: messageLocalization.format(\"dxDataGrid-filterRowShowAllText\"),\n        resetOperationText: messageLocalization.format(\"dxDataGrid-filterRowResetOperationText\"),\n        applyFilter: \"auto\",\n        applyFilterText: messageLocalization.format(\"dxDataGrid-applyFilterText\"),\n        operationDescriptions: {\n          equal: messageLocalization.format(\"dxDataGrid-filterRowOperationEquals\"),\n          notEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationNotEquals\"),\n          lessThan: messageLocalization.format(\"dxDataGrid-filterRowOperationLess\"),\n          lessThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\n          greaterThan: messageLocalization.format(\"dxDataGrid-filterRowOperationGreater\"),\n          greaterThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\n          startsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationStartsWith\"),\n          contains: messageLocalization.format(\"dxDataGrid-filterRowOperationContains\"),\n          notContains: messageLocalization.format(\"dxDataGrid-filterRowOperationNotContains\"),\n          endsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationEndsWith\"),\n          between: messageLocalization.format(\"dxDataGrid-filterRowOperationBetween\"),\n          isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\n          isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\n        },\n        betweenStartText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\n        betweenEndText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\n      }\n    };\n  },\n  controllers: {\n    applyFilter: ApplyFilterViewController\n  },\n  extenders: {\n    controllers: {\n      data: DataControllerFilterRowExtender,\n      columnsResizer: {\n        _startResizing: function () {\n          var that = this;\n          that.callBase.apply(that, arguments);\n\n          if (that.isResizing()) {\n            var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\n\n            if (overlayInstance) {\n              var cellIndex = overlayInstance.$element().closest(\"td\").index();\n\n              if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\n                overlayInstance.$content().hide();\n              }\n            }\n          }\n        },\n        _endResizing: function () {\n          var that = this;\n          var $cell;\n\n          if (that.isResizing()) {\n            var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\n\n            if (overlayInstance) {\n              $cell = overlayInstance.$element().closest(\"td\");\n\n              that._columnHeadersView._updateFilterRangeOverlay({\n                width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\n              });\n\n              overlayInstance.$content().show();\n            }\n          }\n\n          that.callBase.apply(that, arguments);\n        }\n      },\n      editing: {\n        updateFieldValue(options) {\n          if (options.column.lookup) {\n            this._needUpdateLookupDataSource = true;\n          }\n\n          return this.callBase.apply(this, arguments);\n        },\n\n        _afterSaveEditData(cancel) {\n          if (this._needUpdateLookupDataSource && !cancel) {\n            var _this$getView;\n\n            null === (_this$getView = this.getView(\"columnHeadersView\")) || void 0 === _this$getView ? void 0 : _this$getView.updateLookupDataSource();\n          }\n\n          this._needUpdateLookupDataSource = false;\n          return this.callBase.apply(this, arguments);\n        },\n\n        _afterCancelEditData() {\n          this._needUpdateLookupDataSource = false;\n          return this.callBase.apply(this, arguments);\n        }\n\n      }\n    },\n    views: {\n      columnHeadersView: ColumnHeadersViewFilterRowExtender,\n      headerPanel: {\n        _getToolbarItems: function () {\n          var items = this.callBase();\n\n          var filterItem = this._prepareFilterItem(items);\n\n          return filterItem.concat(items);\n        },\n        _prepareFilterItem: function () {\n          var that = this;\n          var filterItem = [];\n\n          if (that._isShowApplyFilterButton()) {\n            var hintText = that.option(\"filterRow.applyFilterText\");\n\n            var columns = that._columnsController.getColumns();\n\n            var disabled = !columns.filter(function (column) {\n              return void 0 !== column.bufferedFilterValue;\n            }).length;\n            var toolbarItem = {\n              widget: \"dxButton\",\n              options: {\n                icon: \"apply-filter\",\n                disabled: disabled,\n                onClick: function () {\n                  that._applyFilterViewController.applyFilter();\n                },\n                hint: hintText,\n                text: hintText,\n                onInitialized: function (e) {\n                  $(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS));\n                }\n              },\n              showText: \"inMenu\",\n              name: \"applyFilterButton\",\n              location: \"after\",\n              locateInMenu: \"auto\",\n              sortIndex: 10\n            };\n            filterItem.push(toolbarItem);\n          }\n\n          return filterItem;\n        },\n        _isShowApplyFilterButton: function () {\n          var filterRowOptions = this.option(\"filterRow\");\n          return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter;\n        },\n        init: function () {\n          this.callBase();\n          this._dataController = this.getController(\"data\");\n          this._applyFilterViewController = this.getController(\"applyFilter\");\n        },\n        enableApplyButton: function (value) {\n          this.setToolbarItemDisabled(\"applyFilterButton\", !value);\n        },\n        isVisible: function () {\n          return this.callBase() || this._isShowApplyFilterButton();\n        },\n        optionChanged: function (args) {\n          if (\"filterRow\" === args.name) {\n            this._invalidate();\n\n            args.handled = true;\n          } else {\n            this.callBase(args);\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["_extends","getOuterWidth","$","eventsEngine","isDefined","extend","normalizeKeyName","each","map","modules","gridCoreUtils","messageLocalization","Editor","Overlay","Menu","selectView","OPERATION_ICONS","default","notcontains","contains","startswith","endswith","between","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_ROW_CLASS","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","EDITOR_CELL_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","CELL_FOCUS_DISABLED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","EDITORS_INPUT_SELECTOR","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","that","option","getEditorInstance","$editorContainer","$editor","children","componentNames","data","editor","length","ColumnHeadersViewFilterRowExtender","getRangeTextByFilterValue","column","result","rangeEnd","filterValue","getColumnFilterValue","formatOptions","getFormatOptionsByColumn","Array","isArray","formatValue","bufferedFilterValue","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","selectedFilterOperation","getFilterValue","columnIndex","_columnsController","columnOption","isFilterRange","closest","addWidgetPrefix","isRangeStart","hasClass","indexOf","dataType","updateFilterValue","options","value","container","index","_applyFilterViewController","setHighLight","columnOptionName","normalizedValue","columnFilterValue","isBetween","notFireEvent","_updateEditorValue","_columnOptionChanged","e","optionNames","$cell","$editorRangeElements","$menu","checkChanges","visibleIndex","getVisibleIndex","_getCellElement","element","find","first","overlayInstance","$content","last","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","callBase","_renderCore","_filterRangeOverlayInstance","apply","arguments","_resizeCore","repaint","isFilterRowVisible","_isElementVisible","isVisible","init","getController","_initFilterRangeOverlay","sharedData","$overlay","addClass","appendTo","_createComponent","height","shading","showTitle","focusStateEnabled","hideOnOutsideClick","copyRootClassesToWrapper","_ignoreCopyRootClassesToWrapperDeprecation","animation","position","my","at","of","offset","contentTemplate","contentElement","editorOptions","on","$prevElement","not","target","shiftKey","preventDefault","prev","trigger","next","getWidgetContainerClass","onShown","component","onHidden","parent","updateDimensions","_updateFilterRangeOverlay","_showFilterRange","hide","width","show","getFilterRangeOverlayInstance","_createRow","row","$row","rowType","event","_getRows","push","_renderFilterCell","cell","setAria","headerId","format","$container","alignment","css","filterOperations","_renderFilterOperationChooser","_renderCellContent","command","html","allowFiltering","renderTemplate","bind","done","_updateCell","accessibilityOptions","inputAttr","_getFilterInputAccessibilityAttributes","parentType","showAllText","updateValueTimeout","setValue","placeholder","columnAriaLabel","empty","$element","editorController","dataSource","filterRowController","lookup","setCurrentColumnForFiltering","filter","getCombinedFilter","lookupDataSource","getWrappedLookupDataSource","lookupOptions","createEditor","$filterRangeContent","attr","text","isCellWasFocused","restoreFocus","menu","getInstance","_focusEditor","integrationOptions","activeStateEnabled","selectionMode","cssClass","showFirstSubmenuMode","hideSubmenuOnMouseLeave","items","disabled","icon","selectable","_getFilterOperationMenuItems","onItemClick","properties","itemData","name","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","defaultSelectedFilterOperation","NAME","reset","onSubmenuShown","_isEditorFocused","loseFocus","onSubmenuHiding","onContentReady","_hideSubmenu","_visibleSubmenu","rtlEnabled","parents","focus","prependTo","filterRowOptions","operationDescriptions","availableFilterOperations","descriptionName","selected","defaultFilterOperation","resetOperationText","_handleDataChanged","_e$operationTypes","_e$operationTypes2","operationTypes","filtering","fullReload","updateLookupDataSource","columns","getVisibleColumns","_dataController","applyFilterViewController","rowIndex","forEach","optionChanged","args","_invalidate","handled","render","DataControllerFilterRowExtender","skipCalculateColumnFilters","_calculateAdditionalFilter","filters","_filterRowController$","shouldSkip","getCurrentColumnForFiltering","calculateFilterExpression","createFilterExpression","combineFilters","ApplyFilterViewController","ViewController","inherit","_getHeaderPanel","_headerPanel","getView","toggleClass","enableApplyButton","applyFilter","columnsController","getColumns","beginUpdate","i","endUpdate","removeHighLights","columnHeadersViewElement","removeClass","_currentColumn","filterRowModule","defaultOptions","syncLookupFilterValues","filterRow","visible","showOperationChooser","applyFilterText","equal","notEqual","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","startsWith","notContains","endsWith","isBlank","isNotBlank","betweenStartText","betweenEndText","controllers","extenders","columnsResizer","_startResizing","isResizing","_columnHeadersView","cellIndex","_targetPoint","_endResizing","editing","updateFieldValue","_needUpdateLookupDataSource","_afterSaveEditData","cancel","_this$getView","_afterCancelEditData","views","columnHeadersView","headerPanel","_getToolbarItems","filterItem","_prepareFilterItem","concat","_isShowApplyFilterButton","hintText","toolbarItem","widget","onClick","hint","onInitialized","_getToolbarButtonClass","showText","location","locateInMenu","sortIndex","setToolbarItemDisabled"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_row.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Editor from \"../editor/editor\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Menu from \"../menu\";\r\nimport {\r\n    selectView\r\n} from \"../shared/accessibility\";\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    default: \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar getEditorInstance = function($editorContainer) {\r\n    var $editor = $editorContainer && $editorContainer.children();\r\n    var componentNames = $editor && $editor.data(\"dxComponents\");\r\n    var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n    if (editor instanceof Editor) {\r\n        return editor\r\n    }\r\n};\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = gridCoreUtils.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else if (isDefined(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue, formatOptions)\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && function(filterValue, column) {\r\n            if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n                return false\r\n            }\r\n            return void 0 !== filterValue\r\n        }(filterValue, column) ? filterValue : null\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!isDefined(filterValue) && !isDefined(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\r\n        var normalizedValue = function(that, filterValue, column, $editorContainer) {\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                var columnFilterValue = getColumnFilterValue(that, column);\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n                } else {\r\n                    return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n                }\r\n            }\r\n            return filterValue\r\n        }(that, value, column, $editorContainer);\r\n        var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\r\n        var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\r\n        that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(this, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (gridCoreUtils.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\", \"filterValues\", \"filterType\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = this._columnsController.columnOption(e.columnIndex);\r\n                $cell = this._getCellElement(this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || $();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    this._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        this._updateEditorValue(column, $editorRangeElements.first());\r\n                        this._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        this._updateFilterRangeContent($cell, getRangeTextByFilterValue(this, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            this._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                                this._renderFilterRangeContent($cell, column)\r\n                            } else if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                this._renderEditor($editorContainer, this._getEditorOptions($editorContainer, column));\r\n                                this._hideFilterRange()\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            this.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, Overlay, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                hideOnOutsideClick: true,\r\n                copyRootClassesToWrapper: true,\r\n                _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === normalizeKeyName(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            eventsEngine.trigger($prevElement, \"focus\")\r\n                        }\r\n                    }));\r\n                    $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        if (\"tab\" === normalizeKeyName(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            eventsEngine.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    }));\r\n                    return $(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    eventsEngine.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var $overlay = $cell.children(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = this._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide();\r\n                this._filterRangeOverlayInstance = overlayInstance;\r\n                this._updateFilterRangeOverlay({\r\n                    width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    eventsEngine.on($row, \"keydown\", event => selectView(\"filterRow\", this, event))\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var column = options.column;\r\n            var $cell = $(cell);\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = $(\"<div>\").appendTo($cell);\r\n            var $editorContainer = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                this._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = this._getEditorOptions($editorContainer, column);\r\n                this._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                this._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else if (column.allowFiltering) {\r\n                    that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(() => {\r\n                        that._updateCell($cell, options)\r\n                    });\r\n                    return\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = extend(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = messageLocalization.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            var $element = $(\"<div>\").appendTo($editorContainer);\r\n            var editorController = this.getController(\"editorFactory\");\r\n            var dataSource = this.getController(\"data\").dataSource();\r\n            var filterRowController = this.getController(\"applyFilter\");\r\n            if (options.lookup && this.option(\"syncLookupFilterValues\")) {\r\n                filterRowController.setCurrentColumnForFiltering(options);\r\n                var filter = this.getController(\"data\").getCombinedFilter();\r\n                filterRowController.setCurrentColumnForFiltering(null);\r\n                var lookupDataSource = gridCoreUtils.getWrappedLookupDataSource(options, dataSource, filter);\r\n                var lookupOptions = _extends({}, options, {\r\n                    lookup: _extends({}, options.lookup, {\r\n                        dataSource: lookupDataSource\r\n                    })\r\n                });\r\n                return editorController.createEditor($element, lookupOptions)\r\n            } else {\r\n                return editorController.createEditor($element, options)\r\n            }\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = $(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            eventsEngine.on($filterRangeContent, \"focusin\", (function() {\r\n                that._showFilterRange($cell, column)\r\n            }));\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = Menu.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, Menu, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    eventsEngine.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    eventsEngine.on($menu, \"blur\", () => {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            eventsEngine.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var $menu;\r\n            if (this.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = $(\"<div>\").prependTo($container);\r\n                this._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter((function(value) {\r\n                    return isDefined(OPERATION_DESCRIPTORS[value])\r\n                }));\r\n                result = map(availableFilterOperations, (function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                }));\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _handleDataChanged: function(e) {\r\n            var _e$operationTypes, _e$operationTypes2;\r\n            this.callBase.apply(this, arguments);\r\n            if (null !== (_e$operationTypes = e.operationTypes) && void 0 !== _e$operationTypes && _e$operationTypes.filtering || null !== (_e$operationTypes2 = e.operationTypes) && void 0 !== _e$operationTypes2 && _e$operationTypes2.fullReload) {\r\n                this.updateLookupDataSource()\r\n            }\r\n        },\r\n        updateLookupDataSource: function() {\r\n            if (!this.option(\"syncLookupFilterValues\")) {\r\n                return\r\n            }\r\n            if (!this.element()) {\r\n                return\r\n            }\r\n            var columns = this._columnsController.getVisibleColumns();\r\n            var dataSource = this._dataController.dataSource();\r\n            var applyFilterViewController = this._applyFilterViewController;\r\n            var rowIndex = this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index();\r\n            if (-1 === rowIndex) {\r\n                return\r\n            }\r\n            columns.forEach((column, index) => {\r\n                if (!column.lookup) {\r\n                    return\r\n                }\r\n                var $cell = this._getCellElement(rowIndex, index);\r\n                var editor = getEditorInstance(null === $cell || void 0 === $cell ? void 0 : $cell.find(\".dx-editor-container\"));\r\n                if (editor) {\r\n                    applyFilterViewController.setCurrentColumnForFiltering(column);\r\n                    var filter = this._dataController.getCombinedFilter();\r\n                    applyFilterViewController.setCurrentColumnForFiltering(null);\r\n                    var lookupDataSource = gridCoreUtils.getWrappedLookupDataSource(column, dataSource, filter);\r\n                    editor.option(\"dataSource\", lookupDataSource)\r\n                }\r\n            })\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                case \"syncLookupFilterValues\":\r\n                    if (args.value) {\r\n                        this.updateLookupDataSource()\r\n                    } else {\r\n                        this.render()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var filterRowController = this.getController(\"applyFilter\");\r\n        each(columns, (function() {\r\n            var _filterRowController$;\r\n            var shouldSkip = (null === (_filterRowController$ = filterRowController.getCurrentColumnForFiltering()) || void 0 === _filterRowController$ ? void 0 : _filterRowController$.index) === this.index;\r\n            if (this.allowFiltering && this.calculateFilterExpression && isDefined(this.filterValue) && !shouldSkip) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = modules.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    },\r\n    setCurrentColumnForFiltering: function(column) {\r\n        this._currentColumn = column\r\n    },\r\n    getCurrentColumnForFiltering: function() {\r\n        return this._currentColumn\r\n    }\r\n});\r\nexport var filterRowModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            syncLookupFilterValues: true,\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: messageLocalization.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: messageLocalization.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: messageLocalization.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: messageLocalization.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: messageLocalization.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            },\r\n            editing: {\r\n                updateFieldValue(options) {\r\n                    if (options.column.lookup) {\r\n                        this._needUpdateLookupDataSource = true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _afterSaveEditData(cancel) {\r\n                    if (this._needUpdateLookupDataSource && !cancel) {\r\n                        var _this$getView;\r\n                        null === (_this$getView = this.getView(\"columnHeadersView\")) || void 0 === _this$getView ? void 0 : _this$getView.updateLookupDataSource()\r\n                    }\r\n                    this._needUpdateLookupDataSource = false;\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _afterCancelEditData() {\r\n                    this._needUpdateLookupDataSource = false;\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter((function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        })).length;\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: function() {\r\n                                    that._applyFilterViewController.applyFilter()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
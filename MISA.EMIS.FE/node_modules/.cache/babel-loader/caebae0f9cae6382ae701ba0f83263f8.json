{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.files_tree_view.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getImageContainer } from \"../../core/utils/icon\";\nimport { noop } from \"../../core/utils/common\";\nimport Widget from \"../widget/ui.widget\";\nimport TreeViewSearch from \"../tree_view/ui.tree_view.search\";\nimport FileManagerFileActionsButton from \"./ui.file_manager.file_actions_button\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport { isNumeric } from \"../../core/utils/type\";\nvar FILE_MANAGER_DIRS_TREE_CLASS = \"dx-filemanager-dirs-tree\";\nvar FILE_MANAGER_DIRS_TREE_FOCUSED_ITEM_CLASS = \"dx-filemanager-focused-item\";\nvar FILE_MANAGER_DIRS_TREE_ITEM_TEXT_CLASS = \"dx-filemanager-dirs-tree-item-text\";\nvar TREE_VIEW_ITEM_CLASS = \"dx-treeview-item\";\n\nclass FileManagerFilesTreeView extends Widget {\n  _initMarkup() {\n    this._initActions();\n\n    this._getCurrentDirectory = this.option(\"getCurrentDirectory\");\n    this._createFileActionsButton = noop;\n    this._storeExpandedState = this.option(\"storeExpandedState\") || false;\n    var $treeView = $(\"<div>\").addClass(FILE_MANAGER_DIRS_TREE_CLASS).appendTo(this.$element());\n    var treeViewOptions = {\n      dataStructure: \"plain\",\n      rootValue: \"\",\n      createChildren: this._onFilesTreeViewCreateSubDirectories.bind(this),\n      itemTemplate: this._createFilesTreeViewItemTemplate.bind(this),\n      keyExpr: \"getInternalKey\",\n      parentIdExpr: \"parentDirectory.getInternalKey\",\n      displayExpr: itemInfo => itemInfo.getDisplayName(),\n      hasItemsExpr: \"fileItem.hasSubDirectories\",\n      onItemClick: e => this._actions.onDirectoryClick(e),\n      onItemExpanded: e => this._onFilesTreeViewItemExpanded(e),\n      onItemCollapsed: e => this._onFilesTreeViewItemCollapsed(e),\n      onItemRendered: e => this._onFilesTreeViewItemRendered(e),\n      onContentReady: () => this._actions.onFilesTreeViewContentReady()\n    };\n\n    if (this._contextMenu) {\n      this._contextMenu.option(\"onContextMenuHidden\", () => this._onContextMenuHidden());\n\n      treeViewOptions.onItemContextMenu = e => this._onFilesTreeViewItemContextMenu(e);\n\n      this._createFileActionsButton = (element, options) => this._createComponent(element, FileManagerFileActionsButton, options);\n    }\n\n    this._filesTreeView = this._createComponent($treeView, TreeViewSearch, treeViewOptions);\n  }\n\n  _initActions() {\n    this._actions = {\n      onDirectoryClick: this._createActionByOption(\"onDirectoryClick\"),\n      onFilesTreeViewContentReady: this._createActionByOption(\"onFilesTreeViewContentReady\")\n    };\n  }\n\n  _render() {\n    super._render();\n\n    var that = this;\n    setTimeout(() => {\n      that._updateFocusedElement();\n    });\n  }\n\n  _onFilesTreeViewCreateSubDirectories(rootItem) {\n    var getDirectories = this.option(\"getDirectories\");\n    var directoryInfo = rootItem && rootItem.itemData || null;\n    return getDirectories && getDirectories(directoryInfo, true);\n  }\n\n  _onFilesTreeViewItemRendered(_ref) {\n    var {\n      itemData: itemData\n    } = _ref;\n\n    var currentDirectory = this._getCurrentDirectory();\n\n    if (currentDirectory && currentDirectory.fileItem.equals(itemData.fileItem)) {\n      this._updateFocusedElement();\n\n      this._restoreScrollTopPosition();\n    }\n  }\n\n  _onFilesTreeViewItemExpanded(_ref2) {\n    var {\n      itemData: itemData\n    } = _ref2;\n\n    if (this._storeExpandedState) {\n      itemData.expanded = true;\n    }\n  }\n\n  _onFilesTreeViewItemCollapsed(_ref3) {\n    var {\n      itemData: itemData\n    } = _ref3;\n\n    if (this._storeExpandedState) {\n      itemData.expanded = false;\n    }\n  }\n\n  _createFilesTreeViewItemTemplate(itemData, itemIndex, itemElement) {\n    var $itemElement = $(itemElement);\n    var $itemWrapper = $itemElement.closest(this._filesTreeViewItemSelector);\n    $itemWrapper.data(\"item\", itemData);\n    var $image = getImageContainer(itemData.icon);\n    var $text = $(\"<span>\").text(itemData.getDisplayName()).addClass(FILE_MANAGER_DIRS_TREE_ITEM_TEXT_CLASS);\n    var $button = $(\"<div>\");\n    $itemElement.append($image, $text, $button);\n\n    this._createFileActionsButton($button, {\n      onClick: e => this._onFileItemActionButtonClick(e)\n    });\n  }\n\n  _onFilesTreeViewItemContextMenu(_ref4) {\n    var {\n      itemElement: itemElement,\n      event: event\n    } = _ref4;\n    event.preventDefault();\n    event.stopPropagation();\n    var itemData = $(itemElement).data(\"item\");\n\n    this._contextMenu.showAt([itemData], itemElement, event, {\n      itemData: itemData,\n      itemElement: itemElement\n    });\n  }\n\n  _onFileItemActionButtonClick(_ref5) {\n    var {\n      component: component,\n      element: element,\n      event: event\n    } = _ref5;\n    event.stopPropagation();\n    var itemElement = component.$element().closest(this._filesTreeViewItemSelector);\n    var itemData = itemElement.data(\"item\");\n    var target = {\n      itemData: itemData,\n      itemElement: itemElement,\n      isActionButton: true\n    };\n\n    this._contextMenu.showAt([itemData], element, event, target);\n\n    this._activeFileActionsButton = component;\n\n    this._activeFileActionsButton.setActive(true);\n  }\n\n  _onContextMenuHidden() {\n    if (this._activeFileActionsButton) {\n      this._activeFileActionsButton.setActive(false);\n    }\n  }\n\n  toggleNodeDisabledState(key, state) {\n    var node = this._getNodeByKey(key);\n\n    if (!node) {\n      return;\n    }\n\n    var items = this._filesTreeView.option(\"items\");\n\n    var itemIndex = items.map(item => item.getInternalKey()).indexOf(node.getInternalKey());\n\n    if (-1 !== itemIndex) {\n      this._filesTreeView.option(\"items[\".concat(itemIndex, \"].disabled\"), state);\n    }\n  }\n\n  _saveScrollTopPosition() {\n    if (!hasWindow()) {\n      return;\n    }\n\n    this._scrollTopPosition = this._filesTreeView.getScrollable().scrollTop();\n  }\n\n  _restoreScrollTopPosition() {\n    if (!hasWindow() || !isNumeric(this._scrollTopPosition)) {\n      return;\n    }\n\n    setTimeout(() => this._filesTreeView.getScrollable().scrollTo(this._scrollTopPosition));\n  }\n\n  _updateFocusedElement() {\n    var directoryInfo = this._getCurrentDirectory();\n\n    var $element = this._getItemElementByKey(null === directoryInfo || void 0 === directoryInfo ? void 0 : directoryInfo.getInternalKey());\n\n    if (this._$focusedElement) {\n      this._$focusedElement.toggleClass(FILE_MANAGER_DIRS_TREE_FOCUSED_ITEM_CLASS, false);\n    }\n\n    this._$focusedElement = $element || $();\n\n    this._$focusedElement.toggleClass(FILE_MANAGER_DIRS_TREE_FOCUSED_ITEM_CLASS, true);\n  }\n\n  _getNodeByKey(key) {\n    var _this$_filesTreeView;\n\n    return null === (_this$_filesTreeView = this._filesTreeView) || void 0 === _this$_filesTreeView ? void 0 : _this$_filesTreeView._getNode(key);\n  }\n\n  _getPublicNode(key) {\n    var _this$_filesTreeView2;\n\n    var nodesQueue = [...(null === (_this$_filesTreeView2 = this._filesTreeView) || void 0 === _this$_filesTreeView2 ? void 0 : _this$_filesTreeView2.getNodes())];\n\n    while (nodesQueue.length) {\n      var node = nodesQueue.shift();\n\n      if (node.itemData.getInternalKey() === key) {\n        return node;\n      } else if (node.children.length) {\n        nodesQueue.push(...node.children);\n      }\n    }\n\n    return;\n  }\n\n  _getItemElementByKey(key) {\n    var node = this._getNodeByKey(key);\n\n    if (node) {\n      var $node = this._filesTreeView._getNodeElement(node);\n\n      if ($node) {\n        return $node.children(this._filesTreeViewItemSelector);\n      }\n    }\n\n    return null;\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      storeExpandedState: false,\n      initialFolder: null,\n      contextMenu: null,\n      getItems: null,\n      getCurrentDirectory: null,\n      onDirectoryClick: null\n    });\n  }\n\n  _optionChanged(args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"storeExpandedState\":\n        this._storeExpandedState = this.option(name);\n        break;\n\n      case \"getItems\":\n      case \"rootFolderDisplayName\":\n      case \"initialFolder\":\n      case \"contextMenu\":\n        this.repaint();\n        break;\n\n      case \"getCurrentDirectory\":\n        this.getCurrentDirectory = this.option(name);\n        break;\n\n      case \"onDirectoryClick\":\n      case \"onFilesTreeViewContentReady\":\n        this._actions[name] = this._createActionByOption(name);\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  get _filesTreeViewItemSelector() {\n    return \".\".concat(TREE_VIEW_ITEM_CLASS);\n  }\n\n  get _contextMenu() {\n    return this.option(\"contextMenu\");\n  }\n\n  toggleDirectoryExpandedState(directoryInfo, state) {\n    var deferred = new Deferred();\n\n    var treeViewNode = this._getPublicNode(null === directoryInfo || void 0 === directoryInfo ? void 0 : directoryInfo.getInternalKey());\n\n    if (!treeViewNode) {\n      return deferred.reject().promise();\n    }\n\n    if (treeViewNode.expanded === state || treeViewNode.itemsLoaded && !treeViewNode.itemData.fileItem.hasSubDirectories) {\n      return deferred.resolve().promise();\n    }\n\n    var action = state ? \"expandItem\" : \"collapseItem\";\n    return this._filesTreeView[action](directoryInfo.getInternalKey());\n  }\n\n  refresh() {\n    this._$focusedElement = null;\n\n    this._saveScrollTopPosition();\n\n    this._filesTreeView.option(\"dataSource\", []);\n  }\n\n  updateCurrentDirectory() {\n    if (this._disposed) {\n      return;\n    }\n\n    this._updateFocusedElement();\n\n    this._storeExpandedState && this._updateExpandedStateToCurrentDirectory();\n  }\n\n  _updateExpandedStateToCurrentDirectory() {\n    return this.toggleDirectoryExpandedStateRecursive(this._getCurrentDirectory().parentDirectory, true);\n  }\n\n  toggleDirectoryExpandedStateRecursive(directoryInfo, state) {\n    var dirLine = [];\n\n    for (var dirInfo = directoryInfo; dirInfo; dirInfo = dirInfo.parentDirectory) {\n      dirLine.unshift(dirInfo);\n    }\n\n    return this.toggleDirectoryLineExpandedState(dirLine, state);\n  }\n\n  toggleDirectoryLineExpandedState(dirLine, state) {\n    if (!dirLine.length) {\n      return new Deferred().resolve().promise();\n    }\n\n    return this.toggleDirectoryExpandedState(dirLine.shift(), state).then(() => this.toggleDirectoryLineExpandedState(dirLine, state));\n  }\n\n}\n\nexport default FileManagerFilesTreeView;","map":{"version":3,"names":["$","extend","getImageContainer","noop","Widget","TreeViewSearch","FileManagerFileActionsButton","Deferred","hasWindow","isNumeric","FILE_MANAGER_DIRS_TREE_CLASS","FILE_MANAGER_DIRS_TREE_FOCUSED_ITEM_CLASS","FILE_MANAGER_DIRS_TREE_ITEM_TEXT_CLASS","TREE_VIEW_ITEM_CLASS","FileManagerFilesTreeView","_initMarkup","_initActions","_getCurrentDirectory","option","_createFileActionsButton","_storeExpandedState","$treeView","addClass","appendTo","$element","treeViewOptions","dataStructure","rootValue","createChildren","_onFilesTreeViewCreateSubDirectories","bind","itemTemplate","_createFilesTreeViewItemTemplate","keyExpr","parentIdExpr","displayExpr","itemInfo","getDisplayName","hasItemsExpr","onItemClick","e","_actions","onDirectoryClick","onItemExpanded","_onFilesTreeViewItemExpanded","onItemCollapsed","_onFilesTreeViewItemCollapsed","onItemRendered","_onFilesTreeViewItemRendered","onContentReady","onFilesTreeViewContentReady","_contextMenu","_onContextMenuHidden","onItemContextMenu","_onFilesTreeViewItemContextMenu","element","options","_createComponent","_filesTreeView","_createActionByOption","_render","that","setTimeout","_updateFocusedElement","rootItem","getDirectories","directoryInfo","itemData","_ref","currentDirectory","fileItem","equals","_restoreScrollTopPosition","_ref2","expanded","_ref3","itemIndex","itemElement","$itemElement","$itemWrapper","closest","_filesTreeViewItemSelector","data","$image","icon","$text","text","$button","append","onClick","_onFileItemActionButtonClick","_ref4","event","preventDefault","stopPropagation","showAt","_ref5","component","target","isActionButton","_activeFileActionsButton","setActive","toggleNodeDisabledState","key","state","node","_getNodeByKey","items","map","item","getInternalKey","indexOf","concat","_saveScrollTopPosition","_scrollTopPosition","getScrollable","scrollTop","scrollTo","_getItemElementByKey","_$focusedElement","toggleClass","_this$_filesTreeView","_getNode","_getPublicNode","_this$_filesTreeView2","nodesQueue","getNodes","length","shift","children","push","$node","_getNodeElement","_getDefaultOptions","storeExpandedState","initialFolder","contextMenu","getItems","getCurrentDirectory","_optionChanged","args","name","repaint","toggleDirectoryExpandedState","deferred","treeViewNode","reject","promise","itemsLoaded","hasSubDirectories","resolve","action","refresh","updateCurrentDirectory","_disposed","_updateExpandedStateToCurrentDirectory","toggleDirectoryExpandedStateRecursive","parentDirectory","dirLine","dirInfo","unshift","toggleDirectoryLineExpandedState","then"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.files_tree_view.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.files_tree_view.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../core/utils/icon\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport TreeViewSearch from \"../tree_view/ui.tree_view.search\";\r\nimport FileManagerFileActionsButton from \"./ui.file_manager.file_actions_button\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nvar FILE_MANAGER_DIRS_TREE_CLASS = \"dx-filemanager-dirs-tree\";\r\nvar FILE_MANAGER_DIRS_TREE_FOCUSED_ITEM_CLASS = \"dx-filemanager-focused-item\";\r\nvar FILE_MANAGER_DIRS_TREE_ITEM_TEXT_CLASS = \"dx-filemanager-dirs-tree-item-text\";\r\nvar TREE_VIEW_ITEM_CLASS = \"dx-treeview-item\";\r\nclass FileManagerFilesTreeView extends Widget {\r\n    _initMarkup() {\r\n        this._initActions();\r\n        this._getCurrentDirectory = this.option(\"getCurrentDirectory\");\r\n        this._createFileActionsButton = noop;\r\n        this._storeExpandedState = this.option(\"storeExpandedState\") || false;\r\n        var $treeView = $(\"<div>\").addClass(FILE_MANAGER_DIRS_TREE_CLASS).appendTo(this.$element());\r\n        var treeViewOptions = {\r\n            dataStructure: \"plain\",\r\n            rootValue: \"\",\r\n            createChildren: this._onFilesTreeViewCreateSubDirectories.bind(this),\r\n            itemTemplate: this._createFilesTreeViewItemTemplate.bind(this),\r\n            keyExpr: \"getInternalKey\",\r\n            parentIdExpr: \"parentDirectory.getInternalKey\",\r\n            displayExpr: itemInfo => itemInfo.getDisplayName(),\r\n            hasItemsExpr: \"fileItem.hasSubDirectories\",\r\n            onItemClick: e => this._actions.onDirectoryClick(e),\r\n            onItemExpanded: e => this._onFilesTreeViewItemExpanded(e),\r\n            onItemCollapsed: e => this._onFilesTreeViewItemCollapsed(e),\r\n            onItemRendered: e => this._onFilesTreeViewItemRendered(e),\r\n            onContentReady: () => this._actions.onFilesTreeViewContentReady()\r\n        };\r\n        if (this._contextMenu) {\r\n            this._contextMenu.option(\"onContextMenuHidden\", () => this._onContextMenuHidden());\r\n            treeViewOptions.onItemContextMenu = e => this._onFilesTreeViewItemContextMenu(e);\r\n            this._createFileActionsButton = (element, options) => this._createComponent(element, FileManagerFileActionsButton, options)\r\n        }\r\n        this._filesTreeView = this._createComponent($treeView, TreeViewSearch, treeViewOptions)\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onDirectoryClick: this._createActionByOption(\"onDirectoryClick\"),\r\n            onFilesTreeViewContentReady: this._createActionByOption(\"onFilesTreeViewContentReady\")\r\n        }\r\n    }\r\n    _render() {\r\n        super._render();\r\n        var that = this;\r\n        setTimeout(() => {\r\n            that._updateFocusedElement()\r\n        })\r\n    }\r\n    _onFilesTreeViewCreateSubDirectories(rootItem) {\r\n        var getDirectories = this.option(\"getDirectories\");\r\n        var directoryInfo = rootItem && rootItem.itemData || null;\r\n        return getDirectories && getDirectories(directoryInfo, true)\r\n    }\r\n    _onFilesTreeViewItemRendered(_ref) {\r\n        var {\r\n            itemData: itemData\r\n        } = _ref;\r\n        var currentDirectory = this._getCurrentDirectory();\r\n        if (currentDirectory && currentDirectory.fileItem.equals(itemData.fileItem)) {\r\n            this._updateFocusedElement();\r\n            this._restoreScrollTopPosition()\r\n        }\r\n    }\r\n    _onFilesTreeViewItemExpanded(_ref2) {\r\n        var {\r\n            itemData: itemData\r\n        } = _ref2;\r\n        if (this._storeExpandedState) {\r\n            itemData.expanded = true\r\n        }\r\n    }\r\n    _onFilesTreeViewItemCollapsed(_ref3) {\r\n        var {\r\n            itemData: itemData\r\n        } = _ref3;\r\n        if (this._storeExpandedState) {\r\n            itemData.expanded = false\r\n        }\r\n    }\r\n    _createFilesTreeViewItemTemplate(itemData, itemIndex, itemElement) {\r\n        var $itemElement = $(itemElement);\r\n        var $itemWrapper = $itemElement.closest(this._filesTreeViewItemSelector);\r\n        $itemWrapper.data(\"item\", itemData);\r\n        var $image = getImageContainer(itemData.icon);\r\n        var $text = $(\"<span>\").text(itemData.getDisplayName()).addClass(FILE_MANAGER_DIRS_TREE_ITEM_TEXT_CLASS);\r\n        var $button = $(\"<div>\");\r\n        $itemElement.append($image, $text, $button);\r\n        this._createFileActionsButton($button, {\r\n            onClick: e => this._onFileItemActionButtonClick(e)\r\n        })\r\n    }\r\n    _onFilesTreeViewItemContextMenu(_ref4) {\r\n        var {\r\n            itemElement: itemElement,\r\n            event: event\r\n        } = _ref4;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        var itemData = $(itemElement).data(\"item\");\r\n        this._contextMenu.showAt([itemData], itemElement, event, {\r\n            itemData: itemData,\r\n            itemElement: itemElement\r\n        })\r\n    }\r\n    _onFileItemActionButtonClick(_ref5) {\r\n        var {\r\n            component: component,\r\n            element: element,\r\n            event: event\r\n        } = _ref5;\r\n        event.stopPropagation();\r\n        var itemElement = component.$element().closest(this._filesTreeViewItemSelector);\r\n        var itemData = itemElement.data(\"item\");\r\n        var target = {\r\n            itemData: itemData,\r\n            itemElement: itemElement,\r\n            isActionButton: true\r\n        };\r\n        this._contextMenu.showAt([itemData], element, event, target);\r\n        this._activeFileActionsButton = component;\r\n        this._activeFileActionsButton.setActive(true)\r\n    }\r\n    _onContextMenuHidden() {\r\n        if (this._activeFileActionsButton) {\r\n            this._activeFileActionsButton.setActive(false)\r\n        }\r\n    }\r\n    toggleNodeDisabledState(key, state) {\r\n        var node = this._getNodeByKey(key);\r\n        if (!node) {\r\n            return\r\n        }\r\n        var items = this._filesTreeView.option(\"items\");\r\n        var itemIndex = items.map(item => item.getInternalKey()).indexOf(node.getInternalKey());\r\n        if (-1 !== itemIndex) {\r\n            this._filesTreeView.option(\"items[\".concat(itemIndex, \"].disabled\"), state)\r\n        }\r\n    }\r\n    _saveScrollTopPosition() {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        this._scrollTopPosition = this._filesTreeView.getScrollable().scrollTop()\r\n    }\r\n    _restoreScrollTopPosition() {\r\n        if (!hasWindow() || !isNumeric(this._scrollTopPosition)) {\r\n            return\r\n        }\r\n        setTimeout(() => this._filesTreeView.getScrollable().scrollTo(this._scrollTopPosition))\r\n    }\r\n    _updateFocusedElement() {\r\n        var directoryInfo = this._getCurrentDirectory();\r\n        var $element = this._getItemElementByKey(null === directoryInfo || void 0 === directoryInfo ? void 0 : directoryInfo.getInternalKey());\r\n        if (this._$focusedElement) {\r\n            this._$focusedElement.toggleClass(FILE_MANAGER_DIRS_TREE_FOCUSED_ITEM_CLASS, false)\r\n        }\r\n        this._$focusedElement = $element || $();\r\n        this._$focusedElement.toggleClass(FILE_MANAGER_DIRS_TREE_FOCUSED_ITEM_CLASS, true)\r\n    }\r\n    _getNodeByKey(key) {\r\n        var _this$_filesTreeView;\r\n        return null === (_this$_filesTreeView = this._filesTreeView) || void 0 === _this$_filesTreeView ? void 0 : _this$_filesTreeView._getNode(key)\r\n    }\r\n    _getPublicNode(key) {\r\n        var _this$_filesTreeView2;\r\n        var nodesQueue = [...null === (_this$_filesTreeView2 = this._filesTreeView) || void 0 === _this$_filesTreeView2 ? void 0 : _this$_filesTreeView2.getNodes()];\r\n        while (nodesQueue.length) {\r\n            var node = nodesQueue.shift();\r\n            if (node.itemData.getInternalKey() === key) {\r\n                return node\r\n            } else if (node.children.length) {\r\n                nodesQueue.push(...node.children)\r\n            }\r\n        }\r\n        return\r\n    }\r\n    _getItemElementByKey(key) {\r\n        var node = this._getNodeByKey(key);\r\n        if (node) {\r\n            var $node = this._filesTreeView._getNodeElement(node);\r\n            if ($node) {\r\n                return $node.children(this._filesTreeViewItemSelector)\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            storeExpandedState: false,\r\n            initialFolder: null,\r\n            contextMenu: null,\r\n            getItems: null,\r\n            getCurrentDirectory: null,\r\n            onDirectoryClick: null\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"storeExpandedState\":\r\n                this._storeExpandedState = this.option(name);\r\n                break;\r\n            case \"getItems\":\r\n            case \"rootFolderDisplayName\":\r\n            case \"initialFolder\":\r\n            case \"contextMenu\":\r\n                this.repaint();\r\n                break;\r\n            case \"getCurrentDirectory\":\r\n                this.getCurrentDirectory = this.option(name);\r\n                break;\r\n            case \"onDirectoryClick\":\r\n            case \"onFilesTreeViewContentReady\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    get _filesTreeViewItemSelector() {\r\n        return \".\".concat(TREE_VIEW_ITEM_CLASS)\r\n    }\r\n    get _contextMenu() {\r\n        return this.option(\"contextMenu\")\r\n    }\r\n    toggleDirectoryExpandedState(directoryInfo, state) {\r\n        var deferred = new Deferred;\r\n        var treeViewNode = this._getPublicNode(null === directoryInfo || void 0 === directoryInfo ? void 0 : directoryInfo.getInternalKey());\r\n        if (!treeViewNode) {\r\n            return deferred.reject().promise()\r\n        }\r\n        if (treeViewNode.expanded === state || treeViewNode.itemsLoaded && !treeViewNode.itemData.fileItem.hasSubDirectories) {\r\n            return deferred.resolve().promise()\r\n        }\r\n        var action = state ? \"expandItem\" : \"collapseItem\";\r\n        return this._filesTreeView[action](directoryInfo.getInternalKey())\r\n    }\r\n    refresh() {\r\n        this._$focusedElement = null;\r\n        this._saveScrollTopPosition();\r\n        this._filesTreeView.option(\"dataSource\", [])\r\n    }\r\n    updateCurrentDirectory() {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        this._updateFocusedElement();\r\n        this._storeExpandedState && this._updateExpandedStateToCurrentDirectory()\r\n    }\r\n    _updateExpandedStateToCurrentDirectory() {\r\n        return this.toggleDirectoryExpandedStateRecursive(this._getCurrentDirectory().parentDirectory, true)\r\n    }\r\n    toggleDirectoryExpandedStateRecursive(directoryInfo, state) {\r\n        var dirLine = [];\r\n        for (var dirInfo = directoryInfo; dirInfo; dirInfo = dirInfo.parentDirectory) {\r\n            dirLine.unshift(dirInfo)\r\n        }\r\n        return this.toggleDirectoryLineExpandedState(dirLine, state)\r\n    }\r\n    toggleDirectoryLineExpandedState(dirLine, state) {\r\n        if (!dirLine.length) {\r\n            return (new Deferred).resolve().promise()\r\n        }\r\n        return this.toggleDirectoryExpandedState(dirLine.shift(), state).then(() => this.toggleDirectoryLineExpandedState(dirLine, state))\r\n    }\r\n}\r\nexport default FileManagerFilesTreeView;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,MADJ,QAEO,yBAFP;AAGA,SACIC,iBADJ,QAEO,uBAFP;AAGA,SACIC,IADJ,QAEO,yBAFP;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,4BAAP,MAAyC,uCAAzC;AACA,SACIC,QADJ,QAEO,2BAFP;AAGA,SACIC,SADJ,QAEO,yBAFP;AAGA,SACIC,SADJ,QAEO,uBAFP;AAGA,IAAIC,4BAA4B,GAAG,0BAAnC;AACA,IAAIC,yCAAyC,GAAG,6BAAhD;AACA,IAAIC,sCAAsC,GAAG,oCAA7C;AACA,IAAIC,oBAAoB,GAAG,kBAA3B;;AACA,MAAMC,wBAAN,SAAuCV,MAAvC,CAA8C;EAC1CW,WAAW,GAAG;IACV,KAAKC,YAAL;;IACA,KAAKC,oBAAL,GAA4B,KAAKC,MAAL,CAAY,qBAAZ,CAA5B;IACA,KAAKC,wBAAL,GAAgChB,IAAhC;IACA,KAAKiB,mBAAL,GAA2B,KAAKF,MAAL,CAAY,oBAAZ,KAAqC,KAAhE;IACA,IAAIG,SAAS,GAAGrB,CAAC,CAAC,OAAD,CAAD,CAAWsB,QAAX,CAAoBZ,4BAApB,EAAkDa,QAAlD,CAA2D,KAAKC,QAAL,EAA3D,CAAhB;IACA,IAAIC,eAAe,GAAG;MAClBC,aAAa,EAAE,OADG;MAElBC,SAAS,EAAE,EAFO;MAGlBC,cAAc,EAAE,KAAKC,oCAAL,CAA0CC,IAA1C,CAA+C,IAA/C,CAHE;MAIlBC,YAAY,EAAE,KAAKC,gCAAL,CAAsCF,IAAtC,CAA2C,IAA3C,CAJI;MAKlBG,OAAO,EAAE,gBALS;MAMlBC,YAAY,EAAE,gCANI;MAOlBC,WAAW,EAAEC,QAAQ,IAAIA,QAAQ,CAACC,cAAT,EAPP;MAQlBC,YAAY,EAAE,4BARI;MASlBC,WAAW,EAAEC,CAAC,IAAI,KAAKC,QAAL,CAAcC,gBAAd,CAA+BF,CAA/B,CATA;MAUlBG,cAAc,EAAEH,CAAC,IAAI,KAAKI,4BAAL,CAAkCJ,CAAlC,CAVH;MAWlBK,eAAe,EAAEL,CAAC,IAAI,KAAKM,6BAAL,CAAmCN,CAAnC,CAXJ;MAYlBO,cAAc,EAAEP,CAAC,IAAI,KAAKQ,4BAAL,CAAkCR,CAAlC,CAZH;MAalBS,cAAc,EAAE,MAAM,KAAKR,QAAL,CAAcS,2BAAd;IAbJ,CAAtB;;IAeA,IAAI,KAAKC,YAAT,EAAuB;MACnB,KAAKA,YAAL,CAAkBjC,MAAlB,CAAyB,qBAAzB,EAAgD,MAAM,KAAKkC,oBAAL,EAAtD;;MACA3B,eAAe,CAAC4B,iBAAhB,GAAoCb,CAAC,IAAI,KAAKc,+BAAL,CAAqCd,CAArC,CAAzC;;MACA,KAAKrB,wBAAL,GAAgC,CAACoC,OAAD,EAAUC,OAAV,KAAsB,KAAKC,gBAAL,CAAsBF,OAAtB,EAA+BjD,4BAA/B,EAA6DkD,OAA7D,CAAtD;IACH;;IACD,KAAKE,cAAL,GAAsB,KAAKD,gBAAL,CAAsBpC,SAAtB,EAAiChB,cAAjC,EAAiDoB,eAAjD,CAAtB;EACH;;EACDT,YAAY,GAAG;IACX,KAAKyB,QAAL,GAAgB;MACZC,gBAAgB,EAAE,KAAKiB,qBAAL,CAA2B,kBAA3B,CADN;MAEZT,2BAA2B,EAAE,KAAKS,qBAAL,CAA2B,6BAA3B;IAFjB,CAAhB;EAIH;;EACDC,OAAO,GAAG;IACN,MAAMA,OAAN;;IACA,IAAIC,IAAI,GAAG,IAAX;IACAC,UAAU,CAAC,MAAM;MACbD,IAAI,CAACE,qBAAL;IACH,CAFS,CAAV;EAGH;;EACDlC,oCAAoC,CAACmC,QAAD,EAAW;IAC3C,IAAIC,cAAc,GAAG,KAAK/C,MAAL,CAAY,gBAAZ,CAArB;IACA,IAAIgD,aAAa,GAAGF,QAAQ,IAAIA,QAAQ,CAACG,QAArB,IAAiC,IAArD;IACA,OAAOF,cAAc,IAAIA,cAAc,CAACC,aAAD,EAAgB,IAAhB,CAAvC;EACH;;EACDlB,4BAA4B,CAACoB,IAAD,EAAO;IAC/B,IAAI;MACAD,QAAQ,EAAEA;IADV,IAEAC,IAFJ;;IAGA,IAAIC,gBAAgB,GAAG,KAAKpD,oBAAL,EAAvB;;IACA,IAAIoD,gBAAgB,IAAIA,gBAAgB,CAACC,QAAjB,CAA0BC,MAA1B,CAAiCJ,QAAQ,CAACG,QAA1C,CAAxB,EAA6E;MACzE,KAAKP,qBAAL;;MACA,KAAKS,yBAAL;IACH;EACJ;;EACD5B,4BAA4B,CAAC6B,KAAD,EAAQ;IAChC,IAAI;MACAN,QAAQ,EAAEA;IADV,IAEAM,KAFJ;;IAGA,IAAI,KAAKrD,mBAAT,EAA8B;MAC1B+C,QAAQ,CAACO,QAAT,GAAoB,IAApB;IACH;EACJ;;EACD5B,6BAA6B,CAAC6B,KAAD,EAAQ;IACjC,IAAI;MACAR,QAAQ,EAAEA;IADV,IAEAQ,KAFJ;;IAGA,IAAI,KAAKvD,mBAAT,EAA8B;MAC1B+C,QAAQ,CAACO,QAAT,GAAoB,KAApB;IACH;EACJ;;EACD1C,gCAAgC,CAACmC,QAAD,EAAWS,SAAX,EAAsBC,WAAtB,EAAmC;IAC/D,IAAIC,YAAY,GAAG9E,CAAC,CAAC6E,WAAD,CAApB;IACA,IAAIE,YAAY,GAAGD,YAAY,CAACE,OAAb,CAAqB,KAAKC,0BAA1B,CAAnB;IACAF,YAAY,CAACG,IAAb,CAAkB,MAAlB,EAA0Bf,QAA1B;IACA,IAAIgB,MAAM,GAAGjF,iBAAiB,CAACiE,QAAQ,CAACiB,IAAV,CAA9B;IACA,IAAIC,KAAK,GAAGrF,CAAC,CAAC,QAAD,CAAD,CAAYsF,IAAZ,CAAiBnB,QAAQ,CAAC9B,cAAT,EAAjB,EAA4Cf,QAA5C,CAAqDV,sCAArD,CAAZ;IACA,IAAI2E,OAAO,GAAGvF,CAAC,CAAC,OAAD,CAAf;IACA8E,YAAY,CAACU,MAAb,CAAoBL,MAApB,EAA4BE,KAA5B,EAAmCE,OAAnC;;IACA,KAAKpE,wBAAL,CAA8BoE,OAA9B,EAAuC;MACnCE,OAAO,EAAEjD,CAAC,IAAI,KAAKkD,4BAAL,CAAkClD,CAAlC;IADqB,CAAvC;EAGH;;EACDc,+BAA+B,CAACqC,KAAD,EAAQ;IACnC,IAAI;MACAd,WAAW,EAAEA,WADb;MAEAe,KAAK,EAAEA;IAFP,IAGAD,KAHJ;IAIAC,KAAK,CAACC,cAAN;IACAD,KAAK,CAACE,eAAN;IACA,IAAI3B,QAAQ,GAAGnE,CAAC,CAAC6E,WAAD,CAAD,CAAeK,IAAf,CAAoB,MAApB,CAAf;;IACA,KAAK/B,YAAL,CAAkB4C,MAAlB,CAAyB,CAAC5B,QAAD,CAAzB,EAAqCU,WAArC,EAAkDe,KAAlD,EAAyD;MACrDzB,QAAQ,EAAEA,QAD2C;MAErDU,WAAW,EAAEA;IAFwC,CAAzD;EAIH;;EACDa,4BAA4B,CAACM,KAAD,EAAQ;IAChC,IAAI;MACAC,SAAS,EAAEA,SADX;MAEA1C,OAAO,EAAEA,OAFT;MAGAqC,KAAK,EAAEA;IAHP,IAIAI,KAJJ;IAKAJ,KAAK,CAACE,eAAN;IACA,IAAIjB,WAAW,GAAGoB,SAAS,CAACzE,QAAV,GAAqBwD,OAArB,CAA6B,KAAKC,0BAAlC,CAAlB;IACA,IAAId,QAAQ,GAAGU,WAAW,CAACK,IAAZ,CAAiB,MAAjB,CAAf;IACA,IAAIgB,MAAM,GAAG;MACT/B,QAAQ,EAAEA,QADD;MAETU,WAAW,EAAEA,WAFJ;MAGTsB,cAAc,EAAE;IAHP,CAAb;;IAKA,KAAKhD,YAAL,CAAkB4C,MAAlB,CAAyB,CAAC5B,QAAD,CAAzB,EAAqCZ,OAArC,EAA8CqC,KAA9C,EAAqDM,MAArD;;IACA,KAAKE,wBAAL,GAAgCH,SAAhC;;IACA,KAAKG,wBAAL,CAA8BC,SAA9B,CAAwC,IAAxC;EACH;;EACDjD,oBAAoB,GAAG;IACnB,IAAI,KAAKgD,wBAAT,EAAmC;MAC/B,KAAKA,wBAAL,CAA8BC,SAA9B,CAAwC,KAAxC;IACH;EACJ;;EACDC,uBAAuB,CAACC,GAAD,EAAMC,KAAN,EAAa;IAChC,IAAIC,IAAI,GAAG,KAAKC,aAAL,CAAmBH,GAAnB,CAAX;;IACA,IAAI,CAACE,IAAL,EAAW;MACP;IACH;;IACD,IAAIE,KAAK,GAAG,KAAKjD,cAAL,CAAoBxC,MAApB,CAA2B,OAA3B,CAAZ;;IACA,IAAI0D,SAAS,GAAG+B,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,cAAL,EAAlB,EAAyCC,OAAzC,CAAiDN,IAAI,CAACK,cAAL,EAAjD,CAAhB;;IACA,IAAI,CAAC,CAAD,KAAOlC,SAAX,EAAsB;MAClB,KAAKlB,cAAL,CAAoBxC,MAApB,CAA2B,SAAS8F,MAAT,CAAgBpC,SAAhB,EAA2B,YAA3B,CAA3B,EAAqE4B,KAArE;IACH;EACJ;;EACDS,sBAAsB,GAAG;IACrB,IAAI,CAACzG,SAAS,EAAd,EAAkB;MACd;IACH;;IACD,KAAK0G,kBAAL,GAA0B,KAAKxD,cAAL,CAAoByD,aAApB,GAAoCC,SAApC,EAA1B;EACH;;EACD5C,yBAAyB,GAAG;IACxB,IAAI,CAAChE,SAAS,EAAV,IAAgB,CAACC,SAAS,CAAC,KAAKyG,kBAAN,CAA9B,EAAyD;MACrD;IACH;;IACDpD,UAAU,CAAC,MAAM,KAAKJ,cAAL,CAAoByD,aAApB,GAAoCE,QAApC,CAA6C,KAAKH,kBAAlD,CAAP,CAAV;EACH;;EACDnD,qBAAqB,GAAG;IACpB,IAAIG,aAAa,GAAG,KAAKjD,oBAAL,EAApB;;IACA,IAAIO,QAAQ,GAAG,KAAK8F,oBAAL,CAA0B,SAASpD,aAAT,IAA0B,KAAK,CAAL,KAAWA,aAArC,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAAC4C,cAAd,EAAxF,CAAf;;IACA,IAAI,KAAKS,gBAAT,EAA2B;MACvB,KAAKA,gBAAL,CAAsBC,WAAtB,CAAkC7G,yCAAlC,EAA6E,KAA7E;IACH;;IACD,KAAK4G,gBAAL,GAAwB/F,QAAQ,IAAIxB,CAAC,EAArC;;IACA,KAAKuH,gBAAL,CAAsBC,WAAtB,CAAkC7G,yCAAlC,EAA6E,IAA7E;EACH;;EACD+F,aAAa,CAACH,GAAD,EAAM;IACf,IAAIkB,oBAAJ;;IACA,OAAO,UAAUA,oBAAoB,GAAG,KAAK/D,cAAtC,KAAyD,KAAK,CAAL,KAAW+D,oBAApE,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACC,QAArB,CAA8BnB,GAA9B,CAA3G;EACH;;EACDoB,cAAc,CAACpB,GAAD,EAAM;IAChB,IAAIqB,qBAAJ;;IACA,IAAIC,UAAU,GAAG,CAAC,IAAG,UAAUD,qBAAqB,GAAG,KAAKlE,cAAvC,KAA0D,KAAK,CAAL,KAAWkE,qBAArE,GAA6F,KAAK,CAAlG,GAAsGA,qBAAqB,CAACE,QAAtB,EAAzG,CAAD,CAAjB;;IACA,OAAOD,UAAU,CAACE,MAAlB,EAA0B;MACtB,IAAItB,IAAI,GAAGoB,UAAU,CAACG,KAAX,EAAX;;MACA,IAAIvB,IAAI,CAACtC,QAAL,CAAc2C,cAAd,OAAmCP,GAAvC,EAA4C;QACxC,OAAOE,IAAP;MACH,CAFD,MAEO,IAAIA,IAAI,CAACwB,QAAL,CAAcF,MAAlB,EAA0B;QAC7BF,UAAU,CAACK,IAAX,CAAgB,GAAGzB,IAAI,CAACwB,QAAxB;MACH;IACJ;;IACD;EACH;;EACDX,oBAAoB,CAACf,GAAD,EAAM;IACtB,IAAIE,IAAI,GAAG,KAAKC,aAAL,CAAmBH,GAAnB,CAAX;;IACA,IAAIE,IAAJ,EAAU;MACN,IAAI0B,KAAK,GAAG,KAAKzE,cAAL,CAAoB0E,eAApB,CAAoC3B,IAApC,CAAZ;;MACA,IAAI0B,KAAJ,EAAW;QACP,OAAOA,KAAK,CAACF,QAAN,CAAe,KAAKhD,0BAApB,CAAP;MACH;IACJ;;IACD,OAAO,IAAP;EACH;;EACDoD,kBAAkB,GAAG;IACjB,OAAOpI,MAAM,CAAC,MAAMoI,kBAAN,EAAD,EAA6B;MACtCC,kBAAkB,EAAE,KADkB;MAEtCC,aAAa,EAAE,IAFuB;MAGtCC,WAAW,EAAE,IAHyB;MAItCC,QAAQ,EAAE,IAJ4B;MAKtCC,mBAAmB,EAAE,IALiB;MAMtChG,gBAAgB,EAAE;IANoB,CAA7B,CAAb;EAQH;;EACDiG,cAAc,CAACC,IAAD,EAAO;IACjB,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;;IACA,QAAQA,IAAR;MACI,KAAK,oBAAL;QACI,KAAKzH,mBAAL,GAA2B,KAAKF,MAAL,CAAY2H,IAAZ,CAA3B;QACA;;MACJ,KAAK,UAAL;MACA,KAAK,uBAAL;MACA,KAAK,eAAL;MACA,KAAK,aAAL;QACI,KAAKC,OAAL;QACA;;MACJ,KAAK,qBAAL;QACI,KAAKJ,mBAAL,GAA2B,KAAKxH,MAAL,CAAY2H,IAAZ,CAA3B;QACA;;MACJ,KAAK,kBAAL;MACA,KAAK,6BAAL;QACI,KAAKpG,QAAL,CAAcoG,IAAd,IAAsB,KAAKlF,qBAAL,CAA2BkF,IAA3B,CAAtB;QACA;;MACJ;QACI,MAAMF,cAAN,CAAqBC,IAArB;;IAlBR;EAoBH;;EAC6B,IAA1B3D,0BAA0B,GAAG;IAC7B,OAAO,IAAI+B,MAAJ,CAAWnG,oBAAX,CAAP;EACH;;EACe,IAAZsC,YAAY,GAAG;IACf,OAAO,KAAKjC,MAAL,CAAY,aAAZ,CAAP;EACH;;EACD6H,4BAA4B,CAAC7E,aAAD,EAAgBsC,KAAhB,EAAuB;IAC/C,IAAIwC,QAAQ,GAAG,IAAIzI,QAAJ,EAAf;;IACA,IAAI0I,YAAY,GAAG,KAAKtB,cAAL,CAAoB,SAASzD,aAAT,IAA0B,KAAK,CAAL,KAAWA,aAArC,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAAC4C,cAAd,EAAlF,CAAnB;;IACA,IAAI,CAACmC,YAAL,EAAmB;MACf,OAAOD,QAAQ,CAACE,MAAT,GAAkBC,OAAlB,EAAP;IACH;;IACD,IAAIF,YAAY,CAACvE,QAAb,KAA0B8B,KAA1B,IAAmCyC,YAAY,CAACG,WAAb,IAA4B,CAACH,YAAY,CAAC9E,QAAb,CAAsBG,QAAtB,CAA+B+E,iBAAnG,EAAsH;MAClH,OAAOL,QAAQ,CAACM,OAAT,GAAmBH,OAAnB,EAAP;IACH;;IACD,IAAII,MAAM,GAAG/C,KAAK,GAAG,YAAH,GAAkB,cAApC;IACA,OAAO,KAAK9C,cAAL,CAAoB6F,MAApB,EAA4BrF,aAAa,CAAC4C,cAAd,EAA5B,CAAP;EACH;;EACD0C,OAAO,GAAG;IACN,KAAKjC,gBAAL,GAAwB,IAAxB;;IACA,KAAKN,sBAAL;;IACA,KAAKvD,cAAL,CAAoBxC,MAApB,CAA2B,YAA3B,EAAyC,EAAzC;EACH;;EACDuI,sBAAsB,GAAG;IACrB,IAAI,KAAKC,SAAT,EAAoB;MAChB;IACH;;IACD,KAAK3F,qBAAL;;IACA,KAAK3C,mBAAL,IAA4B,KAAKuI,sCAAL,EAA5B;EACH;;EACDA,sCAAsC,GAAG;IACrC,OAAO,KAAKC,qCAAL,CAA2C,KAAK3I,oBAAL,GAA4B4I,eAAvE,EAAwF,IAAxF,CAAP;EACH;;EACDD,qCAAqC,CAAC1F,aAAD,EAAgBsC,KAAhB,EAAuB;IACxD,IAAIsD,OAAO,GAAG,EAAd;;IACA,KAAK,IAAIC,OAAO,GAAG7F,aAAnB,EAAkC6F,OAAlC,EAA2CA,OAAO,GAAGA,OAAO,CAACF,eAA7D,EAA8E;MAC1EC,OAAO,CAACE,OAAR,CAAgBD,OAAhB;IACH;;IACD,OAAO,KAAKE,gCAAL,CAAsCH,OAAtC,EAA+CtD,KAA/C,CAAP;EACH;;EACDyD,gCAAgC,CAACH,OAAD,EAAUtD,KAAV,EAAiB;IAC7C,IAAI,CAACsD,OAAO,CAAC/B,MAAb,EAAqB;MACjB,OAAQ,IAAIxH,QAAJ,EAAD,CAAe+I,OAAf,GAAyBH,OAAzB,EAAP;IACH;;IACD,OAAO,KAAKJ,4BAAL,CAAkCe,OAAO,CAAC9B,KAAR,EAAlC,EAAmDxB,KAAnD,EAA0D0D,IAA1D,CAA+D,MAAM,KAAKD,gCAAL,CAAsCH,OAAtC,EAA+CtD,KAA/C,CAArE,CAAP;EACH;;AAlQyC;;AAoQ9C,eAAe1F,wBAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.base.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { focused } from \"../widget/selectors\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { current, isMaterial } from \"../themes\";\nimport devices from \"../../core/devices\";\nimport Editor from \"../editor/editor\";\nimport { addNamespace, normalizeKeyName } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport ClearButton from \"./ui.text_editor.clear\";\nimport TextEditorButtonCollection from \"./texteditor_button_collection/index\";\nimport config from \"../../core/config\";\nimport errors from \"../widget/ui.errors\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport LoadIndicator from \"../load_indicator\";\nimport { TextEditorLabel } from \"./ui.text_editor.label\";\nimport { getWidth } from \"../../core/utils/size\";\nimport resizeObserverSingleton from \"../../core/resize_observer\";\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\nvar TextEditorLabelCreator = TextEditorLabel;\n\nfunction checkButtonsOptionType(buttons) {\n  if (isDefined(buttons) && !Array.isArray(buttons)) {\n    throw errors.Error(\"E1053\");\n  }\n}\n\nvar TextEditorBase = Editor.inherit({\n  ctor: function (_, options) {\n    if (options) {\n      checkButtonsOptionType(options.buttons);\n    }\n\n    this._buttonCollection = new TextEditorButtonCollection(this, this._getDefaultButtons());\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this._labelContainerElement = null;\n    this.callBase.apply(this, arguments);\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      buttons: void 0,\n      value: \"\",\n      spellcheck: false,\n      showClearButton: false,\n      valueChangeEvent: \"change\",\n      placeholder: \"\",\n      inputAttr: {},\n      onFocusIn: null,\n      onFocusOut: null,\n      onKeyDown: null,\n      onKeyUp: null,\n      onChange: null,\n      onInput: null,\n      onCut: null,\n      onCopy: null,\n      onPaste: null,\n      onEnterKey: null,\n      mode: \"text\",\n      hoverStateEnabled: true,\n      focusStateEnabled: true,\n      text: void 0,\n      displayValueFormatter: function (value) {\n        return isDefined(value) && false !== value ? value : \"\";\n      },\n      stylingMode: config().editorStylingMode || \"outlined\",\n      showValidationMark: true,\n      label: \"\",\n      labelMode: \"static\",\n      labelMark: \"\"\n    });\n  },\n  _defaultOptionsRules: function () {\n    var themeName = current();\n    return this.callBase().concat([{\n      device: function () {\n        return isMaterial(themeName);\n      },\n      options: {\n        stylingMode: config().editorStylingMode || \"filled\",\n        labelMode: \"floating\"\n      }\n    }]);\n  },\n  _getDefaultButtons: function () {\n    return [{\n      name: \"clear\",\n      Ctor: ClearButton\n    }];\n  },\n  _isClearButtonVisible: function () {\n    return this.option(\"showClearButton\") && !this.option(\"readOnly\");\n  },\n  _input: function () {\n    return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first();\n  },\n  _isFocused: function () {\n    return focused(this._input()) || this.callBase();\n  },\n  _inputWrapper: function () {\n    return this.$element();\n  },\n  _buttonsContainer: function () {\n    return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0);\n  },\n  _isControlKey: function (key) {\n    return -1 !== CONTROL_KEYS.indexOf(key);\n  },\n  _renderStylingMode: function () {\n    this.callBase();\n\n    this._updateButtonsStyling(this.option(\"stylingMode\"));\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TEXTEDITOR_CLASS);\n\n    this._renderInput();\n\n    this._renderStylingMode();\n\n    this._renderInputType();\n\n    this._renderPlaceholder();\n\n    this._renderProps();\n\n    this.callBase();\n\n    this._renderValue();\n\n    this._renderLabel();\n  },\n  _render: function () {\n    this.callBase();\n\n    this._refreshValueChangeEvent();\n\n    this._renderEvents();\n\n    this._renderEnterKeyAction();\n\n    this._renderEmptinessEvent();\n  },\n  _renderInput: function () {\n    this._$buttonsContainer = this._$textEditorContainer = $(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\n    this._$textEditorInputContainer = $(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\n\n    this._$textEditorInputContainer.append(this._createInput());\n\n    this._renderButtonContainers();\n  },\n\n  _getInputContainer() {\n    return this._$textEditorInputContainer;\n  },\n\n  _renderPendingIndicator: function () {\n    this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n\n    var $inputContainer = this._getInputContainer();\n\n    var $indicatorElement = $(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\n    this._pendingIndicator = this._createComponent($indicatorElement, LoadIndicator);\n  },\n  _disposePendingIndicator: function () {\n    if (!this._pendingIndicator) {\n      return;\n    }\n\n    this._pendingIndicator.dispose();\n\n    this._pendingIndicator.$element().remove();\n\n    this._pendingIndicator = null;\n    this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n  },\n  _renderValidationState: function () {\n    this.callBase();\n    var isPending = \"pending\" === this.option(\"validationStatus\");\n    var $element = this.$element();\n\n    if (isPending) {\n      !this._pendingIndicator && this._renderPendingIndicator();\n      this._showValidMark = false;\n    } else {\n      if (\"invalid\" === this.option(\"validationStatus\")) {\n        this._showValidMark = false;\n      }\n\n      if (!this._showValidMark && true === this.option(\"showValidationMark\")) {\n        this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator;\n      }\n\n      this._disposePendingIndicator();\n    }\n\n    $element.toggleClass(TEXTEDITOR_VALID_CLASS, !!this._showValidMark);\n  },\n  _renderButtonContainers: function () {\n    var buttons = this.option(\"buttons\");\n    this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$buttonsContainer);\n    this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$buttonsContainer);\n  },\n  _cleanButtonContainers: function () {\n    var _this$_$beforeButtons, _this$_$afterButtonsC;\n\n    null === (_this$_$beforeButtons = this._$beforeButtonsContainer) || void 0 === _this$_$beforeButtons ? void 0 : _this$_$beforeButtons.remove();\n    null === (_this$_$afterButtonsC = this._$afterButtonsContainer) || void 0 === _this$_$afterButtonsC ? void 0 : _this$_$afterButtonsC.remove();\n\n    this._buttonCollection.clean();\n  },\n\n  _clean() {\n    this._buttonCollection.clean();\n\n    this._disposePendingIndicator();\n\n    this._unobserveLabelContainerResize();\n\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this._$textEditorContainer = null;\n    this._$buttonsContainer = null;\n    this.callBase();\n  },\n\n  _createInput: function () {\n    var $input = $(\"<input>\");\n\n    this._applyInputAttributes($input, this.option(\"inputAttr\"));\n\n    return $input;\n  },\n  _setSubmitElementName: function (name) {\n    var inputAttrName = this.option(\"inputAttr.name\");\n    return this.callBase(name || inputAttrName || \"\");\n  },\n  _applyInputAttributes: function ($input, customAttributes) {\n    var inputAttributes = extend(this._getDefaultAttributes(), customAttributes);\n    $input.attr(inputAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\");\n  },\n  _getDefaultAttributes: function () {\n    var defaultAttributes = {\n      autocomplete: \"off\"\n    };\n    var {\n      ios: ios,\n      mac: mac\n    } = devices.real();\n\n    if (ios || mac) {\n      defaultAttributes.placeholder = \" \";\n    }\n\n    return defaultAttributes;\n  },\n  _updateButtons: function (names) {\n    this._buttonCollection.updateButtons(names);\n  },\n  _updateButtonsStyling: function (editorStylingMode) {\n    each(this.option(\"buttons\"), (_, _ref) => {\n      var {\n        options: options,\n        name: buttonName\n      } = _ref;\n\n      if (options && !options.stylingMode && this.option(\"visible\")) {\n        var buttonInstance = this.getButton(buttonName);\n        buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\");\n      }\n    });\n  },\n  _renderValue: function () {\n    var renderInputPromise = this._renderInputValue();\n\n    return renderInputPromise.promise();\n  },\n  _renderInputValue: function (value) {\n    var _value;\n\n    value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\n    var text = this.option(\"text\");\n    var displayValue = this.option(\"displayValue\");\n    var displayValueFormatter = this.option(\"displayValueFormatter\");\n\n    if (void 0 !== displayValue && null !== value) {\n      text = displayValueFormatter(displayValue);\n    } else if (!isDefined(text)) {\n      text = displayValueFormatter(value);\n    }\n\n    this.option(\"text\", text);\n\n    if (this._input().val() !== (isDefined(text) ? text : \"\")) {\n      this._renderDisplayText(text);\n    } else {\n      this._toggleEmptinessEventHandler();\n    }\n\n    return new Deferred().resolve();\n  },\n  _renderDisplayText: function (text) {\n    this._input().val(text);\n\n    this._toggleEmptinessEventHandler();\n  },\n  _isValueValid: function () {\n    if (this._input().length) {\n      var validity = this._input().get(0).validity;\n\n      if (validity) {\n        return validity.valid;\n      }\n    }\n\n    return true;\n  },\n  _toggleEmptiness: function (isEmpty) {\n    this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\n\n    this._togglePlaceholder(isEmpty);\n  },\n  _togglePlaceholder: function (isEmpty) {\n    this.$element().find(\".\".concat(TEXTEDITOR_PLACEHOLDER_CLASS)).eq(0).toggleClass(STATE_INVISIBLE_CLASS, !isEmpty);\n  },\n  _renderProps: function () {\n    this._toggleReadOnlyState();\n\n    this._toggleSpellcheckState();\n\n    this._toggleTabIndex();\n  },\n  _toggleDisabledState: function (value) {\n    this.callBase.apply(this, arguments);\n\n    var $input = this._input();\n\n    $input.prop(\"disabled\", value);\n  },\n  _toggleTabIndex: function () {\n    var $input = this._input();\n\n    var disabled = this.option(\"disabled\");\n    var focusStateEnabled = this.option(\"focusStateEnabled\");\n\n    if (disabled || !focusStateEnabled) {\n      $input.attr(\"tabIndex\", -1);\n    } else {\n      $input.removeAttr(\"tabIndex\");\n    }\n  },\n  _toggleReadOnlyState: function () {\n    this._input().prop(\"readOnly\", this._readOnlyPropValue());\n\n    this.callBase();\n  },\n  _readOnlyPropValue: function () {\n    return this.option(\"readOnly\");\n  },\n  _toggleSpellcheckState: function () {\n    this._input().prop(\"spellcheck\", this.option(\"spellcheck\"));\n  },\n  _unobserveLabelContainerResize: function () {\n    if (this._labelContainerElement) {\n      resizeObserverSingleton.unobserve(this._labelContainerElement);\n      this._labelContainerElement = null;\n    }\n  },\n  _getLabelContainer: function () {\n    return this._input();\n  },\n  _getLabelContainerWidth: function () {\n    return getWidth(this._getLabelContainer());\n  },\n  _getLabelBeforeWidth: function () {\n    var buttonsBeforeWidth = this._$beforeButtonsContainer && getWidth(this._$beforeButtonsContainer);\n    return null !== buttonsBeforeWidth && void 0 !== buttonsBeforeWidth ? buttonsBeforeWidth : 0;\n  },\n  _updateLabelWidth: function () {\n    this._label.updateBeforeWidth(this._getLabelBeforeWidth());\n\n    this._label.updateMaxWidth(this._getLabelContainerWidth());\n  },\n  _setLabelContainerAria: function () {\n    this.setAria(\"labelledby\", this._label.getId(), this._getLabelContainer());\n  },\n  _renderLabel: function () {\n    this._unobserveLabelContainerResize();\n\n    this._labelContainerElement = $(this._getLabelContainer()).get(0);\n    var {\n      label: label,\n      labelMode: labelMode,\n      labelMark: labelMark\n    } = this.option();\n    var labelConfig = {\n      $editor: this.$element(),\n      text: label,\n      mark: labelMark,\n      mode: labelMode,\n      containsButtonsBefore: !!this._$beforeButtonsContainer,\n      containerWidth: this._getLabelContainerWidth(),\n      beforeWidth: this._getLabelBeforeWidth()\n    };\n    this._label = new TextEditorLabelCreator(labelConfig);\n\n    this._setLabelContainerAria();\n\n    if (this._labelContainerElement) {\n      resizeObserverSingleton.observe(this._labelContainerElement, this._updateLabelWidth.bind(this));\n    }\n  },\n  _renderPlaceholder: function () {\n    this._renderPlaceholderMarkup();\n\n    this._attachPlaceholderEvents();\n  },\n  _renderPlaceholderMarkup: function () {\n    if (this._$placeholder) {\n      this._$placeholder.remove();\n\n      this._$placeholder = null;\n    }\n\n    var $input = this._input();\n\n    var placeholderText = this.option(\"placeholder\");\n    var $placeholder = this._$placeholder = $(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\n    $placeholder.insertAfter($input);\n    $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS);\n  },\n  _attachPlaceholderEvents: function () {\n    var startEvent = addNamespace(pointerEvents.up, this.NAME);\n    eventsEngine.on(this._$placeholder, startEvent, () => {\n      eventsEngine.trigger(this._input(), \"focus\");\n    });\n\n    this._toggleEmptinessEventHandler();\n  },\n  _placeholder: function () {\n    return this._$placeholder || $();\n  },\n  _clearValueHandler: function (e) {\n    var $input = this._input();\n\n    e.stopPropagation();\n\n    this._saveValueChangeEvent(e);\n\n    this._clearValue();\n\n    !this._isFocused() && eventsEngine.trigger($input, \"focus\");\n    eventsEngine.trigger($input, \"input\");\n  },\n  _clearValue: function () {\n    this.reset();\n  },\n  _renderEvents: function () {\n    var $input = this._input();\n\n    each(EVENTS_LIST, (_, event) => {\n      if (this.hasActionSubscription(\"on\" + event)) {\n        var action = this._createActionByOption(\"on\" + event, {\n          excludeValidators: [\"readOnly\"]\n        });\n\n        eventsEngine.on($input, addNamespace(event.toLowerCase(), this.NAME), e => {\n          if (this._disposed) {\n            return;\n          }\n\n          action({\n            event: e\n          });\n        });\n      }\n    });\n  },\n  _refreshEvents: function () {\n    var $input = this._input();\n\n    each(EVENTS_LIST, (_, event) => {\n      eventsEngine.off($input, addNamespace(event.toLowerCase(), this.NAME));\n    });\n\n    this._renderEvents();\n  },\n  _keyPressHandler: function () {\n    this.option(\"text\", this._input().val());\n  },\n  _keyDownHandler: function (e) {\n    var $input = this._input();\n\n    var isCtrlEnter = e.ctrlKey && \"enter\" === normalizeKeyName(e);\n    var isNewValue = $input.val() !== this.option(\"value\");\n\n    if (isCtrlEnter && isNewValue) {\n      eventsEngine.trigger($input, \"change\");\n    }\n  },\n  _renderValueChangeEvent: function () {\n    var keyPressEvent = addNamespace(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\n    var valueChangeEvent = addNamespace(this.option(\"valueChangeEvent\"), \"\".concat(this.NAME, \"ValueChange\"));\n    var keyDownEvent = addNamespace(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\n\n    var $input = this._input();\n\n    eventsEngine.on($input, keyPressEvent, this._keyPressHandler.bind(this));\n    eventsEngine.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\n    eventsEngine.on($input, keyDownEvent, this._keyDownHandler.bind(this));\n  },\n  _cleanValueChangeEvent: function () {\n    var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\n    var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\n    eventsEngine.off(this._input(), valueChangeNamespace);\n    eventsEngine.off(this._input(), textChangeNamespace);\n  },\n  _refreshValueChangeEvent: function () {\n    this._cleanValueChangeEvent();\n\n    this._renderValueChangeEvent();\n  },\n  _renderValueEventName: function () {\n    return \"input change keypress\";\n  },\n  _focusTarget: function () {\n    return this._input();\n  },\n  _focusEventTarget: function () {\n    return this.element();\n  },\n  _isInput: function (element) {\n    return element === this._input().get(0);\n  },\n  _preventNestedFocusEvent: function (event) {\n    if (event.isDefaultPrevented()) {\n      return true;\n    }\n\n    var shouldPrevent = this._isNestedTarget(event.relatedTarget);\n\n    if (\"focusin\" === event.type) {\n      shouldPrevent = shouldPrevent && this._isNestedTarget(event.target) && !this._isInput(event.target);\n    } else if (!shouldPrevent) {\n      this._toggleFocusClass(false, this.$element());\n    }\n\n    shouldPrevent && event.preventDefault();\n    return shouldPrevent;\n  },\n  _isNestedTarget: function (target) {\n    return !!this.$element().find(target).length;\n  },\n  _focusClassTarget: function () {\n    return this.$element();\n  },\n  _focusInHandler: function (event) {\n    this._preventNestedFocusEvent(event);\n\n    this.callBase.apply(this, arguments);\n  },\n  _focusOutHandler: function (event) {\n    this._preventNestedFocusEvent(event);\n\n    this.callBase.apply(this, arguments);\n  },\n  _toggleFocusClass: function (isFocused, $element) {\n    this.callBase(isFocused, this._focusClassTarget($element));\n  },\n  _hasFocusClass: function (element) {\n    return this.callBase($(element || this.$element()));\n  },\n  _renderEmptinessEvent: function () {\n    var $input = this._input();\n\n    eventsEngine.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this));\n  },\n  _toggleEmptinessEventHandler: function () {\n    var text = this._input().val();\n\n    var isEmpty = (\"\" === text || null === text) && this._isValueValid();\n\n    this._toggleEmptiness(isEmpty);\n  },\n  _valueChangeEventHandler: function (e, formattedValue) {\n    if (this.option(\"readOnly\")) {\n      return;\n    }\n\n    this._saveValueChangeEvent(e);\n\n    this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\n\n    this._saveValueChangeEvent(void 0);\n  },\n  _renderEnterKeyAction: function () {\n    this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\n      excludeValidators: [\"readOnly\"]\n    });\n    eventsEngine.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\n    eventsEngine.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this));\n  },\n  _enterKeyHandlerUp: function (e) {\n    if (this._disposed) {\n      return;\n    }\n\n    if (\"enter\" === normalizeKeyName(e)) {\n      this._enterKeyAction({\n        event: e\n      });\n    }\n  },\n  _updateValue: function () {\n    this._options.silent(\"text\", null);\n\n    this._renderValue();\n  },\n  _dispose: function () {\n    this._enterKeyAction = void 0;\n    this.callBase();\n  },\n  _getSubmitElement: function () {\n    return this._input();\n  },\n  _hasActiveElement: function () {\n    return this._input().is(domAdapter.getActiveElement());\n  },\n  _optionChanged: function (args) {\n    var {\n      name: name,\n      fullName: fullName,\n      value: value\n    } = args;\n    var eventName = name.replace(\"on\", \"\");\n\n    if (EVENTS_LIST.includes(eventName)) {\n      this._refreshEvents();\n\n      return;\n    }\n\n    switch (name) {\n      case \"valueChangeEvent\":\n        this._refreshValueChangeEvent();\n\n        this._refreshFocusEvent();\n\n        this._refreshEvents();\n\n        break;\n\n      case \"onValueChanged\":\n        this._createValueChangeAction();\n\n        break;\n\n      case \"focusStateEnabled\":\n        this.callBase(args);\n\n        this._toggleTabIndex();\n\n        break;\n\n      case \"spellcheck\":\n        this._toggleSpellcheckState();\n\n        break;\n\n      case \"mode\":\n        this._renderInputType();\n\n        break;\n\n      case \"onEnterKey\":\n        this._renderEnterKeyAction();\n\n        break;\n\n      case \"placeholder\":\n        this._renderPlaceholder();\n\n        break;\n\n      case \"label\":\n        this._label.updateText(value);\n\n        this._setLabelContainerAria();\n\n        break;\n\n      case \"labelMark\":\n        this._label.updateMark(value);\n\n        break;\n\n      case \"labelMode\":\n        this._label.updateMode(value);\n\n        this._setLabelContainerAria();\n\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        this._label.updateMaxWidth(this._getLabelContainerWidth());\n\n        break;\n\n      case \"readOnly\":\n      case \"disabled\":\n        this._updateButtons();\n\n        this.callBase(args);\n        break;\n\n      case \"showClearButton\":\n        this._updateButtons([\"clear\"]);\n\n        break;\n\n      case \"text\":\n        break;\n\n      case \"value\":\n        this._updateValue();\n\n        this.callBase(args);\n        break;\n\n      case \"inputAttr\":\n        this._applyInputAttributes(this._input(), this.option(name));\n\n        break;\n\n      case \"stylingMode\":\n        this._renderStylingMode();\n\n        this._updateLabelWidth();\n\n        break;\n\n      case \"buttons\":\n        if (fullName === name) {\n          checkButtonsOptionType(value);\n        }\n\n        this._cleanButtonContainers();\n\n        this._renderButtonContainers();\n\n        this._updateButtonsStyling(this.option(\"stylingMode\"));\n\n        this._updateLabelWidth();\n\n        this._label.updateContainsButtonsBefore(!!this._$beforeButtonsContainer);\n\n        break;\n\n      case \"visible\":\n        this.callBase(args);\n\n        if (value && this.option(\"buttons\")) {\n          this._cleanButtonContainers();\n\n          this._renderButtonContainers();\n\n          this._updateButtonsStyling(this.option(\"stylingMode\"));\n        }\n\n        break;\n\n      case \"displayValueFormatter\":\n        this._invalidate();\n\n        break;\n\n      case \"showValidationMark\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _renderInputType: function () {\n    this._setInputType(this.option(\"mode\"));\n  },\n  _setInputType: function (type) {\n    var input = this._input();\n\n    if (\"search\" === type) {\n      type = \"text\";\n    }\n\n    try {\n      input.prop(\"type\", type);\n    } catch (e) {\n      input.prop(\"type\", \"text\");\n    }\n  },\n\n  getButton(name) {\n    return this._buttonCollection.getButton(name);\n  },\n\n  focus: function () {\n    eventsEngine.trigger(this._input(), \"focus\");\n  },\n  reset: function () {\n    if (this._showValidMark) {\n      this._showValidMark = false;\n\n      this._renderValidationState();\n    }\n\n    var defaultOptions = this._getDefaultOptions();\n\n    if (this.option(\"value\") === defaultOptions.value) {\n      this._options.silent(\"text\", \"\");\n\n      this._renderValue();\n    } else {\n      this.option(\"value\", defaultOptions.value);\n    }\n  },\n  on: function (eventName, eventHandler) {\n    var result = this.callBase(eventName, eventHandler);\n    var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\n\n    if (EVENTS_LIST.indexOf(event) >= 0) {\n      this._refreshEvents();\n    }\n\n    return result;\n  }\n});\nexport default TextEditorBase;","map":{"version":3,"names":["$","domAdapter","eventsEngine","focused","isDefined","extend","each","current","isMaterial","devices","Editor","addNamespace","normalizeKeyName","pointerEvents","ClearButton","TextEditorButtonCollection","config","errors","Deferred","LoadIndicator","TextEditorLabel","getWidth","resizeObserverSingleton","TEXTEDITOR_CLASS","TEXTEDITOR_INPUT_CONTAINER_CLASS","TEXTEDITOR_INPUT_CLASS","TEXTEDITOR_INPUT_SELECTOR","TEXTEDITOR_CONTAINER_CLASS","TEXTEDITOR_BUTTONS_CONTAINER_CLASS","TEXTEDITOR_PLACEHOLDER_CLASS","TEXTEDITOR_EMPTY_INPUT_CLASS","STATE_INVISIBLE_CLASS","TEXTEDITOR_PENDING_INDICATOR_CLASS","TEXTEDITOR_VALIDATION_PENDING_CLASS","TEXTEDITOR_VALID_CLASS","EVENTS_LIST","CONTROL_KEYS","TextEditorLabelCreator","checkButtonsOptionType","buttons","Array","isArray","Error","TextEditorBase","inherit","ctor","_","options","_buttonCollection","_getDefaultButtons","_$beforeButtonsContainer","_$afterButtonsContainer","_labelContainerElement","callBase","apply","arguments","_getDefaultOptions","value","spellcheck","showClearButton","valueChangeEvent","placeholder","inputAttr","onFocusIn","onFocusOut","onKeyDown","onKeyUp","onChange","onInput","onCut","onCopy","onPaste","onEnterKey","mode","hoverStateEnabled","focusStateEnabled","text","displayValueFormatter","stylingMode","editorStylingMode","showValidationMark","label","labelMode","labelMark","_defaultOptionsRules","themeName","concat","device","name","Ctor","_isClearButtonVisible","option","_input","$element","find","first","_isFocused","_inputWrapper","_buttonsContainer","eq","_isControlKey","key","indexOf","_renderStylingMode","_updateButtonsStyling","_initMarkup","addClass","_renderInput","_renderInputType","_renderPlaceholder","_renderProps","_renderValue","_renderLabel","_render","_refreshValueChangeEvent","_renderEvents","_renderEnterKeyAction","_renderEmptinessEvent","_$buttonsContainer","_$textEditorContainer","appendTo","_$textEditorInputContainer","append","_createInput","_renderButtonContainers","_getInputContainer","_renderPendingIndicator","$inputContainer","$indicatorElement","_pendingIndicator","_createComponent","_disposePendingIndicator","dispose","remove","removeClass","_renderValidationState","isPending","_showValidMark","toggleClass","renderBeforeButtons","renderAfterButtons","_cleanButtonContainers","_this$_$beforeButtons","_this$_$afterButtonsC","clean","_clean","_unobserveLabelContainerResize","$input","_applyInputAttributes","_setSubmitElementName","inputAttrName","customAttributes","inputAttributes","_getDefaultAttributes","attr","css","defaultAttributes","autocomplete","ios","mac","real","_updateButtons","names","updateButtons","_ref","buttonName","buttonInstance","getButton","renderInputPromise","_renderInputValue","promise","_value","displayValue","val","_renderDisplayText","_toggleEmptinessEventHandler","resolve","_isValueValid","length","validity","get","valid","_toggleEmptiness","isEmpty","_togglePlaceholder","_toggleReadOnlyState","_toggleSpellcheckState","_toggleTabIndex","_toggleDisabledState","prop","disabled","removeAttr","_readOnlyPropValue","unobserve","_getLabelContainer","_getLabelContainerWidth","_getLabelBeforeWidth","buttonsBeforeWidth","_updateLabelWidth","_label","updateBeforeWidth","updateMaxWidth","_setLabelContainerAria","setAria","getId","labelConfig","$editor","mark","containsButtonsBefore","containerWidth","beforeWidth","observe","bind","_renderPlaceholderMarkup","_attachPlaceholderEvents","_$placeholder","placeholderText","$placeholder","insertAfter","startEvent","up","NAME","on","trigger","_placeholder","_clearValueHandler","e","stopPropagation","_saveValueChangeEvent","_clearValue","reset","event","hasActionSubscription","action","_createActionByOption","excludeValidators","toLowerCase","_disposed","_refreshEvents","off","_keyPressHandler","_keyDownHandler","isCtrlEnter","ctrlKey","isNewValue","_renderValueChangeEvent","keyPressEvent","_renderValueEventName","keyDownEvent","_valueChangeEventHandler","_cleanValueChangeEvent","valueChangeNamespace","textChangeNamespace","_focusTarget","_focusEventTarget","element","_isInput","_preventNestedFocusEvent","isDefaultPrevented","shouldPrevent","_isNestedTarget","relatedTarget","type","target","_toggleFocusClass","preventDefault","_focusClassTarget","_focusInHandler","_focusOutHandler","isFocused","_hasFocusClass","formattedValue","_enterKeyAction","_enterKeyHandlerUp","_updateValue","_options","silent","_dispose","_getSubmitElement","_hasActiveElement","is","getActiveElement","_optionChanged","args","fullName","eventName","replace","includes","_refreshFocusEvent","_createValueChangeAction","updateText","updateMark","updateMode","updateContainsButtonsBefore","_invalidate","_setInputType","input","focus","defaultOptions","eventHandler","result","charAt","toUpperCase","substr"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/text_box/ui.text_editor.base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.base.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    current,\r\n    isMaterial\r\n} from \"../themes\";\r\nimport devices from \"../../core/devices\";\r\nimport Editor from \"../editor/editor\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport ClearButton from \"./ui.text_editor.clear\";\r\nimport TextEditorButtonCollection from \"./texteditor_button_collection/index\";\r\nimport config from \"../../core/config\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    TextEditorLabel\r\n} from \"./ui.text_editor.label\";\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport resizeObserverSingleton from \"../../core/resize_observer\";\r\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\r\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\r\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\r\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\r\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\r\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\r\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\r\nvar TextEditorLabelCreator = TextEditorLabel;\r\n\r\nfunction checkButtonsOptionType(buttons) {\r\n    if (isDefined(buttons) && !Array.isArray(buttons)) {\r\n        throw errors.Error(\"E1053\")\r\n    }\r\n}\r\nvar TextEditorBase = Editor.inherit({\r\n    ctor: function(_, options) {\r\n        if (options) {\r\n            checkButtonsOptionType(options.buttons)\r\n        }\r\n        this._buttonCollection = new TextEditorButtonCollection(this, this._getDefaultButtons());\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this._labelContainerElement = null;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            buttons: void 0,\r\n            value: \"\",\r\n            spellcheck: false,\r\n            showClearButton: false,\r\n            valueChangeEvent: \"change\",\r\n            placeholder: \"\",\r\n            inputAttr: {},\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            onKeyDown: null,\r\n            onKeyUp: null,\r\n            onChange: null,\r\n            onInput: null,\r\n            onCut: null,\r\n            onCopy: null,\r\n            onPaste: null,\r\n            onEnterKey: null,\r\n            mode: \"text\",\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            text: void 0,\r\n            displayValueFormatter: function(value) {\r\n                return isDefined(value) && false !== value ? value : \"\"\r\n            },\r\n            stylingMode: config().editorStylingMode || \"outlined\",\r\n            showValidationMark: true,\r\n            label: \"\",\r\n            labelMode: \"static\",\r\n            labelMark: \"\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = current();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return isMaterial(themeName)\r\n            },\r\n            options: {\r\n                stylingMode: config().editorStylingMode || \"filled\",\r\n                labelMode: \"floating\"\r\n            }\r\n        }])\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return [{\r\n            name: \"clear\",\r\n            Ctor: ClearButton\r\n        }]\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.option(\"showClearButton\") && !this.option(\"readOnly\")\r\n    },\r\n    _input: function() {\r\n        return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first()\r\n    },\r\n    _isFocused: function() {\r\n        return focused(this._input()) || this.callBase()\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element()\r\n    },\r\n    _buttonsContainer: function() {\r\n        return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0)\r\n    },\r\n    _isControlKey: function(key) {\r\n        return -1 !== CONTROL_KEYS.indexOf(key)\r\n    },\r\n    _renderStylingMode: function() {\r\n        this.callBase();\r\n        this._updateButtonsStyling(this.option(\"stylingMode\"))\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTEDITOR_CLASS);\r\n        this._renderInput();\r\n        this._renderStylingMode();\r\n        this._renderInputType();\r\n        this._renderPlaceholder();\r\n        this._renderProps();\r\n        this.callBase();\r\n        this._renderValue();\r\n        this._renderLabel()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._refreshValueChangeEvent();\r\n        this._renderEvents();\r\n        this._renderEnterKeyAction();\r\n        this._renderEmptinessEvent()\r\n    },\r\n    _renderInput: function() {\r\n        this._$buttonsContainer = this._$textEditorContainer = $(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\r\n        this._$textEditorInputContainer = $(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\r\n        this._$textEditorInputContainer.append(this._createInput());\r\n        this._renderButtonContainers()\r\n    },\r\n    _getInputContainer() {\r\n        return this._$textEditorInputContainer\r\n    },\r\n    _renderPendingIndicator: function() {\r\n        this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\r\n        var $inputContainer = this._getInputContainer();\r\n        var $indicatorElement = $(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\r\n        this._pendingIndicator = this._createComponent($indicatorElement, LoadIndicator)\r\n    },\r\n    _disposePendingIndicator: function() {\r\n        if (!this._pendingIndicator) {\r\n            return\r\n        }\r\n        this._pendingIndicator.dispose();\r\n        this._pendingIndicator.$element().remove();\r\n        this._pendingIndicator = null;\r\n        this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS)\r\n    },\r\n    _renderValidationState: function() {\r\n        this.callBase();\r\n        var isPending = \"pending\" === this.option(\"validationStatus\");\r\n        var $element = this.$element();\r\n        if (isPending) {\r\n            !this._pendingIndicator && this._renderPendingIndicator();\r\n            this._showValidMark = false\r\n        } else {\r\n            if (\"invalid\" === this.option(\"validationStatus\")) {\r\n                this._showValidMark = false\r\n            }\r\n            if (!this._showValidMark && true === this.option(\"showValidationMark\")) {\r\n                this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator\r\n            }\r\n            this._disposePendingIndicator()\r\n        }\r\n        $element.toggleClass(TEXTEDITOR_VALID_CLASS, !!this._showValidMark)\r\n    },\r\n    _renderButtonContainers: function() {\r\n        var buttons = this.option(\"buttons\");\r\n        this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$buttonsContainer);\r\n        this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$buttonsContainer)\r\n    },\r\n    _cleanButtonContainers: function() {\r\n        var _this$_$beforeButtons, _this$_$afterButtonsC;\r\n        null === (_this$_$beforeButtons = this._$beforeButtonsContainer) || void 0 === _this$_$beforeButtons ? void 0 : _this$_$beforeButtons.remove();\r\n        null === (_this$_$afterButtonsC = this._$afterButtonsContainer) || void 0 === _this$_$afterButtonsC ? void 0 : _this$_$afterButtonsC.remove();\r\n        this._buttonCollection.clean()\r\n    },\r\n    _clean() {\r\n        this._buttonCollection.clean();\r\n        this._disposePendingIndicator();\r\n        this._unobserveLabelContainerResize();\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this._$textEditorContainer = null;\r\n        this._$buttonsContainer = null;\r\n        this.callBase()\r\n    },\r\n    _createInput: function() {\r\n        var $input = $(\"<input>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        return $input\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var inputAttrName = this.option(\"inputAttr.name\");\r\n        return this.callBase(name || inputAttrName || \"\")\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        var inputAttributes = extend(this._getDefaultAttributes(), customAttributes);\r\n        $input.attr(inputAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\")\r\n    },\r\n    _getDefaultAttributes: function() {\r\n        var defaultAttributes = {\r\n            autocomplete: \"off\"\r\n        };\r\n        var {\r\n            ios: ios,\r\n            mac: mac\r\n        } = devices.real();\r\n        if (ios || mac) {\r\n            defaultAttributes.placeholder = \" \"\r\n        }\r\n        return defaultAttributes\r\n    },\r\n    _updateButtons: function(names) {\r\n        this._buttonCollection.updateButtons(names)\r\n    },\r\n    _updateButtonsStyling: function(editorStylingMode) {\r\n        each(this.option(\"buttons\"), (_, _ref) => {\r\n            var {\r\n                options: options,\r\n                name: buttonName\r\n            } = _ref;\r\n            if (options && !options.stylingMode && this.option(\"visible\")) {\r\n                var buttonInstance = this.getButton(buttonName);\r\n                buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\")\r\n            }\r\n        })\r\n    },\r\n    _renderValue: function() {\r\n        var renderInputPromise = this._renderInputValue();\r\n        return renderInputPromise.promise()\r\n    },\r\n    _renderInputValue: function(value) {\r\n        var _value;\r\n        value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\r\n        var text = this.option(\"text\");\r\n        var displayValue = this.option(\"displayValue\");\r\n        var displayValueFormatter = this.option(\"displayValueFormatter\");\r\n        if (void 0 !== displayValue && null !== value) {\r\n            text = displayValueFormatter(displayValue)\r\n        } else if (!isDefined(text)) {\r\n            text = displayValueFormatter(value)\r\n        }\r\n        this.option(\"text\", text);\r\n        if (this._input().val() !== (isDefined(text) ? text : \"\")) {\r\n            this._renderDisplayText(text)\r\n        } else {\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this._input().val(text);\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _isValueValid: function() {\r\n        if (this._input().length) {\r\n            var validity = this._input().get(0).validity;\r\n            if (validity) {\r\n                return validity.valid\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _toggleEmptiness: function(isEmpty) {\r\n        this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\r\n        this._togglePlaceholder(isEmpty)\r\n    },\r\n    _togglePlaceholder: function(isEmpty) {\r\n        this.$element().find(\".\".concat(TEXTEDITOR_PLACEHOLDER_CLASS)).eq(0).toggleClass(STATE_INVISIBLE_CLASS, !isEmpty)\r\n    },\r\n    _renderProps: function() {\r\n        this._toggleReadOnlyState();\r\n        this._toggleSpellcheckState();\r\n        this._toggleTabIndex()\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.callBase.apply(this, arguments);\r\n        var $input = this._input();\r\n        $input.prop(\"disabled\", value)\r\n    },\r\n    _toggleTabIndex: function() {\r\n        var $input = this._input();\r\n        var disabled = this.option(\"disabled\");\r\n        var focusStateEnabled = this.option(\"focusStateEnabled\");\r\n        if (disabled || !focusStateEnabled) {\r\n            $input.attr(\"tabIndex\", -1)\r\n        } else {\r\n            $input.removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this._input().prop(\"readOnly\", this._readOnlyPropValue());\r\n        this.callBase()\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return this.option(\"readOnly\")\r\n    },\r\n    _toggleSpellcheckState: function() {\r\n        this._input().prop(\"spellcheck\", this.option(\"spellcheck\"))\r\n    },\r\n    _unobserveLabelContainerResize: function() {\r\n        if (this._labelContainerElement) {\r\n            resizeObserverSingleton.unobserve(this._labelContainerElement);\r\n            this._labelContainerElement = null\r\n        }\r\n    },\r\n    _getLabelContainer: function() {\r\n        return this._input()\r\n    },\r\n    _getLabelContainerWidth: function() {\r\n        return getWidth(this._getLabelContainer())\r\n    },\r\n    _getLabelBeforeWidth: function() {\r\n        var buttonsBeforeWidth = this._$beforeButtonsContainer && getWidth(this._$beforeButtonsContainer);\r\n        return null !== buttonsBeforeWidth && void 0 !== buttonsBeforeWidth ? buttonsBeforeWidth : 0\r\n    },\r\n    _updateLabelWidth: function() {\r\n        this._label.updateBeforeWidth(this._getLabelBeforeWidth());\r\n        this._label.updateMaxWidth(this._getLabelContainerWidth())\r\n    },\r\n    _setLabelContainerAria: function() {\r\n        this.setAria(\"labelledby\", this._label.getId(), this._getLabelContainer())\r\n    },\r\n    _renderLabel: function() {\r\n        this._unobserveLabelContainerResize();\r\n        this._labelContainerElement = $(this._getLabelContainer()).get(0);\r\n        var {\r\n            label: label,\r\n            labelMode: labelMode,\r\n            labelMark: labelMark\r\n        } = this.option();\r\n        var labelConfig = {\r\n            $editor: this.$element(),\r\n            text: label,\r\n            mark: labelMark,\r\n            mode: labelMode,\r\n            containsButtonsBefore: !!this._$beforeButtonsContainer,\r\n            containerWidth: this._getLabelContainerWidth(),\r\n            beforeWidth: this._getLabelBeforeWidth()\r\n        };\r\n        this._label = new TextEditorLabelCreator(labelConfig);\r\n        this._setLabelContainerAria();\r\n        if (this._labelContainerElement) {\r\n            resizeObserverSingleton.observe(this._labelContainerElement, this._updateLabelWidth.bind(this))\r\n        }\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._renderPlaceholderMarkup();\r\n        this._attachPlaceholderEvents()\r\n    },\r\n    _renderPlaceholderMarkup: function() {\r\n        if (this._$placeholder) {\r\n            this._$placeholder.remove();\r\n            this._$placeholder = null\r\n        }\r\n        var $input = this._input();\r\n        var placeholderText = this.option(\"placeholder\");\r\n        var $placeholder = this._$placeholder = $(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\r\n        $placeholder.insertAfter($input);\r\n        $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS)\r\n    },\r\n    _attachPlaceholderEvents: function() {\r\n        var startEvent = addNamespace(pointerEvents.up, this.NAME);\r\n        eventsEngine.on(this._$placeholder, startEvent, () => {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        });\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _placeholder: function() {\r\n        return this._$placeholder || $()\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        var $input = this._input();\r\n        e.stopPropagation();\r\n        this._saveValueChangeEvent(e);\r\n        this._clearValue();\r\n        !this._isFocused() && eventsEngine.trigger($input, \"focus\");\r\n        eventsEngine.trigger($input, \"input\")\r\n    },\r\n    _clearValue: function() {\r\n        this.reset()\r\n    },\r\n    _renderEvents: function() {\r\n        var $input = this._input();\r\n        each(EVENTS_LIST, (_, event) => {\r\n            if (this.hasActionSubscription(\"on\" + event)) {\r\n                var action = this._createActionByOption(\"on\" + event, {\r\n                    excludeValidators: [\"readOnly\"]\r\n                });\r\n                eventsEngine.on($input, addNamespace(event.toLowerCase(), this.NAME), e => {\r\n                    if (this._disposed) {\r\n                        return\r\n                    }\r\n                    action({\r\n                        event: e\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _refreshEvents: function() {\r\n        var $input = this._input();\r\n        each(EVENTS_LIST, (_, event) => {\r\n            eventsEngine.off($input, addNamespace(event.toLowerCase(), this.NAME))\r\n        });\r\n        this._renderEvents()\r\n    },\r\n    _keyPressHandler: function() {\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var $input = this._input();\r\n        var isCtrlEnter = e.ctrlKey && \"enter\" === normalizeKeyName(e);\r\n        var isNewValue = $input.val() !== this.option(\"value\");\r\n        if (isCtrlEnter && isNewValue) {\r\n            eventsEngine.trigger($input, \"change\")\r\n        }\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        var keyPressEvent = addNamespace(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\r\n        var valueChangeEvent = addNamespace(this.option(\"valueChangeEvent\"), \"\".concat(this.NAME, \"ValueChange\"));\r\n        var keyDownEvent = addNamespace(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\r\n        var $input = this._input();\r\n        eventsEngine.on($input, keyPressEvent, this._keyPressHandler.bind(this));\r\n        eventsEngine.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\r\n        eventsEngine.on($input, keyDownEvent, this._keyDownHandler.bind(this))\r\n    },\r\n    _cleanValueChangeEvent: function() {\r\n        var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\r\n        var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\r\n        eventsEngine.off(this._input(), valueChangeNamespace);\r\n        eventsEngine.off(this._input(), textChangeNamespace)\r\n    },\r\n    _refreshValueChangeEvent: function() {\r\n        this._cleanValueChangeEvent();\r\n        this._renderValueChangeEvent()\r\n    },\r\n    _renderValueEventName: function() {\r\n        return \"input change keypress\"\r\n    },\r\n    _focusTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusEventTarget: function() {\r\n        return this.element()\r\n    },\r\n    _isInput: function(element) {\r\n        return element === this._input().get(0)\r\n    },\r\n    _preventNestedFocusEvent: function(event) {\r\n        if (event.isDefaultPrevented()) {\r\n            return true\r\n        }\r\n        var shouldPrevent = this._isNestedTarget(event.relatedTarget);\r\n        if (\"focusin\" === event.type) {\r\n            shouldPrevent = shouldPrevent && this._isNestedTarget(event.target) && !this._isInput(event.target)\r\n        } else if (!shouldPrevent) {\r\n            this._toggleFocusClass(false, this.$element())\r\n        }\r\n        shouldPrevent && event.preventDefault();\r\n        return shouldPrevent\r\n    },\r\n    _isNestedTarget: function(target) {\r\n        return !!this.$element().find(target).length\r\n    },\r\n    _focusClassTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _focusInHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _focusOutHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _toggleFocusClass: function(isFocused, $element) {\r\n        this.callBase(isFocused, this._focusClassTarget($element))\r\n    },\r\n    _hasFocusClass: function(element) {\r\n        return this.callBase($(element || this.$element()))\r\n    },\r\n    _renderEmptinessEvent: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this))\r\n    },\r\n    _toggleEmptinessEventHandler: function() {\r\n        var text = this._input().val();\r\n        var isEmpty = (\"\" === text || null === text) && this._isValueValid();\r\n        this._toggleEmptiness(isEmpty)\r\n    },\r\n    _valueChangeEventHandler: function(e, formattedValue) {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\r\n        this._saveValueChangeEvent(void 0)\r\n    },\r\n    _renderEnterKeyAction: function() {\r\n        this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        });\r\n        eventsEngine.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\r\n        eventsEngine.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this))\r\n    },\r\n    _enterKeyHandlerUp: function(e) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        if (\"enter\" === normalizeKeyName(e)) {\r\n            this._enterKeyAction({\r\n                event: e\r\n            })\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        this._options.silent(\"text\", null);\r\n        this._renderValue()\r\n    },\r\n    _dispose: function() {\r\n        this._enterKeyAction = void 0;\r\n        this.callBase()\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._input()\r\n    },\r\n    _hasActiveElement: function() {\r\n        return this._input().is(domAdapter.getActiveElement())\r\n    },\r\n    _optionChanged: function(args) {\r\n        var {\r\n            name: name,\r\n            fullName: fullName,\r\n            value: value\r\n        } = args;\r\n        var eventName = name.replace(\"on\", \"\");\r\n        if (EVENTS_LIST.includes(eventName)) {\r\n            this._refreshEvents();\r\n            return\r\n        }\r\n        switch (name) {\r\n            case \"valueChangeEvent\":\r\n                this._refreshValueChangeEvent();\r\n                this._refreshFocusEvent();\r\n                this._refreshEvents();\r\n                break;\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this.callBase(args);\r\n                this._toggleTabIndex();\r\n                break;\r\n            case \"spellcheck\":\r\n                this._toggleSpellcheckState();\r\n                break;\r\n            case \"mode\":\r\n                this._renderInputType();\r\n                break;\r\n            case \"onEnterKey\":\r\n                this._renderEnterKeyAction();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"label\":\r\n                this._label.updateText(value);\r\n                this._setLabelContainerAria();\r\n                break;\r\n            case \"labelMark\":\r\n                this._label.updateMark(value);\r\n                break;\r\n            case \"labelMode\":\r\n                this._label.updateMode(value);\r\n                this._setLabelContainerAria();\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._label.updateMaxWidth(this._getLabelContainerWidth());\r\n                break;\r\n            case \"readOnly\":\r\n            case \"disabled\":\r\n                this._updateButtons();\r\n                this.callBase(args);\r\n                break;\r\n            case \"showClearButton\":\r\n                this._updateButtons([\"clear\"]);\r\n                break;\r\n            case \"text\":\r\n                break;\r\n            case \"value\":\r\n                this._updateValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"inputAttr\":\r\n                this._applyInputAttributes(this._input(), this.option(name));\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderStylingMode();\r\n                this._updateLabelWidth();\r\n                break;\r\n            case \"buttons\":\r\n                if (fullName === name) {\r\n                    checkButtonsOptionType(value)\r\n                }\r\n                this._cleanButtonContainers();\r\n                this._renderButtonContainers();\r\n                this._updateButtonsStyling(this.option(\"stylingMode\"));\r\n                this._updateLabelWidth();\r\n                this._label.updateContainsButtonsBefore(!!this._$beforeButtonsContainer);\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                if (value && this.option(\"buttons\")) {\r\n                    this._cleanButtonContainers();\r\n                    this._renderButtonContainers();\r\n                    this._updateButtonsStyling(this.option(\"stylingMode\"))\r\n                }\r\n                break;\r\n            case \"displayValueFormatter\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationMark\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _renderInputType: function() {\r\n        this._setInputType(this.option(\"mode\"))\r\n    },\r\n    _setInputType: function(type) {\r\n        var input = this._input();\r\n        if (\"search\" === type) {\r\n            type = \"text\"\r\n        }\r\n        try {\r\n            input.prop(\"type\", type)\r\n        } catch (e) {\r\n            input.prop(\"type\", \"text\")\r\n        }\r\n    },\r\n    getButton(name) {\r\n        return this._buttonCollection.getButton(name)\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\")\r\n    },\r\n    reset: function() {\r\n        if (this._showValidMark) {\r\n            this._showValidMark = false;\r\n            this._renderValidationState()\r\n        }\r\n        var defaultOptions = this._getDefaultOptions();\r\n        if (this.option(\"value\") === defaultOptions.value) {\r\n            this._options.silent(\"text\", \"\");\r\n            this._renderValue()\r\n        } else {\r\n            this.option(\"value\", defaultOptions.value)\r\n        }\r\n    },\r\n    on: function(eventName, eventHandler) {\r\n        var result = this.callBase(eventName, eventHandler);\r\n        var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\r\n        if (EVENTS_LIST.indexOf(event) >= 0) {\r\n            this._refreshEvents()\r\n        }\r\n        return result\r\n    }\r\n});\r\nexport default TextEditorBase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/points/bar_point.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../../core/utils/extend\";\nvar _extend = extend;\nvar _math = Math;\nvar _floor = _math.floor;\nvar _abs = _math.abs;\nimport symbolPoint from \"./symbol_point\";\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\nvar DEFAULT_BAR_TRACKER_SIZE = 9;\nvar CORRECTING_BAR_TRACKER_VALUE = 4;\nvar RIGHT = \"right\";\nvar LEFT = \"left\";\nvar TOP = \"top\";\nvar BOTTOM = \"bottom\";\n\nfunction getLabelOrientation(point) {\n  var initialValue = point.initialValue;\n\n  var invert = point._getValTranslator().getBusinessRange().invert;\n\n  var isDiscreteValue = \"discrete\" === point.series.valueAxisType;\n  var isFullStacked = point.series.isFullStackedSeries();\n  var notAxisInverted = !isDiscreteValue && (initialValue >= 0 && !invert || initialValue < 0 && invert) || isDiscreteValue && !invert || isFullStacked;\n  return notAxisInverted ? TOP : BOTTOM;\n}\n\nexport default _extend({}, symbolPoint, {\n  correctCoordinates(correctOptions) {\n    var correction = _floor(correctOptions.offset - correctOptions.width / 2);\n\n    if (this._options.rotated) {\n      this.height = correctOptions.width;\n      this.yCorrection = correction;\n      this.xCorrection = null;\n    } else {\n      this.width = correctOptions.width;\n      this.xCorrection = correction;\n      this.yCorrection = null;\n    }\n  },\n\n  _getGraphicBBox: function (location) {\n    var bBox = {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n\n    if (location) {\n      var isTop = \"top\" === location;\n\n      if (!this._options.rotated) {\n        bBox.y = isTop ? bBox.y : bBox.y + bBox.height;\n        bBox.height = 0;\n      } else {\n        bBox.x = isTop ? bBox.x + bBox.width : bBox.x;\n        bBox.width = 0;\n      }\n    }\n\n    return bBox;\n  },\n  _getLabelConnector: function (location) {\n    return this._getGraphicBBox(location);\n  },\n  _getLabelPosition: function () {\n    var position = getLabelOrientation(this);\n\n    if (this._options.rotated) {\n      position = position === TOP ? RIGHT : LEFT;\n    }\n\n    return position;\n  },\n  _getLabelCoords: function (label) {\n    var coords;\n\n    if (0 === this.initialValue && this.series.isFullStackedSeries()) {\n      if (!this._options.rotated) {\n        coords = this._getLabelCoordOfPosition(label, TOP);\n      } else {\n        coords = this._getLabelCoordOfPosition(label, RIGHT);\n      }\n    } else if (\"inside\" === label.getLayoutOptions().position) {\n      coords = this._getLabelCoordOfPosition(label, \"inside\");\n    } else {\n      coords = symbolPoint._getLabelCoords.call(this, label);\n    }\n\n    return coords;\n  },\n  _drawLabel: function () {\n    this._label.pointPosition = \"inside\" !== this._label.getLayoutOptions().position && getLabelOrientation(this);\n\n    symbolPoint._drawLabel.call(this);\n  },\n  hideInsideLabel: function (label, coord) {\n    var graphicBBox = this._getGraphicBBox();\n\n    var labelBBox = label.getBoundingRect();\n\n    if (this._options.resolveLabelsOverlapping) {\n      if ((coord.y <= graphicBBox.y && coord.y + labelBBox.height >= graphicBBox.y + graphicBBox.height || coord.x <= graphicBBox.x && coord.x + labelBBox.width >= graphicBBox.x + graphicBBox.width) && !(coord.y > graphicBBox.y + graphicBBox.height || coord.y + labelBBox.height < graphicBBox.y || coord.x > graphicBBox.x + graphicBBox.width || coord.x + labelBBox.width < graphicBBox.x)) {\n        label.draw(false);\n        return true;\n      }\n    }\n\n    return false;\n  },\n  _showForZeroValues: function () {\n    return this._options.label.showForZeroValues || this.initialValue;\n  },\n\n  _drawMarker(renderer, group, animationEnabled) {\n    var style = this._getStyle();\n\n    var r = this._options.cornerRadius;\n    var rotated = this._options.rotated;\n    var {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    } = this.getMarkerCoords();\n\n    if (animationEnabled) {\n      if (rotated) {\n        width = 0;\n        x = this.defaultX;\n      } else {\n        height = 0;\n        y = this.defaultY;\n      }\n    }\n\n    this.graphic = renderer.rect(x, y, width, height).attr({\n      rx: r,\n      ry: r\n    }).smartAttr(style).data({\n      \"chart-data-point\": this\n    }).append(group);\n  },\n\n  _getSettingsForTracker: function () {\n    var y = this.y;\n    var height = this.height;\n    var x = this.x;\n    var width = this.width;\n\n    if (this._options.rotated) {\n      if (1 === width) {\n        width = DEFAULT_BAR_TRACKER_SIZE;\n        x -= CORRECTING_BAR_TRACKER_VALUE;\n      }\n    } else if (1 === height) {\n      height = DEFAULT_BAR_TRACKER_SIZE;\n      y -= CORRECTING_BAR_TRACKER_VALUE;\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  getGraphicSettings: function () {\n    var graphic = this.graphic;\n    return {\n      x: graphic.attr(\"x\"),\n      y: graphic.attr(\"y\"),\n      height: graphic.attr(\"height\"),\n      width: graphic.attr(\"width\")\n    };\n  },\n\n  _getEdgeTooltipParams() {\n    var isPositive = this.value >= 0;\n    var xCoord;\n    var yCoord;\n\n    var invertedBusinessRange = this._getValTranslator().getBusinessRange().invert;\n\n    var {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    } = this;\n\n    if (this._options.rotated) {\n      yCoord = y + height / 2;\n\n      if (invertedBusinessRange) {\n        xCoord = isPositive ? x : x + width;\n      } else {\n        xCoord = isPositive ? x + width : x;\n      }\n    } else {\n      xCoord = x + width / 2;\n\n      if (invertedBusinessRange) {\n        yCoord = isPositive ? y + height : y;\n      } else {\n        yCoord = isPositive ? y : y + height;\n      }\n    }\n\n    return {\n      x: xCoord,\n      y: yCoord,\n      offset: 0\n    };\n  },\n\n  getTooltipParams: function (location) {\n    if (\"edge\" === location) {\n      return this._getEdgeTooltipParams();\n    }\n\n    var center = this.getCenterCoord();\n    center.offset = 0;\n    return center;\n  },\n\n  getCenterCoord() {\n    var {\n      width: width,\n      height: height,\n      x: x,\n      y: y\n    } = this;\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  },\n\n  _truncateCoord: function (coord, bounds) {\n    if (null === coord) {\n      return coord;\n    }\n\n    if (coord < bounds[0]) {\n      return bounds[0];\n    }\n\n    if (coord > bounds[1]) {\n      return bounds[1];\n    }\n\n    return coord;\n  },\n\n  _getErrorBarBaseEdgeLength() {\n    return this._options.rotated ? this.height : this.width;\n  },\n\n  _translateErrorBars: function (argVisibleArea) {\n    symbolPoint._translateErrorBars.call(this);\n\n    if (this._errorBarPos < argVisibleArea[0] || this._errorBarPos > argVisibleArea[1]) {\n      this._errorBarPos = void 0;\n    }\n  },\n  _translate: function () {\n    var rotated = this._options.rotated;\n    var valAxis = rotated ? \"x\" : \"y\";\n    var argAxis = rotated ? \"y\" : \"x\";\n    var valIntervalName = rotated ? \"width\" : \"height\";\n    var argIntervalName = rotated ? \"height\" : \"width\";\n\n    var argTranslator = this._getArgTranslator();\n\n    var valTranslator = this._getValTranslator();\n\n    var argVisibleArea = this.series.getArgumentAxis().getVisibleArea();\n    var valVisibleArea = this.series.getValueAxis().getVisibleArea();\n    var arg = argTranslator.translate(this.argument);\n    var val = valTranslator.translate(this.value, 1);\n    var minVal = valTranslator.translate(this.minValue);\n    this[argAxis] = arg = null === arg ? arg : arg + (this[argAxis + \"Correction\"] || 0);\n    this[\"v\" + valAxis] = val;\n    this[\"v\" + argAxis] = arg + this[argIntervalName] / 2;\n    val = this._truncateCoord(val, valVisibleArea);\n    minVal = this._truncateCoord(minVal, valVisibleArea);\n    this[valIntervalName] = _abs(val - minVal);\n    val = val < minVal ? val : minVal;\n\n    this._calculateVisibility(rotated ? val : arg, rotated ? arg : val, this.width, this.height);\n\n    this[valAxis] = null === val ? val : val + (this[valAxis + \"Correction\"] || 0);\n    this[\"min\" + valAxis.toUpperCase()] = null === minVal ? minVal : minVal + (this[valAxis + \"Correction\"] || 0);\n    this[\"default\" + valAxis.toUpperCase()] = valTranslator.translate(CANVAS_POSITION_DEFAULT);\n\n    this._translateErrorBars(argVisibleArea);\n\n    if (this.inVisibleArea && null !== this[argAxis]) {\n      if (this[argAxis] < argVisibleArea[0]) {\n        this[argIntervalName] = this[argIntervalName] - (argVisibleArea[0] - this[argAxis]);\n        this[argAxis] = argVisibleArea[0];\n      }\n\n      if (this[argAxis] + this[argIntervalName] > argVisibleArea[1]) {\n        this[argIntervalName] = argVisibleArea[1] - this[argAxis];\n      }\n    }\n  },\n  _updateMarker: function (animationEnabled, style) {\n    this.graphic.smartAttr(_extend({}, style, !animationEnabled ? this.getMarkerCoords() : {}));\n  },\n  getMarkerCoords: function () {\n    var x = this.x;\n    var y = this.y;\n    var width = this.width;\n    var height = this.height;\n    var argAxis = this.series.getArgumentAxis();\n    var rotated = this._options.rotated;\n\n    if (argAxis.getAxisPosition) {\n      var axisOptions = argAxis.getOptions();\n      var edgeOffset = Math.round(axisOptions.width / 2);\n      var argAxisPosition = argAxis.getAxisPosition();\n\n      if (axisOptions.visible) {\n        if (!rotated) {\n          height -= this.minY === this.defaultY && this.minY === argAxisPosition - argAxis.getAxisShift() ? edgeOffset : 0;\n          height < 0 && (height = 0);\n        } else {\n          var isStartFromAxis = this.minX === this.defaultX && this.minX === argAxisPosition - argAxis.getAxisShift();\n          x += isStartFromAxis ? edgeOffset : 0;\n          width -= isStartFromAxis ? edgeOffset : 0;\n          width < 0 && (width = 0);\n        }\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  },\n  coordsIn: function (x, y) {\n    return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n  }\n});","map":{"version":3,"names":["extend","_extend","_math","Math","_floor","floor","_abs","abs","symbolPoint","CANVAS_POSITION_DEFAULT","DEFAULT_BAR_TRACKER_SIZE","CORRECTING_BAR_TRACKER_VALUE","RIGHT","LEFT","TOP","BOTTOM","getLabelOrientation","point","initialValue","invert","_getValTranslator","getBusinessRange","isDiscreteValue","series","valueAxisType","isFullStacked","isFullStackedSeries","notAxisInverted","correctCoordinates","correctOptions","correction","offset","width","_options","rotated","height","yCorrection","xCorrection","_getGraphicBBox","location","bBox","x","y","isTop","_getLabelConnector","_getLabelPosition","position","_getLabelCoords","label","coords","_getLabelCoordOfPosition","getLayoutOptions","call","_drawLabel","_label","pointPosition","hideInsideLabel","coord","graphicBBox","labelBBox","getBoundingRect","resolveLabelsOverlapping","draw","_showForZeroValues","showForZeroValues","_drawMarker","renderer","group","animationEnabled","style","_getStyle","r","cornerRadius","getMarkerCoords","defaultX","defaultY","graphic","rect","attr","rx","ry","smartAttr","data","append","_getSettingsForTracker","getGraphicSettings","_getEdgeTooltipParams","isPositive","value","xCoord","yCoord","invertedBusinessRange","getTooltipParams","center","getCenterCoord","_truncateCoord","bounds","_getErrorBarBaseEdgeLength","_translateErrorBars","argVisibleArea","_errorBarPos","_translate","valAxis","argAxis","valIntervalName","argIntervalName","argTranslator","_getArgTranslator","valTranslator","getArgumentAxis","getVisibleArea","valVisibleArea","getValueAxis","arg","translate","argument","val","minVal","minValue","_calculateVisibility","toUpperCase","inVisibleArea","_updateMarker","getAxisPosition","axisOptions","getOptions","edgeOffset","round","argAxisPosition","visible","minY","getAxisShift","isStartFromAxis","minX","coordsIn"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/series/points/bar_point.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/points/bar_point.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nvar _extend = extend;\r\nvar _math = Math;\r\nvar _floor = _math.floor;\r\nvar _abs = _math.abs;\r\nimport symbolPoint from \"./symbol_point\";\r\nvar CANVAS_POSITION_DEFAULT = \"canvas_position_default\";\r\nvar DEFAULT_BAR_TRACKER_SIZE = 9;\r\nvar CORRECTING_BAR_TRACKER_VALUE = 4;\r\nvar RIGHT = \"right\";\r\nvar LEFT = \"left\";\r\nvar TOP = \"top\";\r\nvar BOTTOM = \"bottom\";\r\n\r\nfunction getLabelOrientation(point) {\r\n    var initialValue = point.initialValue;\r\n    var invert = point._getValTranslator().getBusinessRange().invert;\r\n    var isDiscreteValue = \"discrete\" === point.series.valueAxisType;\r\n    var isFullStacked = point.series.isFullStackedSeries();\r\n    var notAxisInverted = !isDiscreteValue && (initialValue >= 0 && !invert || initialValue < 0 && invert) || isDiscreteValue && !invert || isFullStacked;\r\n    return notAxisInverted ? TOP : BOTTOM\r\n}\r\nexport default _extend({}, symbolPoint, {\r\n    correctCoordinates(correctOptions) {\r\n        var correction = _floor(correctOptions.offset - correctOptions.width / 2);\r\n        if (this._options.rotated) {\r\n            this.height = correctOptions.width;\r\n            this.yCorrection = correction;\r\n            this.xCorrection = null\r\n        } else {\r\n            this.width = correctOptions.width;\r\n            this.xCorrection = correction;\r\n            this.yCorrection = null\r\n        }\r\n    },\r\n    _getGraphicBBox: function(location) {\r\n        var bBox = {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height\r\n        };\r\n        if (location) {\r\n            var isTop = \"top\" === location;\r\n            if (!this._options.rotated) {\r\n                bBox.y = isTop ? bBox.y : bBox.y + bBox.height;\r\n                bBox.height = 0\r\n            } else {\r\n                bBox.x = isTop ? bBox.x + bBox.width : bBox.x;\r\n                bBox.width = 0\r\n            }\r\n        }\r\n        return bBox\r\n    },\r\n    _getLabelConnector: function(location) {\r\n        return this._getGraphicBBox(location)\r\n    },\r\n    _getLabelPosition: function() {\r\n        var position = getLabelOrientation(this);\r\n        if (this._options.rotated) {\r\n            position = position === TOP ? RIGHT : LEFT\r\n        }\r\n        return position\r\n    },\r\n    _getLabelCoords: function(label) {\r\n        var coords;\r\n        if (0 === this.initialValue && this.series.isFullStackedSeries()) {\r\n            if (!this._options.rotated) {\r\n                coords = this._getLabelCoordOfPosition(label, TOP)\r\n            } else {\r\n                coords = this._getLabelCoordOfPosition(label, RIGHT)\r\n            }\r\n        } else if (\"inside\" === label.getLayoutOptions().position) {\r\n            coords = this._getLabelCoordOfPosition(label, \"inside\")\r\n        } else {\r\n            coords = symbolPoint._getLabelCoords.call(this, label)\r\n        }\r\n        return coords\r\n    },\r\n    _drawLabel: function() {\r\n        this._label.pointPosition = \"inside\" !== this._label.getLayoutOptions().position && getLabelOrientation(this);\r\n        symbolPoint._drawLabel.call(this)\r\n    },\r\n    hideInsideLabel: function(label, coord) {\r\n        var graphicBBox = this._getGraphicBBox();\r\n        var labelBBox = label.getBoundingRect();\r\n        if (this._options.resolveLabelsOverlapping) {\r\n            if ((coord.y <= graphicBBox.y && coord.y + labelBBox.height >= graphicBBox.y + graphicBBox.height || coord.x <= graphicBBox.x && coord.x + labelBBox.width >= graphicBBox.x + graphicBBox.width) && !(coord.y > graphicBBox.y + graphicBBox.height || coord.y + labelBBox.height < graphicBBox.y || coord.x > graphicBBox.x + graphicBBox.width || coord.x + labelBBox.width < graphicBBox.x)) {\r\n                label.draw(false);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _showForZeroValues: function() {\r\n        return this._options.label.showForZeroValues || this.initialValue\r\n    },\r\n    _drawMarker(renderer, group, animationEnabled) {\r\n        var style = this._getStyle();\r\n        var r = this._options.cornerRadius;\r\n        var rotated = this._options.rotated;\r\n        var {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        } = this.getMarkerCoords();\r\n        if (animationEnabled) {\r\n            if (rotated) {\r\n                width = 0;\r\n                x = this.defaultX\r\n            } else {\r\n                height = 0;\r\n                y = this.defaultY\r\n            }\r\n        }\r\n        this.graphic = renderer.rect(x, y, width, height).attr({\r\n            rx: r,\r\n            ry: r\r\n        }).smartAttr(style).data({\r\n            \"chart-data-point\": this\r\n        }).append(group)\r\n    },\r\n    _getSettingsForTracker: function() {\r\n        var y = this.y;\r\n        var height = this.height;\r\n        var x = this.x;\r\n        var width = this.width;\r\n        if (this._options.rotated) {\r\n            if (1 === width) {\r\n                width = DEFAULT_BAR_TRACKER_SIZE;\r\n                x -= CORRECTING_BAR_TRACKER_VALUE\r\n            }\r\n        } else if (1 === height) {\r\n            height = DEFAULT_BAR_TRACKER_SIZE;\r\n            y -= CORRECTING_BAR_TRACKER_VALUE\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    getGraphicSettings: function() {\r\n        var graphic = this.graphic;\r\n        return {\r\n            x: graphic.attr(\"x\"),\r\n            y: graphic.attr(\"y\"),\r\n            height: graphic.attr(\"height\"),\r\n            width: graphic.attr(\"width\")\r\n        }\r\n    },\r\n    _getEdgeTooltipParams() {\r\n        var isPositive = this.value >= 0;\r\n        var xCoord;\r\n        var yCoord;\r\n        var invertedBusinessRange = this._getValTranslator().getBusinessRange().invert;\r\n        var {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        } = this;\r\n        if (this._options.rotated) {\r\n            yCoord = y + height / 2;\r\n            if (invertedBusinessRange) {\r\n                xCoord = isPositive ? x : x + width\r\n            } else {\r\n                xCoord = isPositive ? x + width : x\r\n            }\r\n        } else {\r\n            xCoord = x + width / 2;\r\n            if (invertedBusinessRange) {\r\n                yCoord = isPositive ? y + height : y\r\n            } else {\r\n                yCoord = isPositive ? y : y + height\r\n            }\r\n        }\r\n        return {\r\n            x: xCoord,\r\n            y: yCoord,\r\n            offset: 0\r\n        }\r\n    },\r\n    getTooltipParams: function(location) {\r\n        if (\"edge\" === location) {\r\n            return this._getEdgeTooltipParams()\r\n        }\r\n        var center = this.getCenterCoord();\r\n        center.offset = 0;\r\n        return center\r\n    },\r\n    getCenterCoord() {\r\n        var {\r\n            width: width,\r\n            height: height,\r\n            x: x,\r\n            y: y\r\n        } = this;\r\n        return {\r\n            x: x + width / 2,\r\n            y: y + height / 2\r\n        }\r\n    },\r\n    _truncateCoord: function(coord, bounds) {\r\n        if (null === coord) {\r\n            return coord\r\n        }\r\n        if (coord < bounds[0]) {\r\n            return bounds[0]\r\n        }\r\n        if (coord > bounds[1]) {\r\n            return bounds[1]\r\n        }\r\n        return coord\r\n    },\r\n    _getErrorBarBaseEdgeLength() {\r\n        return this._options.rotated ? this.height : this.width\r\n    },\r\n    _translateErrorBars: function(argVisibleArea) {\r\n        symbolPoint._translateErrorBars.call(this);\r\n        if (this._errorBarPos < argVisibleArea[0] || this._errorBarPos > argVisibleArea[1]) {\r\n            this._errorBarPos = void 0\r\n        }\r\n    },\r\n    _translate: function() {\r\n        var rotated = this._options.rotated;\r\n        var valAxis = rotated ? \"x\" : \"y\";\r\n        var argAxis = rotated ? \"y\" : \"x\";\r\n        var valIntervalName = rotated ? \"width\" : \"height\";\r\n        var argIntervalName = rotated ? \"height\" : \"width\";\r\n        var argTranslator = this._getArgTranslator();\r\n        var valTranslator = this._getValTranslator();\r\n        var argVisibleArea = this.series.getArgumentAxis().getVisibleArea();\r\n        var valVisibleArea = this.series.getValueAxis().getVisibleArea();\r\n        var arg = argTranslator.translate(this.argument);\r\n        var val = valTranslator.translate(this.value, 1);\r\n        var minVal = valTranslator.translate(this.minValue);\r\n        this[argAxis] = arg = null === arg ? arg : arg + (this[argAxis + \"Correction\"] || 0);\r\n        this[\"v\" + valAxis] = val;\r\n        this[\"v\" + argAxis] = arg + this[argIntervalName] / 2;\r\n        val = this._truncateCoord(val, valVisibleArea);\r\n        minVal = this._truncateCoord(minVal, valVisibleArea);\r\n        this[valIntervalName] = _abs(val - minVal);\r\n        val = val < minVal ? val : minVal;\r\n        this._calculateVisibility(rotated ? val : arg, rotated ? arg : val, this.width, this.height);\r\n        this[valAxis] = null === val ? val : val + (this[valAxis + \"Correction\"] || 0);\r\n        this[\"min\" + valAxis.toUpperCase()] = null === minVal ? minVal : minVal + (this[valAxis + \"Correction\"] || 0);\r\n        this[\"default\" + valAxis.toUpperCase()] = valTranslator.translate(CANVAS_POSITION_DEFAULT);\r\n        this._translateErrorBars(argVisibleArea);\r\n        if (this.inVisibleArea && null !== this[argAxis]) {\r\n            if (this[argAxis] < argVisibleArea[0]) {\r\n                this[argIntervalName] = this[argIntervalName] - (argVisibleArea[0] - this[argAxis]);\r\n                this[argAxis] = argVisibleArea[0]\r\n            }\r\n            if (this[argAxis] + this[argIntervalName] > argVisibleArea[1]) {\r\n                this[argIntervalName] = argVisibleArea[1] - this[argAxis]\r\n            }\r\n        }\r\n    },\r\n    _updateMarker: function(animationEnabled, style) {\r\n        this.graphic.smartAttr(_extend({}, style, !animationEnabled ? this.getMarkerCoords() : {}))\r\n    },\r\n    getMarkerCoords: function() {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        var width = this.width;\r\n        var height = this.height;\r\n        var argAxis = this.series.getArgumentAxis();\r\n        var rotated = this._options.rotated;\r\n        if (argAxis.getAxisPosition) {\r\n            var axisOptions = argAxis.getOptions();\r\n            var edgeOffset = Math.round(axisOptions.width / 2);\r\n            var argAxisPosition = argAxis.getAxisPosition();\r\n            if (axisOptions.visible) {\r\n                if (!rotated) {\r\n                    height -= this.minY === this.defaultY && this.minY === argAxisPosition - argAxis.getAxisShift() ? edgeOffset : 0;\r\n                    height < 0 && (height = 0)\r\n                } else {\r\n                    var isStartFromAxis = this.minX === this.defaultX && this.minX === argAxisPosition - argAxis.getAxisShift();\r\n                    x += isStartFromAxis ? edgeOffset : 0;\r\n                    width -= isStartFromAxis ? edgeOffset : 0;\r\n                    width < 0 && (width = 0)\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    coordsIn: function(x, y) {\r\n        return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.utils.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isNumeric, isDefined, type } from \"../../core/utils/type\";\nimport coreAjaxUtils from \"../../core/utils/ajax\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { each, map } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport localizationDate from \"../../localization/date\";\nimport formatHelper from \"../../format_helper\";\nimport { DataSource } from \"../../data/data_source/data_source\";\nimport ArrayStore from \"../../data/array_store\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nexport var setFieldProperty = function (field, property, value, isInitialization) {\n  var initProperties = field._initProperties = field._initProperties || {};\n  var initValue = isInitialization ? value : field[property];\n\n  if (!Object.prototype.hasOwnProperty.call(initProperties, property) || isInitialization) {\n    initProperties[property] = initValue;\n  }\n\n  field[property] = value;\n};\nexport function sendRequest(options) {\n  return coreAjaxUtils.sendRequest(options);\n}\nvar foreachTreeAsyncDate = new Date();\n\nfunction createForeachTreeFunc(isAsync) {\n  return function foreachTreeFunc(items, callback, parentAtFirst, members, index, isChildrenProcessing) {\n    members = members || [];\n    items = items || [];\n    var i;\n    var deferred;\n    index = index || 0;\n\n    function createForeachTreeAsyncHandler(deferred, i, isChildrenProcessing) {\n      when(foreachTreeFunc(items, callback, parentAtFirst, members, i, isChildrenProcessing)).done(deferred.resolve);\n    }\n\n    for (i = index; i < items.length; i++) {\n      if (isAsync && i > index && i % 1e4 === 0 && new Date() - foreachTreeAsyncDate >= 300) {\n        foreachTreeAsyncDate = new Date();\n        deferred = new Deferred();\n        setTimeout(createForeachTreeAsyncHandler(deferred, i, false), 0);\n        return deferred;\n      }\n\n      var item = items[i];\n\n      if (!isChildrenProcessing) {\n        members.unshift(item);\n\n        if (parentAtFirst && false === callback(members, i)) {\n          return;\n        }\n\n        if (item.children) {\n          var childrenDeferred = foreachTreeFunc(item.children, callback, parentAtFirst, members);\n\n          if (isAsync && childrenDeferred) {\n            deferred = new Deferred();\n            childrenDeferred.done(createForeachTreeAsyncHandler(deferred, i, true));\n            return deferred;\n          }\n        }\n      }\n\n      isChildrenProcessing = false;\n\n      if (!parentAtFirst && false === callback(members, i)) {\n        return;\n      }\n\n      members.shift();\n\n      if (items[i] !== item) {\n        i--;\n      }\n    }\n  };\n}\n\nexport var foreachTree = createForeachTreeFunc(false);\nexport var foreachTreeAsync = createForeachTreeFunc(true);\nexport function findField(fields, id) {\n  if (fields && isDefined(id)) {\n    for (var i = 0; i < fields.length; i++) {\n      var field = fields[i];\n\n      if (field.name === id || field.caption === id || field.dataField === id || field.index === id) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\nexport function formatValue(value, options) {\n  var valueText = value === value && formatHelper.format(value, options.format);\n  var formatObject = {\n    value: value,\n    valueText: valueText || \"\"\n  };\n  return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText;\n}\nexport function getCompareFunction(valueSelector) {\n  return function (a, b) {\n    var result = 0;\n    var valueA = valueSelector(a);\n    var valueB = valueSelector(b);\n    var aIsDefined = isDefined(valueA);\n    var bIsDefined = isDefined(valueB);\n\n    if (aIsDefined && bIsDefined) {\n      if (valueA > valueB) {\n        result = 1;\n      } else if (valueA < valueB) {\n        result = -1;\n      }\n    }\n\n    if (aIsDefined && !bIsDefined) {\n      result = 1;\n    }\n\n    if (!aIsDefined && bIsDefined) {\n      result = -1;\n    }\n\n    return result;\n  };\n}\nexport function createPath(items) {\n  var result = [];\n\n  for (var i = items.length - 1; i >= 0; i--) {\n    result.push(items[i].key || items[i].value);\n  }\n\n  return result;\n}\nexport function foreachDataLevel(data, callback, index, childrenField) {\n  index = index || 0;\n  childrenField = childrenField || \"children\";\n\n  if (data.length) {\n    callback(data, index);\n  }\n\n  for (var i = 0; i < data.length; i++) {\n    var item = data[i];\n\n    if (item[childrenField] && item[childrenField].length) {\n      foreachDataLevel(item[childrenField], callback, index + 1, childrenField);\n    }\n  }\n}\nexport function mergeArraysByMaxValue(values1, values2) {\n  var result = [];\n\n  for (var i = 0; i < values1.length; i++) {\n    result.push(Math.max(values1[i] || 0, values2[i] || 0));\n  }\n\n  return result;\n}\nexport function getExpandedLevel(options, axisName) {\n  var dimensions = options[axisName];\n  var expandLevel = 0;\n  var expandedPaths = (\"columns\" === axisName ? options.columnExpandedPaths : options.rowExpandedPaths) || [];\n\n  if (options.headerName === axisName) {\n    expandLevel = options.path.length;\n  } else if (options.headerName && options.headerName !== axisName && options.oppositePath) {\n    expandLevel = options.oppositePath.length;\n  } else {\n    each(expandedPaths, function (_, path) {\n      expandLevel = Math.max(expandLevel, path.length);\n    });\n  }\n\n  while (dimensions[expandLevel + 1] && dimensions[expandLevel].expanded) {\n    expandLevel++;\n  }\n\n  return expandLevel;\n}\n\nfunction createGroupFields(item) {\n  return map([\"year\", \"quarter\", \"month\"], function (value, index) {\n    return extend({}, item, {\n      groupInterval: value,\n      groupIndex: index\n    });\n  });\n}\n\nfunction parseFields(dataSource, fieldsList, path, fieldsDataType) {\n  var result = [];\n  Object.keys(fieldsList || []).forEach(function (field) {\n    if (field && 0 === field.indexOf(\"__\")) {\n      return;\n    }\n\n    var dataIndex = 1;\n    var currentPath = path.length ? path + \".\" + field : field;\n    var dataType = fieldsDataType[currentPath];\n    var getter = compileGetter(currentPath);\n    var value = fieldsList[field];\n    var items;\n\n    while (!isDefined(value) && dataSource[dataIndex]) {\n      value = getter(dataSource[dataIndex]);\n      dataIndex++;\n    }\n\n    if (!dataType && isDefined(value)) {\n      dataType = type(value);\n    }\n\n    items = [{\n      dataField: currentPath,\n      dataType: dataType,\n      groupName: \"date\" === dataType ? field : void 0,\n      groupInterval: void 0,\n      displayFolder: path\n    }];\n\n    if (\"date\" === dataType) {\n      items = items.concat(createGroupFields(items[0]));\n    } else if (\"object\" === dataType) {\n      items = parseFields(dataSource, value, currentPath, fieldsDataType);\n    }\n\n    result.push.apply(result, items);\n  });\n  return result;\n}\n\nexport function discoverObjectFields(items, fields) {\n  var fieldsDataType = getFieldsDataType(fields);\n  return parseFields(items, items[0], \"\", fieldsDataType);\n}\nexport function getFieldsDataType(fields) {\n  var result = {};\n  each(fields, function (_, field) {\n    result[field.dataField] = result[field.dataField] || field.dataType;\n  });\n  return result;\n}\nvar DATE_INTERVAL_FORMATS = {\n  month: function (value) {\n    return localizationDate.getMonthNames()[value - 1];\n  },\n  quarter: function (value) {\n    return localizationDate.format(new Date(2e3, 3 * value - 1), \"quarter\");\n  },\n  dayOfWeek: function (value) {\n    return localizationDate.getDayNames()[value];\n  }\n};\nexport function setDefaultFieldValueFormatting(field) {\n  if (\"date\" === field.dataType) {\n    if (!field.format) {\n      setFieldProperty(field, \"format\", DATE_INTERVAL_FORMATS[field.groupInterval]);\n    }\n  } else if (\"number\" === field.dataType) {\n    var groupInterval = isNumeric(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\n\n    if (groupInterval && !field.customizeText) {\n      setFieldProperty(field, \"customizeText\", function (formatObject) {\n        var secondValue = formatObject.value + groupInterval;\n        var secondValueText = formatHelper.format(secondValue, field.format);\n        return formatObject.valueText && secondValueText ? formatObject.valueText + \" - \" + secondValueText : \"\";\n      });\n    }\n  }\n}\nexport function getFiltersByPath(fields, path) {\n  var result = [];\n  path = path || [];\n\n  for (var i = 0; i < path.length; i++) {\n    result.push(extend({}, fields[i], {\n      groupIndex: null,\n      groupName: null,\n      filterType: \"include\",\n      filterValues: [path[i]]\n    }));\n  }\n\n  return result;\n}\nexport var storeDrillDownMixin = {\n  createDrillDownDataSource: function (descriptions, params) {\n    var items = this.getDrillDownItems(descriptions, params);\n\n    function createCustomStoreMethod(methodName) {\n      return function (options) {\n        var d;\n\n        if (void 0) {\n          d = (void 0)[methodName](options);\n        } else {\n          d = new Deferred();\n          when(items).done(function (data) {\n            var arrayStore = new ArrayStore(data);\n            arrayStore[methodName](options).done(d.resolve).fail(d.reject);\n          }).fail(d.reject);\n        }\n\n        return d;\n      };\n    }\n\n    var dataSource = new DataSource({\n      load: createCustomStoreMethod(\"load\"),\n      totalCount: createCustomStoreMethod(\"totalCount\"),\n      key: this.key()\n    });\n    return dataSource;\n  }\n};\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","map":{"version":3,"names":["isNumeric","isDefined","type","coreAjaxUtils","compileGetter","each","map","extend","localizationDate","formatHelper","DataSource","ArrayStore","when","Deferred","setFieldProperty","field","property","value","isInitialization","initProperties","_initProperties","initValue","Object","prototype","hasOwnProperty","call","sendRequest","options","foreachTreeAsyncDate","Date","createForeachTreeFunc","isAsync","foreachTreeFunc","items","callback","parentAtFirst","members","index","isChildrenProcessing","i","deferred","createForeachTreeAsyncHandler","done","resolve","length","setTimeout","item","unshift","children","childrenDeferred","shift","foreachTree","foreachTreeAsync","findField","fields","id","name","caption","dataField","formatValue","valueText","format","formatObject","customizeText","getCompareFunction","valueSelector","a","b","result","valueA","valueB","aIsDefined","bIsDefined","createPath","push","key","foreachDataLevel","data","childrenField","mergeArraysByMaxValue","values1","values2","Math","max","getExpandedLevel","axisName","dimensions","expandLevel","expandedPaths","columnExpandedPaths","rowExpandedPaths","headerName","path","oppositePath","_","expanded","createGroupFields","groupInterval","groupIndex","parseFields","dataSource","fieldsList","fieldsDataType","keys","forEach","indexOf","dataIndex","currentPath","dataType","getter","groupName","displayFolder","concat","apply","discoverObjectFields","getFieldsDataType","DATE_INTERVAL_FORMATS","month","getMonthNames","quarter","dayOfWeek","getDayNames","setDefaultFieldValueFormatting","secondValue","secondValueText","getFiltersByPath","filterType","filterValues","storeDrillDownMixin","createDrillDownDataSource","descriptions","params","getDrillDownItems","createCustomStoreMethod","methodName","d","arrayStore","fail","reject","load","totalCount","capitalizeFirstLetter","string","charAt","toUpperCase","slice"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.utils.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isNumeric,\r\n    isDefined,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport coreAjaxUtils from \"../../core/utils/ajax\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport localizationDate from \"../../localization/date\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport var setFieldProperty = function(field, property, value, isInitialization) {\r\n    var initProperties = field._initProperties = field._initProperties || {};\r\n    var initValue = isInitialization ? value : field[property];\r\n    if (!Object.prototype.hasOwnProperty.call(initProperties, property) || isInitialization) {\r\n        initProperties[property] = initValue\r\n    }\r\n    field[property] = value\r\n};\r\nexport function sendRequest(options) {\r\n    return coreAjaxUtils.sendRequest(options)\r\n}\r\nvar foreachTreeAsyncDate = new Date;\r\n\r\nfunction createForeachTreeFunc(isAsync) {\r\n    return function foreachTreeFunc(items, callback, parentAtFirst, members, index, isChildrenProcessing) {\r\n        members = members || [];\r\n        items = items || [];\r\n        var i;\r\n        var deferred;\r\n        index = index || 0;\r\n\r\n        function createForeachTreeAsyncHandler(deferred, i, isChildrenProcessing) {\r\n            when(foreachTreeFunc(items, callback, parentAtFirst, members, i, isChildrenProcessing)).done(deferred.resolve)\r\n        }\r\n        for (i = index; i < items.length; i++) {\r\n            if (isAsync && i > index && i % 1e4 === 0 && new Date - foreachTreeAsyncDate >= 300) {\r\n                foreachTreeAsyncDate = new Date;\r\n                deferred = new Deferred;\r\n                setTimeout(createForeachTreeAsyncHandler(deferred, i, false), 0);\r\n                return deferred\r\n            }\r\n            var item = items[i];\r\n            if (!isChildrenProcessing) {\r\n                members.unshift(item);\r\n                if (parentAtFirst && false === callback(members, i)) {\r\n                    return\r\n                }\r\n                if (item.children) {\r\n                    var childrenDeferred = foreachTreeFunc(item.children, callback, parentAtFirst, members);\r\n                    if (isAsync && childrenDeferred) {\r\n                        deferred = new Deferred;\r\n                        childrenDeferred.done(createForeachTreeAsyncHandler(deferred, i, true));\r\n                        return deferred\r\n                    }\r\n                }\r\n            }\r\n            isChildrenProcessing = false;\r\n            if (!parentAtFirst && false === callback(members, i)) {\r\n                return\r\n            }\r\n            members.shift();\r\n            if (items[i] !== item) {\r\n                i--\r\n            }\r\n        }\r\n    }\r\n}\r\nexport var foreachTree = createForeachTreeFunc(false);\r\nexport var foreachTreeAsync = createForeachTreeFunc(true);\r\nexport function findField(fields, id) {\r\n    if (fields && isDefined(id)) {\r\n        for (var i = 0; i < fields.length; i++) {\r\n            var field = fields[i];\r\n            if (field.name === id || field.caption === id || field.dataField === id || field.index === id) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n    return -1\r\n}\r\nexport function formatValue(value, options) {\r\n    var valueText = value === value && formatHelper.format(value, options.format);\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: valueText || \"\"\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n}\r\nexport function getCompareFunction(valueSelector) {\r\n    return function(a, b) {\r\n        var result = 0;\r\n        var valueA = valueSelector(a);\r\n        var valueB = valueSelector(b);\r\n        var aIsDefined = isDefined(valueA);\r\n        var bIsDefined = isDefined(valueB);\r\n        if (aIsDefined && bIsDefined) {\r\n            if (valueA > valueB) {\r\n                result = 1\r\n            } else if (valueA < valueB) {\r\n                result = -1\r\n            }\r\n        }\r\n        if (aIsDefined && !bIsDefined) {\r\n            result = 1\r\n        }\r\n        if (!aIsDefined && bIsDefined) {\r\n            result = -1\r\n        }\r\n        return result\r\n    }\r\n}\r\nexport function createPath(items) {\r\n    var result = [];\r\n    for (var i = items.length - 1; i >= 0; i--) {\r\n        result.push(items[i].key || items[i].value)\r\n    }\r\n    return result\r\n}\r\nexport function foreachDataLevel(data, callback, index, childrenField) {\r\n    index = index || 0;\r\n    childrenField = childrenField || \"children\";\r\n    if (data.length) {\r\n        callback(data, index)\r\n    }\r\n    for (var i = 0; i < data.length; i++) {\r\n        var item = data[i];\r\n        if (item[childrenField] && item[childrenField].length) {\r\n            foreachDataLevel(item[childrenField], callback, index + 1, childrenField)\r\n        }\r\n    }\r\n}\r\nexport function mergeArraysByMaxValue(values1, values2) {\r\n    var result = [];\r\n    for (var i = 0; i < values1.length; i++) {\r\n        result.push(Math.max(values1[i] || 0, values2[i] || 0))\r\n    }\r\n    return result\r\n}\r\nexport function getExpandedLevel(options, axisName) {\r\n    var dimensions = options[axisName];\r\n    var expandLevel = 0;\r\n    var expandedPaths = (\"columns\" === axisName ? options.columnExpandedPaths : options.rowExpandedPaths) || [];\r\n    if (options.headerName === axisName) {\r\n        expandLevel = options.path.length\r\n    } else if (options.headerName && options.headerName !== axisName && options.oppositePath) {\r\n        expandLevel = options.oppositePath.length\r\n    } else {\r\n        each(expandedPaths, (function(_, path) {\r\n            expandLevel = Math.max(expandLevel, path.length)\r\n        }))\r\n    }\r\n    while (dimensions[expandLevel + 1] && dimensions[expandLevel].expanded) {\r\n        expandLevel++\r\n    }\r\n    return expandLevel\r\n}\r\n\r\nfunction createGroupFields(item) {\r\n    return map([\"year\", \"quarter\", \"month\"], (function(value, index) {\r\n        return extend({}, item, {\r\n            groupInterval: value,\r\n            groupIndex: index\r\n        })\r\n    }))\r\n}\r\n\r\nfunction parseFields(dataSource, fieldsList, path, fieldsDataType) {\r\n    var result = [];\r\n    Object.keys(fieldsList || []).forEach((function(field) {\r\n        if (field && 0 === field.indexOf(\"__\")) {\r\n            return\r\n        }\r\n        var dataIndex = 1;\r\n        var currentPath = path.length ? path + \".\" + field : field;\r\n        var dataType = fieldsDataType[currentPath];\r\n        var getter = compileGetter(currentPath);\r\n        var value = fieldsList[field];\r\n        var items;\r\n        while (!isDefined(value) && dataSource[dataIndex]) {\r\n            value = getter(dataSource[dataIndex]);\r\n            dataIndex++\r\n        }\r\n        if (!dataType && isDefined(value)) {\r\n            dataType = type(value)\r\n        }\r\n        items = [{\r\n            dataField: currentPath,\r\n            dataType: dataType,\r\n            groupName: \"date\" === dataType ? field : void 0,\r\n            groupInterval: void 0,\r\n            displayFolder: path\r\n        }];\r\n        if (\"date\" === dataType) {\r\n            items = items.concat(createGroupFields(items[0]))\r\n        } else if (\"object\" === dataType) {\r\n            items = parseFields(dataSource, value, currentPath, fieldsDataType)\r\n        }\r\n        result.push.apply(result, items)\r\n    }));\r\n    return result\r\n}\r\nexport function discoverObjectFields(items, fields) {\r\n    var fieldsDataType = getFieldsDataType(fields);\r\n    return parseFields(items, items[0], \"\", fieldsDataType)\r\n}\r\nexport function getFieldsDataType(fields) {\r\n    var result = {};\r\n    each(fields, (function(_, field) {\r\n        result[field.dataField] = result[field.dataField] || field.dataType\r\n    }));\r\n    return result\r\n}\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return localizationDate.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return localizationDate.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    },\r\n    dayOfWeek: function(value) {\r\n        return localizationDate.getDayNames()[value]\r\n    }\r\n};\r\nexport function setDefaultFieldValueFormatting(field) {\r\n    if (\"date\" === field.dataType) {\r\n        if (!field.format) {\r\n            setFieldProperty(field, \"format\", DATE_INTERVAL_FORMATS[field.groupInterval])\r\n        }\r\n    } else if (\"number\" === field.dataType) {\r\n        var groupInterval = isNumeric(field.groupInterval) && field.groupInterval > 0 && field.groupInterval;\r\n        if (groupInterval && !field.customizeText) {\r\n            setFieldProperty(field, \"customizeText\", (function(formatObject) {\r\n                var secondValue = formatObject.value + groupInterval;\r\n                var secondValueText = formatHelper.format(secondValue, field.format);\r\n                return formatObject.valueText && secondValueText ? formatObject.valueText + \" - \" + secondValueText : \"\"\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport function getFiltersByPath(fields, path) {\r\n    var result = [];\r\n    path = path || [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        result.push(extend({}, fields[i], {\r\n            groupIndex: null,\r\n            groupName: null,\r\n            filterType: \"include\",\r\n            filterValues: [path[i]]\r\n        }))\r\n    }\r\n    return result\r\n}\r\nexport var storeDrillDownMixin = {\r\n    createDrillDownDataSource: function(descriptions, params) {\r\n        var items = this.getDrillDownItems(descriptions, params);\r\n\r\n        function createCustomStoreMethod(methodName) {\r\n            return function(options) {\r\n                var d;\r\n                if (void 0) {\r\n                    d = (void 0)[methodName](options)\r\n                } else {\r\n                    d = new Deferred;\r\n                    when(items).done((function(data) {\r\n                        var arrayStore = new ArrayStore(data);\r\n                        arrayStore[methodName](options).done(d.resolve).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }\r\n                return d\r\n            }\r\n        }\r\n        var dataSource = new DataSource({\r\n            load: createCustomStoreMethod(\"load\"),\r\n            totalCount: createCustomStoreMethod(\"totalCount\"),\r\n            key: this.key()\r\n        });\r\n        return dataSource\r\n    }\r\n};\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.details.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { extendAttributes, getDisplayFileSize } from \"./ui.file_manager.common\";\nimport { isString, isFunction, isDefined } from \"../../core/utils/type\";\nimport messageLocalization from \"../../localization/message\";\nimport DataGrid from \"../data_grid/ui.data_grid\";\nimport FileManagerItemListBase from \"./ui.file_manager.item_list\";\nimport FileManagerFileActionsButton from \"./ui.file_manager.file_actions_button\";\nimport { Deferred } from \"../../core/utils/deferred\";\nvar FILE_MANAGER_DETAILS_ITEM_LIST_CLASS = \"dx-filemanager-details\";\nvar FILE_MANAGER_DETAILS_ITEM_THUMBNAIL_CLASS = \"dx-filemanager-details-item-thumbnail\";\nvar FILE_MANAGER_DETAILS_ITEM_NAME_CLASS = \"dx-filemanager-details-item-name\";\nvar FILE_MANAGER_DETAILS_ITEM_NAME_WRAPPER_CLASS = \"dx-filemanager-details-item-name-wrapper\";\nvar FILE_MANAGER_DETAILS_ITEM_IS_DIRECTORY_CLASS = \"dx-filemanager-details-item-is-directory\";\nvar FILE_MANAGER_PARENT_DIRECTORY_ITEM = \"dx-filemanager-parent-directory-item\";\nvar DATA_GRID_DATA_ROW_CLASS = \"dx-data-row\";\nvar DEFAULT_COLUMN_CONFIGS = {\n  thumbnail: {\n    caption: \"\",\n    calculateSortValue: \"isDirectory\",\n    width: 36,\n    alignment: \"center\",\n    cssClass: FILE_MANAGER_DETAILS_ITEM_IS_DIRECTORY_CLASS\n  },\n  name: {\n    caption: messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionName\")\n  },\n  dateModified: {\n    caption: messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionDateModified\"),\n    width: 110,\n    hidingPriority: 1\n  },\n  size: {\n    caption: messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionFileSize\"),\n    width: 90,\n    alignment: \"right\",\n    hidingPriority: 0\n  },\n  isParentFolder: {\n    caption: \"isParentFolder\",\n    visible: false,\n    sortIndex: 0,\n    sortOrder: \"asc\"\n  }\n};\n\nclass FileManagerDetailsItemList extends FileManagerItemListBase {\n  _initMarkup() {\n    this._itemCount = 0;\n    this._focusedItem = null;\n    this._hasParentDirectoryItem = false;\n    this._parentDirectoryItemKey = null;\n    this._selectAllCheckBox = null;\n    this._selectAllCheckBoxUpdating = false;\n    this.$element().addClass(FILE_MANAGER_DETAILS_ITEM_LIST_CLASS);\n\n    this._createFilesView();\n\n    this._contextMenu.option(\"onContextMenuHidden\", () => this._onContextMenuHidden());\n\n    super._initMarkup();\n  }\n\n  _createFilesView() {\n    var $filesView = $(\"<div>\").appendTo(this.$element());\n    var selectionMode = this._isMultipleSelectionMode() ? \"multiple\" : \"none\";\n    this._filesView = this._createComponent($filesView, DataGrid, {\n      dataSource: this._createDataSource(),\n      hoverStateEnabled: true,\n      selection: {\n        mode: selectionMode,\n        showCheckBoxesMode: this._isDesktop() ? \"onClick\" : \"none\"\n      },\n      selectedRowKeys: this.option(\"selectedItemKeys\"),\n      focusedRowKey: this.option(\"focusedItemKey\"),\n      focusedRowEnabled: true,\n      allowColumnResizing: true,\n      scrolling: {\n        mode: \"virtual\"\n      },\n      sorting: {\n        mode: \"single\",\n        showSortIndexes: false\n      },\n      showColumnLines: false,\n      showRowLines: false,\n      columnHidingEnabled: false,\n      columns: this._createColumns(),\n      onEditorPreparing: this._onEditorPreparing.bind(this),\n      onRowPrepared: this._onRowPrepared.bind(this),\n      onContextMenuPreparing: this._onContextMenuPreparing.bind(this),\n      onSelectionChanged: this._onFilesViewSelectionChanged.bind(this),\n      onFocusedRowChanged: this._onFilesViewFocusedRowChanged.bind(this),\n      onOptionChanged: this._onFilesViewOptionChanged.bind(this)\n    });\n  }\n\n  _createColumns() {\n    var columns = this.option(\"detailColumns\");\n    columns = columns.slice(0);\n    columns = columns.map(column => {\n      var extendedItem = column;\n\n      if (isString(column)) {\n        extendedItem = {\n          dataField: column\n        };\n      }\n\n      return this._getPreparedColumn(extendedItem);\n    });\n    var customizeDetailColumns = this.option(\"customizeDetailColumns\");\n\n    if (isFunction(customizeDetailColumns)) {\n      columns = customizeDetailColumns(columns);\n    }\n\n    columns.push(this._getPreparedColumn({\n      dataField: \"isParentFolder\"\n    }));\n    columns.forEach(column => this._updateColumnDataField(column));\n    return columns;\n  }\n\n  _getPreparedColumn(columnOptions) {\n    var result = {};\n    var resultCssClass = \"\";\n\n    if (this._isDefaultColumn(columnOptions.dataField)) {\n      var defaultConfig = extend(true, {}, DEFAULT_COLUMN_CONFIGS[columnOptions.dataField]);\n      resultCssClass = defaultConfig.cssClass || \"\";\n\n      switch (columnOptions.dataField) {\n        case \"thumbnail\":\n          defaultConfig.cellTemplate = this._createThumbnailColumnCell.bind(this);\n          defaultConfig.calculateSortValue = \"fileItem.\".concat(defaultConfig.calculateSortValue);\n          break;\n\n        case \"name\":\n          defaultConfig.cellTemplate = this._createNameColumnCell.bind(this);\n          defaultConfig.caption = messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionName\");\n          break;\n\n        case \"size\":\n          defaultConfig.calculateCellValue = this._calculateSizeColumnCellValue.bind(this);\n          defaultConfig.caption = messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionFileSize\");\n\n          defaultConfig.calculateSortValue = rowData => rowData.fileItem.isDirectory ? -1 : rowData.fileItem.size;\n\n          break;\n\n        case \"dateModified\":\n          defaultConfig.caption = messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionDateModified\");\n      }\n\n      extend(true, result, defaultConfig);\n    }\n\n    extendAttributes(result, columnOptions, [\"alignment\", \"caption\", \"dataField\", \"dataType\", \"hidingPriority\", \"sortIndex\", \"sortOrder\", \"visible\", \"visibleIndex\", \"width\"]);\n\n    if (columnOptions.cssClass) {\n      resultCssClass = \"\".concat(resultCssClass, \" \").concat(columnOptions.cssClass);\n    }\n\n    if (resultCssClass) {\n      result.cssClass = resultCssClass;\n    }\n\n    return result;\n  }\n\n  _updateColumnDataField(column) {\n    var dataItemSuffix = this._isDefaultColumn(column.dataField) ? \"\" : \"dataItem.\";\n    column.dataField = \"fileItem.\" + dataItemSuffix + column.dataField;\n    return column;\n  }\n\n  _isDefaultColumn(columnDataField) {\n    return !!DEFAULT_COLUMN_CONFIGS[columnDataField];\n  }\n\n  _onFileItemActionButtonClick(_ref) {\n    var {\n      component: component,\n      element: element,\n      event: event\n    } = _ref;\n    event.stopPropagation();\n    var $row = component.$element().closest(this._getItemSelector());\n    var fileItemInfo = $row.data(\"item\");\n\n    this._selectItem(fileItemInfo);\n\n    var target = {\n      itemData: fileItemInfo,\n      itemElement: $row,\n      isActionButton: true\n    };\n\n    var items = this._getFileItemsForContextMenu(fileItemInfo);\n\n    this._showContextMenu(items, element, event, target);\n\n    this._activeFileActionsButton = component;\n\n    this._activeFileActionsButton.setActive(true);\n  }\n\n  _onContextMenuHidden() {\n    if (this._activeFileActionsButton) {\n      this._activeFileActionsButton.setActive(false);\n    }\n  }\n\n  _getItemThumbnailCssClass() {\n    return FILE_MANAGER_DETAILS_ITEM_THUMBNAIL_CLASS;\n  }\n\n  _getItemSelector() {\n    return \".\".concat(DATA_GRID_DATA_ROW_CLASS);\n  }\n\n  _onItemDblClick(e) {\n    var $row = $(e.currentTarget);\n    var fileItemInfo = $row.data(\"item\");\n\n    this._raiseSelectedItemOpened(fileItemInfo);\n  }\n\n  _isAllItemsSelected() {\n    var selectableItemsCount = this._hasParentDirectoryItem ? this._itemCount - 1 : this._itemCount;\n\n    var selectedRowKeys = this._filesView.option(\"selectedRowKeys\");\n\n    if (!selectedRowKeys.length) {\n      return false;\n    }\n\n    return selectedRowKeys.length >= selectableItemsCount ? true : void 0;\n  }\n\n  _onEditorPreparing(_ref2) {\n    var {\n      component: component,\n      command: command,\n      row: row,\n      parentType: parentType,\n      editorOptions: editorOptions\n    } = _ref2;\n\n    if (!this._filesView) {\n      this._filesView = component;\n    }\n\n    if (\"select\" === command && row) {\n      if (this._isParentDirectoryItem(row.data)) {\n        editorOptions.disabled = true;\n      }\n    } else if (\"headerRow\" === parentType) {\n      editorOptions.onInitialized = _ref3 => {\n        var {\n          component: component\n        } = _ref3;\n        this._selectAllCheckBox = component;\n      };\n\n      editorOptions.value = this._isAllItemsSelected();\n\n      editorOptions.onValueChanged = args => this._onSelectAllCheckBoxValueChanged(args);\n    }\n  }\n\n  _onSelectAllCheckBoxValueChanged(_ref4) {\n    var {\n      event: event,\n      previousValue: previousValue,\n      value: value\n    } = _ref4;\n\n    if (!event) {\n      if (previousValue && !this._selectAllCheckBoxUpdating && this._selectAllCheckBox) {\n        this._selectAllCheckBox.option(\"value\", previousValue);\n      }\n\n      return;\n    }\n\n    if (this._isAllItemsSelected() === value) {\n      return;\n    }\n\n    if (value) {\n      this._filesView.selectAll();\n    } else {\n      this._filesView.deselectAll();\n    }\n\n    event.preventDefault();\n  }\n\n  _onRowPrepared(_ref5) {\n    var {\n      rowType: rowType,\n      rowElement: rowElement,\n      data: data\n    } = _ref5;\n\n    if (\"data\" === rowType) {\n      var $row = $(rowElement);\n      $row.data(\"item\", data);\n\n      if (this._isParentDirectoryItem(data)) {\n        $row.addClass(FILE_MANAGER_PARENT_DIRECTORY_ITEM);\n      }\n    }\n  }\n\n  _onContextMenuPreparing(e) {\n    if (!this._isDesktop()) {\n      return;\n    }\n\n    var fileItems = null;\n    var item = {};\n\n    if (e.row && \"data\" === e.row.rowType) {\n      item = e.row.data;\n\n      this._selectItem(item);\n\n      fileItems = this._getFileItemsForContextMenu(item);\n    }\n\n    var eventArgs = extend({}, {\n      targetElement: \"content\" === e.target && isDefined(e.row) ? this._filesView.getRowElement(e.rowIndex) : void 0,\n      itemData: item,\n      options: this._contextMenu.option(),\n      event: e.event,\n      isActionButton: false,\n      cancel: false\n    });\n\n    this._raiseContextMenuShowing(eventArgs);\n\n    e.items = eventArgs.cancel ? [] : this._contextMenu.createContextMenuItems(fileItems, null, item);\n  }\n\n  _onFilesViewSelectionChanged(_ref6) {\n    var {\n      component: component,\n      selectedRowsData: selectedRowsData,\n      selectedRowKeys: selectedRowKeys,\n      currentSelectedRowKeys: currentSelectedRowKeys,\n      currentDeselectedRowKeys: currentDeselectedRowKeys\n    } = _ref6;\n    this._filesView = this._filesView || component;\n\n    if (this._selectAllCheckBox) {\n      this._selectAllCheckBoxUpdating = true;\n\n      this._selectAllCheckBox.option(\"value\", this._isAllItemsSelected());\n\n      this._selectAllCheckBoxUpdating = false;\n    }\n\n    var selectedItems = selectedRowsData.map(itemInfo => itemInfo.fileItem);\n\n    this._tryRaiseSelectionChanged({\n      selectedItemInfos: selectedRowsData,\n      selectedItems: selectedItems,\n      selectedItemKeys: selectedRowKeys,\n      currentSelectedItemKeys: currentSelectedRowKeys,\n      currentDeselectedItemKeys: currentDeselectedRowKeys\n    });\n  }\n\n  _onFilesViewFocusedRowChanged(e) {\n    var _e$row2;\n\n    if (!this._isMultipleSelectionMode()) {\n      var _e$row;\n\n      this._selectItemSingleSelection(null === (_e$row = e.row) || void 0 === _e$row ? void 0 : _e$row.data);\n    }\n\n    var fileSystemItem = (null === (_e$row2 = e.row) || void 0 === _e$row2 ? void 0 : _e$row2.data.fileItem) || null;\n\n    this._onFocusedItemChanged({\n      item: fileSystemItem,\n      itemKey: null === fileSystemItem || void 0 === fileSystemItem ? void 0 : fileSystemItem.key,\n      itemElement: e.rowElement\n    });\n  }\n\n  _onFilesViewOptionChanged(_ref7) {\n    var {\n      fullName: fullName\n    } = _ref7;\n\n    if (fullName.indexOf(\"sortOrder\") > -1) {\n      this._filesView.columnOption(\"isParentFolder\", {\n        sortOrder: \"asc\",\n        sortIndex: 0\n      });\n    }\n  }\n\n  _resetFocus() {\n    this._setFocusedItemKey(void 0);\n  }\n\n  _createThumbnailColumnCell(container, cellInfo) {\n    this._getItemThumbnailContainer(cellInfo.data).appendTo(container);\n  }\n\n  _createNameColumnCell(container, cellInfo) {\n    var $button = $(\"<div>\");\n    var $name = $(\"<span>\").text(cellInfo.data.fileItem.name).addClass(FILE_MANAGER_DETAILS_ITEM_NAME_CLASS);\n    var $wrapper = $(\"<div>\").append($name, $button).addClass(FILE_MANAGER_DETAILS_ITEM_NAME_WRAPPER_CLASS);\n    $(container).append($wrapper);\n\n    this._createComponent($button, FileManagerFileActionsButton, {\n      onClick: e => this._onFileItemActionButtonClick(e)\n    });\n  }\n\n  _calculateSizeColumnCellValue(rowData) {\n    return rowData.fileItem.isDirectory ? \"\" : getDisplayFileSize(rowData.fileItem.size);\n  }\n\n  _selectItem(fileItemInfo) {\n    var selectItemFunc = this._isMultipleSelectionMode() ? this._selectItemMultipleSelection : this._selectItemSingleSelection;\n    selectItemFunc.call(this, fileItemInfo);\n  }\n\n  _deselectItem(item) {\n    this._filesView.deselectRows([item.fileItem.key]);\n  }\n\n  _selectItemSingleSelection(fileItemInfo) {\n    if (!this._focusedItem || !fileItemInfo || this._focusedItem.fileItem.key !== fileItemInfo.fileItem.key) {\n      var oldFocusedItem = this._focusedItem;\n      this._focusedItem = fileItemInfo;\n      var deselectedKeys = [];\n\n      if (oldFocusedItem) {\n        deselectedKeys.push(oldFocusedItem.fileItem.key);\n      }\n\n      var selectedItems = [];\n      var selectedKeys = [];\n\n      if (fileItemInfo && !this._isParentDirectoryItem(fileItemInfo)) {\n        selectedItems.push(fileItemInfo.fileItem);\n        selectedKeys.push(fileItemInfo.fileItem.key);\n      }\n\n      this._raiseSelectionChanged({\n        selectedItems: selectedItems,\n        selectedItemKeys: selectedKeys,\n        currentSelectedItemKeys: [...selectedKeys],\n        currentDeselectedItemKeys: deselectedKeys\n      });\n    }\n  }\n\n  _selectItemMultipleSelection(_ref8) {\n    var {\n      fileItem: fileItem\n    } = _ref8;\n\n    if (!this._filesView.isRowSelected(fileItem.key)) {\n      var selectionController = this._filesView.getController(\"selection\");\n\n      var preserve = selectionController.isSelectionWithCheckboxes();\n\n      this._filesView.selectRows([fileItem.key], preserve);\n    }\n  }\n\n  _setSelectedItemKeys(itemKeys) {\n    this._filesView.option(\"selectedRowKeys\", itemKeys);\n  }\n\n  _setFocusedItemKey(itemKey) {\n    var _this$_filesView;\n\n    null === (_this$_filesView = this._filesView) || void 0 === _this$_filesView ? void 0 : _this$_filesView.option(\"focusedRowKey\", itemKey);\n  }\n\n  clearSelection() {\n    if (this._isMultipleSelectionMode()) {\n      this._filesView.clearSelection();\n    } else {\n      this._filesView.option(\"focusedRowIndex\", -1);\n    }\n  }\n\n  refresh(options) {\n    var actualOptions = {\n      dataSource: this._createDataSource()\n    };\n\n    if (options && Object.prototype.hasOwnProperty.call(options, \"focusedItemKey\")) {\n      if (isDefined(options.focusedItemKey)) {\n        actualOptions.focusedRowKey = options.focusedItemKey;\n      } else {\n        actualOptions.focusedRowIndex = -1;\n      }\n    }\n\n    this._filesView.option(actualOptions);\n\n    this._refreshDeferred = new Deferred();\n    return this._refreshDeferred.promise();\n  }\n\n  getSelectedItems() {\n    if (this._isMultipleSelectionMode()) {\n      return this._filesView.getSelectedRowsData();\n    }\n\n    return this._focusedItem && !this._isParentDirectoryItem(this._focusedItem) ? [this._focusedItem] : [];\n  }\n\n}\n\nexport default FileManagerDetailsItemList;","map":{"version":3,"names":["$","extend","extendAttributes","getDisplayFileSize","isString","isFunction","isDefined","messageLocalization","DataGrid","FileManagerItemListBase","FileManagerFileActionsButton","Deferred","FILE_MANAGER_DETAILS_ITEM_LIST_CLASS","FILE_MANAGER_DETAILS_ITEM_THUMBNAIL_CLASS","FILE_MANAGER_DETAILS_ITEM_NAME_CLASS","FILE_MANAGER_DETAILS_ITEM_NAME_WRAPPER_CLASS","FILE_MANAGER_DETAILS_ITEM_IS_DIRECTORY_CLASS","FILE_MANAGER_PARENT_DIRECTORY_ITEM","DATA_GRID_DATA_ROW_CLASS","DEFAULT_COLUMN_CONFIGS","thumbnail","caption","calculateSortValue","width","alignment","cssClass","name","format","dateModified","hidingPriority","size","isParentFolder","visible","sortIndex","sortOrder","FileManagerDetailsItemList","_initMarkup","_itemCount","_focusedItem","_hasParentDirectoryItem","_parentDirectoryItemKey","_selectAllCheckBox","_selectAllCheckBoxUpdating","$element","addClass","_createFilesView","_contextMenu","option","_onContextMenuHidden","$filesView","appendTo","selectionMode","_isMultipleSelectionMode","_filesView","_createComponent","dataSource","_createDataSource","hoverStateEnabled","selection","mode","showCheckBoxesMode","_isDesktop","selectedRowKeys","focusedRowKey","focusedRowEnabled","allowColumnResizing","scrolling","sorting","showSortIndexes","showColumnLines","showRowLines","columnHidingEnabled","columns","_createColumns","onEditorPreparing","_onEditorPreparing","bind","onRowPrepared","_onRowPrepared","onContextMenuPreparing","_onContextMenuPreparing","onSelectionChanged","_onFilesViewSelectionChanged","onFocusedRowChanged","_onFilesViewFocusedRowChanged","onOptionChanged","_onFilesViewOptionChanged","slice","map","column","extendedItem","dataField","_getPreparedColumn","customizeDetailColumns","push","forEach","_updateColumnDataField","columnOptions","result","resultCssClass","_isDefaultColumn","defaultConfig","cellTemplate","_createThumbnailColumnCell","concat","_createNameColumnCell","calculateCellValue","_calculateSizeColumnCellValue","rowData","fileItem","isDirectory","dataItemSuffix","columnDataField","_onFileItemActionButtonClick","_ref","component","element","event","stopPropagation","$row","closest","_getItemSelector","fileItemInfo","data","_selectItem","target","itemData","itemElement","isActionButton","items","_getFileItemsForContextMenu","_showContextMenu","_activeFileActionsButton","setActive","_getItemThumbnailCssClass","_onItemDblClick","e","currentTarget","_raiseSelectedItemOpened","_isAllItemsSelected","selectableItemsCount","length","_ref2","command","row","parentType","editorOptions","_isParentDirectoryItem","disabled","onInitialized","_ref3","value","onValueChanged","args","_onSelectAllCheckBoxValueChanged","_ref4","previousValue","selectAll","deselectAll","preventDefault","_ref5","rowType","rowElement","fileItems","item","eventArgs","targetElement","getRowElement","rowIndex","options","cancel","_raiseContextMenuShowing","createContextMenuItems","_ref6","selectedRowsData","currentSelectedRowKeys","currentDeselectedRowKeys","selectedItems","itemInfo","_tryRaiseSelectionChanged","selectedItemInfos","selectedItemKeys","currentSelectedItemKeys","currentDeselectedItemKeys","_e$row2","_e$row","_selectItemSingleSelection","fileSystemItem","_onFocusedItemChanged","itemKey","key","_ref7","fullName","indexOf","columnOption","_resetFocus","_setFocusedItemKey","container","cellInfo","_getItemThumbnailContainer","$button","$name","text","$wrapper","append","onClick","selectItemFunc","_selectItemMultipleSelection","call","_deselectItem","deselectRows","oldFocusedItem","deselectedKeys","selectedKeys","_raiseSelectionChanged","_ref8","isRowSelected","selectionController","getController","preserve","isSelectionWithCheckboxes","selectRows","_setSelectedItemKeys","itemKeys","_this$_filesView","clearSelection","refresh","actualOptions","Object","prototype","hasOwnProperty","focusedItemKey","focusedRowIndex","_refreshDeferred","promise","getSelectedItems","getSelectedRowsData"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/file_manager/ui.file_manager.item_list.details.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.item_list.details.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    extendAttributes,\r\n    getDisplayFileSize\r\n} from \"./ui.file_manager.common\";\r\nimport {\r\n    isString,\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport DataGrid from \"../data_grid/ui.data_grid\";\r\nimport FileManagerItemListBase from \"./ui.file_manager.item_list\";\r\nimport FileManagerFileActionsButton from \"./ui.file_manager.file_actions_button\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar FILE_MANAGER_DETAILS_ITEM_LIST_CLASS = \"dx-filemanager-details\";\r\nvar FILE_MANAGER_DETAILS_ITEM_THUMBNAIL_CLASS = \"dx-filemanager-details-item-thumbnail\";\r\nvar FILE_MANAGER_DETAILS_ITEM_NAME_CLASS = \"dx-filemanager-details-item-name\";\r\nvar FILE_MANAGER_DETAILS_ITEM_NAME_WRAPPER_CLASS = \"dx-filemanager-details-item-name-wrapper\";\r\nvar FILE_MANAGER_DETAILS_ITEM_IS_DIRECTORY_CLASS = \"dx-filemanager-details-item-is-directory\";\r\nvar FILE_MANAGER_PARENT_DIRECTORY_ITEM = \"dx-filemanager-parent-directory-item\";\r\nvar DATA_GRID_DATA_ROW_CLASS = \"dx-data-row\";\r\nvar DEFAULT_COLUMN_CONFIGS = {\r\n    thumbnail: {\r\n        caption: \"\",\r\n        calculateSortValue: \"isDirectory\",\r\n        width: 36,\r\n        alignment: \"center\",\r\n        cssClass: FILE_MANAGER_DETAILS_ITEM_IS_DIRECTORY_CLASS\r\n    },\r\n    name: {\r\n        caption: messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionName\")\r\n    },\r\n    dateModified: {\r\n        caption: messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionDateModified\"),\r\n        width: 110,\r\n        hidingPriority: 1\r\n    },\r\n    size: {\r\n        caption: messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionFileSize\"),\r\n        width: 90,\r\n        alignment: \"right\",\r\n        hidingPriority: 0\r\n    },\r\n    isParentFolder: {\r\n        caption: \"isParentFolder\",\r\n        visible: false,\r\n        sortIndex: 0,\r\n        sortOrder: \"asc\"\r\n    }\r\n};\r\nclass FileManagerDetailsItemList extends FileManagerItemListBase {\r\n    _initMarkup() {\r\n        this._itemCount = 0;\r\n        this._focusedItem = null;\r\n        this._hasParentDirectoryItem = false;\r\n        this._parentDirectoryItemKey = null;\r\n        this._selectAllCheckBox = null;\r\n        this._selectAllCheckBoxUpdating = false;\r\n        this.$element().addClass(FILE_MANAGER_DETAILS_ITEM_LIST_CLASS);\r\n        this._createFilesView();\r\n        this._contextMenu.option(\"onContextMenuHidden\", () => this._onContextMenuHidden());\r\n        super._initMarkup()\r\n    }\r\n    _createFilesView() {\r\n        var $filesView = $(\"<div>\").appendTo(this.$element());\r\n        var selectionMode = this._isMultipleSelectionMode() ? \"multiple\" : \"none\";\r\n        this._filesView = this._createComponent($filesView, DataGrid, {\r\n            dataSource: this._createDataSource(),\r\n            hoverStateEnabled: true,\r\n            selection: {\r\n                mode: selectionMode,\r\n                showCheckBoxesMode: this._isDesktop() ? \"onClick\" : \"none\"\r\n            },\r\n            selectedRowKeys: this.option(\"selectedItemKeys\"),\r\n            focusedRowKey: this.option(\"focusedItemKey\"),\r\n            focusedRowEnabled: true,\r\n            allowColumnResizing: true,\r\n            scrolling: {\r\n                mode: \"virtual\"\r\n            },\r\n            sorting: {\r\n                mode: \"single\",\r\n                showSortIndexes: false\r\n            },\r\n            showColumnLines: false,\r\n            showRowLines: false,\r\n            columnHidingEnabled: false,\r\n            columns: this._createColumns(),\r\n            onEditorPreparing: this._onEditorPreparing.bind(this),\r\n            onRowPrepared: this._onRowPrepared.bind(this),\r\n            onContextMenuPreparing: this._onContextMenuPreparing.bind(this),\r\n            onSelectionChanged: this._onFilesViewSelectionChanged.bind(this),\r\n            onFocusedRowChanged: this._onFilesViewFocusedRowChanged.bind(this),\r\n            onOptionChanged: this._onFilesViewOptionChanged.bind(this)\r\n        })\r\n    }\r\n    _createColumns() {\r\n        var columns = this.option(\"detailColumns\");\r\n        columns = columns.slice(0);\r\n        columns = columns.map(column => {\r\n            var extendedItem = column;\r\n            if (isString(column)) {\r\n                extendedItem = {\r\n                    dataField: column\r\n                }\r\n            }\r\n            return this._getPreparedColumn(extendedItem)\r\n        });\r\n        var customizeDetailColumns = this.option(\"customizeDetailColumns\");\r\n        if (isFunction(customizeDetailColumns)) {\r\n            columns = customizeDetailColumns(columns)\r\n        }\r\n        columns.push(this._getPreparedColumn({\r\n            dataField: \"isParentFolder\"\r\n        }));\r\n        columns.forEach(column => this._updateColumnDataField(column));\r\n        return columns\r\n    }\r\n    _getPreparedColumn(columnOptions) {\r\n        var result = {};\r\n        var resultCssClass = \"\";\r\n        if (this._isDefaultColumn(columnOptions.dataField)) {\r\n            var defaultConfig = extend(true, {}, DEFAULT_COLUMN_CONFIGS[columnOptions.dataField]);\r\n            resultCssClass = defaultConfig.cssClass || \"\";\r\n            switch (columnOptions.dataField) {\r\n                case \"thumbnail\":\r\n                    defaultConfig.cellTemplate = this._createThumbnailColumnCell.bind(this);\r\n                    defaultConfig.calculateSortValue = \"fileItem.\".concat(defaultConfig.calculateSortValue);\r\n                    break;\r\n                case \"name\":\r\n                    defaultConfig.cellTemplate = this._createNameColumnCell.bind(this);\r\n                    defaultConfig.caption = messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionName\");\r\n                    break;\r\n                case \"size\":\r\n                    defaultConfig.calculateCellValue = this._calculateSizeColumnCellValue.bind(this);\r\n                    defaultConfig.caption = messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionFileSize\");\r\n                    defaultConfig.calculateSortValue = rowData => rowData.fileItem.isDirectory ? -1 : rowData.fileItem.size;\r\n                    break;\r\n                case \"dateModified\":\r\n                    defaultConfig.caption = messageLocalization.format(\"dxFileManager-listDetailsColumnCaptionDateModified\")\r\n            }\r\n            extend(true, result, defaultConfig)\r\n        }\r\n        extendAttributes(result, columnOptions, [\"alignment\", \"caption\", \"dataField\", \"dataType\", \"hidingPriority\", \"sortIndex\", \"sortOrder\", \"visible\", \"visibleIndex\", \"width\"]);\r\n        if (columnOptions.cssClass) {\r\n            resultCssClass = \"\".concat(resultCssClass, \" \").concat(columnOptions.cssClass)\r\n        }\r\n        if (resultCssClass) {\r\n            result.cssClass = resultCssClass\r\n        }\r\n        return result\r\n    }\r\n    _updateColumnDataField(column) {\r\n        var dataItemSuffix = this._isDefaultColumn(column.dataField) ? \"\" : \"dataItem.\";\r\n        column.dataField = \"fileItem.\" + dataItemSuffix + column.dataField;\r\n        return column\r\n    }\r\n    _isDefaultColumn(columnDataField) {\r\n        return !!DEFAULT_COLUMN_CONFIGS[columnDataField]\r\n    }\r\n    _onFileItemActionButtonClick(_ref) {\r\n        var {\r\n            component: component,\r\n            element: element,\r\n            event: event\r\n        } = _ref;\r\n        event.stopPropagation();\r\n        var $row = component.$element().closest(this._getItemSelector());\r\n        var fileItemInfo = $row.data(\"item\");\r\n        this._selectItem(fileItemInfo);\r\n        var target = {\r\n            itemData: fileItemInfo,\r\n            itemElement: $row,\r\n            isActionButton: true\r\n        };\r\n        var items = this._getFileItemsForContextMenu(fileItemInfo);\r\n        this._showContextMenu(items, element, event, target);\r\n        this._activeFileActionsButton = component;\r\n        this._activeFileActionsButton.setActive(true)\r\n    }\r\n    _onContextMenuHidden() {\r\n        if (this._activeFileActionsButton) {\r\n            this._activeFileActionsButton.setActive(false)\r\n        }\r\n    }\r\n    _getItemThumbnailCssClass() {\r\n        return FILE_MANAGER_DETAILS_ITEM_THUMBNAIL_CLASS\r\n    }\r\n    _getItemSelector() {\r\n        return \".\".concat(DATA_GRID_DATA_ROW_CLASS)\r\n    }\r\n    _onItemDblClick(e) {\r\n        var $row = $(e.currentTarget);\r\n        var fileItemInfo = $row.data(\"item\");\r\n        this._raiseSelectedItemOpened(fileItemInfo)\r\n    }\r\n    _isAllItemsSelected() {\r\n        var selectableItemsCount = this._hasParentDirectoryItem ? this._itemCount - 1 : this._itemCount;\r\n        var selectedRowKeys = this._filesView.option(\"selectedRowKeys\");\r\n        if (!selectedRowKeys.length) {\r\n            return false\r\n        }\r\n        return selectedRowKeys.length >= selectableItemsCount ? true : void 0\r\n    }\r\n    _onEditorPreparing(_ref2) {\r\n        var {\r\n            component: component,\r\n            command: command,\r\n            row: row,\r\n            parentType: parentType,\r\n            editorOptions: editorOptions\r\n        } = _ref2;\r\n        if (!this._filesView) {\r\n            this._filesView = component\r\n        }\r\n        if (\"select\" === command && row) {\r\n            if (this._isParentDirectoryItem(row.data)) {\r\n                editorOptions.disabled = true\r\n            }\r\n        } else if (\"headerRow\" === parentType) {\r\n            editorOptions.onInitialized = _ref3 => {\r\n                var {\r\n                    component: component\r\n                } = _ref3;\r\n                this._selectAllCheckBox = component\r\n            };\r\n            editorOptions.value = this._isAllItemsSelected();\r\n            editorOptions.onValueChanged = args => this._onSelectAllCheckBoxValueChanged(args)\r\n        }\r\n    }\r\n    _onSelectAllCheckBoxValueChanged(_ref4) {\r\n        var {\r\n            event: event,\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref4;\r\n        if (!event) {\r\n            if (previousValue && !this._selectAllCheckBoxUpdating && this._selectAllCheckBox) {\r\n                this._selectAllCheckBox.option(\"value\", previousValue)\r\n            }\r\n            return\r\n        }\r\n        if (this._isAllItemsSelected() === value) {\r\n            return\r\n        }\r\n        if (value) {\r\n            this._filesView.selectAll()\r\n        } else {\r\n            this._filesView.deselectAll()\r\n        }\r\n        event.preventDefault()\r\n    }\r\n    _onRowPrepared(_ref5) {\r\n        var {\r\n            rowType: rowType,\r\n            rowElement: rowElement,\r\n            data: data\r\n        } = _ref5;\r\n        if (\"data\" === rowType) {\r\n            var $row = $(rowElement);\r\n            $row.data(\"item\", data);\r\n            if (this._isParentDirectoryItem(data)) {\r\n                $row.addClass(FILE_MANAGER_PARENT_DIRECTORY_ITEM)\r\n            }\r\n        }\r\n    }\r\n    _onContextMenuPreparing(e) {\r\n        if (!this._isDesktop()) {\r\n            return\r\n        }\r\n        var fileItems = null;\r\n        var item = {};\r\n        if (e.row && \"data\" === e.row.rowType) {\r\n            item = e.row.data;\r\n            this._selectItem(item);\r\n            fileItems = this._getFileItemsForContextMenu(item)\r\n        }\r\n        var eventArgs = extend({}, {\r\n            targetElement: \"content\" === e.target && isDefined(e.row) ? this._filesView.getRowElement(e.rowIndex) : void 0,\r\n            itemData: item,\r\n            options: this._contextMenu.option(),\r\n            event: e.event,\r\n            isActionButton: false,\r\n            cancel: false\r\n        });\r\n        this._raiseContextMenuShowing(eventArgs);\r\n        e.items = eventArgs.cancel ? [] : this._contextMenu.createContextMenuItems(fileItems, null, item)\r\n    }\r\n    _onFilesViewSelectionChanged(_ref6) {\r\n        var {\r\n            component: component,\r\n            selectedRowsData: selectedRowsData,\r\n            selectedRowKeys: selectedRowKeys,\r\n            currentSelectedRowKeys: currentSelectedRowKeys,\r\n            currentDeselectedRowKeys: currentDeselectedRowKeys\r\n        } = _ref6;\r\n        this._filesView = this._filesView || component;\r\n        if (this._selectAllCheckBox) {\r\n            this._selectAllCheckBoxUpdating = true;\r\n            this._selectAllCheckBox.option(\"value\", this._isAllItemsSelected());\r\n            this._selectAllCheckBoxUpdating = false\r\n        }\r\n        var selectedItems = selectedRowsData.map(itemInfo => itemInfo.fileItem);\r\n        this._tryRaiseSelectionChanged({\r\n            selectedItemInfos: selectedRowsData,\r\n            selectedItems: selectedItems,\r\n            selectedItemKeys: selectedRowKeys,\r\n            currentSelectedItemKeys: currentSelectedRowKeys,\r\n            currentDeselectedItemKeys: currentDeselectedRowKeys\r\n        })\r\n    }\r\n    _onFilesViewFocusedRowChanged(e) {\r\n        var _e$row2;\r\n        if (!this._isMultipleSelectionMode()) {\r\n            var _e$row;\r\n            this._selectItemSingleSelection(null === (_e$row = e.row) || void 0 === _e$row ? void 0 : _e$row.data)\r\n        }\r\n        var fileSystemItem = (null === (_e$row2 = e.row) || void 0 === _e$row2 ? void 0 : _e$row2.data.fileItem) || null;\r\n        this._onFocusedItemChanged({\r\n            item: fileSystemItem,\r\n            itemKey: null === fileSystemItem || void 0 === fileSystemItem ? void 0 : fileSystemItem.key,\r\n            itemElement: e.rowElement\r\n        })\r\n    }\r\n    _onFilesViewOptionChanged(_ref7) {\r\n        var {\r\n            fullName: fullName\r\n        } = _ref7;\r\n        if (fullName.indexOf(\"sortOrder\") > -1) {\r\n            this._filesView.columnOption(\"isParentFolder\", {\r\n                sortOrder: \"asc\",\r\n                sortIndex: 0\r\n            })\r\n        }\r\n    }\r\n    _resetFocus() {\r\n        this._setFocusedItemKey(void 0)\r\n    }\r\n    _createThumbnailColumnCell(container, cellInfo) {\r\n        this._getItemThumbnailContainer(cellInfo.data).appendTo(container)\r\n    }\r\n    _createNameColumnCell(container, cellInfo) {\r\n        var $button = $(\"<div>\");\r\n        var $name = $(\"<span>\").text(cellInfo.data.fileItem.name).addClass(FILE_MANAGER_DETAILS_ITEM_NAME_CLASS);\r\n        var $wrapper = $(\"<div>\").append($name, $button).addClass(FILE_MANAGER_DETAILS_ITEM_NAME_WRAPPER_CLASS);\r\n        $(container).append($wrapper);\r\n        this._createComponent($button, FileManagerFileActionsButton, {\r\n            onClick: e => this._onFileItemActionButtonClick(e)\r\n        })\r\n    }\r\n    _calculateSizeColumnCellValue(rowData) {\r\n        return rowData.fileItem.isDirectory ? \"\" : getDisplayFileSize(rowData.fileItem.size)\r\n    }\r\n    _selectItem(fileItemInfo) {\r\n        var selectItemFunc = this._isMultipleSelectionMode() ? this._selectItemMultipleSelection : this._selectItemSingleSelection;\r\n        selectItemFunc.call(this, fileItemInfo)\r\n    }\r\n    _deselectItem(item) {\r\n        this._filesView.deselectRows([item.fileItem.key])\r\n    }\r\n    _selectItemSingleSelection(fileItemInfo) {\r\n        if (!this._focusedItem || !fileItemInfo || this._focusedItem.fileItem.key !== fileItemInfo.fileItem.key) {\r\n            var oldFocusedItem = this._focusedItem;\r\n            this._focusedItem = fileItemInfo;\r\n            var deselectedKeys = [];\r\n            if (oldFocusedItem) {\r\n                deselectedKeys.push(oldFocusedItem.fileItem.key)\r\n            }\r\n            var selectedItems = [];\r\n            var selectedKeys = [];\r\n            if (fileItemInfo && !this._isParentDirectoryItem(fileItemInfo)) {\r\n                selectedItems.push(fileItemInfo.fileItem);\r\n                selectedKeys.push(fileItemInfo.fileItem.key)\r\n            }\r\n            this._raiseSelectionChanged({\r\n                selectedItems: selectedItems,\r\n                selectedItemKeys: selectedKeys,\r\n                currentSelectedItemKeys: [...selectedKeys],\r\n                currentDeselectedItemKeys: deselectedKeys\r\n            })\r\n        }\r\n    }\r\n    _selectItemMultipleSelection(_ref8) {\r\n        var {\r\n            fileItem: fileItem\r\n        } = _ref8;\r\n        if (!this._filesView.isRowSelected(fileItem.key)) {\r\n            var selectionController = this._filesView.getController(\"selection\");\r\n            var preserve = selectionController.isSelectionWithCheckboxes();\r\n            this._filesView.selectRows([fileItem.key], preserve)\r\n        }\r\n    }\r\n    _setSelectedItemKeys(itemKeys) {\r\n        this._filesView.option(\"selectedRowKeys\", itemKeys)\r\n    }\r\n    _setFocusedItemKey(itemKey) {\r\n        var _this$_filesView;\r\n        null === (_this$_filesView = this._filesView) || void 0 === _this$_filesView ? void 0 : _this$_filesView.option(\"focusedRowKey\", itemKey)\r\n    }\r\n    clearSelection() {\r\n        if (this._isMultipleSelectionMode()) {\r\n            this._filesView.clearSelection()\r\n        } else {\r\n            this._filesView.option(\"focusedRowIndex\", -1)\r\n        }\r\n    }\r\n    refresh(options) {\r\n        var actualOptions = {\r\n            dataSource: this._createDataSource()\r\n        };\r\n        if (options && Object.prototype.hasOwnProperty.call(options, \"focusedItemKey\")) {\r\n            if (isDefined(options.focusedItemKey)) {\r\n                actualOptions.focusedRowKey = options.focusedItemKey\r\n            } else {\r\n                actualOptions.focusedRowIndex = -1\r\n            }\r\n        }\r\n        this._filesView.option(actualOptions);\r\n        this._refreshDeferred = new Deferred;\r\n        return this._refreshDeferred.promise()\r\n    }\r\n    getSelectedItems() {\r\n        if (this._isMultipleSelectionMode()) {\r\n            return this._filesView.getSelectedRowsData()\r\n        }\r\n        return this._focusedItem && !this._isParentDirectoryItem(this._focusedItem) ? [this._focusedItem] : []\r\n    }\r\n}\r\nexport default FileManagerDetailsItemList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
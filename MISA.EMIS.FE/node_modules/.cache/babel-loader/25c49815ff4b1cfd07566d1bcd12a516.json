{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/chart_components/base_chart.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop, grep } from \"../../core/utils/common\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDefined as _isDefined, isFunction } from \"../../core/utils/type\";\nimport { each as _each, reverseEach as _reverseEach } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isTouchEvent, isPointerEvent } from \"../../events/utils/index\";\nimport BaseWidget from \"../core/base_widget\";\nimport { Legend } from \"../components/legend\";\nimport { validateData } from \"../components/data_validator\";\nimport { Series } from \"../series/base_series\";\nimport { ThemeManager } from \"../components/chart_theme_manager\";\nimport { LayoutManager } from \"./layout_manager\";\nimport * as trackerModule from \"./tracker\";\nimport { map as _map, setCanvasValues as _setCanvasValues, processSeriesTemplate } from \"../core/utils\";\nvar _isArray = Array.isArray;\nvar REINIT_REFRESH_ACTION = \"_reinit\";\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\nvar RESIZE_REFRESH_ACTION = \"_resize\";\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\nvar DEFAULT_OPACITY = .3;\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"minBubbleSize\", \"maxBubbleSize\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"stickyHovering\"];\nvar FONT = \"font\";\n\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\n  var canvasSize = stubCanvas.end - stubCanvas.start;\n  var size = 0;\n  rollingStocks.forEach(function (rollingStock) {\n    size += rollingStock.getBoundingRect().width;\n  });\n\n  while (canvasSize < size) {\n    size -= findAndKillSmallValue(rollingStocks);\n  }\n}\n\nfunction findAndKillSmallValue(rollingStocks) {\n  var smallestObject = rollingStocks.reduce(function (prev, rollingStock, index) {\n    if (!rollingStock) {\n      return prev;\n    }\n\n    var value = rollingStock.value();\n    return value < prev.value ? {\n      value: value,\n      rollingStock: rollingStock,\n      index: index\n    } : prev;\n  }, {\n    rollingStock: void 0,\n    value: 1 / 0,\n    index: void 0\n  });\n  smallestObject.rollingStock.getLabels()[0].draw(false);\n  var width = smallestObject.rollingStock.getBoundingRect().width;\n  rollingStocks[smallestObject.index] = null;\n  return width;\n}\n\nfunction checkStackOverlap(rollingStocks) {\n  var i;\n  var j;\n  var iLength;\n  var jLength;\n  var overlap = false;\n\n  for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\n    for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\n      if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\n        overlap = true;\n        break;\n      }\n    }\n\n    if (overlap) {\n      break;\n    }\n  }\n\n  return overlap;\n}\n\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, isInverted, shiftFunction) {\n  var customSorting = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : () => 0;\n  var rollingStocks = [];\n  var stubCanvas = {\n    start: isRotated ? canvas.left : canvas.top,\n    end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\n  };\n  var hasStackedSeries = false;\n  var sortRollingStocks;\n  points.forEach(function (p) {\n    if (!p) {\n      return;\n    }\n\n    hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\n    p.getLabels().forEach(function (l) {\n      l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction));\n    });\n  });\n\n  if (hasStackedSeries) {\n    !isRotated ^ isInverted && rollingStocks.reverse();\n    sortRollingStocks = !isInverted ? sortRollingStocksByValue(rollingStocks) : rollingStocks;\n  } else {\n    var rollingStocksTmp = rollingStocks.slice();\n    sortRollingStocks = rollingStocks.sort(function (a, b) {\n      return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b);\n    });\n  }\n\n  if (!checkStackOverlap(sortRollingStocks)) {\n    return false;\n  }\n\n  checkHeightRollingStock(sortRollingStocks, stubCanvas);\n  prepareOverlapStacks(sortRollingStocks);\n  sortRollingStocks.reverse();\n  moveRollingStock(sortRollingStocks, stubCanvas);\n  return true;\n}\n\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\n  if (!firstRolling || !secondRolling) {\n    return;\n  }\n\n  var firstRect = firstRolling.getBoundingRect();\n  var secondRect = secondRolling.getBoundingRect();\n  var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\n  return firstRect.end > secondRect.start && oppositeOverlapping;\n}\n\nfunction sortRollingStocksByValue(rollingStocks) {\n  var positiveRollingStocks = [];\n  var negativeRollingStocks = [];\n  rollingStocks.forEach(stock => {\n    if (stock.value() > 0) {\n      positiveRollingStocks.push(stock);\n    } else {\n      negativeRollingStocks.unshift(stock);\n    }\n  });\n  return positiveRollingStocks.concat(negativeRollingStocks);\n}\n\nfunction prepareOverlapStacks(rollingStocks) {\n  var i;\n  var currentRollingStock;\n  var root;\n\n  for (i = 0; i < rollingStocks.length - 1; i++) {\n    currentRollingStock = root || rollingStocks[i];\n\n    if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\n      currentRollingStock.toChain(rollingStocks[i + 1]);\n      rollingStocks[i + 1] = null;\n      root = currentRollingStock;\n    } else {\n      root = rollingStocks[i + 1] || currentRollingStock;\n    }\n  }\n}\n\nfunction moveRollingStock(rollingStocks, canvas) {\n  var i;\n  var j;\n  var currentRollingStock;\n  var nextRollingStock;\n  var currentBBox;\n  var nextBBox;\n\n  for (i = 0; i < rollingStocks.length; i++) {\n    currentRollingStock = rollingStocks[i];\n\n    if (rollingStocksIsOut(currentRollingStock, canvas)) {\n      currentBBox = currentRollingStock.getBoundingRect();\n\n      for (j = i + 1; j < rollingStocks.length; j++) {\n        nextRollingStock = rollingStocks[j];\n\n        if (!nextRollingStock) {\n          continue;\n        }\n\n        nextBBox = nextRollingStock.getBoundingRect();\n\n        if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\n          nextRollingStock.toChain(currentRollingStock);\n          rollingStocks[i] = currentRollingStock = null;\n          break;\n        }\n      }\n    }\n\n    currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas);\n  }\n}\n\nfunction rollingStocksIsOut(rollingStock, canvas) {\n  return rollingStock && rollingStock.getBoundingRect().end > canvas.end;\n}\n\nfunction RollingStock(label, isRotated, shiftFunction) {\n  var bBox = label.getBoundingRect();\n  var x = bBox.x;\n  var y = bBox.y;\n  var endX = bBox.x + bBox.width;\n  var endY = bBox.y + bBox.height;\n  this.labels = [label];\n  this.shiftFunction = shiftFunction;\n  this._bBox = {\n    start: isRotated ? x : y,\n    width: isRotated ? bBox.width : bBox.height,\n    end: isRotated ? endX : endY,\n    oppositeStart: isRotated ? y : x,\n    oppositeEnd: isRotated ? endY : endX\n  };\n  this._initialPosition = isRotated ? bBox.x : bBox.y;\n  return this;\n}\n\nRollingStock.prototype = {\n  toChain: function (nextRollingStock) {\n    var nextRollingStockBBox = nextRollingStock.getBoundingRect();\n    nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\n\n    this._changeBoxWidth(nextRollingStockBBox.width);\n\n    this.labels = this.labels.concat(nextRollingStock.labels);\n  },\n  getBoundingRect: function () {\n    return this._bBox;\n  },\n  shift: function (shiftLength) {\n    var shiftFunction = this.shiftFunction;\n\n    _each(this.labels, function (index, label) {\n      var bBox = label.getBoundingRect();\n      var coords = shiftFunction(bBox, shiftLength);\n\n      if (!label.hideInsideLabel(coords)) {\n        label.shift(coords.x, coords.y);\n      }\n    });\n\n    this._bBox.end -= shiftLength;\n    this._bBox.start -= shiftLength;\n  },\n  setRollingStockInCanvas: function (canvas) {\n    if (this._bBox.end > canvas.end) {\n      this.shift(this._bBox.end - canvas.end);\n    }\n  },\n  getLabels: function () {\n    return this.labels;\n  },\n\n  value() {\n    return this.labels[0].getData().value;\n  },\n\n  getInitialPosition: function () {\n    return this._initialPosition;\n  },\n  _changeBoxWidth: function (width) {\n    this._bBox.end += width;\n    this._bBox.width += width;\n  }\n};\n\nfunction getLegendFields(name) {\n  return {\n    nameField: name + \"Name\",\n    colorField: name + \"Color\",\n    indexField: name + \"Index\"\n  };\n}\n\nfunction getLegendSettings(legendDataField) {\n  var formatObjectFields = getLegendFields(legendDataField);\n  return {\n    getFormatObject: function (data) {\n      var res = {};\n      res[formatObjectFields.indexField] = data.id;\n      res[formatObjectFields.colorField] = data.states.normal.fill;\n      res[formatObjectFields.nameField] = data.text;\n      return res;\n    },\n    textField: formatObjectFields.nameField\n  };\n}\n\nfunction checkOverlapping(firstRect, secondRect) {\n  return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height);\n}\n\nexport var overlapping = {\n  resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\n};\nexport var BaseChart = BaseWidget.inherit({\n  _eventsMap: {\n    onSeriesClick: {\n      name: \"seriesClick\"\n    },\n    onPointClick: {\n      name: \"pointClick\"\n    },\n    onArgumentAxisClick: {\n      name: \"argumentAxisClick\"\n    },\n    onLegendClick: {\n      name: \"legendClick\"\n    },\n    onSeriesSelectionChanged: {\n      name: \"seriesSelectionChanged\"\n    },\n    onPointSelectionChanged: {\n      name: \"pointSelectionChanged\"\n    },\n    onSeriesHoverChanged: {\n      name: \"seriesHoverChanged\"\n    },\n    onPointHoverChanged: {\n      name: \"pointHoverChanged\"\n    },\n    onDone: {\n      name: \"done\",\n      actionSettings: {\n        excludeValidators: [\"disabled\"]\n      }\n    },\n    onZoomStart: {\n      name: \"zoomStart\"\n    },\n    onZoomEnd: {\n      name: \"zoomEnd\"\n    }\n  },\n  _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\n  _rootClassPrefix: \"dxc\",\n  _rootClass: \"dxc-chart\",\n  _initialChanges: [\"INIT\"],\n  _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\n\n  _getThemeManagerOptions() {\n    var themeOptions = this.callBase.apply(this, arguments);\n    themeOptions.options = this.option();\n    return themeOptions;\n  },\n\n  _createThemeManager: function () {\n    var chartOption = this.option();\n    var themeManager = new ThemeManager(this._getThemeManagerOptions());\n    themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\n    return themeManager;\n  },\n  _initCore: function () {\n    this._canvasClipRect = this._renderer.clipRect();\n\n    this._createHtmlStructure();\n\n    this._createLegend();\n\n    this._createTracker();\n\n    this._needHandleRenderComplete = true;\n    this.layoutManager = new LayoutManager();\n\n    this._createScrollBar();\n\n    eventsEngine.on(this._$element, \"contextmenu\", function (event) {\n      if (isTouchEvent(event) || isPointerEvent(event)) {\n        event.preventDefault();\n      }\n    });\n    eventsEngine.on(this._$element, \"MSHoldVisual\", function (event) {\n      event.preventDefault();\n    });\n  },\n  _getLayoutItems: noop,\n  _layoutManagerOptions: function () {\n    return this._themeManager.getOptions(\"adaptiveLayout\");\n  },\n\n  _reinit() {\n    _setCanvasValues(this._canvas);\n\n    this._reinitAxes();\n\n    this._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n\n  _correctAxes: noop,\n  _createHtmlStructure: function () {\n    var that = this;\n    var renderer = that._renderer;\n    var root = renderer.root;\n\n    var createConstantLinesGroup = function () {\n      return renderer.g().attr({\n        class: \"dxc-constant-lines-group\"\n      }).linkOn(root, \"constant-lines\");\n    };\n\n    that._constantLinesGroup = {\n      dispose: function () {\n        this.under.dispose();\n        this.above.dispose();\n      },\n      linkOff: function () {\n        this.under.linkOff();\n        this.above.linkOff();\n      },\n      clear: function () {\n        this.under.linkRemove().clear();\n        this.above.linkRemove().clear();\n      },\n      linkAppend: function () {\n        this.under.linkAppend();\n        this.above.linkAppend();\n      }\n    };\n    that._labelsAxesGroup = renderer.g().attr({\n      class: \"dxc-elements-axes-group\"\n    });\n\n    var appendLabelsAxesGroup = () => {\n      that._labelsAxesGroup.linkOn(root, \"elements\");\n    };\n\n    that._backgroundRect = renderer.rect().attr({\n      fill: \"gray\",\n      opacity: 1e-4\n    }).append(root);\n    that._panesBackgroundGroup = renderer.g().attr({\n      class: \"dxc-background\"\n    }).append(root);\n    that._stripsGroup = renderer.g().attr({\n      class: \"dxc-strips-group\"\n    }).linkOn(root, \"strips\");\n    that._gridGroup = renderer.g().attr({\n      class: \"dxc-grids-group\"\n    }).linkOn(root, \"grids\");\n    that._panesBorderGroup = renderer.g().attr({\n      class: \"dxc-border\"\n    }).linkOn(root, \"border\");\n    that._axesGroup = renderer.g().attr({\n      class: \"dxc-axes-group\"\n    }).linkOn(root, \"axes\");\n\n    that._executeAppendBeforeSeries(appendLabelsAxesGroup);\n\n    that._stripLabelAxesGroup = renderer.g().attr({\n      class: \"dxc-strips-labels-group\"\n    }).linkOn(root, \"strips-labels\");\n    that._constantLinesGroup.under = createConstantLinesGroup();\n    that._seriesGroup = renderer.g().attr({\n      class: \"dxc-series-group\"\n    }).linkOn(root, \"series\");\n\n    that._executeAppendAfterSeries(appendLabelsAxesGroup);\n\n    that._constantLinesGroup.above = createConstantLinesGroup();\n    that._scaleBreaksGroup = renderer.g().attr({\n      class: \"dxc-scale-breaks\"\n    }).linkOn(root, \"scale-breaks\");\n    that._labelsGroup = renderer.g().attr({\n      class: \"dxc-labels-group\"\n    }).linkOn(root, \"labels\");\n    that._crosshairCursorGroup = renderer.g().attr({\n      class: \"dxc-crosshair-cursor\"\n    }).linkOn(root, \"crosshair\");\n    that._legendGroup = renderer.g().attr({\n      class: \"dxc-legend\",\n      \"clip-path\": that._getCanvasClipRectID()\n    }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\n    that._scrollBarGroup = renderer.g().attr({\n      class: \"dxc-scroll-bar\"\n    }).linkOn(root, \"scroll-bar\");\n  },\n\n  _executeAppendBeforeSeries() {},\n\n  _executeAppendAfterSeries() {},\n\n  _disposeObjectsInArray: function (propName, fieldNames) {\n    _each(this[propName] || [], function (_, item) {\n      if (fieldNames && item) {\n        _each(fieldNames, function (_, field) {\n          item[field] && item[field].dispose();\n        });\n      } else {\n        item && item.dispose();\n      }\n    });\n\n    this[propName] = null;\n  },\n  _disposeCore: function () {\n    var that = this;\n\n    var disposeObject = function (propName) {\n      if (that[propName]) {\n        that[propName].dispose();\n        that[propName] = null;\n      }\n    };\n\n    var unlinkGroup = function (name) {\n      that[name].linkOff();\n    };\n\n    var disposeObjectsInArray = this._disposeObjectsInArray;\n\n    that._renderer.stopAllAnimations();\n\n    disposeObjectsInArray.call(that, \"series\");\n    disposeObject(\"_tracker\");\n    disposeObject(\"_crosshair\");\n    that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\n    unlinkGroup(\"_stripsGroup\");\n    unlinkGroup(\"_gridGroup\");\n    unlinkGroup(\"_axesGroup\");\n    unlinkGroup(\"_constantLinesGroup\");\n    unlinkGroup(\"_stripLabelAxesGroup\");\n    unlinkGroup(\"_panesBorderGroup\");\n    unlinkGroup(\"_seriesGroup\");\n    unlinkGroup(\"_labelsGroup\");\n    unlinkGroup(\"_crosshairCursorGroup\");\n    unlinkGroup(\"_legendGroup\");\n    unlinkGroup(\"_scrollBarGroup\");\n    unlinkGroup(\"_scaleBreaksGroup\");\n    disposeObject(\"_canvasClipRect\");\n    disposeObject(\"_panesBackgroundGroup\");\n    disposeObject(\"_backgroundRect\");\n    disposeObject(\"_stripsGroup\");\n    disposeObject(\"_gridGroup\");\n    disposeObject(\"_axesGroup\");\n    disposeObject(\"_constantLinesGroup\");\n    disposeObject(\"_stripLabelAxesGroup\");\n    disposeObject(\"_panesBorderGroup\");\n    disposeObject(\"_seriesGroup\");\n    disposeObject(\"_labelsGroup\");\n    disposeObject(\"_crosshairCursorGroup\");\n    disposeObject(\"_legendGroup\");\n    disposeObject(\"_scrollBarGroup\");\n    disposeObject(\"_scaleBreaksGroup\");\n  },\n  _getAnimationOptions: function () {\n    return this._themeManager.getOptions(\"animation\");\n  },\n  _getDefaultSize: function () {\n    return {\n      width: 400,\n      height: 400\n    };\n  },\n  _getOption: function (name) {\n    return this._themeManager.getOptions(name);\n  },\n  _applySize: function (rect) {\n    this._rect = rect.slice();\n\n    if (!this._changes.has(\"FULL_RENDER\")) {\n      this._processRefreshData(RESIZE_REFRESH_ACTION);\n    }\n  },\n  _resize: function () {\n    this._doRender(this.__renderOptions || {\n      animate: false,\n      isResize: true\n    });\n  },\n  _trackerType: \"ChartTracker\",\n  _createTracker: function () {\n    this._tracker = new trackerModule[this._trackerType]({\n      seriesGroup: this._seriesGroup,\n      renderer: this._renderer,\n      tooltip: this._tooltip,\n      legend: this._legend,\n      eventTrigger: this._eventTrigger\n    });\n  },\n  _getTrackerSettings: function () {\n    return extend({\n      chart: this\n    }, this._getSelectionModes());\n  },\n  _getSelectionModes: function () {\n    var themeManager = this._themeManager;\n    return {\n      seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\n      pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\n    };\n  },\n  _updateTracker: function (trackerCanvases) {\n    this._tracker.update(this._getTrackerSettings());\n\n    this._tracker.setCanvases({\n      left: 0,\n      right: this._canvas.width,\n      top: 0,\n      bottom: this._canvas.height\n    }, trackerCanvases);\n  },\n\n  _createCanvasFromRect(rect) {\n    var currentCanvas = this._canvas;\n    return _setCanvasValues({\n      left: rect[0],\n      top: rect[1],\n      right: currentCanvas.width - rect[2],\n      bottom: currentCanvas.height - rect[3],\n      width: currentCanvas.width,\n      height: currentCanvas.height\n    });\n  },\n\n  _doRender: function (_options) {\n    if (0 === this._canvas.width && 0 === this._canvas.height) {\n      return;\n    }\n\n    this._resetIsReady();\n\n    var drawOptions = this._prepareDrawOptions(_options);\n\n    var recreateCanvas = drawOptions.recreateCanvas;\n\n    this._preserveOriginalCanvas();\n\n    if (recreateCanvas) {\n      this.__currentCanvas = this._canvas;\n    } else {\n      this._canvas = this.__currentCanvas;\n    }\n\n    recreateCanvas && this._updateCanvasClipRect(this._canvas);\n    this._canvas = this._createCanvasFromRect(this._rect);\n\n    this._renderer.stopAllAnimations(true);\n\n    this._cleanGroups();\n\n    var startTime = new Date();\n\n    this._renderElements(drawOptions);\n\n    this._lastRenderingTime = new Date() - startTime;\n  },\n\n  _preserveOriginalCanvas() {\n    this.__originalCanvas = this._canvas;\n    this._canvas = extend({}, this._canvas);\n  },\n\n  _layoutAxes: noop,\n  _renderElements: function (drawOptions) {\n    var that = this;\n\n    var preparedOptions = that._prepareToRender(drawOptions);\n\n    var isRotated = that._isRotated();\n\n    var isLegendInside = that._isLegendInside();\n\n    var trackerCanvases = [];\n    extend({}, that._canvas);\n    var argBusinessRange;\n    var zoomMinArg;\n    var zoomMaxArg;\n\n    that._renderer.lock();\n\n    if (drawOptions.drawLegend && that._legend) {\n      that._legendGroup.linkAppend();\n    }\n\n    that.layoutManager.setOptions(that._layoutManagerOptions());\n\n    var layoutTargets = that._getLayoutTargets();\n\n    this._layoutAxes(needSpace => {\n      var axisDrawOptions = needSpace ? extend({}, drawOptions, {\n        animate: false,\n        recreateCanvas: true\n      }) : drawOptions;\n\n      var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\n\n      that._shrinkAxes(needSpace, canvas);\n    });\n\n    that._applyClipRects(preparedOptions);\n\n    that._appendSeriesGroups();\n\n    that._createCrosshairCursor();\n\n    layoutTargets.forEach(_ref => {\n      var {\n        canvas: canvas\n      } = _ref;\n      trackerCanvases.push({\n        left: canvas.left,\n        right: canvas.width - canvas.right,\n        top: canvas.top,\n        bottom: canvas.height - canvas.bottom\n      });\n    });\n\n    if (that._scrollBar) {\n      argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\n\n      if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\n        zoomMinArg = zoomMaxArg = void 0;\n      } else {\n        zoomMinArg = argBusinessRange.minVisible;\n        zoomMaxArg = argBusinessRange.maxVisible;\n      }\n\n      that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg);\n    }\n\n    that._updateTracker(trackerCanvases);\n\n    that._updateLegendPosition(drawOptions, isLegendInside);\n\n    that._applyPointMarkersAutoHiding();\n\n    that._renderSeries(drawOptions, isRotated, isLegendInside);\n\n    that._renderer.unlock();\n  },\n  _updateLegendPosition: noop,\n  _createCrosshairCursor: noop,\n  _appendSeriesGroups: function () {\n    this._seriesGroup.linkAppend();\n\n    this._labelsGroup.linkAppend();\n\n    this._appendAdditionalSeriesGroups();\n  },\n  _renderSeries: function (drawOptions, isRotated, isLegendInside) {\n    this._calculateSeriesLayout(drawOptions, isRotated);\n\n    this._renderSeriesElements(drawOptions, isLegendInside);\n  },\n  _calculateSeriesLayout: function (drawOptions, isRotated) {\n    drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\n\n    this._updateSeriesDimensions(drawOptions);\n  },\n  _getArgFilter: () => () => true,\n  _getValFilter: series => () => true,\n\n  _getPointsToAnimation(series) {\n    var argViewPortFilter = this._getArgFilter();\n\n    return series.map(s => {\n      var valViewPortFilter = this._getValFilter(s);\n\n      return s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).length;\n    });\n  },\n\n  _renderSeriesElements: function (drawOptions, isLegendInside) {\n    var i;\n    var series = this.series;\n    var singleSeries;\n    var seriesLength = series.length;\n\n    var resolveLabelOverlapping = this._themeManager.getOptions(\"resolveLabelOverlapping\");\n\n    var pointsToAnimation = this._getPointsToAnimation(series);\n\n    for (i = 0; i < seriesLength; i++) {\n      singleSeries = series[i];\n\n      this._applyExtraSettings(singleSeries, drawOptions);\n\n      singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && this._renderer.animationEnabled(), drawOptions.hideLayoutLabels, this._getLegendCallBack(singleSeries));\n    }\n\n    if (\"none\" === resolveLabelOverlapping) {\n      this._adjustSeriesLabels(false);\n    } else {\n      this._locateLabels(resolveLabelOverlapping);\n    }\n\n    this._renderTrackers(isLegendInside);\n\n    this._tracker.repairTooltip();\n\n    this._renderExtraElements();\n\n    this._clearCanvas();\n\n    this._seriesElementsDrawn = true;\n  },\n\n  _changesApplied() {\n    if (this._seriesElementsDrawn) {\n      this._seriesElementsDrawn = false;\n\n      this._drawn();\n\n      this._renderCompleteHandler();\n    }\n  },\n\n  _locateLabels(resolveLabelOverlapping) {\n    this._resolveLabelOverlapping(resolveLabelOverlapping);\n  },\n\n  _renderExtraElements() {},\n\n  _clearCanvas: function () {\n    this._canvas = this.__originalCanvas;\n  },\n  _resolveLabelOverlapping: function (resolveLabelOverlapping) {\n    var func;\n\n    switch (resolveLabelOverlapping) {\n      case \"stack\":\n        func = this._resolveLabelOverlappingStack;\n        break;\n\n      case \"hide\":\n        func = this._resolveLabelOverlappingHide;\n        break;\n\n      case \"shift\":\n        func = this._resolveLabelOverlappingShift;\n    }\n\n    return isFunction(func) && func.call(this);\n  },\n  _getVisibleSeries: function () {\n    return grep(this.getAllSeries(), function (series) {\n      return series.isVisible();\n    });\n  },\n  _resolveLabelOverlappingHide: function () {\n    var labels = [];\n    var currentLabel;\n    var nextLabel;\n    var currentLabelRect;\n    var nextLabelRect;\n    var i;\n    var j;\n    var points;\n\n    var series = this._getVisibleSeries();\n\n    for (i = 0; i < series.length; i++) {\n      points = series[i].getVisiblePoints();\n\n      for (j = 0; j < points.length; j++) {\n        labels.push.apply(labels, points[j].getLabels());\n      }\n    }\n\n    for (i = 0; i < labels.length; i++) {\n      currentLabel = labels[i];\n\n      if (!currentLabel.isVisible()) {\n        continue;\n      }\n\n      currentLabelRect = currentLabel.getBoundingRect();\n\n      for (j = i + 1; j < labels.length; j++) {\n        nextLabel = labels[j];\n        nextLabelRect = nextLabel.getBoundingRect();\n\n        if (checkOverlapping(currentLabelRect, nextLabelRect)) {\n          nextLabel.draw(false);\n        }\n      }\n    }\n  },\n  _cleanGroups: function () {\n    this._stripsGroup.linkRemove().clear();\n\n    this._gridGroup.linkRemove().clear();\n\n    this._axesGroup.linkRemove().clear();\n\n    this._constantLinesGroup.above.clear();\n\n    this._stripLabelAxesGroup.linkRemove().clear();\n\n    this._labelsGroup.linkRemove().clear();\n\n    this._crosshairCursorGroup.linkRemove().clear();\n\n    this._scaleBreaksGroup.linkRemove().clear();\n  },\n  _allowLegendInsidePosition: () => false,\n  _createLegend: function () {\n    var legendSettings = getLegendSettings(this._legendDataField);\n    this._legend = new Legend({\n      renderer: this._renderer,\n      widget: this,\n      group: this._legendGroup,\n      backgroundClass: \"dxc-border\",\n      itemGroupClass: \"dxc-item\",\n      titleGroupClass: \"dxc-title\",\n      textField: legendSettings.textField,\n      getFormatObject: legendSettings.getFormatObject,\n      allowInsidePosition: this._allowLegendInsidePosition()\n    });\n\n    this._updateLegend();\n\n    this._layout.add(this._legend);\n  },\n  _updateLegend: function () {\n    var themeManager = this._themeManager;\n    var legendOptions = themeManager.getOptions(\"legend\");\n\n    var legendData = this._getLegendData();\n\n    legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\n    legendOptions._incidentOccurred = this._incidentOccurred;\n\n    this._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\n\n    this._change([\"LAYOUT\"]);\n  },\n  _prepareDrawOptions: function (drawOptions) {\n    var animationOptions = this._getAnimationOptions();\n\n    var options = extend({}, {\n      force: false,\n      adjustAxes: true,\n      drawLegend: true,\n      drawTitle: true,\n      animate: animationOptions.enabled,\n      animationPointsLimit: animationOptions.maxPointCountSupported\n    }, drawOptions, this.__renderOptions);\n\n    if (!_isDefined(options.recreateCanvas)) {\n      options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle;\n    }\n\n    return options;\n  },\n  _processRefreshData: function (newRefreshAction) {\n    var currentRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(this._currentRefreshData);\n    var newRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(newRefreshAction);\n\n    if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\n      this._currentRefreshData = newRefreshAction;\n    }\n\n    this._requestChange([\"REFRESH\"]);\n  },\n  _getLegendData: function () {\n    return _map(this._getLegendTargets(), function (item) {\n      var legendData = item.legendData;\n      var style = item.getLegendStyles;\n      var opacity = style.normal.opacity;\n\n      if (!item.visible) {\n        if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\n          opacity = DEFAULT_OPACITY;\n        }\n\n        legendData.textOpacity = DEFAULT_OPACITY;\n      }\n\n      var opacityStyle = {\n        opacity: opacity\n      };\n      legendData.states = {\n        hover: extend({}, style.hover, opacityStyle),\n        selection: extend({}, style.selection, opacityStyle),\n        normal: extend({}, style.normal, opacityStyle)\n      };\n      return legendData;\n    });\n  },\n  _getLegendOptions: function (item) {\n    return {\n      legendData: {\n        text: item[this._legendItemTextField],\n        id: item.index,\n        visible: true\n      },\n      getLegendStyles: item.getLegendStyles(),\n      visible: item.isVisible()\n    };\n  },\n\n  _disposeSeries(seriesIndex) {\n    var _that$series;\n\n    if (this.series) {\n      if (_isDefined(seriesIndex)) {\n        this.series[seriesIndex].dispose();\n        this.series.splice(seriesIndex, 1);\n      } else {\n        _each(this.series, (_, s) => s.dispose());\n\n        this.series.length = 0;\n      }\n    }\n\n    if (!(null !== (_that$series = this.series) && void 0 !== _that$series && _that$series.length)) {\n      this.series = [];\n    }\n  },\n\n  _disposeSeriesFamilies() {\n    _each(this.seriesFamilies || [], function (_, family) {\n      family.dispose();\n    });\n\n    this.seriesFamilies = null;\n    this._needHandleRenderComplete = true;\n  },\n\n  _optionChanged: function (arg) {\n    this._themeManager.resetOptions(arg.name);\n\n    this.callBase.apply(this, arguments);\n  },\n\n  _applyChanges() {\n    this._themeManager.update(this._options.silent());\n\n    this.callBase.apply(this, arguments);\n  },\n\n  _optionChangesMap: {\n    animation: \"ANIMATION\",\n    dataSource: \"DATA_SOURCE\",\n    palette: \"PALETTE\",\n    paletteExtensionMode: \"PALETTE\",\n    legend: \"FORCE_DATA_INIT\",\n    seriesTemplate: \"FORCE_DATA_INIT\",\n    export: \"FORCE_RENDER\",\n    valueAxis: \"AXES_AND_PANES\",\n    argumentAxis: \"AXES_AND_PANES\",\n    commonAxisSettings: \"AXES_AND_PANES\",\n    panes: \"AXES_AND_PANES\",\n    commonPaneSettings: \"AXES_AND_PANES\",\n    defaultPane: \"AXES_AND_PANES\",\n    containerBackgroundColor: \"AXES_AND_PANES\",\n    rotated: \"ROTATED\",\n    autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\n    customizePoint: \"REFRESH_SERIES_REINIT\",\n    customizeLabel: \"REFRESH_SERIES_REINIT\",\n    scrollBar: \"SCROLL_BAR\"\n  },\n  _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"USE_SPIDER_WEB\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\n  _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_FIRST_DRAWING\", \"FORCE_DRAWING\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\n  _change_ANIMATION: function () {\n    this._renderer.updateAnimationOptions(this._getAnimationOptions());\n  },\n  _change_DATA_SOURCE: function () {\n    this._needHandleRenderComplete = true;\n\n    this._updateDataSource();\n  },\n  _change_PALETTE: function () {\n    this._themeManager.updatePalette();\n\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_REFRESH_SERIES_DATA_INIT: function () {\n    this._refreshSeries(\"DATA_INIT\");\n  },\n  _change_DATA_INIT: function () {\n    if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\n      this._dataInit();\n    }\n  },\n  _change_FORCE_DATA_INIT: function () {\n    this._dataInit();\n  },\n  _change_REFRESH_SERIES_FAMILIES: function () {\n    this._processSeriesFamilies();\n\n    this._populateBusinessRange();\n\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_FORCE_RENDER: function () {\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_AXES_AND_PANES: function () {\n    this._refreshSeries(\"INIT\");\n  },\n  _change_ROTATED: function () {\n    this._createScrollBar();\n\n    this._refreshSeries(\"INIT\");\n  },\n  _change_REFRESH_SERIES_REINIT: function () {\n    this._refreshSeries(\"INIT\");\n  },\n\n  _change_REFRESH_AXES() {\n    _setCanvasValues(this._canvas);\n\n    this._reinitAxes();\n\n    this._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"]);\n  },\n\n  _change_SCROLL_BAR: function () {\n    this._createScrollBar();\n\n    this._processRefreshData(FORCE_RENDER_REFRESH_ACTION);\n  },\n  _change_REINIT: function () {\n    this._processRefreshData(REINIT_REFRESH_ACTION);\n  },\n  _change_FORCE_DRAWING: function () {\n    this._resetComponentsAnimation();\n  },\n  _change_FORCE_FIRST_DRAWING: function () {\n    this._resetComponentsAnimation(true);\n  },\n  _resetComponentsAnimation: function (isFirstDrawing) {\n    this.series.forEach(s => {\n      s.resetApplyingAnimation(isFirstDrawing);\n    });\n\n    this._resetAxesAnimation(isFirstDrawing);\n  },\n  _resetAxesAnimation: noop,\n  _refreshSeries: function (actionName) {\n    this.needToPopulateSeries = true;\n\n    this._requestChange([actionName]);\n  },\n\n  _change_CORRECT_AXIS() {\n    this._correctAxes();\n  },\n\n  _doRefresh: function () {\n    var methodName = this._currentRefreshData;\n\n    if (methodName) {\n      this._currentRefreshData = null;\n\n      this._renderer.stopAllAnimations(true);\n\n      this[methodName]();\n    }\n  },\n  _updateCanvasClipRect: function (canvas) {\n    var width = Math.max(canvas.width - canvas.left - canvas.right, 0);\n    var height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\n\n    this._canvasClipRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n\n    this._backgroundRect.attr({\n      x: canvas.left,\n      y: canvas.top,\n      width: width,\n      height: height\n    });\n  },\n  _getCanvasClipRectID: function () {\n    return this._canvasClipRect.id;\n  },\n  _dataSourceChangedHandler: function () {\n    if (this._changes.has(\"INIT\")) {\n      this._requestChange([\"DATA_INIT\"]);\n    } else {\n      this._requestChange([\"FORCE_DATA_INIT\"]);\n    }\n  },\n  _dataInit: function () {\n    this._dataSpecificInit(true);\n  },\n  _processSingleSeries: function (singleSeries) {\n    singleSeries.createPoints(false);\n  },\n\n  _handleSeriesDataUpdated() {\n    if (this._getVisibleSeries().some(s => s.useAggregation())) {\n      this._populateMarginOptions();\n    }\n\n    this.series.forEach(s => this._processSingleSeries(s), this);\n  },\n\n  _dataSpecificInit(needRedraw) {\n    if (!this.series || this.needToPopulateSeries) {\n      this.series = this._populateSeries();\n    }\n\n    this._repopulateSeries();\n\n    this._seriesPopulatedHandlerCore();\n\n    this._populateBusinessRange();\n\n    this._tracker.updateSeries(this.series, this._changes.has(\"INIT\"));\n\n    this._updateLegend();\n\n    if (needRedraw) {\n      this._requestChange([\"FULL_RENDER\"]);\n    }\n  },\n\n  _forceRender: function () {\n    this._doRender({\n      force: true\n    });\n  },\n  _repopulateSeries: function () {\n    var themeManager = this._themeManager;\n\n    var data = this._dataSourceItems();\n\n    var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n\n    if (seriesTemplate) {\n      this._populateSeries(data);\n    }\n\n    this._groupSeries();\n\n    var parsedData = validateData(data, this._groupsData, this._incidentOccurred, dataValidatorOptions);\n    themeManager.resetPalette();\n    this.series.forEach(function (singleSeries) {\n      singleSeries.updateData(parsedData[singleSeries.getArgumentField()]);\n    });\n\n    this._handleSeriesDataUpdated();\n  },\n  _renderCompleteHandler: function () {\n    var allSeriesInited = true;\n\n    if (this._needHandleRenderComplete) {\n      _each(this.series, function (_, s) {\n        allSeriesInited = allSeriesInited && s.canRenderCompleteHandle();\n      });\n\n      if (allSeriesInited) {\n        this._needHandleRenderComplete = false;\n\n        this._eventTrigger(\"done\", {\n          target: this\n        });\n      }\n    }\n  },\n  _dataIsReady: function () {\n    return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded();\n  },\n\n  _populateSeriesOptions(data) {\n    var that = this;\n    var themeManager = that._themeManager;\n    var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\n    var seriesOptions = seriesTemplate ? processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\n    var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\n\n    var extraOptions = that._getExtraOptions();\n\n    var particularSeriesOptions;\n    var seriesTheme;\n    var seriesThemes = [];\n\n    var seriesVisibilityChanged = target => {\n      that._specialProcessSeries();\n\n      that._populateBusinessRange(target && target.getValueAxis(), true);\n\n      that._renderer.stopAllAnimations(true);\n\n      that._updateLegend();\n\n      that._requestChange([\"FULL_RENDER\"]);\n    };\n\n    for (var i = 0; i < allSeriesOptions.length; i++) {\n      particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\n\n      if (!_isDefined(particularSeriesOptions.name) || \"\" === particularSeriesOptions.name) {\n        particularSeriesOptions.name = \"Series \" + (i + 1).toString();\n      }\n\n      particularSeriesOptions.rotated = that._isRotated();\n      particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\n      particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\n      particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\n      particularSeriesOptions.incidentOccurred = that._incidentOccurred;\n      seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\n\n      if (that._checkPaneName(seriesTheme)) {\n        seriesThemes.push(seriesTheme);\n      }\n    }\n\n    return seriesThemes;\n  },\n\n  _populateSeries(data) {\n    var _that$series2;\n\n    var that = this;\n    var seriesBasis = [];\n    var incidentOccurred = that._incidentOccurred;\n\n    var seriesThemes = that._populateSeriesOptions(data);\n\n    var particularSeries;\n    var disposeSeriesFamilies = false;\n    that.needToPopulateSeries = false;\n\n    _each(seriesThemes, (_, theme) => {\n      var curSeries = that.series && that.series.filter(s => s.name === theme.name && -1 === seriesBasis.map(sb => sb.series).indexOf(s))[0];\n\n      if (curSeries && curSeries.type === theme.type) {\n        seriesBasis.push({\n          series: curSeries,\n          options: theme\n        });\n      } else {\n        seriesBasis.push({\n          options: theme\n        });\n        disposeSeriesFamilies = true;\n      }\n    });\n\n    0 !== (null === (_that$series2 = that.series) || void 0 === _that$series2 ? void 0 : _that$series2.length) && that._tracker.clearHover();\n\n    _reverseEach(that.series, (index, series) => {\n      if (!seriesBasis.some(s => series === s.series)) {\n        that._disposeSeries(index);\n\n        disposeSeriesFamilies = true;\n      }\n    });\n\n    !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(sb => sb.series.name !== seriesThemes[sb.series.index].name));\n    that.series = [];\n    disposeSeriesFamilies && that._disposeSeriesFamilies();\n\n    that._themeManager.resetPalette();\n\n    var eventPipe = function (data) {\n      that.series.forEach(function (currentSeries) {\n        currentSeries.notify(data);\n      });\n    };\n\n    _each(seriesBasis, (_, basis) => {\n      var _that$_argumentAxes$f, _that$_argumentAxes;\n\n      var seriesTheme = basis.options;\n      var argumentAxis = null !== (_that$_argumentAxes$f = null === (_that$_argumentAxes = that._argumentAxes) || void 0 === _that$_argumentAxes ? void 0 : _that$_argumentAxes.filter(a => a.pane === seriesTheme.pane)[0]) && void 0 !== _that$_argumentAxes$f ? _that$_argumentAxes$f : that.getArgumentAxis();\n      var renderSettings = {\n        commonSeriesModes: that._getSelectionModes(),\n        argumentAxis: argumentAxis,\n        valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\n      };\n\n      if (basis.series) {\n        particularSeries = basis.series;\n        particularSeries.updateOptions(seriesTheme, renderSettings);\n      } else {\n        particularSeries = new Series(extend({\n          renderer: that._renderer,\n          seriesGroup: that._seriesGroup,\n          labelsGroup: that._labelsGroup,\n          eventTrigger: that._eventTrigger,\n          eventPipe: eventPipe,\n          incidentOccurred: incidentOccurred\n        }, renderSettings), seriesTheme);\n      }\n\n      if (!particularSeries.isUpdated) {\n        incidentOccurred(\"E2101\", [seriesTheme.type]);\n      } else {\n        particularSeries.index = that.series.length;\n        that.series.push(particularSeries);\n      }\n    });\n\n    return that.series;\n  },\n\n  getStackedPoints: function (point) {\n    var stackName = point.series.getStackName();\n    return this._getVisibleSeries().reduce((stackPoints, series) => {\n      if (!_isDefined(series.getStackName()) || !_isDefined(stackName) || stackName === series.getStackName()) {\n        stackPoints = stackPoints.concat(series.getPointsByArg(point.argument));\n      }\n\n      return stackPoints;\n    }, []);\n  },\n  getAllSeries: function () {\n    return (this.series || []).slice();\n  },\n  getSeriesByName: function (name) {\n    var found = null;\n\n    _each(this.series, function (i, singleSeries) {\n      if (singleSeries.name === name) {\n        found = singleSeries;\n        return false;\n      }\n    });\n\n    return found;\n  },\n  getSeriesByPos: function (pos) {\n    return (this.series || [])[pos];\n  },\n  clearSelection: function () {\n    this._tracker.clearSelection();\n  },\n  hideTooltip: function () {\n    this._tracker._hideTooltip();\n  },\n\n  clearHover() {\n    this._tracker.clearHover();\n  },\n\n  render: function (renderOptions) {\n    var that = this;\n    that.__renderOptions = renderOptions;\n    that.__forceRender = renderOptions && renderOptions.force;\n    that.callBase.apply(that, arguments);\n    that.__renderOptions = that.__forceRender = null;\n    return that;\n  },\n  refresh: function () {\n    this._disposeSeries();\n\n    this._disposeSeriesFamilies();\n\n    this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"]);\n  },\n\n  _getMinSize() {\n    var adaptiveLayout = this._layoutManagerOptions();\n\n    return [adaptiveLayout.width, adaptiveLayout.height];\n  },\n\n  _change_REFRESH() {\n    if (!this._changes.has(\"INIT\")) {\n      this._doRefresh();\n    } else {\n      this._currentRefreshData = null;\n    }\n  },\n\n  _change_FULL_RENDER() {\n    this._forceRender();\n  },\n\n  _change_INIT() {\n    this._reinit();\n  },\n\n  _stopCurrentHandling: function () {\n    this._tracker.stopCurrentHandling();\n  }\n});\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\";\n});\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\";\n});\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach(function (name) {\n  BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\";\n});\nimport { plugin as exportPlugin } from \"../core/export\";\nimport { plugin as titlePlugin } from \"../core/title\";\nimport { plugin as dataSourcePlugin } from \"../core/data_source\";\nimport { plugin as tooltipPlugin } from \"../core/tooltip\";\nimport { plugin as loadingIndicatorPlugin } from \"../core/loading_indicator\";\nBaseChart.addPlugin(exportPlugin);\nBaseChart.addPlugin(titlePlugin);\nBaseChart.addPlugin(dataSourcePlugin);\nBaseChart.addPlugin(tooltipPlugin);\nBaseChart.addPlugin(loadingIndicatorPlugin);\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\n\nBaseChart.prototype._change_TITLE = function () {\n  _change_TITLE.apply(this, arguments);\n\n  this._change([\"FORCE_RENDER\"]);\n};","map":{"version":3,"names":["noop","grep","eventsEngine","isDefined","_isDefined","isFunction","each","_each","reverseEach","_reverseEach","extend","isTouchEvent","isPointerEvent","BaseWidget","Legend","validateData","Series","ThemeManager","LayoutManager","trackerModule","map","_map","setCanvasValues","_setCanvasValues","processSeriesTemplate","_isArray","Array","isArray","REINIT_REFRESH_ACTION","REINIT_DATA_SOURCE_REFRESH_ACTION","DATA_INIT_REFRESH_ACTION","FORCE_RENDER_REFRESH_ACTION","RESIZE_REFRESH_ACTION","ACTIONS_BY_PRIORITY","DEFAULT_OPACITY","REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS","REFRESH_SERIES_FAMILIES_ACTION_OPTIONS","FORCE_RENDER_REFRESH_ACTION_OPTIONS","FONT","checkHeightRollingStock","rollingStocks","stubCanvas","canvasSize","end","start","size","forEach","rollingStock","getBoundingRect","width","findAndKillSmallValue","smallestObject","reduce","prev","index","value","getLabels","draw","checkStackOverlap","i","j","iLength","jLength","overlap","length","checkStacksOverlapping","resolveLabelOverlappingInOneDirection","points","canvas","isRotated","isInverted","shiftFunction","customSorting","arguments","left","top","right","height","bottom","hasStackedSeries","sortRollingStocks","p","series","isStackedSeries","isFullStackedSeries","l","isVisible","push","RollingStock","reverse","sortRollingStocksByValue","rollingStocksTmp","slice","sort","a","b","getInitialPosition","indexOf","prepareOverlapStacks","moveRollingStock","firstRolling","secondRolling","inTwoSides","firstRect","secondRect","oppositeOverlapping","oppositeStart","oppositeEnd","positiveRollingStocks","negativeRollingStocks","stock","unshift","concat","currentRollingStock","root","toChain","nextRollingStock","currentBBox","nextBBox","rollingStocksIsOut","setRollingStockInCanvas","label","bBox","x","y","endX","endY","labels","_bBox","_initialPosition","prototype","nextRollingStockBBox","shift","_changeBoxWidth","shiftLength","coords","hideInsideLabel","getData","getLegendFields","name","nameField","colorField","indexField","getLegendSettings","legendDataField","formatObjectFields","getFormatObject","data","res","id","states","normal","fill","text","textField","checkOverlapping","overlapping","BaseChart","inherit","_eventsMap","onSeriesClick","onPointClick","onArgumentAxisClick","onLegendClick","onSeriesSelectionChanged","onPointSelectionChanged","onSeriesHoverChanged","onPointHoverChanged","onDone","actionSettings","excludeValidators","onZoomStart","onZoomEnd","_fontFields","_rootClassPrefix","_rootClass","_initialChanges","_themeDependentChanges","_getThemeManagerOptions","themeOptions","callBase","apply","options","option","_createThemeManager","chartOption","themeManager","setTheme","theme","rtlEnabled","_initCore","_canvasClipRect","_renderer","clipRect","_createHtmlStructure","_createLegend","_createTracker","_needHandleRenderComplete","layoutManager","_createScrollBar","on","_$element","event","preventDefault","_getLayoutItems","_layoutManagerOptions","_themeManager","getOptions","_reinit","_canvas","_reinitAxes","_requestChange","_correctAxes","that","renderer","createConstantLinesGroup","g","attr","class","linkOn","_constantLinesGroup","dispose","under","above","linkOff","clear","linkRemove","linkAppend","_labelsAxesGroup","appendLabelsAxesGroup","_backgroundRect","rect","opacity","append","_panesBackgroundGroup","_stripsGroup","_gridGroup","_panesBorderGroup","_axesGroup","_executeAppendBeforeSeries","_stripLabelAxesGroup","_seriesGroup","_executeAppendAfterSeries","_scaleBreaksGroup","_labelsGroup","_crosshairCursorGroup","_legendGroup","_getCanvasClipRectID","enableLinks","_scrollBarGroup","_disposeObjectsInArray","propName","fieldNames","_","item","field","_disposeCore","disposeObject","unlinkGroup","disposeObjectsInArray","stopAllAnimations","call","_userOptions","_groupsData","_getAnimationOptions","_getDefaultSize","_getOption","_applySize","_rect","_changes","has","_processRefreshData","_resize","_doRender","__renderOptions","animate","isResize","_trackerType","_tracker","seriesGroup","tooltip","_tooltip","legend","_legend","eventTrigger","_eventTrigger","_getTrackerSettings","chart","_getSelectionModes","seriesSelectionMode","pointSelectionMode","_updateTracker","trackerCanvases","update","setCanvases","_createCanvasFromRect","currentCanvas","_options","_resetIsReady","drawOptions","_prepareDrawOptions","recreateCanvas","_preserveOriginalCanvas","__currentCanvas","_updateCanvasClipRect","_cleanGroups","startTime","Date","_renderElements","_lastRenderingTime","__originalCanvas","_layoutAxes","preparedOptions","_prepareToRender","_isRotated","isLegendInside","_isLegendInside","argBusinessRange","zoomMinArg","zoomMaxArg","lock","drawLegend","setOptions","layoutTargets","_getLayoutTargets","needSpace","axisDrawOptions","_renderAxes","_shrinkAxes","_applyClipRects","_appendSeriesGroups","_createCrosshairCursor","_ref","_scrollBar","_argumentAxes","getTranslator","getBusinessRange","axisType","categories","min","max","minVisible","maxVisible","init","valueMarginsEnabled","setPosition","_updateLegendPosition","_applyPointMarkersAutoHiding","_renderSeries","unlock","_appendAdditionalSeriesGroups","_calculateSeriesLayout","_renderSeriesElements","hideLayoutLabels","needMoreSpaceForPanesCanvas","keepLabels","_updateSeriesDimensions","_getArgFilter","_getValFilter","_getPointsToAnimation","argViewPortFilter","s","valViewPortFilter","getPoints","filter","visible","argument","getMinValue","getMaxValue","singleSeries","seriesLength","resolveLabelOverlapping","pointsToAnimation","_applyExtraSettings","animationPointsLimit","animationEnabled","_getLegendCallBack","_adjustSeriesLabels","_locateLabels","_renderTrackers","repairTooltip","_renderExtraElements","_clearCanvas","_seriesElementsDrawn","_changesApplied","_drawn","_renderCompleteHandler","_resolveLabelOverlapping","func","_resolveLabelOverlappingStack","_resolveLabelOverlappingHide","_resolveLabelOverlappingShift","_getVisibleSeries","getAllSeries","currentLabel","nextLabel","currentLabelRect","nextLabelRect","getVisiblePoints","_allowLegendInsidePosition","legendSettings","_legendDataField","widget","group","backgroundClass","itemGroupClass","titleGroupClass","allowInsidePosition","_updateLegend","_layout","add","legendOptions","legendData","_getLegendData","containerBackgroundColor","_incidentOccurred","title","_change","animationOptions","force","adjustAxes","drawTitle","enabled","maxPointCountSupported","newRefreshAction","currentRefreshActionPosition","_currentRefreshData","newRefreshActionPosition","_getLegendTargets","style","getLegendStyles","textOpacity","opacityStyle","hover","selection","_getLegendOptions","_legendItemTextField","_disposeSeries","seriesIndex","_that$series","splice","_disposeSeriesFamilies","seriesFamilies","family","_optionChanged","arg","resetOptions","_applyChanges","silent","_optionChangesMap","animation","dataSource","palette","paletteExtensionMode","seriesTemplate","export","valueAxis","argumentAxis","commonAxisSettings","panes","commonPaneSettings","defaultPane","rotated","autoHidePointMarkers","customizePoint","customizeLabel","scrollBar","_optionChangesOrder","_customChangesOrder","_change_ANIMATION","updateAnimationOptions","_change_DATA_SOURCE","_updateDataSource","_change_PALETTE","updatePalette","_refreshSeries","_change_REFRESH_SERIES_DATA_INIT","_change_DATA_INIT","needToPopulateSeries","_dataInit","_change_FORCE_DATA_INIT","_change_REFRESH_SERIES_FAMILIES","_processSeriesFamilies","_populateBusinessRange","_change_FORCE_RENDER","_change_AXES_AND_PANES","_change_ROTATED","_change_REFRESH_SERIES_REINIT","_change_REFRESH_AXES","_change_SCROLL_BAR","_change_REINIT","_change_FORCE_DRAWING","_resetComponentsAnimation","_change_FORCE_FIRST_DRAWING","isFirstDrawing","resetApplyingAnimation","_resetAxesAnimation","actionName","_change_CORRECT_AXIS","_doRefresh","methodName","Math","_dataSourceChangedHandler","_dataSpecificInit","_processSingleSeries","createPoints","_handleSeriesDataUpdated","some","useAggregation","_populateMarginOptions","needRedraw","_populateSeries","_repopulateSeries","_seriesPopulatedHandlerCore","updateSeries","_forceRender","_dataSourceItems","dataValidatorOptions","_groupSeries","parsedData","resetPalette","updateData","getArgumentField","allSeriesInited","canRenderCompleteHandle","target","_dataIsReady","_dataIsLoaded","_populateSeriesOptions","seriesOptions","allSeriesOptions","extraOptions","_getExtraOptions","particularSeriesOptions","seriesTheme","seriesThemes","seriesVisibilityChanged","_specialProcessSeries","getValueAxis","toString","visibilityChanged","incidentOccurred","_checkPaneName","_that$series2","seriesBasis","particularSeries","disposeSeriesFamilies","curSeries","sb","type","clearHover","eventPipe","currentSeries","notify","basis","_that$_argumentAxes$f","_that$_argumentAxes","pane","getArgumentAxis","renderSettings","commonSeriesModes","_getValueAxis","axis","updateOptions","labelsGroup","isUpdated","getStackedPoints","point","stackName","getStackName","stackPoints","getPointsByArg","getSeriesByName","found","getSeriesByPos","pos","clearSelection","hideTooltip","_hideTooltip","render","renderOptions","__forceRender","refresh","_getMinSize","adaptiveLayout","_change_REFRESH","_change_FULL_RENDER","_change_INIT","_stopCurrentHandling","stopCurrentHandling","plugin","exportPlugin","titlePlugin","dataSourcePlugin","tooltipPlugin","loadingIndicatorPlugin","addPlugin","_change_TITLE"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/chart_components/base_chart.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/chart_components/base_chart.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    noop,\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined as _isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each as _each,\r\n    reverseEach as _reverseEach\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isTouchEvent,\r\n    isPointerEvent\r\n} from \"../../events/utils/index\";\r\nimport BaseWidget from \"../core/base_widget\";\r\nimport {\r\n    Legend\r\n} from \"../components/legend\";\r\nimport {\r\n    validateData\r\n} from \"../components/data_validator\";\r\nimport {\r\n    Series\r\n} from \"../series/base_series\";\r\nimport {\r\n    ThemeManager\r\n} from \"../components/chart_theme_manager\";\r\nimport {\r\n    LayoutManager\r\n} from \"./layout_manager\";\r\nimport * as trackerModule from \"./tracker\";\r\nimport {\r\n    map as _map,\r\n    setCanvasValues as _setCanvasValues,\r\n    processSeriesTemplate\r\n} from \"../core/utils\";\r\nvar _isArray = Array.isArray;\r\nvar REINIT_REFRESH_ACTION = \"_reinit\";\r\nvar REINIT_DATA_SOURCE_REFRESH_ACTION = \"_updateDataSource\";\r\nvar DATA_INIT_REFRESH_ACTION = \"_dataInit\";\r\nvar FORCE_RENDER_REFRESH_ACTION = \"_forceRender\";\r\nvar RESIZE_REFRESH_ACTION = \"_resize\";\r\nvar ACTIONS_BY_PRIORITY = [REINIT_REFRESH_ACTION, REINIT_DATA_SOURCE_REFRESH_ACTION, DATA_INIT_REFRESH_ACTION, FORCE_RENDER_REFRESH_ACTION, RESIZE_REFRESH_ACTION];\r\nvar DEFAULT_OPACITY = .3;\r\nvar REFRESH_SERIES_DATA_INIT_ACTION_OPTIONS = [\"series\", \"commonSeriesSettings\", \"dataPrepareSettings\", \"seriesSelectionMode\", \"pointSelectionMode\", \"synchronizeMultiAxes\", \"resolveLabelsOverlapping\"];\r\nvar REFRESH_SERIES_FAMILIES_ACTION_OPTIONS = [\"minBubbleSize\", \"maxBubbleSize\", \"barGroupPadding\", \"barGroupWidth\", \"negativesAsZeroes\", \"negativesAsZeros\"];\r\nvar FORCE_RENDER_REFRESH_ACTION_OPTIONS = [\"adaptiveLayout\", \"crosshair\", \"resolveLabelOverlapping\", \"adjustOnZoom\", \"stickyHovering\"];\r\nvar FONT = \"font\";\r\n\r\nfunction checkHeightRollingStock(rollingStocks, stubCanvas) {\r\n    var canvasSize = stubCanvas.end - stubCanvas.start;\r\n    var size = 0;\r\n    rollingStocks.forEach((function(rollingStock) {\r\n        size += rollingStock.getBoundingRect().width\r\n    }));\r\n    while (canvasSize < size) {\r\n        size -= findAndKillSmallValue(rollingStocks)\r\n    }\r\n}\r\n\r\nfunction findAndKillSmallValue(rollingStocks) {\r\n    var smallestObject = rollingStocks.reduce((function(prev, rollingStock, index) {\r\n        if (!rollingStock) {\r\n            return prev\r\n        }\r\n        var value = rollingStock.value();\r\n        return value < prev.value ? {\r\n            value: value,\r\n            rollingStock: rollingStock,\r\n            index: index\r\n        } : prev\r\n    }), {\r\n        rollingStock: void 0,\r\n        value: 1 / 0,\r\n        index: void 0\r\n    });\r\n    smallestObject.rollingStock.getLabels()[0].draw(false);\r\n    var width = smallestObject.rollingStock.getBoundingRect().width;\r\n    rollingStocks[smallestObject.index] = null;\r\n    return width\r\n}\r\n\r\nfunction checkStackOverlap(rollingStocks) {\r\n    var i;\r\n    var j;\r\n    var iLength;\r\n    var jLength;\r\n    var overlap = false;\r\n    for (i = 0, iLength = rollingStocks.length - 1; i < iLength; i++) {\r\n        for (j = i + 1, jLength = rollingStocks.length; j < jLength; j++) {\r\n            if (i !== j && checkStacksOverlapping(rollingStocks[i], rollingStocks[j], true)) {\r\n                overlap = true;\r\n                break\r\n            }\r\n        }\r\n        if (overlap) {\r\n            break\r\n        }\r\n    }\r\n    return overlap\r\n}\r\n\r\nfunction resolveLabelOverlappingInOneDirection(points, canvas, isRotated, isInverted, shiftFunction) {\r\n    var customSorting = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : () => 0;\r\n    var rollingStocks = [];\r\n    var stubCanvas = {\r\n        start: isRotated ? canvas.left : canvas.top,\r\n        end: isRotated ? canvas.width - canvas.right : canvas.height - canvas.bottom\r\n    };\r\n    var hasStackedSeries = false;\r\n    var sortRollingStocks;\r\n    points.forEach((function(p) {\r\n        if (!p) {\r\n            return\r\n        }\r\n        hasStackedSeries = hasStackedSeries || p.series.isStackedSeries() || p.series.isFullStackedSeries();\r\n        p.getLabels().forEach((function(l) {\r\n            l.isVisible() && rollingStocks.push(new RollingStock(l, isRotated, shiftFunction))\r\n        }))\r\n    }));\r\n    if (hasStackedSeries) {\r\n        !isRotated ^ isInverted && rollingStocks.reverse();\r\n        sortRollingStocks = !isInverted ? sortRollingStocksByValue(rollingStocks) : rollingStocks\r\n    } else {\r\n        var rollingStocksTmp = rollingStocks.slice();\r\n        sortRollingStocks = rollingStocks.sort((function(a, b) {\r\n            return customSorting(a, b) || a.getInitialPosition() - b.getInitialPosition() || rollingStocksTmp.indexOf(a) - rollingStocksTmp.indexOf(b)\r\n        }))\r\n    }\r\n    if (!checkStackOverlap(sortRollingStocks)) {\r\n        return false\r\n    }\r\n    checkHeightRollingStock(sortRollingStocks, stubCanvas);\r\n    prepareOverlapStacks(sortRollingStocks);\r\n    sortRollingStocks.reverse();\r\n    moveRollingStock(sortRollingStocks, stubCanvas);\r\n    return true\r\n}\r\n\r\nfunction checkStacksOverlapping(firstRolling, secondRolling, inTwoSides) {\r\n    if (!firstRolling || !secondRolling) {\r\n        return\r\n    }\r\n    var firstRect = firstRolling.getBoundingRect();\r\n    var secondRect = secondRolling.getBoundingRect();\r\n    var oppositeOverlapping = inTwoSides ? firstRect.oppositeStart <= secondRect.oppositeStart && firstRect.oppositeEnd > secondRect.oppositeStart || secondRect.oppositeStart <= firstRect.oppositeStart && secondRect.oppositeEnd > firstRect.oppositeStart : true;\r\n    return firstRect.end > secondRect.start && oppositeOverlapping\r\n}\r\n\r\nfunction sortRollingStocksByValue(rollingStocks) {\r\n    var positiveRollingStocks = [];\r\n    var negativeRollingStocks = [];\r\n    rollingStocks.forEach(stock => {\r\n        if (stock.value() > 0) {\r\n            positiveRollingStocks.push(stock)\r\n        } else {\r\n            negativeRollingStocks.unshift(stock)\r\n        }\r\n    });\r\n    return positiveRollingStocks.concat(negativeRollingStocks)\r\n}\r\n\r\nfunction prepareOverlapStacks(rollingStocks) {\r\n    var i;\r\n    var currentRollingStock;\r\n    var root;\r\n    for (i = 0; i < rollingStocks.length - 1; i++) {\r\n        currentRollingStock = root || rollingStocks[i];\r\n        if (checkStacksOverlapping(currentRollingStock, rollingStocks[i + 1])) {\r\n            currentRollingStock.toChain(rollingStocks[i + 1]);\r\n            rollingStocks[i + 1] = null;\r\n            root = currentRollingStock\r\n        } else {\r\n            root = rollingStocks[i + 1] || currentRollingStock\r\n        }\r\n    }\r\n}\r\n\r\nfunction moveRollingStock(rollingStocks, canvas) {\r\n    var i;\r\n    var j;\r\n    var currentRollingStock;\r\n    var nextRollingStock;\r\n    var currentBBox;\r\n    var nextBBox;\r\n    for (i = 0; i < rollingStocks.length; i++) {\r\n        currentRollingStock = rollingStocks[i];\r\n        if (rollingStocksIsOut(currentRollingStock, canvas)) {\r\n            currentBBox = currentRollingStock.getBoundingRect();\r\n            for (j = i + 1; j < rollingStocks.length; j++) {\r\n                nextRollingStock = rollingStocks[j];\r\n                if (!nextRollingStock) {\r\n                    continue\r\n                }\r\n                nextBBox = nextRollingStock.getBoundingRect();\r\n                if (nextBBox.end > currentBBox.start - (currentBBox.end - canvas.end)) {\r\n                    nextRollingStock.toChain(currentRollingStock);\r\n                    rollingStocks[i] = currentRollingStock = null;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        currentRollingStock && currentRollingStock.setRollingStockInCanvas(canvas)\r\n    }\r\n}\r\n\r\nfunction rollingStocksIsOut(rollingStock, canvas) {\r\n    return rollingStock && rollingStock.getBoundingRect().end > canvas.end\r\n}\r\n\r\nfunction RollingStock(label, isRotated, shiftFunction) {\r\n    var bBox = label.getBoundingRect();\r\n    var x = bBox.x;\r\n    var y = bBox.y;\r\n    var endX = bBox.x + bBox.width;\r\n    var endY = bBox.y + bBox.height;\r\n    this.labels = [label];\r\n    this.shiftFunction = shiftFunction;\r\n    this._bBox = {\r\n        start: isRotated ? x : y,\r\n        width: isRotated ? bBox.width : bBox.height,\r\n        end: isRotated ? endX : endY,\r\n        oppositeStart: isRotated ? y : x,\r\n        oppositeEnd: isRotated ? endY : endX\r\n    };\r\n    this._initialPosition = isRotated ? bBox.x : bBox.y;\r\n    return this\r\n}\r\nRollingStock.prototype = {\r\n    toChain: function(nextRollingStock) {\r\n        var nextRollingStockBBox = nextRollingStock.getBoundingRect();\r\n        nextRollingStock.shift(nextRollingStockBBox.start - this._bBox.end);\r\n        this._changeBoxWidth(nextRollingStockBBox.width);\r\n        this.labels = this.labels.concat(nextRollingStock.labels)\r\n    },\r\n    getBoundingRect: function() {\r\n        return this._bBox\r\n    },\r\n    shift: function(shiftLength) {\r\n        var shiftFunction = this.shiftFunction;\r\n        _each(this.labels, (function(index, label) {\r\n            var bBox = label.getBoundingRect();\r\n            var coords = shiftFunction(bBox, shiftLength);\r\n            if (!label.hideInsideLabel(coords)) {\r\n                label.shift(coords.x, coords.y)\r\n            }\r\n        }));\r\n        this._bBox.end -= shiftLength;\r\n        this._bBox.start -= shiftLength\r\n    },\r\n    setRollingStockInCanvas: function(canvas) {\r\n        if (this._bBox.end > canvas.end) {\r\n            this.shift(this._bBox.end - canvas.end)\r\n        }\r\n    },\r\n    getLabels: function() {\r\n        return this.labels\r\n    },\r\n    value() {\r\n        return this.labels[0].getData().value\r\n    },\r\n    getInitialPosition: function() {\r\n        return this._initialPosition\r\n    },\r\n    _changeBoxWidth: function(width) {\r\n        this._bBox.end += width;\r\n        this._bBox.width += width\r\n    }\r\n};\r\n\r\nfunction getLegendFields(name) {\r\n    return {\r\n        nameField: name + \"Name\",\r\n        colorField: name + \"Color\",\r\n        indexField: name + \"Index\"\r\n    }\r\n}\r\n\r\nfunction getLegendSettings(legendDataField) {\r\n    var formatObjectFields = getLegendFields(legendDataField);\r\n    return {\r\n        getFormatObject: function(data) {\r\n            var res = {};\r\n            res[formatObjectFields.indexField] = data.id;\r\n            res[formatObjectFields.colorField] = data.states.normal.fill;\r\n            res[formatObjectFields.nameField] = data.text;\r\n            return res\r\n        },\r\n        textField: formatObjectFields.nameField\r\n    }\r\n}\r\n\r\nfunction checkOverlapping(firstRect, secondRect) {\r\n    return (firstRect.x <= secondRect.x && secondRect.x <= firstRect.x + firstRect.width || firstRect.x >= secondRect.x && firstRect.x <= secondRect.x + secondRect.width) && (firstRect.y <= secondRect.y && secondRect.y <= firstRect.y + firstRect.height || firstRect.y >= secondRect.y && firstRect.y <= secondRect.y + secondRect.height)\r\n}\r\nexport var overlapping = {\r\n    resolveLabelOverlappingInOneDirection: resolveLabelOverlappingInOneDirection\r\n};\r\nexport var BaseChart = BaseWidget.inherit({\r\n    _eventsMap: {\r\n        onSeriesClick: {\r\n            name: \"seriesClick\"\r\n        },\r\n        onPointClick: {\r\n            name: \"pointClick\"\r\n        },\r\n        onArgumentAxisClick: {\r\n            name: \"argumentAxisClick\"\r\n        },\r\n        onLegendClick: {\r\n            name: \"legendClick\"\r\n        },\r\n        onSeriesSelectionChanged: {\r\n            name: \"seriesSelectionChanged\"\r\n        },\r\n        onPointSelectionChanged: {\r\n            name: \"pointSelectionChanged\"\r\n        },\r\n        onSeriesHoverChanged: {\r\n            name: \"seriesHoverChanged\"\r\n        },\r\n        onPointHoverChanged: {\r\n            name: \"pointHoverChanged\"\r\n        },\r\n        onDone: {\r\n            name: \"done\",\r\n            actionSettings: {\r\n                excludeValidators: [\"disabled\"]\r\n            }\r\n        },\r\n        onZoomStart: {\r\n            name: \"zoomStart\"\r\n        },\r\n        onZoomEnd: {\r\n            name: \"zoomEnd\"\r\n        }\r\n    },\r\n    _fontFields: [\"legend.\" + FONT, \"legend.title.\" + FONT, \"legend.title.subtitle.\" + FONT, \"commonSeriesSettings.label.\" + FONT],\r\n    _rootClassPrefix: \"dxc\",\r\n    _rootClass: \"dxc-chart\",\r\n    _initialChanges: [\"INIT\"],\r\n    _themeDependentChanges: [\"REFRESH_SERIES_REINIT\"],\r\n    _getThemeManagerOptions() {\r\n        var themeOptions = this.callBase.apply(this, arguments);\r\n        themeOptions.options = this.option();\r\n        return themeOptions\r\n    },\r\n    _createThemeManager: function() {\r\n        var chartOption = this.option();\r\n        var themeManager = new ThemeManager(this._getThemeManagerOptions());\r\n        themeManager.setTheme(chartOption.theme, chartOption.rtlEnabled);\r\n        return themeManager\r\n    },\r\n    _initCore: function() {\r\n        this._canvasClipRect = this._renderer.clipRect();\r\n        this._createHtmlStructure();\r\n        this._createLegend();\r\n        this._createTracker();\r\n        this._needHandleRenderComplete = true;\r\n        this.layoutManager = new LayoutManager;\r\n        this._createScrollBar();\r\n        eventsEngine.on(this._$element, \"contextmenu\", (function(event) {\r\n            if (isTouchEvent(event) || isPointerEvent(event)) {\r\n                event.preventDefault()\r\n            }\r\n        }));\r\n        eventsEngine.on(this._$element, \"MSHoldVisual\", (function(event) {\r\n            event.preventDefault()\r\n        }))\r\n    },\r\n    _getLayoutItems: noop,\r\n    _layoutManagerOptions: function() {\r\n        return this._themeManager.getOptions(\"adaptiveLayout\")\r\n    },\r\n    _reinit() {\r\n        _setCanvasValues(this._canvas);\r\n        this._reinitAxes();\r\n        this._requestChange([\"DATA_SOURCE\", \"DATA_INIT\", \"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _correctAxes: noop,\r\n    _createHtmlStructure: function() {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var root = renderer.root;\r\n        var createConstantLinesGroup = function() {\r\n            return renderer.g().attr({\r\n                class: \"dxc-constant-lines-group\"\r\n            }).linkOn(root, \"constant-lines\")\r\n        };\r\n        that._constantLinesGroup = {\r\n            dispose: function() {\r\n                this.under.dispose();\r\n                this.above.dispose()\r\n            },\r\n            linkOff: function() {\r\n                this.under.linkOff();\r\n                this.above.linkOff()\r\n            },\r\n            clear: function() {\r\n                this.under.linkRemove().clear();\r\n                this.above.linkRemove().clear()\r\n            },\r\n            linkAppend: function() {\r\n                this.under.linkAppend();\r\n                this.above.linkAppend()\r\n            }\r\n        };\r\n        that._labelsAxesGroup = renderer.g().attr({\r\n            class: \"dxc-elements-axes-group\"\r\n        });\r\n        var appendLabelsAxesGroup = () => {\r\n            that._labelsAxesGroup.linkOn(root, \"elements\")\r\n        };\r\n        that._backgroundRect = renderer.rect().attr({\r\n            fill: \"gray\",\r\n            opacity: 1e-4\r\n        }).append(root);\r\n        that._panesBackgroundGroup = renderer.g().attr({\r\n            class: \"dxc-background\"\r\n        }).append(root);\r\n        that._stripsGroup = renderer.g().attr({\r\n            class: \"dxc-strips-group\"\r\n        }).linkOn(root, \"strips\");\r\n        that._gridGroup = renderer.g().attr({\r\n            class: \"dxc-grids-group\"\r\n        }).linkOn(root, \"grids\");\r\n        that._panesBorderGroup = renderer.g().attr({\r\n            class: \"dxc-border\"\r\n        }).linkOn(root, \"border\");\r\n        that._axesGroup = renderer.g().attr({\r\n            class: \"dxc-axes-group\"\r\n        }).linkOn(root, \"axes\");\r\n        that._executeAppendBeforeSeries(appendLabelsAxesGroup);\r\n        that._stripLabelAxesGroup = renderer.g().attr({\r\n            class: \"dxc-strips-labels-group\"\r\n        }).linkOn(root, \"strips-labels\");\r\n        that._constantLinesGroup.under = createConstantLinesGroup();\r\n        that._seriesGroup = renderer.g().attr({\r\n            class: \"dxc-series-group\"\r\n        }).linkOn(root, \"series\");\r\n        that._executeAppendAfterSeries(appendLabelsAxesGroup);\r\n        that._constantLinesGroup.above = createConstantLinesGroup();\r\n        that._scaleBreaksGroup = renderer.g().attr({\r\n            class: \"dxc-scale-breaks\"\r\n        }).linkOn(root, \"scale-breaks\");\r\n        that._labelsGroup = renderer.g().attr({\r\n            class: \"dxc-labels-group\"\r\n        }).linkOn(root, \"labels\");\r\n        that._crosshairCursorGroup = renderer.g().attr({\r\n            class: \"dxc-crosshair-cursor\"\r\n        }).linkOn(root, \"crosshair\");\r\n        that._legendGroup = renderer.g().attr({\r\n            class: \"dxc-legend\",\r\n            \"clip-path\": that._getCanvasClipRectID()\r\n        }).linkOn(root, \"legend\").linkAppend(root).enableLinks();\r\n        that._scrollBarGroup = renderer.g().attr({\r\n            class: \"dxc-scroll-bar\"\r\n        }).linkOn(root, \"scroll-bar\")\r\n    },\r\n    _executeAppendBeforeSeries() {},\r\n    _executeAppendAfterSeries() {},\r\n    _disposeObjectsInArray: function(propName, fieldNames) {\r\n        _each(this[propName] || [], (function(_, item) {\r\n            if (fieldNames && item) {\r\n                _each(fieldNames, (function(_, field) {\r\n                    item[field] && item[field].dispose()\r\n                }))\r\n            } else {\r\n                item && item.dispose()\r\n            }\r\n        }));\r\n        this[propName] = null\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        var disposeObject = function(propName) {\r\n            if (that[propName]) {\r\n                that[propName].dispose();\r\n                that[propName] = null\r\n            }\r\n        };\r\n        var unlinkGroup = function(name) {\r\n            that[name].linkOff()\r\n        };\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        that._renderer.stopAllAnimations();\r\n        disposeObjectsInArray.call(that, \"series\");\r\n        disposeObject(\"_tracker\");\r\n        disposeObject(\"_crosshair\");\r\n        that.layoutManager = that._userOptions = that._canvas = that._groupsData = null;\r\n        unlinkGroup(\"_stripsGroup\");\r\n        unlinkGroup(\"_gridGroup\");\r\n        unlinkGroup(\"_axesGroup\");\r\n        unlinkGroup(\"_constantLinesGroup\");\r\n        unlinkGroup(\"_stripLabelAxesGroup\");\r\n        unlinkGroup(\"_panesBorderGroup\");\r\n        unlinkGroup(\"_seriesGroup\");\r\n        unlinkGroup(\"_labelsGroup\");\r\n        unlinkGroup(\"_crosshairCursorGroup\");\r\n        unlinkGroup(\"_legendGroup\");\r\n        unlinkGroup(\"_scrollBarGroup\");\r\n        unlinkGroup(\"_scaleBreaksGroup\");\r\n        disposeObject(\"_canvasClipRect\");\r\n        disposeObject(\"_panesBackgroundGroup\");\r\n        disposeObject(\"_backgroundRect\");\r\n        disposeObject(\"_stripsGroup\");\r\n        disposeObject(\"_gridGroup\");\r\n        disposeObject(\"_axesGroup\");\r\n        disposeObject(\"_constantLinesGroup\");\r\n        disposeObject(\"_stripLabelAxesGroup\");\r\n        disposeObject(\"_panesBorderGroup\");\r\n        disposeObject(\"_seriesGroup\");\r\n        disposeObject(\"_labelsGroup\");\r\n        disposeObject(\"_crosshairCursorGroup\");\r\n        disposeObject(\"_legendGroup\");\r\n        disposeObject(\"_scrollBarGroup\");\r\n        disposeObject(\"_scaleBreaksGroup\")\r\n    },\r\n    _getAnimationOptions: function() {\r\n        return this._themeManager.getOptions(\"animation\")\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 400,\r\n            height: 400\r\n        }\r\n    },\r\n    _getOption: function(name) {\r\n        return this._themeManager.getOptions(name)\r\n    },\r\n    _applySize: function(rect) {\r\n        this._rect = rect.slice();\r\n        if (!this._changes.has(\"FULL_RENDER\")) {\r\n            this._processRefreshData(RESIZE_REFRESH_ACTION)\r\n        }\r\n    },\r\n    _resize: function() {\r\n        this._doRender(this.__renderOptions || {\r\n            animate: false,\r\n            isResize: true\r\n        })\r\n    },\r\n    _trackerType: \"ChartTracker\",\r\n    _createTracker: function() {\r\n        this._tracker = new trackerModule[this._trackerType]({\r\n            seriesGroup: this._seriesGroup,\r\n            renderer: this._renderer,\r\n            tooltip: this._tooltip,\r\n            legend: this._legend,\r\n            eventTrigger: this._eventTrigger\r\n        })\r\n    },\r\n    _getTrackerSettings: function() {\r\n        return extend({\r\n            chart: this\r\n        }, this._getSelectionModes())\r\n    },\r\n    _getSelectionModes: function() {\r\n        var themeManager = this._themeManager;\r\n        return {\r\n            seriesSelectionMode: themeManager.getOptions(\"seriesSelectionMode\"),\r\n            pointSelectionMode: themeManager.getOptions(\"pointSelectionMode\")\r\n        }\r\n    },\r\n    _updateTracker: function(trackerCanvases) {\r\n        this._tracker.update(this._getTrackerSettings());\r\n        this._tracker.setCanvases({\r\n            left: 0,\r\n            right: this._canvas.width,\r\n            top: 0,\r\n            bottom: this._canvas.height\r\n        }, trackerCanvases)\r\n    },\r\n    _createCanvasFromRect(rect) {\r\n        var currentCanvas = this._canvas;\r\n        return _setCanvasValues({\r\n            left: rect[0],\r\n            top: rect[1],\r\n            right: currentCanvas.width - rect[2],\r\n            bottom: currentCanvas.height - rect[3],\r\n            width: currentCanvas.width,\r\n            height: currentCanvas.height\r\n        })\r\n    },\r\n    _doRender: function(_options) {\r\n        if (0 === this._canvas.width && 0 === this._canvas.height) {\r\n            return\r\n        }\r\n        this._resetIsReady();\r\n        var drawOptions = this._prepareDrawOptions(_options);\r\n        var recreateCanvas = drawOptions.recreateCanvas;\r\n        this._preserveOriginalCanvas();\r\n        if (recreateCanvas) {\r\n            this.__currentCanvas = this._canvas\r\n        } else {\r\n            this._canvas = this.__currentCanvas\r\n        }\r\n        recreateCanvas && this._updateCanvasClipRect(this._canvas);\r\n        this._canvas = this._createCanvasFromRect(this._rect);\r\n        this._renderer.stopAllAnimations(true);\r\n        this._cleanGroups();\r\n        var startTime = new Date;\r\n        this._renderElements(drawOptions);\r\n        this._lastRenderingTime = new Date - startTime\r\n    },\r\n    _preserveOriginalCanvas() {\r\n        this.__originalCanvas = this._canvas;\r\n        this._canvas = extend({}, this._canvas)\r\n    },\r\n    _layoutAxes: noop,\r\n    _renderElements: function(drawOptions) {\r\n        var that = this;\r\n        var preparedOptions = that._prepareToRender(drawOptions);\r\n        var isRotated = that._isRotated();\r\n        var isLegendInside = that._isLegendInside();\r\n        var trackerCanvases = [];\r\n        extend({}, that._canvas);\r\n        var argBusinessRange;\r\n        var zoomMinArg;\r\n        var zoomMaxArg;\r\n        that._renderer.lock();\r\n        if (drawOptions.drawLegend && that._legend) {\r\n            that._legendGroup.linkAppend()\r\n        }\r\n        that.layoutManager.setOptions(that._layoutManagerOptions());\r\n        var layoutTargets = that._getLayoutTargets();\r\n        this._layoutAxes(needSpace => {\r\n            var axisDrawOptions = needSpace ? extend({}, drawOptions, {\r\n                animate: false,\r\n                recreateCanvas: true\r\n            }) : drawOptions;\r\n            var canvas = that._renderAxes(axisDrawOptions, preparedOptions);\r\n            that._shrinkAxes(needSpace, canvas)\r\n        });\r\n        that._applyClipRects(preparedOptions);\r\n        that._appendSeriesGroups();\r\n        that._createCrosshairCursor();\r\n        layoutTargets.forEach(_ref => {\r\n            var {\r\n                canvas: canvas\r\n            } = _ref;\r\n            trackerCanvases.push({\r\n                left: canvas.left,\r\n                right: canvas.width - canvas.right,\r\n                top: canvas.top,\r\n                bottom: canvas.height - canvas.bottom\r\n            })\r\n        });\r\n        if (that._scrollBar) {\r\n            argBusinessRange = that._argumentAxes[0].getTranslator().getBusinessRange();\r\n            if (\"discrete\" === argBusinessRange.axisType && argBusinessRange.categories && argBusinessRange.categories.length <= 1 || \"discrete\" !== argBusinessRange.axisType && argBusinessRange.min === argBusinessRange.max) {\r\n                zoomMinArg = zoomMaxArg = void 0\r\n            } else {\r\n                zoomMinArg = argBusinessRange.minVisible;\r\n                zoomMaxArg = argBusinessRange.maxVisible\r\n            }\r\n            that._scrollBar.init(argBusinessRange, !that._argumentAxes[0].getOptions().valueMarginsEnabled).setPosition(zoomMinArg, zoomMaxArg)\r\n        }\r\n        that._updateTracker(trackerCanvases);\r\n        that._updateLegendPosition(drawOptions, isLegendInside);\r\n        that._applyPointMarkersAutoHiding();\r\n        that._renderSeries(drawOptions, isRotated, isLegendInside);\r\n        that._renderer.unlock()\r\n    },\r\n    _updateLegendPosition: noop,\r\n    _createCrosshairCursor: noop,\r\n    _appendSeriesGroups: function() {\r\n        this._seriesGroup.linkAppend();\r\n        this._labelsGroup.linkAppend();\r\n        this._appendAdditionalSeriesGroups()\r\n    },\r\n    _renderSeries: function(drawOptions, isRotated, isLegendInside) {\r\n        this._calculateSeriesLayout(drawOptions, isRotated);\r\n        this._renderSeriesElements(drawOptions, isLegendInside)\r\n    },\r\n    _calculateSeriesLayout: function(drawOptions, isRotated) {\r\n        drawOptions.hideLayoutLabels = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), isRotated) && !this._themeManager.getOptions(\"adaptiveLayout\").keepLabels;\r\n        this._updateSeriesDimensions(drawOptions)\r\n    },\r\n    _getArgFilter: () => () => true,\r\n    _getValFilter: series => () => true,\r\n    _getPointsToAnimation(series) {\r\n        var argViewPortFilter = this._getArgFilter();\r\n        return series.map(s => {\r\n            var valViewPortFilter = this._getValFilter(s);\r\n            return s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).length\r\n        })\r\n    },\r\n    _renderSeriesElements: function(drawOptions, isLegendInside) {\r\n        var i;\r\n        var series = this.series;\r\n        var singleSeries;\r\n        var seriesLength = series.length;\r\n        var resolveLabelOverlapping = this._themeManager.getOptions(\"resolveLabelOverlapping\");\r\n        var pointsToAnimation = this._getPointsToAnimation(series);\r\n        for (i = 0; i < seriesLength; i++) {\r\n            singleSeries = series[i];\r\n            this._applyExtraSettings(singleSeries, drawOptions);\r\n            singleSeries.draw(drawOptions.animate && pointsToAnimation[i] <= drawOptions.animationPointsLimit && this._renderer.animationEnabled(), drawOptions.hideLayoutLabels, this._getLegendCallBack(singleSeries))\r\n        }\r\n        if (\"none\" === resolveLabelOverlapping) {\r\n            this._adjustSeriesLabels(false)\r\n        } else {\r\n            this._locateLabels(resolveLabelOverlapping)\r\n        }\r\n        this._renderTrackers(isLegendInside);\r\n        this._tracker.repairTooltip();\r\n        this._renderExtraElements();\r\n        this._clearCanvas();\r\n        this._seriesElementsDrawn = true\r\n    },\r\n    _changesApplied() {\r\n        if (this._seriesElementsDrawn) {\r\n            this._seriesElementsDrawn = false;\r\n            this._drawn();\r\n            this._renderCompleteHandler()\r\n        }\r\n    },\r\n    _locateLabels(resolveLabelOverlapping) {\r\n        this._resolveLabelOverlapping(resolveLabelOverlapping)\r\n    },\r\n    _renderExtraElements() {},\r\n    _clearCanvas: function() {\r\n        this._canvas = this.__originalCanvas\r\n    },\r\n    _resolveLabelOverlapping: function(resolveLabelOverlapping) {\r\n        var func;\r\n        switch (resolveLabelOverlapping) {\r\n            case \"stack\":\r\n                func = this._resolveLabelOverlappingStack;\r\n                break;\r\n            case \"hide\":\r\n                func = this._resolveLabelOverlappingHide;\r\n                break;\r\n            case \"shift\":\r\n                func = this._resolveLabelOverlappingShift\r\n        }\r\n        return isFunction(func) && func.call(this)\r\n    },\r\n    _getVisibleSeries: function() {\r\n        return grep(this.getAllSeries(), (function(series) {\r\n            return series.isVisible()\r\n        }))\r\n    },\r\n    _resolveLabelOverlappingHide: function() {\r\n        var labels = [];\r\n        var currentLabel;\r\n        var nextLabel;\r\n        var currentLabelRect;\r\n        var nextLabelRect;\r\n        var i;\r\n        var j;\r\n        var points;\r\n        var series = this._getVisibleSeries();\r\n        for (i = 0; i < series.length; i++) {\r\n            points = series[i].getVisiblePoints();\r\n            for (j = 0; j < points.length; j++) {\r\n                labels.push.apply(labels, points[j].getLabels())\r\n            }\r\n        }\r\n        for (i = 0; i < labels.length; i++) {\r\n            currentLabel = labels[i];\r\n            if (!currentLabel.isVisible()) {\r\n                continue\r\n            }\r\n            currentLabelRect = currentLabel.getBoundingRect();\r\n            for (j = i + 1; j < labels.length; j++) {\r\n                nextLabel = labels[j];\r\n                nextLabelRect = nextLabel.getBoundingRect();\r\n                if (checkOverlapping(currentLabelRect, nextLabelRect)) {\r\n                    nextLabel.draw(false)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _cleanGroups: function() {\r\n        this._stripsGroup.linkRemove().clear();\r\n        this._gridGroup.linkRemove().clear();\r\n        this._axesGroup.linkRemove().clear();\r\n        this._constantLinesGroup.above.clear();\r\n        this._stripLabelAxesGroup.linkRemove().clear();\r\n        this._labelsGroup.linkRemove().clear();\r\n        this._crosshairCursorGroup.linkRemove().clear();\r\n        this._scaleBreaksGroup.linkRemove().clear()\r\n    },\r\n    _allowLegendInsidePosition: () => false,\r\n    _createLegend: function() {\r\n        var legendSettings = getLegendSettings(this._legendDataField);\r\n        this._legend = new Legend({\r\n            renderer: this._renderer,\r\n            widget: this,\r\n            group: this._legendGroup,\r\n            backgroundClass: \"dxc-border\",\r\n            itemGroupClass: \"dxc-item\",\r\n            titleGroupClass: \"dxc-title\",\r\n            textField: legendSettings.textField,\r\n            getFormatObject: legendSettings.getFormatObject,\r\n            allowInsidePosition: this._allowLegendInsidePosition()\r\n        });\r\n        this._updateLegend();\r\n        this._layout.add(this._legend)\r\n    },\r\n    _updateLegend: function() {\r\n        var themeManager = this._themeManager;\r\n        var legendOptions = themeManager.getOptions(\"legend\");\r\n        var legendData = this._getLegendData();\r\n        legendOptions.containerBackgroundColor = themeManager.getOptions(\"containerBackgroundColor\");\r\n        legendOptions._incidentOccurred = this._incidentOccurred;\r\n        this._legend.update(legendData, legendOptions, themeManager.theme(\"legend\").title);\r\n        this._change([\"LAYOUT\"])\r\n    },\r\n    _prepareDrawOptions: function(drawOptions) {\r\n        var animationOptions = this._getAnimationOptions();\r\n        var options = extend({}, {\r\n            force: false,\r\n            adjustAxes: true,\r\n            drawLegend: true,\r\n            drawTitle: true,\r\n            animate: animationOptions.enabled,\r\n            animationPointsLimit: animationOptions.maxPointCountSupported\r\n        }, drawOptions, this.__renderOptions);\r\n        if (!_isDefined(options.recreateCanvas)) {\r\n            options.recreateCanvas = options.adjustAxes && options.drawLegend && options.drawTitle\r\n        }\r\n        return options\r\n    },\r\n    _processRefreshData: function(newRefreshAction) {\r\n        var currentRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(this._currentRefreshData);\r\n        var newRefreshActionPosition = ACTIONS_BY_PRIORITY.indexOf(newRefreshAction);\r\n        if (!this._currentRefreshData || currentRefreshActionPosition >= 0 && newRefreshActionPosition < currentRefreshActionPosition) {\r\n            this._currentRefreshData = newRefreshAction\r\n        }\r\n        this._requestChange([\"REFRESH\"])\r\n    },\r\n    _getLegendData: function() {\r\n        return _map(this._getLegendTargets(), (function(item) {\r\n            var legendData = item.legendData;\r\n            var style = item.getLegendStyles;\r\n            var opacity = style.normal.opacity;\r\n            if (!item.visible) {\r\n                if (!_isDefined(opacity) || opacity > DEFAULT_OPACITY) {\r\n                    opacity = DEFAULT_OPACITY\r\n                }\r\n                legendData.textOpacity = DEFAULT_OPACITY\r\n            }\r\n            var opacityStyle = {\r\n                opacity: opacity\r\n            };\r\n            legendData.states = {\r\n                hover: extend({}, style.hover, opacityStyle),\r\n                selection: extend({}, style.selection, opacityStyle),\r\n                normal: extend({}, style.normal, opacityStyle)\r\n            };\r\n            return legendData\r\n        }))\r\n    },\r\n    _getLegendOptions: function(item) {\r\n        return {\r\n            legendData: {\r\n                text: item[this._legendItemTextField],\r\n                id: item.index,\r\n                visible: true\r\n            },\r\n            getLegendStyles: item.getLegendStyles(),\r\n            visible: item.isVisible()\r\n        }\r\n    },\r\n    _disposeSeries(seriesIndex) {\r\n        var _that$series;\r\n        if (this.series) {\r\n            if (_isDefined(seriesIndex)) {\r\n                this.series[seriesIndex].dispose();\r\n                this.series.splice(seriesIndex, 1)\r\n            } else {\r\n                _each(this.series, (_, s) => s.dispose());\r\n                this.series.length = 0\r\n            }\r\n        }\r\n        if (!(null !== (_that$series = this.series) && void 0 !== _that$series && _that$series.length)) {\r\n            this.series = []\r\n        }\r\n    },\r\n    _disposeSeriesFamilies() {\r\n        _each(this.seriesFamilies || [], (function(_, family) {\r\n            family.dispose()\r\n        }));\r\n        this.seriesFamilies = null;\r\n        this._needHandleRenderComplete = true\r\n    },\r\n    _optionChanged: function(arg) {\r\n        this._themeManager.resetOptions(arg.name);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _applyChanges() {\r\n        this._themeManager.update(this._options.silent());\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _optionChangesMap: {\r\n        animation: \"ANIMATION\",\r\n        dataSource: \"DATA_SOURCE\",\r\n        palette: \"PALETTE\",\r\n        paletteExtensionMode: \"PALETTE\",\r\n        legend: \"FORCE_DATA_INIT\",\r\n        seriesTemplate: \"FORCE_DATA_INIT\",\r\n        export: \"FORCE_RENDER\",\r\n        valueAxis: \"AXES_AND_PANES\",\r\n        argumentAxis: \"AXES_AND_PANES\",\r\n        commonAxisSettings: \"AXES_AND_PANES\",\r\n        panes: \"AXES_AND_PANES\",\r\n        commonPaneSettings: \"AXES_AND_PANES\",\r\n        defaultPane: \"AXES_AND_PANES\",\r\n        containerBackgroundColor: \"AXES_AND_PANES\",\r\n        rotated: \"ROTATED\",\r\n        autoHidePointMarkers: \"REFRESH_SERIES_REINIT\",\r\n        customizePoint: \"REFRESH_SERIES_REINIT\",\r\n        customizeLabel: \"REFRESH_SERIES_REINIT\",\r\n        scrollBar: \"SCROLL_BAR\"\r\n    },\r\n    _optionChangesOrder: [\"ROTATED\", \"PALETTE\", \"REFRESH_SERIES_REINIT\", \"USE_SPIDER_WEB\", \"AXES_AND_PANES\", \"INIT\", \"REINIT\", \"DATA_SOURCE\", \"REFRESH_SERIES_DATA_INIT\", \"DATA_INIT\", \"FORCE_DATA_INIT\", \"REFRESH_AXES\", \"CORRECT_AXIS\"],\r\n    _customChangesOrder: [\"ANIMATION\", \"REFRESH_SERIES_FAMILIES\", \"FORCE_FIRST_DRAWING\", \"FORCE_DRAWING\", \"FORCE_RENDER\", \"VISUAL_RANGE\", \"SCROLL_BAR\", \"REINIT\", \"REFRESH\", \"FULL_RENDER\"],\r\n    _change_ANIMATION: function() {\r\n        this._renderer.updateAnimationOptions(this._getAnimationOptions())\r\n    },\r\n    _change_DATA_SOURCE: function() {\r\n        this._needHandleRenderComplete = true;\r\n        this._updateDataSource()\r\n    },\r\n    _change_PALETTE: function() {\r\n        this._themeManager.updatePalette();\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_DATA_INIT: function() {\r\n        this._refreshSeries(\"DATA_INIT\")\r\n    },\r\n    _change_DATA_INIT: function() {\r\n        if ((!this.series || this.needToPopulateSeries) && !this._changes.has(\"FORCE_DATA_INIT\")) {\r\n            this._dataInit()\r\n        }\r\n    },\r\n    _change_FORCE_DATA_INIT: function() {\r\n        this._dataInit()\r\n    },\r\n    _change_REFRESH_SERIES_FAMILIES: function() {\r\n        this._processSeriesFamilies();\r\n        this._populateBusinessRange();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_FORCE_RENDER: function() {\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_AXES_AND_PANES: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_ROTATED: function() {\r\n        this._createScrollBar();\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_SERIES_REINIT: function() {\r\n        this._refreshSeries(\"INIT\")\r\n    },\r\n    _change_REFRESH_AXES() {\r\n        _setCanvasValues(this._canvas);\r\n        this._reinitAxes();\r\n        this._requestChange([\"CORRECT_AXIS\", \"FULL_RENDER\"])\r\n    },\r\n    _change_SCROLL_BAR: function() {\r\n        this._createScrollBar();\r\n        this._processRefreshData(FORCE_RENDER_REFRESH_ACTION)\r\n    },\r\n    _change_REINIT: function() {\r\n        this._processRefreshData(REINIT_REFRESH_ACTION)\r\n    },\r\n    _change_FORCE_DRAWING: function() {\r\n        this._resetComponentsAnimation()\r\n    },\r\n    _change_FORCE_FIRST_DRAWING: function() {\r\n        this._resetComponentsAnimation(true)\r\n    },\r\n    _resetComponentsAnimation: function(isFirstDrawing) {\r\n        this.series.forEach(s => {\r\n            s.resetApplyingAnimation(isFirstDrawing)\r\n        });\r\n        this._resetAxesAnimation(isFirstDrawing)\r\n    },\r\n    _resetAxesAnimation: noop,\r\n    _refreshSeries: function(actionName) {\r\n        this.needToPopulateSeries = true;\r\n        this._requestChange([actionName])\r\n    },\r\n    _change_CORRECT_AXIS() {\r\n        this._correctAxes()\r\n    },\r\n    _doRefresh: function() {\r\n        var methodName = this._currentRefreshData;\r\n        if (methodName) {\r\n            this._currentRefreshData = null;\r\n            this._renderer.stopAllAnimations(true);\r\n            this[methodName]()\r\n        }\r\n    },\r\n    _updateCanvasClipRect: function(canvas) {\r\n        var width = Math.max(canvas.width - canvas.left - canvas.right, 0);\r\n        var height = Math.max(canvas.height - canvas.top - canvas.bottom, 0);\r\n        this._canvasClipRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        });\r\n        this._backgroundRect.attr({\r\n            x: canvas.left,\r\n            y: canvas.top,\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _getCanvasClipRectID: function() {\r\n        return this._canvasClipRect.id\r\n    },\r\n    _dataSourceChangedHandler: function() {\r\n        if (this._changes.has(\"INIT\")) {\r\n            this._requestChange([\"DATA_INIT\"])\r\n        } else {\r\n            this._requestChange([\"FORCE_DATA_INIT\"])\r\n        }\r\n    },\r\n    _dataInit: function() {\r\n        this._dataSpecificInit(true)\r\n    },\r\n    _processSingleSeries: function(singleSeries) {\r\n        singleSeries.createPoints(false)\r\n    },\r\n    _handleSeriesDataUpdated() {\r\n        if (this._getVisibleSeries().some(s => s.useAggregation())) {\r\n            this._populateMarginOptions()\r\n        }\r\n        this.series.forEach(s => this._processSingleSeries(s), this)\r\n    },\r\n    _dataSpecificInit(needRedraw) {\r\n        if (!this.series || this.needToPopulateSeries) {\r\n            this.series = this._populateSeries()\r\n        }\r\n        this._repopulateSeries();\r\n        this._seriesPopulatedHandlerCore();\r\n        this._populateBusinessRange();\r\n        this._tracker.updateSeries(this.series, this._changes.has(\"INIT\"));\r\n        this._updateLegend();\r\n        if (needRedraw) {\r\n            this._requestChange([\"FULL_RENDER\"])\r\n        }\r\n    },\r\n    _forceRender: function() {\r\n        this._doRender({\r\n            force: true\r\n        })\r\n    },\r\n    _repopulateSeries: function() {\r\n        var themeManager = this._themeManager;\r\n        var data = this._dataSourceItems();\r\n        var dataValidatorOptions = themeManager.getOptions(\"dataPrepareSettings\");\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        if (seriesTemplate) {\r\n            this._populateSeries(data)\r\n        }\r\n        this._groupSeries();\r\n        var parsedData = validateData(data, this._groupsData, this._incidentOccurred, dataValidatorOptions);\r\n        themeManager.resetPalette();\r\n        this.series.forEach((function(singleSeries) {\r\n            singleSeries.updateData(parsedData[singleSeries.getArgumentField()])\r\n        }));\r\n        this._handleSeriesDataUpdated()\r\n    },\r\n    _renderCompleteHandler: function() {\r\n        var allSeriesInited = true;\r\n        if (this._needHandleRenderComplete) {\r\n            _each(this.series, (function(_, s) {\r\n                allSeriesInited = allSeriesInited && s.canRenderCompleteHandle()\r\n            }));\r\n            if (allSeriesInited) {\r\n                this._needHandleRenderComplete = false;\r\n                this._eventTrigger(\"done\", {\r\n                    target: this\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _dataIsReady: function() {\r\n        return _isDefined(this.option(\"dataSource\")) && this._dataIsLoaded()\r\n    },\r\n    _populateSeriesOptions(data) {\r\n        var that = this;\r\n        var themeManager = that._themeManager;\r\n        var seriesTemplate = themeManager.getOptions(\"seriesTemplate\");\r\n        var seriesOptions = seriesTemplate ? processSeriesTemplate(seriesTemplate, data || []) : that.option(\"series\");\r\n        var allSeriesOptions = _isArray(seriesOptions) ? seriesOptions : seriesOptions ? [seriesOptions] : [];\r\n        var extraOptions = that._getExtraOptions();\r\n        var particularSeriesOptions;\r\n        var seriesTheme;\r\n        var seriesThemes = [];\r\n        var seriesVisibilityChanged = target => {\r\n            that._specialProcessSeries();\r\n            that._populateBusinessRange(target && target.getValueAxis(), true);\r\n            that._renderer.stopAllAnimations(true);\r\n            that._updateLegend();\r\n            that._requestChange([\"FULL_RENDER\"])\r\n        };\r\n        for (var i = 0; i < allSeriesOptions.length; i++) {\r\n            particularSeriesOptions = extend(true, {}, allSeriesOptions[i], extraOptions);\r\n            if (!_isDefined(particularSeriesOptions.name) || \"\" === particularSeriesOptions.name) {\r\n                particularSeriesOptions.name = \"Series \" + (i + 1).toString()\r\n            }\r\n            particularSeriesOptions.rotated = that._isRotated();\r\n            particularSeriesOptions.customizePoint = themeManager.getOptions(\"customizePoint\");\r\n            particularSeriesOptions.customizeLabel = themeManager.getOptions(\"customizeLabel\");\r\n            particularSeriesOptions.visibilityChanged = seriesVisibilityChanged;\r\n            particularSeriesOptions.incidentOccurred = that._incidentOccurred;\r\n            seriesTheme = themeManager.getOptions(\"series\", particularSeriesOptions, allSeriesOptions.length);\r\n            if (that._checkPaneName(seriesTheme)) {\r\n                seriesThemes.push(seriesTheme)\r\n            }\r\n        }\r\n        return seriesThemes\r\n    },\r\n    _populateSeries(data) {\r\n        var _that$series2;\r\n        var that = this;\r\n        var seriesBasis = [];\r\n        var incidentOccurred = that._incidentOccurred;\r\n        var seriesThemes = that._populateSeriesOptions(data);\r\n        var particularSeries;\r\n        var disposeSeriesFamilies = false;\r\n        that.needToPopulateSeries = false;\r\n        _each(seriesThemes, (_, theme) => {\r\n            var curSeries = that.series && that.series.filter(s => s.name === theme.name && -1 === seriesBasis.map(sb => sb.series).indexOf(s))[0];\r\n            if (curSeries && curSeries.type === theme.type) {\r\n                seriesBasis.push({\r\n                    series: curSeries,\r\n                    options: theme\r\n                })\r\n            } else {\r\n                seriesBasis.push({\r\n                    options: theme\r\n                });\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        0 !== (null === (_that$series2 = that.series) || void 0 === _that$series2 ? void 0 : _that$series2.length) && that._tracker.clearHover();\r\n        _reverseEach(that.series, (index, series) => {\r\n            if (!seriesBasis.some(s => series === s.series)) {\r\n                that._disposeSeries(index);\r\n                disposeSeriesFamilies = true\r\n            }\r\n        });\r\n        !disposeSeriesFamilies && (disposeSeriesFamilies = seriesBasis.some(sb => sb.series.name !== seriesThemes[sb.series.index].name));\r\n        that.series = [];\r\n        disposeSeriesFamilies && that._disposeSeriesFamilies();\r\n        that._themeManager.resetPalette();\r\n        var eventPipe = function(data) {\r\n            that.series.forEach((function(currentSeries) {\r\n                currentSeries.notify(data)\r\n            }))\r\n        };\r\n        _each(seriesBasis, (_, basis) => {\r\n            var _that$_argumentAxes$f, _that$_argumentAxes;\r\n            var seriesTheme = basis.options;\r\n            var argumentAxis = null !== (_that$_argumentAxes$f = null === (_that$_argumentAxes = that._argumentAxes) || void 0 === _that$_argumentAxes ? void 0 : _that$_argumentAxes.filter(a => a.pane === seriesTheme.pane)[0]) && void 0 !== _that$_argumentAxes$f ? _that$_argumentAxes$f : that.getArgumentAxis();\r\n            var renderSettings = {\r\n                commonSeriesModes: that._getSelectionModes(),\r\n                argumentAxis: argumentAxis,\r\n                valueAxis: that._getValueAxis(seriesTheme.pane, seriesTheme.axis)\r\n            };\r\n            if (basis.series) {\r\n                particularSeries = basis.series;\r\n                particularSeries.updateOptions(seriesTheme, renderSettings)\r\n            } else {\r\n                particularSeries = new Series(extend({\r\n                    renderer: that._renderer,\r\n                    seriesGroup: that._seriesGroup,\r\n                    labelsGroup: that._labelsGroup,\r\n                    eventTrigger: that._eventTrigger,\r\n                    eventPipe: eventPipe,\r\n                    incidentOccurred: incidentOccurred\r\n                }, renderSettings), seriesTheme)\r\n            }\r\n            if (!particularSeries.isUpdated) {\r\n                incidentOccurred(\"E2101\", [seriesTheme.type])\r\n            } else {\r\n                particularSeries.index = that.series.length;\r\n                that.series.push(particularSeries)\r\n            }\r\n        });\r\n        return that.series\r\n    },\r\n    getStackedPoints: function(point) {\r\n        var stackName = point.series.getStackName();\r\n        return this._getVisibleSeries().reduce((stackPoints, series) => {\r\n            if (!_isDefined(series.getStackName()) || !_isDefined(stackName) || stackName === series.getStackName()) {\r\n                stackPoints = stackPoints.concat(series.getPointsByArg(point.argument))\r\n            }\r\n            return stackPoints\r\n        }, [])\r\n    },\r\n    getAllSeries: function() {\r\n        return (this.series || []).slice()\r\n    },\r\n    getSeriesByName: function(name) {\r\n        var found = null;\r\n        _each(this.series, (function(i, singleSeries) {\r\n            if (singleSeries.name === name) {\r\n                found = singleSeries;\r\n                return false\r\n            }\r\n        }));\r\n        return found\r\n    },\r\n    getSeriesByPos: function(pos) {\r\n        return (this.series || [])[pos]\r\n    },\r\n    clearSelection: function() {\r\n        this._tracker.clearSelection()\r\n    },\r\n    hideTooltip: function() {\r\n        this._tracker._hideTooltip()\r\n    },\r\n    clearHover() {\r\n        this._tracker.clearHover()\r\n    },\r\n    render: function(renderOptions) {\r\n        var that = this;\r\n        that.__renderOptions = renderOptions;\r\n        that.__forceRender = renderOptions && renderOptions.force;\r\n        that.callBase.apply(that, arguments);\r\n        that.__renderOptions = that.__forceRender = null;\r\n        return that\r\n    },\r\n    refresh: function() {\r\n        this._disposeSeries();\r\n        this._disposeSeriesFamilies();\r\n        this._requestChange([\"CONTAINER_SIZE\", \"REFRESH_SERIES_REINIT\"])\r\n    },\r\n    _getMinSize() {\r\n        var adaptiveLayout = this._layoutManagerOptions();\r\n        return [adaptiveLayout.width, adaptiveLayout.height]\r\n    },\r\n    _change_REFRESH() {\r\n        if (!this._changes.has(\"INIT\")) {\r\n            this._doRefresh()\r\n        } else {\r\n            this._currentRefreshData = null\r\n        }\r\n    },\r\n    _change_FULL_RENDER() {\r\n        this._forceRender()\r\n    },\r\n    _change_INIT() {\r\n        this._reinit()\r\n    },\r\n    _stopCurrentHandling: function() {\r\n        this._tracker.stopCurrentHandling()\r\n    }\r\n});\r\nREFRESH_SERIES_DATA_INIT_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\"\r\n}));\r\nFORCE_RENDER_REFRESH_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"FORCE_RENDER\"\r\n}));\r\nREFRESH_SERIES_FAMILIES_ACTION_OPTIONS.forEach((function(name) {\r\n    BaseChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_FAMILIES\"\r\n}));\r\nimport {\r\n    plugin as exportPlugin\r\n} from \"../core/export\";\r\nimport {\r\n    plugin as titlePlugin\r\n} from \"../core/title\";\r\nimport {\r\n    plugin as dataSourcePlugin\r\n} from \"../core/data_source\";\r\nimport {\r\n    plugin as tooltipPlugin\r\n} from \"../core/tooltip\";\r\nimport {\r\n    plugin as loadingIndicatorPlugin\r\n} from \"../core/loading_indicator\";\r\nBaseChart.addPlugin(exportPlugin);\r\nBaseChart.addPlugin(titlePlugin);\r\nBaseChart.addPlugin(dataSourcePlugin);\r\nBaseChart.addPlugin(tooltipPlugin);\r\nBaseChart.addPlugin(loadingIndicatorPlugin);\r\nvar _change_TITLE = BaseChart.prototype._change_TITLE;\r\nBaseChart.prototype._change_TITLE = function() {\r\n    _change_TITLE.apply(this, arguments);\r\n    this._change([\"FORCE_RENDER\"])\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
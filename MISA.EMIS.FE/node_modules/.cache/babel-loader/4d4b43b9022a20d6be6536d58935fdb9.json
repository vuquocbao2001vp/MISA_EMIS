{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/color_box/color_box.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport Color from \"../../color\";\nimport ColorView from \"./color_view\";\nimport { extend } from \"../../core/utils/extend\";\nimport registerComponent from \"../../core/component_registrator\";\nimport DropDownEditor from \"../drop_down_editor/ui.drop_down_editor\";\nvar COLOR_BOX_CLASS = \"dx-colorbox\";\nvar COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\";\nvar COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\";\nvar COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\";\nvar COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\";\nvar COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\";\nvar COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\";\nvar COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\";\nvar COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\";\nvar COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\";\nvar COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\nvar colorEditorPrototype = ColorView.prototype;\nvar colorUtils = {\n  makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\n  makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\n};\nvar ColorBox = DropDownEditor.inherit({\n  _supportedKeys: function () {\n    var arrowHandler = function (e) {\n      e.stopPropagation();\n\n      if (this.option(\"opened\")) {\n        e.preventDefault();\n        return true;\n      }\n    };\n\n    return extend(this.callBase(), {\n      tab: function (e) {\n        if (this.option(\"opened\")) {\n          e.preventDefault();\n\n          this._colorView._rgbInputs[0].focus();\n        }\n      },\n      enter: this._enterKeyHandler,\n      leftArrow: arrowHandler,\n      rightArrow: arrowHandler,\n      upArrow: function (e) {\n        if (!this.option(\"opened\")) {\n          e.preventDefault();\n          return false;\n        }\n\n        if (e.altKey) {\n          this.close();\n          return false;\n        }\n\n        return true;\n      },\n      downArrow: function (e) {\n        if (!this.option(\"opened\") && !e.altKey) {\n          e.preventDefault();\n          return false;\n        }\n\n        if (!this.option(\"opened\") && e.altKey) {\n          this._validatedOpening();\n\n          return false;\n        }\n\n        return true;\n      }\n    });\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      editAlphaChannel: false,\n      applyValueMode: \"useButtons\",\n      keyStep: 1,\n      fieldTemplate: null,\n      buttonsLocation: \"bottom after\"\n    });\n  },\n  _popupHidingHandler: function () {\n    this.callBase();\n\n    if (\"useButtons\" === this.option(\"applyValueMode\")) {\n      this._updateColorViewValue(this.option(\"value\"));\n    }\n  },\n  _popupConfig: function () {\n    return extend(this.callBase(), {\n      width: \"\"\n    });\n  },\n  _contentReadyHandler: function () {\n    this._createColorView();\n\n    this._addPopupBottomClasses();\n  },\n  _addPopupBottomClasses: function () {\n    var $popupBottom = this._popup.bottomToolbar();\n\n    if ($popupBottom) {\n      $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\n      $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\n      $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS);\n    }\n  },\n  _createColorView: function () {\n    this._popup.$overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\n\n    var $colorView = $(\"<div>\").appendTo(this._popup.$content());\n    this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\n\n    this._colorView.registerKeyHandler(\"escape\", this._escapeHandler.bind(this));\n\n    eventsEngine.on($colorView, \"focus\", function () {\n      this.focus();\n    }.bind(this));\n  },\n  _escapeHandler: function () {\n    this.close();\n    this.focus();\n  },\n  _applyNewColor: function (value) {\n    this.option(\"value\", value);\n\n    if (value) {\n      colorUtils.makeTransparentBackground(this._$colorResultPreview, value);\n    }\n\n    if (this._colorViewEnterKeyPressed) {\n      this.close();\n      this._colorViewEnterKeyPressed = false;\n    }\n  },\n  _colorViewConfig: function () {\n    var that = this;\n    return {\n      value: that.option(\"value\"),\n      matchValue: that.option(\"value\"),\n      editAlphaChannel: that.option(\"editAlphaChannel\"),\n      applyValueMode: that.option(\"applyValueMode\"),\n      focusStateEnabled: that.option(\"focusStateEnabled\"),\n      stylingMode: this.option(\"stylingMode\"),\n      onEnterKeyPressed: function (_ref) {\n        var {\n          event: event\n        } = _ref;\n        that._colorViewEnterKeyPressed = true;\n\n        if (that._colorView.option(\"value\") !== that.option(\"value\")) {\n          that._saveValueChangeEvent(event);\n\n          that._applyNewColor(that._colorView.option(\"value\"));\n\n          that.close();\n        }\n      },\n      onValueChanged: function (_ref2) {\n        var {\n          event: event,\n          value: value,\n          previousValue: previousValue\n        } = _ref2;\n        var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\n        var isOldValue = colorUtils.makeRgba(value) === previousValue;\n        var changesApplied = instantlyMode || that._colorViewEnterKeyPressed;\n        var valueCleared = that._shouldSaveEmptyValue;\n\n        if (isOldValue || !changesApplied || valueCleared) {\n          return;\n        }\n\n        if (event) {\n          that._saveValueChangeEvent(event);\n        }\n\n        that._applyNewColor(value);\n      }\n    };\n  },\n  _enterKeyHandler: function (e) {\n    var newValue = this._input().val();\n\n    var value = this.option(\"value\");\n    var oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\n\n    if (!newValue) {\n      return false;\n    }\n\n    var color = new Color(newValue);\n\n    if (color.colorIsInvalid) {\n      this._input().val(oldValue);\n\n      return;\n    }\n\n    if (newValue !== oldValue) {\n      this._applyColorFromInput(newValue);\n\n      this._saveValueChangeEvent(e);\n\n      this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue);\n    }\n\n    if (this._colorView) {\n      var colorViewValue = this._colorView.option(\"value\");\n\n      if (value !== colorViewValue) {\n        this._saveValueChangeEvent(e);\n\n        this.option(\"value\", colorViewValue);\n      }\n    }\n\n    this.close();\n    return false;\n  },\n  _applyButtonHandler: function (e) {\n    this._saveValueChangeEvent(e.event);\n\n    this._applyNewColor(this._colorView.option(\"value\"));\n\n    this.callBase();\n  },\n  _cancelButtonHandler: function () {\n    this._resetInputValue();\n\n    this.callBase();\n  },\n\n  _getKeyboardListeners() {\n    return this.callBase().concat([this._colorView]);\n  },\n\n  _init: function () {\n    this.callBase();\n  },\n  _initMarkup: function () {\n    this.$element().addClass(COLOR_BOX_CLASS);\n    this.callBase();\n  },\n  _renderInput: function () {\n    this.callBase();\n\n    this._input().addClass(COLOR_BOX_INPUT_CLASS);\n\n    this._renderColorPreview();\n  },\n  _renderColorPreview: function () {\n    this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\n    this._$colorBoxInputContainer = this.$element().children().eq(0);\n    this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$textEditorInputContainer);\n\n    if (!this.option(\"value\")) {\n      this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED);\n    } else {\n      colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"));\n    }\n  },\n  _renderValue: function () {\n    var value = this.option(\"value\");\n    var convertToColor = null !== value && this.option(\"editAlphaChannel\");\n    var text = convertToColor ? colorUtils.makeRgba(value) : value;\n    this.option(\"text\", text);\n    return this.callBase();\n  },\n  _resetInputValue: function () {\n    var $input = this._input();\n\n    var value = this.option(\"value\");\n    $input.val(value);\n\n    this._updateColorViewValue(value);\n  },\n  _updateColorViewValue: function (value) {\n    if (this._colorView) {\n      this._colorView.option({\n        value: value,\n        matchValue: value\n      });\n    }\n  },\n  _valueChangeEventHandler: function (e) {\n    var value = this._input().val();\n\n    if (value) {\n      value = this._applyColorFromInput(value);\n\n      this._updateColorViewValue(value);\n    }\n\n    this.callBase(e, value);\n  },\n  _applyColorFromInput: function (value) {\n    var newColor = new Color(value);\n\n    if (newColor.colorIsInvalid) {\n      this._resetInputValue();\n\n      value = this.option(\"value\");\n    }\n\n    return value;\n  },\n  _clean: function () {\n    this.callBase();\n    delete this._shouldSaveEmptyValue;\n  },\n  _optionChanged: function (args) {\n    var value = args.value;\n    var name = args.name;\n\n    switch (name) {\n      case \"value\":\n        this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\n\n        if (value) {\n          colorUtils.makeTransparentBackground(this._$colorResultPreview, value);\n        } else {\n          this._$colorResultPreview.removeAttr(\"style\");\n        }\n\n        if (null === value) {\n          this._shouldSaveEmptyValue = true;\n        }\n\n        this._updateColorViewValue(value);\n\n        this._shouldSaveEmptyValue = false;\n        this.callBase(args);\n        break;\n\n      case \"applyButtonText\":\n      case \"cancelButtonText\":\n        this.callBase(args);\n        this._popup && this._addPopupBottomClasses();\n        break;\n\n      case \"editAlphaChannel\":\n      case \"keyStep\":\n        if (this._colorView) {\n          this._colorView.option(name, value);\n        }\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\nregisterComponent(\"dxColorBox\", ColorBox);\nexport default ColorBox;","map":{"version":3,"names":["$","eventsEngine","Color","ColorView","extend","registerComponent","DropDownEditor","COLOR_BOX_CLASS","COLOR_BOX_INPUT_CLASS","COLOR_BOX_INPUT_CONTAINER_CLASS","COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS","COLOR_BOX_COLOR_IS_NOT_DEFINED","COLOR_BOX_OVERLAY_CLASS","COLOR_BOX_CONTAINER_CELL_CLASS","COLOR_BOX_BUTTON_CELL_CLASS","COLOR_BOX_BUTTONS_CONTAINER_CLASS","COLOR_BOX_APPLY_BUTTON_CLASS","COLOR_BOX_CANCEL_BUTTON_CLASS","colorEditorPrototype","prototype","colorUtils","makeTransparentBackground","_makeTransparentBackground","bind","makeRgba","_makeRgba","ColorBox","inherit","_supportedKeys","arrowHandler","e","stopPropagation","option","preventDefault","callBase","tab","_colorView","_rgbInputs","focus","enter","_enterKeyHandler","leftArrow","rightArrow","upArrow","altKey","close","downArrow","_validatedOpening","_getDefaultOptions","editAlphaChannel","applyValueMode","keyStep","fieldTemplate","buttonsLocation","_popupHidingHandler","_updateColorViewValue","_popupConfig","width","_contentReadyHandler","_createColorView","_addPopupBottomClasses","$popupBottom","_popup","bottomToolbar","addClass","find","$overlayContent","$colorView","appendTo","$content","_createComponent","_colorViewConfig","registerKeyHandler","_escapeHandler","on","_applyNewColor","value","_$colorResultPreview","_colorViewEnterKeyPressed","that","matchValue","focusStateEnabled","stylingMode","onEnterKeyPressed","_ref","event","_saveValueChangeEvent","onValueChanged","_ref2","previousValue","instantlyMode","isOldValue","changesApplied","valueCleared","_shouldSaveEmptyValue","newValue","_input","val","oldValue","color","colorIsInvalid","_applyColorFromInput","colorViewValue","_applyButtonHandler","_cancelButtonHandler","_resetInputValue","_getKeyboardListeners","concat","_init","_initMarkup","$element","_renderInput","_renderColorPreview","wrapInner","_$colorBoxInputContainer","children","eq","_$textEditorInputContainer","_renderValue","convertToColor","text","$input","_valueChangeEventHandler","newColor","_clean","_optionChanged","args","name","toggleClass","removeAttr"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/color_box/color_box.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/color_box/color_box.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Color from \"../../color\";\r\nimport ColorView from \"./color_view\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport DropDownEditor from \"../drop_down_editor/ui.drop_down_editor\";\r\nvar COLOR_BOX_CLASS = \"dx-colorbox\";\r\nvar COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\";\r\nvar COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\";\r\nvar COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\";\r\nvar COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\";\r\nvar COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\";\r\nvar COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\";\r\nvar COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\";\r\nvar COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\";\r\nvar COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\";\r\nvar COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\r\nvar colorEditorPrototype = ColorView.prototype;\r\nvar colorUtils = {\r\n    makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\r\n    makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\r\n};\r\nvar ColorBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var arrowHandler = function(e) {\r\n            e.stopPropagation();\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n        };\r\n        return extend(this.callBase(), {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._colorView._rgbInputs[0].focus()\r\n                }\r\n            },\r\n            enter: this._enterKeyHandler,\r\n            leftArrow: arrowHandler,\r\n            rightArrow: arrowHandler,\r\n            upArrow: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    return false\r\n                }\r\n                if (e.altKey) {\r\n                    this.close();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                if (!this.option(\"opened\") && !e.altKey) {\r\n                    e.preventDefault();\r\n                    return false\r\n                }\r\n                if (!this.option(\"opened\") && e.altKey) {\r\n                    this._validatedOpening();\r\n                    return false\r\n                }\r\n                return true\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            editAlphaChannel: false,\r\n            applyValueMode: \"useButtons\",\r\n            keyStep: 1,\r\n            fieldTemplate: null,\r\n            buttonsLocation: \"bottom after\"\r\n        })\r\n    },\r\n    _popupHidingHandler: function() {\r\n        this.callBase();\r\n        if (\"useButtons\" === this.option(\"applyValueMode\")) {\r\n            this._updateColorViewValue(this.option(\"value\"))\r\n        }\r\n    },\r\n    _popupConfig: function() {\r\n        return extend(this.callBase(), {\r\n            width: \"\"\r\n        })\r\n    },\r\n    _contentReadyHandler: function() {\r\n        this._createColorView();\r\n        this._addPopupBottomClasses()\r\n    },\r\n    _addPopupBottomClasses: function() {\r\n        var $popupBottom = this._popup.bottomToolbar();\r\n        if ($popupBottom) {\r\n            $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\r\n            $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\r\n            $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS)\r\n        }\r\n    },\r\n    _createColorView: function() {\r\n        this._popup.$overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\r\n        var $colorView = $(\"<div>\").appendTo(this._popup.$content());\r\n        this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\r\n        this._colorView.registerKeyHandler(\"escape\", this._escapeHandler.bind(this));\r\n        eventsEngine.on($colorView, \"focus\", function() {\r\n            this.focus()\r\n        }.bind(this))\r\n    },\r\n    _escapeHandler: function() {\r\n        this.close();\r\n        this.focus()\r\n    },\r\n    _applyNewColor: function(value) {\r\n        this.option(\"value\", value);\r\n        if (value) {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n        }\r\n        if (this._colorViewEnterKeyPressed) {\r\n            this.close();\r\n            this._colorViewEnterKeyPressed = false\r\n        }\r\n    },\r\n    _colorViewConfig: function() {\r\n        var that = this;\r\n        return {\r\n            value: that.option(\"value\"),\r\n            matchValue: that.option(\"value\"),\r\n            editAlphaChannel: that.option(\"editAlphaChannel\"),\r\n            applyValueMode: that.option(\"applyValueMode\"),\r\n            focusStateEnabled: that.option(\"focusStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            onEnterKeyPressed: function(_ref) {\r\n                var {\r\n                    event: event\r\n                } = _ref;\r\n                that._colorViewEnterKeyPressed = true;\r\n                if (that._colorView.option(\"value\") !== that.option(\"value\")) {\r\n                    that._saveValueChangeEvent(event);\r\n                    that._applyNewColor(that._colorView.option(\"value\"));\r\n                    that.close()\r\n                }\r\n            },\r\n            onValueChanged: function(_ref2) {\r\n                var {\r\n                    event: event,\r\n                    value: value,\r\n                    previousValue: previousValue\r\n                } = _ref2;\r\n                var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\r\n                var isOldValue = colorUtils.makeRgba(value) === previousValue;\r\n                var changesApplied = instantlyMode || that._colorViewEnterKeyPressed;\r\n                var valueCleared = that._shouldSaveEmptyValue;\r\n                if (isOldValue || !changesApplied || valueCleared) {\r\n                    return\r\n                }\r\n                if (event) {\r\n                    that._saveValueChangeEvent(event)\r\n                }\r\n                that._applyNewColor(value)\r\n            }\r\n        }\r\n    },\r\n    _enterKeyHandler: function(e) {\r\n        var newValue = this._input().val();\r\n        var value = this.option(\"value\");\r\n        var oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\r\n        if (!newValue) {\r\n            return false\r\n        }\r\n        var color = new Color(newValue);\r\n        if (color.colorIsInvalid) {\r\n            this._input().val(oldValue);\r\n            return\r\n        }\r\n        if (newValue !== oldValue) {\r\n            this._applyColorFromInput(newValue);\r\n            this._saveValueChangeEvent(e);\r\n            this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue)\r\n        }\r\n        if (this._colorView) {\r\n            var colorViewValue = this._colorView.option(\"value\");\r\n            if (value !== colorViewValue) {\r\n                this._saveValueChangeEvent(e);\r\n                this.option(\"value\", colorViewValue)\r\n            }\r\n        }\r\n        this.close();\r\n        return false\r\n    },\r\n    _applyButtonHandler: function(e) {\r\n        this._saveValueChangeEvent(e.event);\r\n        this._applyNewColor(this._colorView.option(\"value\"));\r\n        this.callBase()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this._resetInputValue();\r\n        this.callBase()\r\n    },\r\n    _getKeyboardListeners() {\r\n        return this.callBase().concat([this._colorView])\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(COLOR_BOX_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._input().addClass(COLOR_BOX_INPUT_CLASS);\r\n        this._renderColorPreview()\r\n    },\r\n    _renderColorPreview: function() {\r\n        this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\r\n        this._$colorBoxInputContainer = this.$element().children().eq(0);\r\n        this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$textEditorInputContainer);\r\n        if (!this.option(\"value\")) {\r\n            this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED)\r\n        } else {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"))\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.option(\"value\");\r\n        var convertToColor = null !== value && this.option(\"editAlphaChannel\");\r\n        var text = convertToColor ? colorUtils.makeRgba(value) : value;\r\n        this.option(\"text\", text);\r\n        return this.callBase()\r\n    },\r\n    _resetInputValue: function() {\r\n        var $input = this._input();\r\n        var value = this.option(\"value\");\r\n        $input.val(value);\r\n        this._updateColorViewValue(value)\r\n    },\r\n    _updateColorViewValue: function(value) {\r\n        if (this._colorView) {\r\n            this._colorView.option({\r\n                value: value,\r\n                matchValue: value\r\n            })\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var value = this._input().val();\r\n        if (value) {\r\n            value = this._applyColorFromInput(value);\r\n            this._updateColorViewValue(value)\r\n        }\r\n        this.callBase(e, value)\r\n    },\r\n    _applyColorFromInput: function(value) {\r\n        var newColor = new Color(value);\r\n        if (newColor.colorIsInvalid) {\r\n            this._resetInputValue();\r\n            value = this.option(\"value\")\r\n        }\r\n        return value\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        delete this._shouldSaveEmptyValue\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\r\n                if (value) {\r\n                    colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n                } else {\r\n                    this._$colorResultPreview.removeAttr(\"style\")\r\n                }\r\n                if (null === value) {\r\n                    this._shouldSaveEmptyValue = true\r\n                }\r\n                this._updateColorViewValue(value);\r\n                this._shouldSaveEmptyValue = false;\r\n                this.callBase(args);\r\n                break;\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n                this.callBase(args);\r\n                this._popup && this._addPopupBottomClasses();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n            case \"keyStep\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorBox\", ColorBox);\r\nexport default ColorBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
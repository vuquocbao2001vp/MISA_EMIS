{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/tiling.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isFunction as _isFunction } from \"../../core/utils/type\";\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nvar _round = Math.round;\nvar algorithms = {};\nvar defaultAlgorithm;\nexport function getAlgorithm(value) {\n  return algorithms[_normalizeEnum(value)] || _isFunction(value) && value || defaultAlgorithm;\n}\nexport function addAlgorithm(name, callback) {\n  algorithms[name] = callback;\n}\nexport function setDefaultAlgorithm(name) {\n  defaultAlgorithm = algorithms[name];\n}\nvar directionToIndexOffsets = {};\ndirectionToIndexOffsets[-1] = [2, 0];\ndirectionToIndexOffsets[1] = [0, 2];\nexport var getStaticSideIndex = function (rect) {\n  return rect[2] - rect[0] < rect[3] - rect[1] ? 0 : 1;\n};\nexport function buildSidesData(rect, directions, _staticSideIndex) {\n  var staticSideIndex = void 0 !== _staticSideIndex ? _staticSideIndex : getStaticSideIndex(rect);\n  var variedSideIndex = 1 - staticSideIndex;\n  var staticSideDirection = directions[staticSideIndex];\n  var variedSideDirection = directions[variedSideIndex];\n  var staticSideIndexOffsets = directionToIndexOffsets[staticSideDirection];\n  var variedSideIndexOffsets = directionToIndexOffsets[variedSideDirection];\n  return {\n    staticSide: rect[2 + staticSideIndex] - rect[staticSideIndex],\n    variedSide: rect[2 + variedSideIndex] - rect[variedSideIndex],\n    static1: staticSideIndex + staticSideIndexOffsets[0],\n    static2: staticSideIndex + staticSideIndexOffsets[1],\n    varied1: variedSideIndex + variedSideIndexOffsets[0],\n    varied2: variedSideIndex + variedSideIndexOffsets[1],\n    staticDir: staticSideDirection,\n    variedDir: variedSideDirection\n  };\n}\nexport function calculateRectangles(nodes, head, totalRect, sidesData, rowData) {\n  var i;\n  var ii;\n  var variedSidePart = [0, 0, 0, 0];\n  var static1 = sidesData.static1;\n  var static2 = sidesData.static2;\n  var position = totalRect[static1];\n  var dir = sidesData.staticDir;\n  var side = sidesData.staticSide;\n  var sum = rowData.sum;\n  var rect;\n  var delta;\n  variedSidePart[sidesData.varied1] = totalRect[sidesData.varied1];\n  variedSidePart[sidesData.varied2] = totalRect[sidesData.varied1] + sidesData.variedDir * rowData.side;\n\n  for (i = head, ii = head + rowData.count; i < ii; ++i) {\n    rect = variedSidePart.slice();\n    rect[static1] = position;\n    delta = _round(side * nodes[i].value / sum) || 0;\n    sum -= nodes[i].value;\n    side -= delta;\n    position += dir * delta;\n    rect[static2] = position;\n    nodes[i].rect = rect;\n  }\n\n  totalRect[sidesData.varied1] = variedSidePart[sidesData.varied2];\n}","map":{"version":3,"names":["isFunction","_isFunction","normalizeEnum","_normalizeEnum","_round","Math","round","algorithms","defaultAlgorithm","getAlgorithm","value","addAlgorithm","name","callback","setDefaultAlgorithm","directionToIndexOffsets","getStaticSideIndex","rect","buildSidesData","directions","_staticSideIndex","staticSideIndex","variedSideIndex","staticSideDirection","variedSideDirection","staticSideIndexOffsets","variedSideIndexOffsets","staticSide","variedSide","static1","static2","varied1","varied2","staticDir","variedDir","calculateRectangles","nodes","head","totalRect","sidesData","rowData","i","ii","variedSidePart","position","dir","side","sum","delta","count","slice"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/tree_map/tiling.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/tree_map/tiling.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isFunction as _isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nvar _round = Math.round;\r\nvar algorithms = {};\r\nvar defaultAlgorithm;\r\nexport function getAlgorithm(value) {\r\n    return algorithms[_normalizeEnum(value)] || _isFunction(value) && value || defaultAlgorithm\r\n}\r\nexport function addAlgorithm(name, callback) {\r\n    algorithms[name] = callback\r\n}\r\nexport function setDefaultAlgorithm(name) {\r\n    defaultAlgorithm = algorithms[name]\r\n}\r\nvar directionToIndexOffsets = {};\r\ndirectionToIndexOffsets[-1] = [2, 0];\r\ndirectionToIndexOffsets[1] = [0, 2];\r\nexport var getStaticSideIndex = function(rect) {\r\n    return rect[2] - rect[0] < rect[3] - rect[1] ? 0 : 1\r\n};\r\nexport function buildSidesData(rect, directions, _staticSideIndex) {\r\n    var staticSideIndex = void 0 !== _staticSideIndex ? _staticSideIndex : getStaticSideIndex(rect);\r\n    var variedSideIndex = 1 - staticSideIndex;\r\n    var staticSideDirection = directions[staticSideIndex];\r\n    var variedSideDirection = directions[variedSideIndex];\r\n    var staticSideIndexOffsets = directionToIndexOffsets[staticSideDirection];\r\n    var variedSideIndexOffsets = directionToIndexOffsets[variedSideDirection];\r\n    return {\r\n        staticSide: rect[2 + staticSideIndex] - rect[staticSideIndex],\r\n        variedSide: rect[2 + variedSideIndex] - rect[variedSideIndex],\r\n        static1: staticSideIndex + staticSideIndexOffsets[0],\r\n        static2: staticSideIndex + staticSideIndexOffsets[1],\r\n        varied1: variedSideIndex + variedSideIndexOffsets[0],\r\n        varied2: variedSideIndex + variedSideIndexOffsets[1],\r\n        staticDir: staticSideDirection,\r\n        variedDir: variedSideDirection\r\n    }\r\n}\r\nexport function calculateRectangles(nodes, head, totalRect, sidesData, rowData) {\r\n    var i;\r\n    var ii;\r\n    var variedSidePart = [0, 0, 0, 0];\r\n    var static1 = sidesData.static1;\r\n    var static2 = sidesData.static2;\r\n    var position = totalRect[static1];\r\n    var dir = sidesData.staticDir;\r\n    var side = sidesData.staticSide;\r\n    var sum = rowData.sum;\r\n    var rect;\r\n    var delta;\r\n    variedSidePart[sidesData.varied1] = totalRect[sidesData.varied1];\r\n    variedSidePart[sidesData.varied2] = totalRect[sidesData.varied1] + sidesData.variedDir * rowData.side;\r\n    for (i = head, ii = head + rowData.count; i < ii; ++i) {\r\n        rect = variedSidePart.slice();\r\n        rect[static1] = position;\r\n        delta = _round(side * nodes[i].value / sum) || 0;\r\n        sum -= nodes[i].value;\r\n        side -= delta;\r\n        position += dir * delta;\r\n        rect[static2] = position;\r\n        nodes[i].rect = rect\r\n    }\r\n    totalRect[sidesData.varied1] = variedSidePart[sidesData.varied2]\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/**\r\n * DevExtreme (esm/file_management/object_provider.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { ensureDefined } from \"../core/utils/common\";\nimport { compileGetter, compileSetter } from \"../core/utils/data\";\nimport Guid from \"../core/guid\";\nimport { isFunction } from \"../core/utils/type\";\nimport { errors } from \"../data/errors\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport { getWindow } from \"../core/utils/window\";\nimport { fileSaver } from \"../exporter/file_saver\";\nimport Errors from \"../ui/widget/ui.errors\";\nimport JSZip from \"jszip\";\nimport FileSystemProviderBase from \"./provider_base\";\nimport FileSystemError from \"./error\";\nimport ErrorCode from \"./error_codes\";\nimport { pathCombine } from \"./utils\";\nvar window = getWindow();\n\nclass ObjectFileSystemProvider extends FileSystemProviderBase {\n  constructor(options) {\n    options = ensureDefined(options, {});\n    super(options);\n    var initialArray = options.data;\n\n    if (initialArray && !Array.isArray(initialArray)) {\n      throw errors.Error(\"E4006\");\n    }\n\n    var itemsExpr = options.itemsExpr || \"items\";\n    this._subFileItemsGetter = compileGetter(itemsExpr);\n    this._subFileItemsSetter = this._getSetter(itemsExpr);\n    var contentExpr = options.contentExpr || \"content\";\n    this._contentGetter = compileGetter(contentExpr);\n    this._contentSetter = this._getSetter(contentExpr);\n\n    var nameExpr = this._getNameExpr(options);\n\n    this._nameSetter = this._getSetter(nameExpr);\n\n    var isDirExpr = this._getIsDirExpr(options);\n\n    this._getIsDirSetter = this._getSetter(isDirExpr);\n\n    var keyExpr = this._getKeyExpr(options);\n\n    this._keySetter = this._getSetter(keyExpr);\n\n    var sizeExpr = this._getSizeExpr(options);\n\n    this._sizeSetter = this._getSetter(sizeExpr);\n\n    var dateModifiedExpr = this._getDateModifiedExpr(options);\n\n    this._dateModifiedSetter = this._getSetter(dateModifiedExpr);\n    this._data = initialArray || [];\n  }\n\n  getItems(parentDir) {\n    return this._executeActionAsDeferred(() => this._getItems(parentDir), true);\n  }\n\n  renameItem(item, name) {\n    return this._executeActionAsDeferred(() => this._renameItemCore(item, name));\n  }\n\n  _renameItemCore(item, name) {\n    if (!item) {\n      return;\n    }\n\n    var dataItem = this._findDataObject(item);\n\n    this._nameSetter(dataItem, name);\n\n    item.name = name;\n    item.key = this._ensureDataObjectKey(dataItem);\n  }\n\n  createDirectory(parentDir, name) {\n    return this._executeActionAsDeferred(() => {\n      this._validateDirectoryExists(parentDir);\n\n      this._createDataObject(parentDir, name, true);\n    });\n  }\n\n  deleteItems(items) {\n    return items.map(item => this._executeActionAsDeferred(() => this._deleteItem(item)));\n  }\n\n  moveItems(items, destinationDir) {\n    var destinationDataItem = this._findDataObject(destinationDir);\n\n    var array = this._getDirectoryDataItems(destinationDataItem);\n\n    var deferreds = items.map(item => this._executeActionAsDeferred(() => {\n      this._checkAbilityToMoveOrCopyItem(item, destinationDir);\n\n      var dataItem = this._findDataObject(item);\n\n      this._deleteItem(item);\n\n      array.push(dataItem);\n    }));\n    return deferreds;\n  }\n\n  copyItems(items, destinationDir) {\n    var destinationDataItem = this._findDataObject(destinationDir);\n\n    var array = this._getDirectoryDataItems(destinationDataItem);\n\n    var deferreds = items.map(item => this._executeActionAsDeferred(() => {\n      this._checkAbilityToMoveOrCopyItem(item, destinationDir);\n\n      var dataItem = this._findDataObject(item);\n\n      var copiedItem = this._createCopy(dataItem);\n\n      array.push(copiedItem);\n    }));\n    return deferreds;\n  }\n\n  uploadFileChunk(fileData, chunksInfo, destinationDirectory) {\n    if (chunksInfo.chunkIndex > 0) {\n      return chunksInfo.customData.deferred;\n    }\n\n    this._validateDirectoryExists(destinationDirectory);\n\n    var deferred = chunksInfo.customData.deferred = new Deferred();\n\n    var reader = this._createFileReader();\n\n    reader.readAsDataURL(fileData);\n\n    reader.onload = () => {\n      var content = reader.result.split(\",\")[1];\n\n      var dataObj = this._createDataObject(destinationDirectory, fileData.name, false);\n\n      this._sizeSetter(dataObj, fileData.size);\n\n      this._dateModifiedSetter(dataObj, fileData.lastModifiedDate);\n\n      this._contentSetter(dataObj, content);\n\n      deferred.resolve();\n    };\n\n    reader.onerror = error => deferred.reject(error);\n\n    return deferred;\n  }\n\n  downloadItems(items) {\n    if (1 === items.length) {\n      this._downloadSingleFile(items[0]);\n    } else {\n      this._downloadMultipleFiles(items);\n    }\n  }\n\n  _downloadSingleFile(file) {\n    var content = this._getFileContent(file);\n\n    var byteString = window.atob(content);\n    var arrayBuffer = new ArrayBuffer(byteString.length);\n    var array = new Uint8Array(arrayBuffer);\n\n    for (var i = 0; i < byteString.length; i++) {\n      array[i] = byteString.charCodeAt(i);\n    }\n\n    var blob = new window.Blob([arrayBuffer], {\n      type: \"application/octet-stream\"\n    });\n    fileSaver.saveAs(file.name, null, blob);\n  }\n\n  _downloadMultipleFiles(files) {\n    var jsZip = getJSZip();\n    var zip = new jsZip();\n    files.forEach(file => zip.file(file.name, this._getFileContent(file), {\n      base64: true\n    }));\n    var options = {\n      type: \"blob\",\n      compression: \"DEFLATE\",\n      mimeType: \"application/zip\"\n    };\n    var deferred = new Deferred();\n\n    if (zip.generateAsync) {\n      zip.generateAsync(options).then(deferred.resolve);\n    } else {\n      deferred.resolve(zip.generate(options));\n    }\n\n    deferred.done(blob => fileSaver.saveAs(\"files.zip\", null, blob));\n  }\n\n  _getFileContent(file) {\n    var dataItem = this._findDataObject(file);\n\n    return this._contentGetter(dataItem) || \"\";\n  }\n\n  _validateDirectoryExists(directoryInfo) {\n    if (!this._isFileItemExists(directoryInfo) || this._isDirGetter(directoryInfo.fileItem)) {\n      throw new FileSystemError(ErrorCode.DirectoryNotFound, directoryInfo);\n    }\n  }\n\n  _checkAbilityToMoveOrCopyItem(item, destinationDir) {\n    var dataItem = this._findDataObject(item);\n\n    var itemKey = this._getKeyFromDataObject(dataItem, item.parentPath);\n\n    var pathInfo = destinationDir.getFullPathInfo();\n    var currentPath = \"\";\n    pathInfo.forEach(info => {\n      currentPath = pathCombine(currentPath, info.name);\n\n      var pathKey = this._getDataObjectKey(info.key, currentPath);\n\n      if (pathKey === itemKey) {\n        throw new FileSystemError(ErrorCode.Other, item);\n      }\n    });\n  }\n\n  _createDataObject(parentDir, name, isDirectory) {\n    var dataObj = {};\n\n    this._nameSetter(dataObj, name);\n\n    this._getIsDirSetter(dataObj, isDirectory);\n\n    this._keySetter(dataObj, String(new Guid()));\n\n    var parentDataItem = this._findDataObject(parentDir);\n\n    var array = this._getDirectoryDataItems(parentDataItem);\n\n    array.push(dataObj);\n    return dataObj;\n  }\n\n  _createCopy(dataObj) {\n    var copyObj = {};\n\n    this._nameSetter(copyObj, this._nameGetter(dataObj));\n\n    this._getIsDirSetter(copyObj, this._isDirGetter(dataObj));\n\n    var items = this._subFileItemsGetter(dataObj);\n\n    if (Array.isArray(items)) {\n      var itemsCopy = [];\n      items.forEach(childItem => {\n        var childCopy = this._createCopy(childItem);\n\n        itemsCopy.push(childCopy);\n      });\n\n      this._subFileItemsSetter(copyObj, itemsCopy);\n    }\n\n    return copyObj;\n  }\n\n  _deleteItem(fileItem) {\n    var dataItem = this._findDataObject(fileItem);\n\n    var parentDirDataObj = this._findFileItemObj(fileItem.pathInfo);\n\n    var array = this._getDirectoryDataItems(parentDirDataObj);\n\n    var index = array.indexOf(dataItem);\n    array.splice(index, 1);\n  }\n\n  _getDirectoryDataItems(directoryDataObj) {\n    if (!directoryDataObj) {\n      return this._data;\n    }\n\n    var dataItems = this._subFileItemsGetter(directoryDataObj);\n\n    if (!Array.isArray(dataItems)) {\n      dataItems = [];\n\n      this._subFileItemsSetter(directoryDataObj, dataItems);\n    }\n\n    return dataItems;\n  }\n\n  _getItems(parentDir) {\n    this._validateDirectoryExists(parentDir);\n\n    var pathInfo = parentDir.getFullPathInfo();\n    var parentDirKey = pathInfo && pathInfo.length > 0 ? pathInfo[pathInfo.length - 1].key : null;\n    var dirFileObjects = this._data;\n\n    if (parentDirKey) {\n      var directoryEntry = this._findFileItemObj(pathInfo);\n\n      dirFileObjects = directoryEntry && this._subFileItemsGetter(directoryEntry) || [];\n    }\n\n    this._ensureKeysForDuplicateNameItems(dirFileObjects);\n\n    return this._convertDataObjectsToFileItems(dirFileObjects, pathInfo);\n  }\n\n  _ensureKeysForDuplicateNameItems(dataObjects) {\n    var names = {};\n    dataObjects.forEach(obj => {\n      var name = this._nameGetter(obj);\n\n      if (names[name]) {\n        this._ensureDataObjectKey(obj);\n      } else {\n        names[name] = true;\n      }\n    });\n  }\n\n  _findDataObject(item) {\n    if (item.isRoot()) {\n      return null;\n    }\n\n    var result = this._findFileItemObj(item.getFullPathInfo());\n\n    if (!result) {\n      var errorCode = item.isDirectory ? ErrorCode.DirectoryNotFound : ErrorCode.FileNotFound;\n      throw new FileSystemError(errorCode, item);\n    }\n\n    return result;\n  }\n\n  _findFileItemObj(pathInfo) {\n    var _this = this;\n\n    if (!Array.isArray(pathInfo)) {\n      pathInfo = [];\n    }\n\n    var currentPath = \"\";\n    var fileItemObj = null;\n    var fileItemObjects = this._data;\n\n    var _loop = function (i) {\n      fileItemObj = fileItemObjects.find(item => {\n        var hasCorrectFileItemType = _this._isDirGetter(item) || i === pathInfo.length - 1;\n        return _this._getKeyFromDataObject(item, currentPath) === pathInfo[i].key && _this._nameGetter(item) === pathInfo[i].name && hasCorrectFileItemType;\n      });\n\n      if (fileItemObj) {\n        currentPath = pathCombine(currentPath, _this._nameGetter(fileItemObj));\n        fileItemObjects = _this._subFileItemsGetter(fileItemObj);\n      }\n    };\n\n    for (var i = 0; i < pathInfo.length && (0 === i || fileItemObj); i++) {\n      _loop(i);\n    }\n\n    return fileItemObj;\n  }\n\n  _getKeyFromDataObject(dataObj, defaultKeyPrefix) {\n    var key = this._keyGetter(dataObj);\n\n    var relativeName = pathCombine(defaultKeyPrefix, this._nameGetter(dataObj));\n    return this._getDataObjectKey(key, relativeName);\n  }\n\n  _getDataObjectKey(key, relativeName) {\n    return key ? key : relativeName;\n  }\n\n  _ensureDataObjectKey(dataObj) {\n    var key = this._keyGetter(dataObj);\n\n    if (!key) {\n      key = String(new Guid());\n\n      this._keySetter(dataObj, key);\n    }\n\n    return key;\n  }\n\n  _hasSubDirs(dataObj) {\n    var subItems = ensureDefined(this._subFileItemsGetter(dataObj), []);\n\n    if (!Array.isArray(subItems)) {\n      return true;\n    }\n\n    for (var i = 0; i < subItems.length; i++) {\n      if (true === this._isDirGetter(subItems[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _getSetter(expr) {\n    return isFunction(expr) ? expr : compileSetter(expr);\n  }\n\n  _isFileItemExists(fileItem) {\n    return fileItem.isDirectory && fileItem.isRoot() || !!this._findFileItemObj(fileItem.getFullPathInfo());\n  }\n\n  _createFileReader() {\n    return new window.FileReader();\n  }\n\n}\n\nfunction getJSZip() {\n  if (!JSZip) {\n    throw Errors.Error(\"E1041\", \"JSZip\");\n  }\n\n  return JSZip;\n}\n\nexport default ObjectFileSystemProvider;","map":{"version":3,"names":["ensureDefined","compileGetter","compileSetter","Guid","isFunction","errors","Deferred","getWindow","fileSaver","Errors","JSZip","FileSystemProviderBase","FileSystemError","ErrorCode","pathCombine","window","ObjectFileSystemProvider","constructor","options","initialArray","data","Array","isArray","Error","itemsExpr","_subFileItemsGetter","_subFileItemsSetter","_getSetter","contentExpr","_contentGetter","_contentSetter","nameExpr","_getNameExpr","_nameSetter","isDirExpr","_getIsDirExpr","_getIsDirSetter","keyExpr","_getKeyExpr","_keySetter","sizeExpr","_getSizeExpr","_sizeSetter","dateModifiedExpr","_getDateModifiedExpr","_dateModifiedSetter","_data","getItems","parentDir","_executeActionAsDeferred","_getItems","renameItem","item","name","_renameItemCore","dataItem","_findDataObject","key","_ensureDataObjectKey","createDirectory","_validateDirectoryExists","_createDataObject","deleteItems","items","map","_deleteItem","moveItems","destinationDir","destinationDataItem","array","_getDirectoryDataItems","deferreds","_checkAbilityToMoveOrCopyItem","push","copyItems","copiedItem","_createCopy","uploadFileChunk","fileData","chunksInfo","destinationDirectory","chunkIndex","customData","deferred","reader","_createFileReader","readAsDataURL","onload","content","result","split","dataObj","size","lastModifiedDate","resolve","onerror","error","reject","downloadItems","length","_downloadSingleFile","_downloadMultipleFiles","file","_getFileContent","byteString","atob","arrayBuffer","ArrayBuffer","Uint8Array","i","charCodeAt","blob","Blob","type","saveAs","files","jsZip","getJSZip","zip","forEach","base64","compression","mimeType","generateAsync","then","generate","done","directoryInfo","_isFileItemExists","_isDirGetter","fileItem","DirectoryNotFound","itemKey","_getKeyFromDataObject","parentPath","pathInfo","getFullPathInfo","currentPath","info","pathKey","_getDataObjectKey","Other","isDirectory","String","parentDataItem","copyObj","_nameGetter","itemsCopy","childItem","childCopy","parentDirDataObj","_findFileItemObj","index","indexOf","splice","directoryDataObj","dataItems","parentDirKey","dirFileObjects","directoryEntry","_ensureKeysForDuplicateNameItems","_convertDataObjectsToFileItems","dataObjects","names","obj","isRoot","errorCode","FileNotFound","_this","fileItemObj","fileItemObjects","_loop","find","hasCorrectFileItemType","defaultKeyPrefix","_keyGetter","relativeName","_hasSubDirs","subItems","expr","FileReader"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/file_management/object_provider.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/file_management/object_provider.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../core/utils/data\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    errors\r\n} from \"../data/errors\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    fileSaver\r\n} from \"../exporter/file_saver\";\r\nimport Errors from \"../ui/widget/ui.errors\";\r\nimport JSZip from \"jszip\";\r\nimport FileSystemProviderBase from \"./provider_base\";\r\nimport FileSystemError from \"./error\";\r\nimport ErrorCode from \"./error_codes\";\r\nimport {\r\n    pathCombine\r\n} from \"./utils\";\r\nvar window = getWindow();\r\nclass ObjectFileSystemProvider extends FileSystemProviderBase {\r\n    constructor(options) {\r\n        options = ensureDefined(options, {});\r\n        super(options);\r\n        var initialArray = options.data;\r\n        if (initialArray && !Array.isArray(initialArray)) {\r\n            throw errors.Error(\"E4006\")\r\n        }\r\n        var itemsExpr = options.itemsExpr || \"items\";\r\n        this._subFileItemsGetter = compileGetter(itemsExpr);\r\n        this._subFileItemsSetter = this._getSetter(itemsExpr);\r\n        var contentExpr = options.contentExpr || \"content\";\r\n        this._contentGetter = compileGetter(contentExpr);\r\n        this._contentSetter = this._getSetter(contentExpr);\r\n        var nameExpr = this._getNameExpr(options);\r\n        this._nameSetter = this._getSetter(nameExpr);\r\n        var isDirExpr = this._getIsDirExpr(options);\r\n        this._getIsDirSetter = this._getSetter(isDirExpr);\r\n        var keyExpr = this._getKeyExpr(options);\r\n        this._keySetter = this._getSetter(keyExpr);\r\n        var sizeExpr = this._getSizeExpr(options);\r\n        this._sizeSetter = this._getSetter(sizeExpr);\r\n        var dateModifiedExpr = this._getDateModifiedExpr(options);\r\n        this._dateModifiedSetter = this._getSetter(dateModifiedExpr);\r\n        this._data = initialArray || []\r\n    }\r\n    getItems(parentDir) {\r\n        return this._executeActionAsDeferred(() => this._getItems(parentDir), true)\r\n    }\r\n    renameItem(item, name) {\r\n        return this._executeActionAsDeferred(() => this._renameItemCore(item, name))\r\n    }\r\n    _renameItemCore(item, name) {\r\n        if (!item) {\r\n            return\r\n        }\r\n        var dataItem = this._findDataObject(item);\r\n        this._nameSetter(dataItem, name);\r\n        item.name = name;\r\n        item.key = this._ensureDataObjectKey(dataItem)\r\n    }\r\n    createDirectory(parentDir, name) {\r\n        return this._executeActionAsDeferred(() => {\r\n            this._validateDirectoryExists(parentDir);\r\n            this._createDataObject(parentDir, name, true)\r\n        })\r\n    }\r\n    deleteItems(items) {\r\n        return items.map(item => this._executeActionAsDeferred(() => this._deleteItem(item)))\r\n    }\r\n    moveItems(items, destinationDir) {\r\n        var destinationDataItem = this._findDataObject(destinationDir);\r\n        var array = this._getDirectoryDataItems(destinationDataItem);\r\n        var deferreds = items.map(item => this._executeActionAsDeferred(() => {\r\n            this._checkAbilityToMoveOrCopyItem(item, destinationDir);\r\n            var dataItem = this._findDataObject(item);\r\n            this._deleteItem(item);\r\n            array.push(dataItem)\r\n        }));\r\n        return deferreds\r\n    }\r\n    copyItems(items, destinationDir) {\r\n        var destinationDataItem = this._findDataObject(destinationDir);\r\n        var array = this._getDirectoryDataItems(destinationDataItem);\r\n        var deferreds = items.map(item => this._executeActionAsDeferred(() => {\r\n            this._checkAbilityToMoveOrCopyItem(item, destinationDir);\r\n            var dataItem = this._findDataObject(item);\r\n            var copiedItem = this._createCopy(dataItem);\r\n            array.push(copiedItem)\r\n        }));\r\n        return deferreds\r\n    }\r\n    uploadFileChunk(fileData, chunksInfo, destinationDirectory) {\r\n        if (chunksInfo.chunkIndex > 0) {\r\n            return chunksInfo.customData.deferred\r\n        }\r\n        this._validateDirectoryExists(destinationDirectory);\r\n        var deferred = chunksInfo.customData.deferred = new Deferred;\r\n        var reader = this._createFileReader();\r\n        reader.readAsDataURL(fileData);\r\n        reader.onload = () => {\r\n            var content = reader.result.split(\",\")[1];\r\n            var dataObj = this._createDataObject(destinationDirectory, fileData.name, false);\r\n            this._sizeSetter(dataObj, fileData.size);\r\n            this._dateModifiedSetter(dataObj, fileData.lastModifiedDate);\r\n            this._contentSetter(dataObj, content);\r\n            deferred.resolve()\r\n        };\r\n        reader.onerror = error => deferred.reject(error);\r\n        return deferred\r\n    }\r\n    downloadItems(items) {\r\n        if (1 === items.length) {\r\n            this._downloadSingleFile(items[0])\r\n        } else {\r\n            this._downloadMultipleFiles(items)\r\n        }\r\n    }\r\n    _downloadSingleFile(file) {\r\n        var content = this._getFileContent(file);\r\n        var byteString = window.atob(content);\r\n        var arrayBuffer = new ArrayBuffer(byteString.length);\r\n        var array = new Uint8Array(arrayBuffer);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            array[i] = byteString.charCodeAt(i)\r\n        }\r\n        var blob = new window.Blob([arrayBuffer], {\r\n            type: \"application/octet-stream\"\r\n        });\r\n        fileSaver.saveAs(file.name, null, blob)\r\n    }\r\n    _downloadMultipleFiles(files) {\r\n        var jsZip = getJSZip();\r\n        var zip = new jsZip;\r\n        files.forEach(file => zip.file(file.name, this._getFileContent(file), {\r\n            base64: true\r\n        }));\r\n        var options = {\r\n            type: \"blob\",\r\n            compression: \"DEFLATE\",\r\n            mimeType: \"application/zip\"\r\n        };\r\n        var deferred = new Deferred;\r\n        if (zip.generateAsync) {\r\n            zip.generateAsync(options).then(deferred.resolve)\r\n        } else {\r\n            deferred.resolve(zip.generate(options))\r\n        }\r\n        deferred.done(blob => fileSaver.saveAs(\"files.zip\", null, blob))\r\n    }\r\n    _getFileContent(file) {\r\n        var dataItem = this._findDataObject(file);\r\n        return this._contentGetter(dataItem) || \"\"\r\n    }\r\n    _validateDirectoryExists(directoryInfo) {\r\n        if (!this._isFileItemExists(directoryInfo) || this._isDirGetter(directoryInfo.fileItem)) {\r\n            throw new FileSystemError(ErrorCode.DirectoryNotFound, directoryInfo)\r\n        }\r\n    }\r\n    _checkAbilityToMoveOrCopyItem(item, destinationDir) {\r\n        var dataItem = this._findDataObject(item);\r\n        var itemKey = this._getKeyFromDataObject(dataItem, item.parentPath);\r\n        var pathInfo = destinationDir.getFullPathInfo();\r\n        var currentPath = \"\";\r\n        pathInfo.forEach(info => {\r\n            currentPath = pathCombine(currentPath, info.name);\r\n            var pathKey = this._getDataObjectKey(info.key, currentPath);\r\n            if (pathKey === itemKey) {\r\n                throw new FileSystemError(ErrorCode.Other, item)\r\n            }\r\n        })\r\n    }\r\n    _createDataObject(parentDir, name, isDirectory) {\r\n        var dataObj = {};\r\n        this._nameSetter(dataObj, name);\r\n        this._getIsDirSetter(dataObj, isDirectory);\r\n        this._keySetter(dataObj, String(new Guid));\r\n        var parentDataItem = this._findDataObject(parentDir);\r\n        var array = this._getDirectoryDataItems(parentDataItem);\r\n        array.push(dataObj);\r\n        return dataObj\r\n    }\r\n    _createCopy(dataObj) {\r\n        var copyObj = {};\r\n        this._nameSetter(copyObj, this._nameGetter(dataObj));\r\n        this._getIsDirSetter(copyObj, this._isDirGetter(dataObj));\r\n        var items = this._subFileItemsGetter(dataObj);\r\n        if (Array.isArray(items)) {\r\n            var itemsCopy = [];\r\n            items.forEach(childItem => {\r\n                var childCopy = this._createCopy(childItem);\r\n                itemsCopy.push(childCopy)\r\n            });\r\n            this._subFileItemsSetter(copyObj, itemsCopy)\r\n        }\r\n        return copyObj\r\n    }\r\n    _deleteItem(fileItem) {\r\n        var dataItem = this._findDataObject(fileItem);\r\n        var parentDirDataObj = this._findFileItemObj(fileItem.pathInfo);\r\n        var array = this._getDirectoryDataItems(parentDirDataObj);\r\n        var index = array.indexOf(dataItem);\r\n        array.splice(index, 1)\r\n    }\r\n    _getDirectoryDataItems(directoryDataObj) {\r\n        if (!directoryDataObj) {\r\n            return this._data\r\n        }\r\n        var dataItems = this._subFileItemsGetter(directoryDataObj);\r\n        if (!Array.isArray(dataItems)) {\r\n            dataItems = [];\r\n            this._subFileItemsSetter(directoryDataObj, dataItems)\r\n        }\r\n        return dataItems\r\n    }\r\n    _getItems(parentDir) {\r\n        this._validateDirectoryExists(parentDir);\r\n        var pathInfo = parentDir.getFullPathInfo();\r\n        var parentDirKey = pathInfo && pathInfo.length > 0 ? pathInfo[pathInfo.length - 1].key : null;\r\n        var dirFileObjects = this._data;\r\n        if (parentDirKey) {\r\n            var directoryEntry = this._findFileItemObj(pathInfo);\r\n            dirFileObjects = directoryEntry && this._subFileItemsGetter(directoryEntry) || []\r\n        }\r\n        this._ensureKeysForDuplicateNameItems(dirFileObjects);\r\n        return this._convertDataObjectsToFileItems(dirFileObjects, pathInfo)\r\n    }\r\n    _ensureKeysForDuplicateNameItems(dataObjects) {\r\n        var names = {};\r\n        dataObjects.forEach(obj => {\r\n            var name = this._nameGetter(obj);\r\n            if (names[name]) {\r\n                this._ensureDataObjectKey(obj)\r\n            } else {\r\n                names[name] = true\r\n            }\r\n        })\r\n    }\r\n    _findDataObject(item) {\r\n        if (item.isRoot()) {\r\n            return null\r\n        }\r\n        var result = this._findFileItemObj(item.getFullPathInfo());\r\n        if (!result) {\r\n            var errorCode = item.isDirectory ? ErrorCode.DirectoryNotFound : ErrorCode.FileNotFound;\r\n            throw new FileSystemError(errorCode, item)\r\n        }\r\n        return result\r\n    }\r\n    _findFileItemObj(pathInfo) {\r\n        var _this = this;\r\n        if (!Array.isArray(pathInfo)) {\r\n            pathInfo = []\r\n        }\r\n        var currentPath = \"\";\r\n        var fileItemObj = null;\r\n        var fileItemObjects = this._data;\r\n        var _loop = function(i) {\r\n            fileItemObj = fileItemObjects.find(item => {\r\n                var hasCorrectFileItemType = _this._isDirGetter(item) || i === pathInfo.length - 1;\r\n                return _this._getKeyFromDataObject(item, currentPath) === pathInfo[i].key && _this._nameGetter(item) === pathInfo[i].name && hasCorrectFileItemType\r\n            });\r\n            if (fileItemObj) {\r\n                currentPath = pathCombine(currentPath, _this._nameGetter(fileItemObj));\r\n                fileItemObjects = _this._subFileItemsGetter(fileItemObj)\r\n            }\r\n        };\r\n        for (var i = 0; i < pathInfo.length && (0 === i || fileItemObj); i++) {\r\n            _loop(i)\r\n        }\r\n        return fileItemObj\r\n    }\r\n    _getKeyFromDataObject(dataObj, defaultKeyPrefix) {\r\n        var key = this._keyGetter(dataObj);\r\n        var relativeName = pathCombine(defaultKeyPrefix, this._nameGetter(dataObj));\r\n        return this._getDataObjectKey(key, relativeName)\r\n    }\r\n    _getDataObjectKey(key, relativeName) {\r\n        return key ? key : relativeName\r\n    }\r\n    _ensureDataObjectKey(dataObj) {\r\n        var key = this._keyGetter(dataObj);\r\n        if (!key) {\r\n            key = String(new Guid);\r\n            this._keySetter(dataObj, key)\r\n        }\r\n        return key\r\n    }\r\n    _hasSubDirs(dataObj) {\r\n        var subItems = ensureDefined(this._subFileItemsGetter(dataObj), []);\r\n        if (!Array.isArray(subItems)) {\r\n            return true\r\n        }\r\n        for (var i = 0; i < subItems.length; i++) {\r\n            if (true === this._isDirGetter(subItems[i])) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _getSetter(expr) {\r\n        return isFunction(expr) ? expr : compileSetter(expr)\r\n    }\r\n    _isFileItemExists(fileItem) {\r\n        return fileItem.isDirectory && fileItem.isRoot() || !!this._findFileItemObj(fileItem.getFullPathInfo())\r\n    }\r\n    _createFileReader() {\r\n        return new window.FileReader\r\n    }\r\n}\r\n\r\nfunction getJSZip() {\r\n    if (!JSZip) {\r\n        throw Errors.Error(\"E1041\", \"JSZip\")\r\n    }\r\n    return JSZip\r\n}\r\nexport default ObjectFileSystemProvider;\r\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,aADJ,QAEO,sBAFP;AAGA,SACIC,aADJ,EAEIC,aAFJ,QAGO,oBAHP;AAIA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SACIC,UADJ,QAEO,oBAFP;AAGA,SACIC,MADJ,QAEO,gBAFP;AAGA,SACIC,QADJ,QAEO,wBAFP;AAGA,SACIC,SADJ,QAEO,sBAFP;AAGA,SACIC,SADJ,QAEO,wBAFP;AAGA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,MAAmC,iBAAnC;AACA,OAAOC,eAAP,MAA4B,SAA5B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SACIC,WADJ,QAEO,SAFP;AAGA,IAAIC,MAAM,GAAGR,SAAS,EAAtB;;AACA,MAAMS,wBAAN,SAAuCL,sBAAvC,CAA8D;EAC1DM,WAAW,CAACC,OAAD,EAAU;IACjBA,OAAO,GAAGlB,aAAa,CAACkB,OAAD,EAAU,EAAV,CAAvB;IACA,MAAMA,OAAN;IACA,IAAIC,YAAY,GAAGD,OAAO,CAACE,IAA3B;;IACA,IAAID,YAAY,IAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,YAAd,CAArB,EAAkD;MAC9C,MAAMd,MAAM,CAACkB,KAAP,CAAa,OAAb,CAAN;IACH;;IACD,IAAIC,SAAS,GAAGN,OAAO,CAACM,SAAR,IAAqB,OAArC;IACA,KAAKC,mBAAL,GAA2BxB,aAAa,CAACuB,SAAD,CAAxC;IACA,KAAKE,mBAAL,GAA2B,KAAKC,UAAL,CAAgBH,SAAhB,CAA3B;IACA,IAAII,WAAW,GAAGV,OAAO,CAACU,WAAR,IAAuB,SAAzC;IACA,KAAKC,cAAL,GAAsB5B,aAAa,CAAC2B,WAAD,CAAnC;IACA,KAAKE,cAAL,GAAsB,KAAKH,UAAL,CAAgBC,WAAhB,CAAtB;;IACA,IAAIG,QAAQ,GAAG,KAAKC,YAAL,CAAkBd,OAAlB,CAAf;;IACA,KAAKe,WAAL,GAAmB,KAAKN,UAAL,CAAgBI,QAAhB,CAAnB;;IACA,IAAIG,SAAS,GAAG,KAAKC,aAAL,CAAmBjB,OAAnB,CAAhB;;IACA,KAAKkB,eAAL,GAAuB,KAAKT,UAAL,CAAgBO,SAAhB,CAAvB;;IACA,IAAIG,OAAO,GAAG,KAAKC,WAAL,CAAiBpB,OAAjB,CAAd;;IACA,KAAKqB,UAAL,GAAkB,KAAKZ,UAAL,CAAgBU,OAAhB,CAAlB;;IACA,IAAIG,QAAQ,GAAG,KAAKC,YAAL,CAAkBvB,OAAlB,CAAf;;IACA,KAAKwB,WAAL,GAAmB,KAAKf,UAAL,CAAgBa,QAAhB,CAAnB;;IACA,IAAIG,gBAAgB,GAAG,KAAKC,oBAAL,CAA0B1B,OAA1B,CAAvB;;IACA,KAAK2B,mBAAL,GAA2B,KAAKlB,UAAL,CAAgBgB,gBAAhB,CAA3B;IACA,KAAKG,KAAL,GAAa3B,YAAY,IAAI,EAA7B;EACH;;EACD4B,QAAQ,CAACC,SAAD,EAAY;IAChB,OAAO,KAAKC,wBAAL,CAA8B,MAAM,KAAKC,SAAL,CAAeF,SAAf,CAApC,EAA+D,IAA/D,CAAP;EACH;;EACDG,UAAU,CAACC,IAAD,EAAOC,IAAP,EAAa;IACnB,OAAO,KAAKJ,wBAAL,CAA8B,MAAM,KAAKK,eAAL,CAAqBF,IAArB,EAA2BC,IAA3B,CAApC,CAAP;EACH;;EACDC,eAAe,CAACF,IAAD,EAAOC,IAAP,EAAa;IACxB,IAAI,CAACD,IAAL,EAAW;MACP;IACH;;IACD,IAAIG,QAAQ,GAAG,KAAKC,eAAL,CAAqBJ,IAArB,CAAf;;IACA,KAAKnB,WAAL,CAAiBsB,QAAjB,EAA2BF,IAA3B;;IACAD,IAAI,CAACC,IAAL,GAAYA,IAAZ;IACAD,IAAI,CAACK,GAAL,GAAW,KAAKC,oBAAL,CAA0BH,QAA1B,CAAX;EACH;;EACDI,eAAe,CAACX,SAAD,EAAYK,IAAZ,EAAkB;IAC7B,OAAO,KAAKJ,wBAAL,CAA8B,MAAM;MACvC,KAAKW,wBAAL,CAA8BZ,SAA9B;;MACA,KAAKa,iBAAL,CAAuBb,SAAvB,EAAkCK,IAAlC,EAAwC,IAAxC;IACH,CAHM,CAAP;EAIH;;EACDS,WAAW,CAACC,KAAD,EAAQ;IACf,OAAOA,KAAK,CAACC,GAAN,CAAUZ,IAAI,IAAI,KAAKH,wBAAL,CAA8B,MAAM,KAAKgB,WAAL,CAAiBb,IAAjB,CAApC,CAAlB,CAAP;EACH;;EACDc,SAAS,CAACH,KAAD,EAAQI,cAAR,EAAwB;IAC7B,IAAIC,mBAAmB,GAAG,KAAKZ,eAAL,CAAqBW,cAArB,CAA1B;;IACA,IAAIE,KAAK,GAAG,KAAKC,sBAAL,CAA4BF,mBAA5B,CAAZ;;IACA,IAAIG,SAAS,GAAGR,KAAK,CAACC,GAAN,CAAUZ,IAAI,IAAI,KAAKH,wBAAL,CAA8B,MAAM;MAClE,KAAKuB,6BAAL,CAAmCpB,IAAnC,EAAyCe,cAAzC;;MACA,IAAIZ,QAAQ,GAAG,KAAKC,eAAL,CAAqBJ,IAArB,CAAf;;MACA,KAAKa,WAAL,CAAiBb,IAAjB;;MACAiB,KAAK,CAACI,IAAN,CAAWlB,QAAX;IACH,CALiC,CAAlB,CAAhB;IAMA,OAAOgB,SAAP;EACH;;EACDG,SAAS,CAACX,KAAD,EAAQI,cAAR,EAAwB;IAC7B,IAAIC,mBAAmB,GAAG,KAAKZ,eAAL,CAAqBW,cAArB,CAA1B;;IACA,IAAIE,KAAK,GAAG,KAAKC,sBAAL,CAA4BF,mBAA5B,CAAZ;;IACA,IAAIG,SAAS,GAAGR,KAAK,CAACC,GAAN,CAAUZ,IAAI,IAAI,KAAKH,wBAAL,CAA8B,MAAM;MAClE,KAAKuB,6BAAL,CAAmCpB,IAAnC,EAAyCe,cAAzC;;MACA,IAAIZ,QAAQ,GAAG,KAAKC,eAAL,CAAqBJ,IAArB,CAAf;;MACA,IAAIuB,UAAU,GAAG,KAAKC,WAAL,CAAiBrB,QAAjB,CAAjB;;MACAc,KAAK,CAACI,IAAN,CAAWE,UAAX;IACH,CALiC,CAAlB,CAAhB;IAMA,OAAOJ,SAAP;EACH;;EACDM,eAAe,CAACC,QAAD,EAAWC,UAAX,EAAuBC,oBAAvB,EAA6C;IACxD,IAAID,UAAU,CAACE,UAAX,GAAwB,CAA5B,EAA+B;MAC3B,OAAOF,UAAU,CAACG,UAAX,CAAsBC,QAA7B;IACH;;IACD,KAAKvB,wBAAL,CAA8BoB,oBAA9B;;IACA,IAAIG,QAAQ,GAAGJ,UAAU,CAACG,UAAX,CAAsBC,QAAtB,GAAiC,IAAI7E,QAAJ,EAAhD;;IACA,IAAI8E,MAAM,GAAG,KAAKC,iBAAL,EAAb;;IACAD,MAAM,CAACE,aAAP,CAAqBR,QAArB;;IACAM,MAAM,CAACG,MAAP,GAAgB,MAAM;MAClB,IAAIC,OAAO,GAAGJ,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAd;;MACA,IAAIC,OAAO,GAAG,KAAK9B,iBAAL,CAAuBmB,oBAAvB,EAA6CF,QAAQ,CAACzB,IAAtD,EAA4D,KAA5D,CAAd;;MACA,KAAKX,WAAL,CAAiBiD,OAAjB,EAA0Bb,QAAQ,CAACc,IAAnC;;MACA,KAAK/C,mBAAL,CAAyB8C,OAAzB,EAAkCb,QAAQ,CAACe,gBAA3C;;MACA,KAAK/D,cAAL,CAAoB6D,OAApB,EAA6BH,OAA7B;;MACAL,QAAQ,CAACW,OAAT;IACH,CAPD;;IAQAV,MAAM,CAACW,OAAP,GAAiBC,KAAK,IAAIb,QAAQ,CAACc,MAAT,CAAgBD,KAAhB,CAA1B;;IACA,OAAOb,QAAP;EACH;;EACDe,aAAa,CAACnC,KAAD,EAAQ;IACjB,IAAI,MAAMA,KAAK,CAACoC,MAAhB,EAAwB;MACpB,KAAKC,mBAAL,CAAyBrC,KAAK,CAAC,CAAD,CAA9B;IACH,CAFD,MAEO;MACH,KAAKsC,sBAAL,CAA4BtC,KAA5B;IACH;EACJ;;EACDqC,mBAAmB,CAACE,IAAD,EAAO;IACtB,IAAId,OAAO,GAAG,KAAKe,eAAL,CAAqBD,IAArB,CAAd;;IACA,IAAIE,UAAU,GAAGzF,MAAM,CAAC0F,IAAP,CAAYjB,OAAZ,CAAjB;IACA,IAAIkB,WAAW,GAAG,IAAIC,WAAJ,CAAgBH,UAAU,CAACL,MAA3B,CAAlB;IACA,IAAI9B,KAAK,GAAG,IAAIuC,UAAJ,CAAeF,WAAf,CAAZ;;IACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACL,MAA/B,EAAuCU,CAAC,EAAxC,EAA4C;MACxCxC,KAAK,CAACwC,CAAD,CAAL,GAAWL,UAAU,CAACM,UAAX,CAAsBD,CAAtB,CAAX;IACH;;IACD,IAAIE,IAAI,GAAG,IAAIhG,MAAM,CAACiG,IAAX,CAAgB,CAACN,WAAD,CAAhB,EAA+B;MACtCO,IAAI,EAAE;IADgC,CAA/B,CAAX;IAGAzG,SAAS,CAAC0G,MAAV,CAAiBZ,IAAI,CAACjD,IAAtB,EAA4B,IAA5B,EAAkC0D,IAAlC;EACH;;EACDV,sBAAsB,CAACc,KAAD,EAAQ;IAC1B,IAAIC,KAAK,GAAGC,QAAQ,EAApB;IACA,IAAIC,GAAG,GAAG,IAAIF,KAAJ,EAAV;IACAD,KAAK,CAACI,OAAN,CAAcjB,IAAI,IAAIgB,GAAG,CAAChB,IAAJ,CAASA,IAAI,CAACjD,IAAd,EAAoB,KAAKkD,eAAL,CAAqBD,IAArB,CAApB,EAAgD;MAClEkB,MAAM,EAAE;IAD0D,CAAhD,CAAtB;IAGA,IAAItG,OAAO,GAAG;MACV+F,IAAI,EAAE,MADI;MAEVQ,WAAW,EAAE,SAFH;MAGVC,QAAQ,EAAE;IAHA,CAAd;IAKA,IAAIvC,QAAQ,GAAG,IAAI7E,QAAJ,EAAf;;IACA,IAAIgH,GAAG,CAACK,aAAR,EAAuB;MACnBL,GAAG,CAACK,aAAJ,CAAkBzG,OAAlB,EAA2B0G,IAA3B,CAAgCzC,QAAQ,CAACW,OAAzC;IACH,CAFD,MAEO;MACHX,QAAQ,CAACW,OAAT,CAAiBwB,GAAG,CAACO,QAAJ,CAAa3G,OAAb,CAAjB;IACH;;IACDiE,QAAQ,CAAC2C,IAAT,CAAcf,IAAI,IAAIvG,SAAS,CAAC0G,MAAV,CAAiB,WAAjB,EAA8B,IAA9B,EAAoCH,IAApC,CAAtB;EACH;;EACDR,eAAe,CAACD,IAAD,EAAO;IAClB,IAAI/C,QAAQ,GAAG,KAAKC,eAAL,CAAqB8C,IAArB,CAAf;;IACA,OAAO,KAAKzE,cAAL,CAAoB0B,QAApB,KAAiC,EAAxC;EACH;;EACDK,wBAAwB,CAACmE,aAAD,EAAgB;IACpC,IAAI,CAAC,KAAKC,iBAAL,CAAuBD,aAAvB,CAAD,IAA0C,KAAKE,YAAL,CAAkBF,aAAa,CAACG,QAAhC,CAA9C,EAAyF;MACrF,MAAM,IAAItH,eAAJ,CAAoBC,SAAS,CAACsH,iBAA9B,EAAiDJ,aAAjD,CAAN;IACH;EACJ;;EACDvD,6BAA6B,CAACpB,IAAD,EAAOe,cAAP,EAAuB;IAChD,IAAIZ,QAAQ,GAAG,KAAKC,eAAL,CAAqBJ,IAArB,CAAf;;IACA,IAAIgF,OAAO,GAAG,KAAKC,qBAAL,CAA2B9E,QAA3B,EAAqCH,IAAI,CAACkF,UAA1C,CAAd;;IACA,IAAIC,QAAQ,GAAGpE,cAAc,CAACqE,eAAf,EAAf;IACA,IAAIC,WAAW,GAAG,EAAlB;IACAF,QAAQ,CAAChB,OAAT,CAAiBmB,IAAI,IAAI;MACrBD,WAAW,GAAG3H,WAAW,CAAC2H,WAAD,EAAcC,IAAI,CAACrF,IAAnB,CAAzB;;MACA,IAAIsF,OAAO,GAAG,KAAKC,iBAAL,CAAuBF,IAAI,CAACjF,GAA5B,EAAiCgF,WAAjC,CAAd;;MACA,IAAIE,OAAO,KAAKP,OAAhB,EAAyB;QACrB,MAAM,IAAIxH,eAAJ,CAAoBC,SAAS,CAACgI,KAA9B,EAAqCzF,IAArC,CAAN;MACH;IACJ,CAND;EAOH;;EACDS,iBAAiB,CAACb,SAAD,EAAYK,IAAZ,EAAkByF,WAAlB,EAA+B;IAC5C,IAAInD,OAAO,GAAG,EAAd;;IACA,KAAK1D,WAAL,CAAiB0D,OAAjB,EAA0BtC,IAA1B;;IACA,KAAKjB,eAAL,CAAqBuD,OAArB,EAA8BmD,WAA9B;;IACA,KAAKvG,UAAL,CAAgBoD,OAAhB,EAAyBoD,MAAM,CAAC,IAAI5I,IAAJ,EAAD,CAA/B;;IACA,IAAI6I,cAAc,GAAG,KAAKxF,eAAL,CAAqBR,SAArB,CAArB;;IACA,IAAIqB,KAAK,GAAG,KAAKC,sBAAL,CAA4B0E,cAA5B,CAAZ;;IACA3E,KAAK,CAACI,IAAN,CAAWkB,OAAX;IACA,OAAOA,OAAP;EACH;;EACDf,WAAW,CAACe,OAAD,EAAU;IACjB,IAAIsD,OAAO,GAAG,EAAd;;IACA,KAAKhH,WAAL,CAAiBgH,OAAjB,EAA0B,KAAKC,WAAL,CAAiBvD,OAAjB,CAA1B;;IACA,KAAKvD,eAAL,CAAqB6G,OAArB,EAA8B,KAAKhB,YAAL,CAAkBtC,OAAlB,CAA9B;;IACA,IAAI5B,KAAK,GAAG,KAAKtC,mBAAL,CAAyBkE,OAAzB,CAAZ;;IACA,IAAItE,KAAK,CAACC,OAAN,CAAcyC,KAAd,CAAJ,EAA0B;MACtB,IAAIoF,SAAS,GAAG,EAAhB;MACApF,KAAK,CAACwD,OAAN,CAAc6B,SAAS,IAAI;QACvB,IAAIC,SAAS,GAAG,KAAKzE,WAAL,CAAiBwE,SAAjB,CAAhB;;QACAD,SAAS,CAAC1E,IAAV,CAAe4E,SAAf;MACH,CAHD;;MAIA,KAAK3H,mBAAL,CAAyBuH,OAAzB,EAAkCE,SAAlC;IACH;;IACD,OAAOF,OAAP;EACH;;EACDhF,WAAW,CAACiE,QAAD,EAAW;IAClB,IAAI3E,QAAQ,GAAG,KAAKC,eAAL,CAAqB0E,QAArB,CAAf;;IACA,IAAIoB,gBAAgB,GAAG,KAAKC,gBAAL,CAAsBrB,QAAQ,CAACK,QAA/B,CAAvB;;IACA,IAAIlE,KAAK,GAAG,KAAKC,sBAAL,CAA4BgF,gBAA5B,CAAZ;;IACA,IAAIE,KAAK,GAAGnF,KAAK,CAACoF,OAAN,CAAclG,QAAd,CAAZ;IACAc,KAAK,CAACqF,MAAN,CAAaF,KAAb,EAAoB,CAApB;EACH;;EACDlF,sBAAsB,CAACqF,gBAAD,EAAmB;IACrC,IAAI,CAACA,gBAAL,EAAuB;MACnB,OAAO,KAAK7G,KAAZ;IACH;;IACD,IAAI8G,SAAS,GAAG,KAAKnI,mBAAL,CAAyBkI,gBAAzB,CAAhB;;IACA,IAAI,CAACtI,KAAK,CAACC,OAAN,CAAcsI,SAAd,CAAL,EAA+B;MAC3BA,SAAS,GAAG,EAAZ;;MACA,KAAKlI,mBAAL,CAAyBiI,gBAAzB,EAA2CC,SAA3C;IACH;;IACD,OAAOA,SAAP;EACH;;EACD1G,SAAS,CAACF,SAAD,EAAY;IACjB,KAAKY,wBAAL,CAA8BZ,SAA9B;;IACA,IAAIuF,QAAQ,GAAGvF,SAAS,CAACwF,eAAV,EAAf;IACA,IAAIqB,YAAY,GAAGtB,QAAQ,IAAIA,QAAQ,CAACpC,MAAT,GAAkB,CAA9B,GAAkCoC,QAAQ,CAACA,QAAQ,CAACpC,MAAT,GAAkB,CAAnB,CAAR,CAA8B1C,GAAhE,GAAsE,IAAzF;IACA,IAAIqG,cAAc,GAAG,KAAKhH,KAA1B;;IACA,IAAI+G,YAAJ,EAAkB;MACd,IAAIE,cAAc,GAAG,KAAKR,gBAAL,CAAsBhB,QAAtB,CAArB;;MACAuB,cAAc,GAAGC,cAAc,IAAI,KAAKtI,mBAAL,CAAyBsI,cAAzB,CAAlB,IAA8D,EAA/E;IACH;;IACD,KAAKC,gCAAL,CAAsCF,cAAtC;;IACA,OAAO,KAAKG,8BAAL,CAAoCH,cAApC,EAAoDvB,QAApD,CAAP;EACH;;EACDyB,gCAAgC,CAACE,WAAD,EAAc;IAC1C,IAAIC,KAAK,GAAG,EAAZ;IACAD,WAAW,CAAC3C,OAAZ,CAAoB6C,GAAG,IAAI;MACvB,IAAI/G,IAAI,GAAG,KAAK6F,WAAL,CAAiBkB,GAAjB,CAAX;;MACA,IAAID,KAAK,CAAC9G,IAAD,CAAT,EAAiB;QACb,KAAKK,oBAAL,CAA0B0G,GAA1B;MACH,CAFD,MAEO;QACHD,KAAK,CAAC9G,IAAD,CAAL,GAAc,IAAd;MACH;IACJ,CAPD;EAQH;;EACDG,eAAe,CAACJ,IAAD,EAAO;IAClB,IAAIA,IAAI,CAACiH,MAAL,EAAJ,EAAmB;MACf,OAAO,IAAP;IACH;;IACD,IAAI5E,MAAM,GAAG,KAAK8D,gBAAL,CAAsBnG,IAAI,CAACoF,eAAL,EAAtB,CAAb;;IACA,IAAI,CAAC/C,MAAL,EAAa;MACT,IAAI6E,SAAS,GAAGlH,IAAI,CAAC0F,WAAL,GAAmBjI,SAAS,CAACsH,iBAA7B,GAAiDtH,SAAS,CAAC0J,YAA3E;MACA,MAAM,IAAI3J,eAAJ,CAAoB0J,SAApB,EAA+BlH,IAA/B,CAAN;IACH;;IACD,OAAOqC,MAAP;EACH;;EACD8D,gBAAgB,CAAChB,QAAD,EAAW;IACvB,IAAIiC,KAAK,GAAG,IAAZ;;IACA,IAAI,CAACnJ,KAAK,CAACC,OAAN,CAAciH,QAAd,CAAL,EAA8B;MAC1BA,QAAQ,GAAG,EAAX;IACH;;IACD,IAAIE,WAAW,GAAG,EAAlB;IACA,IAAIgC,WAAW,GAAG,IAAlB;IACA,IAAIC,eAAe,GAAG,KAAK5H,KAA3B;;IACA,IAAI6H,KAAK,GAAG,UAAS9D,CAAT,EAAY;MACpB4D,WAAW,GAAGC,eAAe,CAACE,IAAhB,CAAqBxH,IAAI,IAAI;QACvC,IAAIyH,sBAAsB,GAAGL,KAAK,CAACvC,YAAN,CAAmB7E,IAAnB,KAA4ByD,CAAC,KAAK0B,QAAQ,CAACpC,MAAT,GAAkB,CAAjF;QACA,OAAOqE,KAAK,CAACnC,qBAAN,CAA4BjF,IAA5B,EAAkCqF,WAAlC,MAAmDF,QAAQ,CAAC1B,CAAD,CAAR,CAAYpD,GAA/D,IAAsE+G,KAAK,CAACtB,WAAN,CAAkB9F,IAAlB,MAA4BmF,QAAQ,CAAC1B,CAAD,CAAR,CAAYxD,IAA9G,IAAsHwH,sBAA7H;MACH,CAHa,CAAd;;MAIA,IAAIJ,WAAJ,EAAiB;QACbhC,WAAW,GAAG3H,WAAW,CAAC2H,WAAD,EAAc+B,KAAK,CAACtB,WAAN,CAAkBuB,WAAlB,CAAd,CAAzB;QACAC,eAAe,GAAGF,KAAK,CAAC/I,mBAAN,CAA0BgJ,WAA1B,CAAlB;MACH;IACJ,CATD;;IAUA,KAAK,IAAI5D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,QAAQ,CAACpC,MAAb,KAAwB,MAAMU,CAAN,IAAW4D,WAAnC,CAAhB,EAAiE5D,CAAC,EAAlE,EAAsE;MAClE8D,KAAK,CAAC9D,CAAD,CAAL;IACH;;IACD,OAAO4D,WAAP;EACH;;EACDpC,qBAAqB,CAAC1C,OAAD,EAAUmF,gBAAV,EAA4B;IAC7C,IAAIrH,GAAG,GAAG,KAAKsH,UAAL,CAAgBpF,OAAhB,CAAV;;IACA,IAAIqF,YAAY,GAAGlK,WAAW,CAACgK,gBAAD,EAAmB,KAAK5B,WAAL,CAAiBvD,OAAjB,CAAnB,CAA9B;IACA,OAAO,KAAKiD,iBAAL,CAAuBnF,GAAvB,EAA4BuH,YAA5B,CAAP;EACH;;EACDpC,iBAAiB,CAACnF,GAAD,EAAMuH,YAAN,EAAoB;IACjC,OAAOvH,GAAG,GAAGA,GAAH,GAASuH,YAAnB;EACH;;EACDtH,oBAAoB,CAACiC,OAAD,EAAU;IAC1B,IAAIlC,GAAG,GAAG,KAAKsH,UAAL,CAAgBpF,OAAhB,CAAV;;IACA,IAAI,CAAClC,GAAL,EAAU;MACNA,GAAG,GAAGsF,MAAM,CAAC,IAAI5I,IAAJ,EAAD,CAAZ;;MACA,KAAKoC,UAAL,CAAgBoD,OAAhB,EAAyBlC,GAAzB;IACH;;IACD,OAAOA,GAAP;EACH;;EACDwH,WAAW,CAACtF,OAAD,EAAU;IACjB,IAAIuF,QAAQ,GAAGlL,aAAa,CAAC,KAAKyB,mBAAL,CAAyBkE,OAAzB,CAAD,EAAoC,EAApC,CAA5B;;IACA,IAAI,CAACtE,KAAK,CAACC,OAAN,CAAc4J,QAAd,CAAL,EAA8B;MAC1B,OAAO,IAAP;IACH;;IACD,KAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqE,QAAQ,CAAC/E,MAA7B,EAAqCU,CAAC,EAAtC,EAA0C;MACtC,IAAI,SAAS,KAAKoB,YAAL,CAAkBiD,QAAQ,CAACrE,CAAD,CAA1B,CAAb,EAA6C;QACzC,OAAO,IAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH;;EACDlF,UAAU,CAACwJ,IAAD,EAAO;IACb,OAAO/K,UAAU,CAAC+K,IAAD,CAAV,GAAmBA,IAAnB,GAA0BjL,aAAa,CAACiL,IAAD,CAA9C;EACH;;EACDnD,iBAAiB,CAACE,QAAD,EAAW;IACxB,OAAOA,QAAQ,CAACY,WAAT,IAAwBZ,QAAQ,CAACmC,MAAT,EAAxB,IAA6C,CAAC,CAAC,KAAKd,gBAAL,CAAsBrB,QAAQ,CAACM,eAAT,EAAtB,CAAtD;EACH;;EACDnD,iBAAiB,GAAG;IAChB,OAAO,IAAItE,MAAM,CAACqK,UAAX,EAAP;EACH;;AAhSyD;;AAmS9D,SAAS/D,QAAT,GAAoB;EAChB,IAAI,CAAC3G,KAAL,EAAY;IACR,MAAMD,MAAM,CAACc,KAAP,CAAa,OAAb,EAAsB,OAAtB,CAAN;EACH;;EACD,OAAOb,KAAP;AACH;;AACD,eAAeM,wBAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.discrete.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nfunction discreteColorizer(options, themeManager, root) {\n  var palette = themeManager.createPalette(options.palette, {\n    useHighlight: true,\n    extensionMode: options.paletteExtensionMode,\n    count: options.colorizeGroups ? getNodesCount(root) : getLeafsCount(root)\n  });\n  return (options.colorizeGroups ? discreteGroupColorizer : discreteLeafColorizer)(palette, root);\n}\n\nfunction getLeafsCount(root) {\n  var allNodes = root.nodes.slice();\n  var i;\n  var ii = allNodes.length;\n  var count = 0;\n  var node;\n\n  for (i = 0; i < ii; ++i) {\n    node = allNodes[i];\n\n    if (node.isNode()) {\n      count = Math.max(count, getLeafsCount(node));\n    } else {\n      count += 1;\n    }\n  }\n\n  return count;\n}\n\nfunction discreteLeafColorizer(palette) {\n  var colors = palette.generateColors();\n  return function (node) {\n    return colors[node.index];\n  };\n}\n\nfunction getNodesCount(root) {\n  var allNodes = root.nodes.slice();\n  var i;\n  var ii = allNodes.length;\n  var count = 0;\n  var node;\n\n  for (i = 0; i < ii; ++i) {\n    node = allNodes[i];\n\n    if (node.isNode()) {\n      count += getNodesCount(node) + 1;\n    }\n  }\n\n  return count;\n}\n\nfunction prepareDiscreteGroupColors(palette, root) {\n  var colors = {};\n  var allNodes = root.nodes.slice();\n  var i;\n  var ii = allNodes.length;\n  var node;\n\n  for (i = 0; i < ii; ++i) {\n    node = allNodes[i];\n\n    if (node.isNode()) {\n      allNodes = allNodes.concat(node.nodes);\n      ii = allNodes.length;\n    } else if (!colors[node.parent._id]) {\n      colors[node.parent._id] = palette.getNextColor();\n    }\n  }\n\n  return colors;\n}\n\nfunction discreteGroupColorizer(palette, root) {\n  var colors = prepareDiscreteGroupColors(palette, root);\n  return function (node) {\n    return colors[node._id];\n  };\n}\n\nimport { addColorizer } from \"./colorizing\";\naddColorizer(\"discrete\", discreteColorizer);\nexport default discreteColorizer;","map":{"version":3,"names":["discreteColorizer","options","themeManager","root","palette","createPalette","useHighlight","extensionMode","paletteExtensionMode","count","colorizeGroups","getNodesCount","getLeafsCount","discreteGroupColorizer","discreteLeafColorizer","allNodes","nodes","slice","i","ii","length","node","isNode","Math","max","colors","generateColors","index","prepareDiscreteGroupColors","concat","parent","_id","getNextColor","addColorizer"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/tree_map/colorizing.discrete.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.discrete.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nfunction discreteColorizer(options, themeManager, root) {\r\n    var palette = themeManager.createPalette(options.palette, {\r\n        useHighlight: true,\r\n        extensionMode: options.paletteExtensionMode,\r\n        count: options.colorizeGroups ? getNodesCount(root) : getLeafsCount(root)\r\n    });\r\n    return (options.colorizeGroups ? discreteGroupColorizer : discreteLeafColorizer)(palette, root)\r\n}\r\n\r\nfunction getLeafsCount(root) {\r\n    var allNodes = root.nodes.slice();\r\n    var i;\r\n    var ii = allNodes.length;\r\n    var count = 0;\r\n    var node;\r\n    for (i = 0; i < ii; ++i) {\r\n        node = allNodes[i];\r\n        if (node.isNode()) {\r\n            count = Math.max(count, getLeafsCount(node))\r\n        } else {\r\n            count += 1\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\nfunction discreteLeafColorizer(palette) {\r\n    var colors = palette.generateColors();\r\n    return function(node) {\r\n        return colors[node.index]\r\n    }\r\n}\r\n\r\nfunction getNodesCount(root) {\r\n    var allNodes = root.nodes.slice();\r\n    var i;\r\n    var ii = allNodes.length;\r\n    var count = 0;\r\n    var node;\r\n    for (i = 0; i < ii; ++i) {\r\n        node = allNodes[i];\r\n        if (node.isNode()) {\r\n            count += getNodesCount(node) + 1\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\nfunction prepareDiscreteGroupColors(palette, root) {\r\n    var colors = {};\r\n    var allNodes = root.nodes.slice();\r\n    var i;\r\n    var ii = allNodes.length;\r\n    var node;\r\n    for (i = 0; i < ii; ++i) {\r\n        node = allNodes[i];\r\n        if (node.isNode()) {\r\n            allNodes = allNodes.concat(node.nodes);\r\n            ii = allNodes.length\r\n        } else if (!colors[node.parent._id]) {\r\n            colors[node.parent._id] = palette.getNextColor()\r\n        }\r\n    }\r\n    return colors\r\n}\r\n\r\nfunction discreteGroupColorizer(palette, root) {\r\n    var colors = prepareDiscreteGroupColors(palette, root);\r\n    return function(node) {\r\n        return colors[node._id]\r\n    }\r\n}\r\nimport {\r\n    addColorizer\r\n} from \"./colorizing\";\r\naddColorizer(\"discrete\", discreteColorizer);\r\nexport default discreteColorizer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
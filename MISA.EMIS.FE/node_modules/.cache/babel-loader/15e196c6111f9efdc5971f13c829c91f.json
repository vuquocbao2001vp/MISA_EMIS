{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/remote_store.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isString, isDefined } from \"../../core/utils/type\";\nimport Class from \"../../core/class\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { DataSource } from \"../../data/data_source/data_source\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { getFiltersByPath, capitalizeFirstLetter, getExpandedLevel, discoverObjectFields, setDefaultFieldValueFormatting } from \"./ui.pivot_grid.utils\";\nimport { forEachGroup } from \"./remote_store.utils\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { normalizeLoadResult } from \"../../data/data_source/utils\";\n\nfunction createGroupingOptions(dimensionOptions, useSortOrder) {\n  var groupingOptions = [];\n  each(dimensionOptions, function (index, dimensionOption) {\n    groupingOptions.push({\n      selector: dimensionOption.dataField,\n      groupInterval: dimensionOption.groupInterval,\n      desc: useSortOrder && \"desc\" === dimensionOption.sortOrder,\n      isExpanded: index < dimensionOptions.length - 1\n    });\n  });\n  return groupingOptions;\n}\n\nfunction getFieldFilterSelector(field) {\n  var selector = field.dataField;\n  var groupInterval = field.groupInterval;\n\n  if (\"date\" === field.dataType && \"string\" === typeof groupInterval) {\n    if (\"quarter\" === groupInterval.toLowerCase()) {\n      groupInterval = \"Month\";\n    }\n\n    selector = selector + \".\" + capitalizeFirstLetter(groupInterval);\n  }\n\n  return selector;\n}\n\nfunction getIntervalFilterExpression(selector, numericInterval, numericValue, isExcludedFilterType) {\n  var startFilterValue = [selector, isExcludedFilterType ? \"<\" : \">=\", numericValue];\n  var endFilterValue = [selector, isExcludedFilterType ? \">=\" : \"<\", numericValue + numericInterval];\n  return [startFilterValue, isExcludedFilterType ? \"or\" : \"and\", endFilterValue];\n}\n\nfunction getFilterExpressionForFilterValue(field, filterValue) {\n  var selector = getFieldFilterSelector(field);\n  var isExcludedFilterType = \"exclude\" === field.filterType;\n  var expression = [selector, isExcludedFilterType ? \"<>\" : \"=\", filterValue];\n\n  if (isDefined(field.groupInterval)) {\n    if (\"string\" === typeof field.groupInterval && \"quarter\" === field.groupInterval.toLowerCase()) {\n      expression = getIntervalFilterExpression(selector, 3, 3 * (filterValue - 1) + 1, isExcludedFilterType);\n    } else if (\"number\" === typeof field.groupInterval && \"date\" !== field.dataType) {\n      expression = getIntervalFilterExpression(selector, field.groupInterval, filterValue, isExcludedFilterType);\n    }\n  }\n\n  return expression;\n}\n\nfunction createFieldFilterExpressions(field, operation) {\n  var fieldFilterExpressions = [];\n\n  if (field.searchValue) {\n    return [field.dataField, \"contains\", field.searchValue];\n  }\n\n  if (\"exclude\" === field.filterType) {\n    operation = operation || \"and\";\n  } else {\n    operation = operation || \"or\";\n  }\n\n  each(field.filterValues, function (index, filterValue) {\n    var currentExpression = [];\n\n    if (Array.isArray(filterValue)) {\n      var parseLevelsRecursive = field.levels && field.levels.length;\n\n      if (parseLevelsRecursive) {\n        currentExpression = createFieldFilterExpressions({\n          filterValues: filterValue,\n          filterType: field.filterType,\n          levels: field.levels\n        }, \"and\");\n      }\n    } else {\n      var currentField = field.levels ? field.levels[index] : field;\n      currentExpression = getFilterExpressionForFilterValue(currentField, filterValue);\n    }\n\n    if (!currentExpression.length) {\n      return;\n    }\n\n    if (fieldFilterExpressions.length) {\n      fieldFilterExpressions.push(operation);\n    }\n\n    fieldFilterExpressions.push(currentExpression);\n  });\n  return fieldFilterExpressions;\n}\n\nfunction createFilterExpressions(fields) {\n  var filterExpressions = [];\n  each(fields, function (_, field) {\n    var fieldExpressions = createFieldFilterExpressions(field);\n\n    if (!fieldExpressions.length) {\n      return [];\n    }\n\n    if (filterExpressions.length) {\n      filterExpressions.push(\"and\");\n    }\n\n    filterExpressions.push(fieldExpressions);\n  });\n\n  if (1 === filterExpressions.length) {\n    filterExpressions = filterExpressions[0];\n  }\n\n  return filterExpressions;\n}\n\nfunction mergeFilters(filter1, filter2) {\n  var mergedFilter;\n\n  var notEmpty = function (filter) {\n    return filter && filter.length;\n  };\n\n  if (notEmpty(filter1) && notEmpty(filter2)) {\n    mergedFilter = [filter1, \"and\", filter2];\n  } else {\n    mergedFilter = notEmpty(filter1) ? filter1 : filter2;\n  }\n\n  return mergedFilter;\n}\n\nfunction createLoadOptions(options, externalFilterExpr, hasRows) {\n  var filterExpressions = createFilterExpressions(options.filters);\n  var groupingOptions = createGroupingOptions(options.rows, options.rowTake).concat(createGroupingOptions(options.columns, options.columnTake));\n  var loadOptions = {\n    groupSummary: [],\n    totalSummary: [],\n    group: groupingOptions.length ? groupingOptions : void 0,\n    take: groupingOptions.length ? void 0 : 1\n  };\n\n  if (options.rows.length && options.rowTake) {\n    loadOptions.skip = options.rowSkip;\n    loadOptions.take = options.rowTake;\n    loadOptions.requireGroupCount = true;\n  } else if (options.columns.length && options.columnTake && !hasRows) {\n    loadOptions.skip = options.columnSkip;\n    loadOptions.take = options.columnTake;\n    loadOptions.requireGroupCount = true;\n  }\n\n  if (externalFilterExpr) {\n    filterExpressions = mergeFilters(filterExpressions, externalFilterExpr);\n  }\n\n  if (filterExpressions.length) {\n    loadOptions.filter = filterExpressions;\n  }\n\n  each(options.values, function (_, value) {\n    var summaryOption = {\n      selector: value.dataField,\n      summaryType: value.summaryType || \"count\"\n    };\n    loadOptions.groupSummary.push(summaryOption);\n    options.includeTotalSummary && loadOptions.totalSummary.push(summaryOption);\n  });\n  return loadOptions;\n}\n\nfunction setValue(valuesArray, value, rowIndex, columnIndex, dataIndex) {\n  valuesArray[rowIndex] = valuesArray[rowIndex] || [];\n  valuesArray[rowIndex][columnIndex] = valuesArray[rowIndex][columnIndex] || [];\n\n  if (!isDefined(valuesArray[rowIndex][columnIndex][dataIndex])) {\n    valuesArray[rowIndex][columnIndex][dataIndex] = value;\n  }\n}\n\nfunction parseValue(value, field) {\n  if (field && \"number\" === field.dataType && isString(value)) {\n    return Number(value);\n  }\n\n  if (field && \"date\" === field.dataType && !field.groupInterval && !(value instanceof Date)) {\n    return dateSerialization.deserializeDate(value);\n  }\n\n  return value;\n}\n\nfunction parseResult(data, total, descriptions, result) {\n  var rowPath = [];\n  var columnPath = [];\n  var rowHash = result.rowHash;\n  var columnHash = result.columnHash;\n\n  if (total && total.summary) {\n    each(total.summary, function (index, summary) {\n      setValue(result.values, summary, result.grandTotalRowIndex, result.grandTotalColumnIndex, index);\n    });\n  }\n\n  if (total && total.groupCount >= 0) {\n    var skip = descriptions.rows.length ? descriptions.rowSkip : descriptions.columnSkip;\n    data = [...Array(skip)].concat(data);\n    data.length = total.groupCount;\n  }\n\n  function getItem(dataItem, dimensionName, path, level, field) {\n    var dimensionHash = result[dimensionName + \"Hash\"];\n    var parentItem;\n    var parentItemChildren;\n    var item;\n    var pathValue = path.slice(0, level + 1).join(\"/\");\n    var parentPathValue;\n\n    if (void 0 !== dimensionHash[pathValue]) {\n      item = dimensionHash[pathValue];\n    } else {\n      item = {\n        value: parseValue(dataItem.key, field),\n        index: result[dimensionName + \"Index\"]++,\n        displayText: dataItem.displayText\n      };\n      parentPathValue = path.slice(0, level).join(\"/\");\n\n      if (level > 0 && void 0 !== dimensionHash[parentPathValue]) {\n        parentItem = dimensionHash[parentPathValue];\n        parentItemChildren = parentItem.children = parentItem.children || [];\n      } else {\n        parentItemChildren = result[dimensionName + \"s\"];\n      }\n\n      parentItemChildren.push(item);\n      dimensionHash[pathValue] = item;\n    }\n\n    return item;\n  }\n\n  forEachGroup(data, function (item, level) {\n    var rowLevel = level >= descriptions.rows.length ? descriptions.rows.length : level;\n    var columnLevel = level >= descriptions.rows.length ? level - descriptions.rows.length : 0;\n    var columnItem;\n    var rowItem;\n\n    if (level >= descriptions.rows.length && columnLevel >= descriptions.columns.length) {\n      return;\n    }\n\n    if (level < descriptions.rows.length) {\n      columnPath = [];\n    }\n\n    if (level >= descriptions.rows.length) {\n      if (item) {\n        columnPath[columnLevel] = item.key + \"\";\n        columnItem = getItem(item, \"column\", columnPath, columnLevel, descriptions.columns[columnLevel]);\n        rowItem = rowHash[rowPath.slice(0, rowLevel + 1).join(\"/\")];\n      } else {\n        result.columns.push({});\n      }\n    } else if (item) {\n      rowPath[rowLevel] = item.key + \"\";\n      rowItem = getItem(item, \"row\", rowPath, rowLevel, descriptions.rows[rowLevel]);\n      columnItem = columnHash[columnPath.slice(0, columnLevel + 1).join(\"/\")];\n    } else {\n      result.rows.push({});\n    }\n\n    var currentRowIndex = rowItem && rowItem.index || result.grandTotalRowIndex;\n    var currentColumnIndex = columnItem && columnItem.index || result.grandTotalColumnIndex;\n    each(item && item.summary || [], function (i, summary) {\n      setValue(result.values, summary, currentRowIndex, currentColumnIndex, i);\n    });\n  });\n  return result;\n}\n\nfunction getFiltersForDimension(fields) {\n  return (fields || []).filter(f => f.filterValues && f.filterValues.length || f.searchValue);\n}\n\nfunction getExpandedIndex(options, axis) {\n  if (options.headerName) {\n    if (axis === options.headerName) {\n      return options.path.length;\n    } else if (options.oppositePath) {\n      return options.oppositePath.length;\n    }\n  }\n\n  return 0;\n}\n\nfunction getFiltersForExpandedDimension(options) {\n  return getFiltersByPath(options[options.headerName], options.path).concat(getFiltersByPath(options[\"rows\" === options.headerName ? \"columns\" : \"rows\"], options.oppositePath || []));\n}\n\nfunction getExpandedPathSliceFilter(options, dimensionName, level, firstCollapsedFieldIndex) {\n  var result = [];\n  var startSliceIndex = level > firstCollapsedFieldIndex ? 0 : firstCollapsedFieldIndex;\n  var fields = options.headerName !== dimensionName ? options[dimensionName].slice(startSliceIndex, level) : [];\n  var paths = \"rows\" === dimensionName ? options.rowExpandedPaths : options.columnExpandedPaths;\n  each(fields, function (index, field) {\n    var filterValues = [];\n    each(paths, function (_, path) {\n      path = path.slice(startSliceIndex, level);\n\n      if (index < path.length) {\n        var filterValue = path[index];\n\n        if (-1 === filterValues.indexOf(filterValue)) {\n          filterValues.push(filterValue);\n        }\n      }\n    });\n\n    if (filterValues.length) {\n      result.push(extend({}, field, {\n        filterType: \"include\",\n        filterValues: filterValues\n      }));\n    }\n  });\n  return result;\n}\n\nfunction getGrandTotalRequest(options, dimensionName, expandedIndex, expandedLevel, commonFilters, firstCollapsedFieldIndex) {\n  var expandedPaths = (\"columns\" === dimensionName ? options.columnExpandedPaths : options.rowExpandedPaths) || [];\n  var oppositeDimensionName = \"columns\" === dimensionName ? \"rows\" : \"columns\";\n  var fields = options[dimensionName];\n  var result = [];\n  var newOptions;\n\n  if (expandedPaths.length) {\n    for (var i = expandedIndex; i < expandedLevel + 1; i++) {\n      newOptions = {\n        filters: commonFilters.concat(getExpandedPathSliceFilter(options, dimensionName, i, firstCollapsedFieldIndex))\n      };\n      newOptions[dimensionName] = fields.slice(expandedIndex, i + 1);\n      newOptions[oppositeDimensionName] = [];\n      result.push(extend({}, options, newOptions));\n    }\n  } else {\n    newOptions = {\n      filters: commonFilters\n    };\n    newOptions[dimensionName] = fields.slice(expandedIndex, expandedLevel + 1);\n    newOptions[oppositeDimensionName] = [];\n    result.push(extend({}, options, newOptions));\n  }\n\n  result[0].includeTotalSummary = true;\n  return result;\n}\n\nfunction getFirstCollapsedIndex(fields) {\n  var firstCollapsedIndex = 0;\n  each(fields, function (index, field) {\n    if (!field.expanded) {\n      firstCollapsedIndex = index;\n      return false;\n    }\n  });\n  return firstCollapsedIndex;\n}\n\nfunction getRequestsData(options) {\n  var rowExpandedLevel = getExpandedLevel(options, \"rows\");\n  var columnExpandedLevel = getExpandedLevel(options, \"columns\");\n  var filters = options.filters || [];\n  var columnExpandedIndex = getExpandedIndex(options, \"columns\");\n  var firstCollapsedColumnIndex = getFirstCollapsedIndex(options.columns);\n  var firstCollapsedRowIndex = getFirstCollapsedIndex(options.rows);\n  var rowExpandedIndex = getExpandedIndex(options, \"rows\");\n  var data = [];\n  filters = filters.concat(getFiltersForDimension(options.rows)).concat(getFiltersForDimension(options.columns)).concat(getFiltersForExpandedDimension(options));\n  var columnTotalsOptions = getGrandTotalRequest(options, \"columns\", columnExpandedIndex, columnExpandedLevel, filters, firstCollapsedColumnIndex);\n\n  if (options.rows.length && options.columns.length) {\n    if (\"rows\" !== options.headerName) {\n      data = data.concat(columnTotalsOptions);\n    }\n\n    for (var i = rowExpandedIndex; i < rowExpandedLevel + 1; i++) {\n      var rows = options.rows.slice(rowExpandedIndex, i + 1);\n      var rowFilterByExpandedPaths = getExpandedPathSliceFilter(options, \"rows\", i, firstCollapsedRowIndex);\n\n      for (var j = columnExpandedIndex; j < columnExpandedLevel + 1; j++) {\n        var preparedOptions = extend({}, options, {\n          columns: options.columns.slice(columnExpandedIndex, j + 1),\n          rows: rows,\n          filters: filters.concat(getExpandedPathSliceFilter(options, \"columns\", j, firstCollapsedColumnIndex)).concat(rowFilterByExpandedPaths)\n        });\n        data.push(preparedOptions);\n      }\n    }\n  } else {\n    data = options.columns.length ? columnTotalsOptions : getGrandTotalRequest(options, \"rows\", rowExpandedIndex, rowExpandedLevel, filters, firstCollapsedRowIndex);\n  }\n\n  return data;\n}\n\nfunction prepareFields(fields) {\n  each(fields || [], function (_, field) {\n    var levels = field.levels;\n\n    if (levels) {\n      prepareFields(levels);\n    }\n\n    setDefaultFieldValueFormatting(field);\n  });\n}\n\nexport default Class.inherit({\n  ctor: function (options) {\n    this._dataSource = new DataSource(options);\n    this._store = this._dataSource.store();\n  },\n  getFields: function (fields) {\n    var d = new Deferred();\n\n    this._store.load({\n      skip: 0,\n      take: 20\n    }).done(function (data) {\n      var normalizedArguments = normalizeLoadResult(data);\n      d.resolve(discoverObjectFields(normalizedArguments.data, fields));\n    }).fail(d.reject);\n\n    return d;\n  },\n  key: function () {\n    return this._store.key();\n  },\n  load: function (options) {\n    var that = this;\n    var d = new Deferred();\n    var result = {\n      rows: [],\n      columns: [],\n      values: [],\n      grandTotalRowIndex: 0,\n      grandTotalColumnIndex: 0,\n      rowHash: {},\n      columnHash: {},\n      rowIndex: 1,\n      columnIndex: 1\n    };\n    var requestsData = getRequestsData(options);\n    var deferreds = [];\n    prepareFields(options.rows);\n    prepareFields(options.columns);\n    prepareFields(options.filters);\n    each(requestsData, function (_, dataItem) {\n      deferreds.push(that._store.load(createLoadOptions(dataItem, that.filter(), options.rows.length)));\n    });\n    when.apply(null, deferreds).done(function () {\n      var args = deferreds.length > 1 ? arguments : [arguments];\n      each(args, function (index, argument) {\n        var normalizedArguments = normalizeLoadResult(argument[0], argument[1]);\n        parseResult(normalizedArguments.data, normalizedArguments.extra, requestsData[index], result);\n      });\n      d.resolve({\n        rows: result.rows,\n        columns: result.columns,\n        values: result.values,\n        grandTotalRowIndex: result.grandTotalRowIndex,\n        grandTotalColumnIndex: result.grandTotalColumnIndex\n      });\n    }).fail(d.reject);\n    return d;\n  },\n  filter: function () {\n    return this._dataSource.filter.apply(this._dataSource, arguments);\n  },\n  supportPaging: function () {\n    return false;\n  },\n  createDrillDownDataSource: function (loadOptions, params) {\n    loadOptions = loadOptions || {};\n    params = params || {};\n    var store = this._store;\n    var filters = getFiltersByPath(loadOptions.rows, params.rowPath).concat(getFiltersByPath(loadOptions.columns, params.columnPath)).concat(getFiltersForDimension(loadOptions.rows)).concat(loadOptions.filters || []).concat(getFiltersForDimension(loadOptions.columns));\n    var filterExp = createFilterExpressions(filters);\n    return new DataSource({\n      load: function (loadOptions) {\n        return store.load(extend({}, loadOptions, {\n          filter: mergeFilters(filterExp, loadOptions.filter),\n          select: params.customColumns\n        }));\n      }\n    });\n  }\n});","map":{"version":3,"names":["isString","isDefined","Class","extend","each","DataSource","when","Deferred","getFiltersByPath","capitalizeFirstLetter","getExpandedLevel","discoverObjectFields","setDefaultFieldValueFormatting","forEachGroup","dateSerialization","normalizeLoadResult","createGroupingOptions","dimensionOptions","useSortOrder","groupingOptions","index","dimensionOption","push","selector","dataField","groupInterval","desc","sortOrder","isExpanded","length","getFieldFilterSelector","field","dataType","toLowerCase","getIntervalFilterExpression","numericInterval","numericValue","isExcludedFilterType","startFilterValue","endFilterValue","getFilterExpressionForFilterValue","filterValue","filterType","expression","createFieldFilterExpressions","operation","fieldFilterExpressions","searchValue","filterValues","currentExpression","Array","isArray","parseLevelsRecursive","levels","currentField","createFilterExpressions","fields","filterExpressions","_","fieldExpressions","mergeFilters","filter1","filter2","mergedFilter","notEmpty","filter","createLoadOptions","options","externalFilterExpr","hasRows","filters","rows","rowTake","concat","columns","columnTake","loadOptions","groupSummary","totalSummary","group","take","skip","rowSkip","requireGroupCount","columnSkip","values","value","summaryOption","summaryType","includeTotalSummary","setValue","valuesArray","rowIndex","columnIndex","dataIndex","parseValue","Number","Date","deserializeDate","parseResult","data","total","descriptions","result","rowPath","columnPath","rowHash","columnHash","summary","grandTotalRowIndex","grandTotalColumnIndex","groupCount","getItem","dataItem","dimensionName","path","level","dimensionHash","parentItem","parentItemChildren","item","pathValue","slice","join","parentPathValue","key","displayText","children","rowLevel","columnLevel","columnItem","rowItem","currentRowIndex","currentColumnIndex","i","getFiltersForDimension","f","getExpandedIndex","axis","headerName","oppositePath","getFiltersForExpandedDimension","getExpandedPathSliceFilter","firstCollapsedFieldIndex","startSliceIndex","paths","rowExpandedPaths","columnExpandedPaths","indexOf","getGrandTotalRequest","expandedIndex","expandedLevel","commonFilters","expandedPaths","oppositeDimensionName","newOptions","getFirstCollapsedIndex","firstCollapsedIndex","expanded","getRequestsData","rowExpandedLevel","columnExpandedLevel","columnExpandedIndex","firstCollapsedColumnIndex","firstCollapsedRowIndex","rowExpandedIndex","columnTotalsOptions","rowFilterByExpandedPaths","j","preparedOptions","prepareFields","inherit","ctor","_dataSource","_store","store","getFields","d","load","done","normalizedArguments","resolve","fail","reject","that","requestsData","deferreds","apply","args","arguments","argument","extra","supportPaging","createDrillDownDataSource","params","filterExp","select","customColumns"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/pivot_grid/remote_store.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/remote_store.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isString,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    getFiltersByPath,\r\n    capitalizeFirstLetter,\r\n    getExpandedLevel,\r\n    discoverObjectFields,\r\n    setDefaultFieldValueFormatting\r\n} from \"./ui.pivot_grid.utils\";\r\nimport {\r\n    forEachGroup\r\n} from \"./remote_store.utils\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    normalizeLoadResult\r\n} from \"../../data/data_source/utils\";\r\n\r\nfunction createGroupingOptions(dimensionOptions, useSortOrder) {\r\n    var groupingOptions = [];\r\n    each(dimensionOptions, (function(index, dimensionOption) {\r\n        groupingOptions.push({\r\n            selector: dimensionOption.dataField,\r\n            groupInterval: dimensionOption.groupInterval,\r\n            desc: useSortOrder && \"desc\" === dimensionOption.sortOrder,\r\n            isExpanded: index < dimensionOptions.length - 1\r\n        })\r\n    }));\r\n    return groupingOptions\r\n}\r\n\r\nfunction getFieldFilterSelector(field) {\r\n    var selector = field.dataField;\r\n    var groupInterval = field.groupInterval;\r\n    if (\"date\" === field.dataType && \"string\" === typeof groupInterval) {\r\n        if (\"quarter\" === groupInterval.toLowerCase()) {\r\n            groupInterval = \"Month\"\r\n        }\r\n        selector = selector + \".\" + capitalizeFirstLetter(groupInterval)\r\n    }\r\n    return selector\r\n}\r\n\r\nfunction getIntervalFilterExpression(selector, numericInterval, numericValue, isExcludedFilterType) {\r\n    var startFilterValue = [selector, isExcludedFilterType ? \"<\" : \">=\", numericValue];\r\n    var endFilterValue = [selector, isExcludedFilterType ? \">=\" : \"<\", numericValue + numericInterval];\r\n    return [startFilterValue, isExcludedFilterType ? \"or\" : \"and\", endFilterValue]\r\n}\r\n\r\nfunction getFilterExpressionForFilterValue(field, filterValue) {\r\n    var selector = getFieldFilterSelector(field);\r\n    var isExcludedFilterType = \"exclude\" === field.filterType;\r\n    var expression = [selector, isExcludedFilterType ? \"<>\" : \"=\", filterValue];\r\n    if (isDefined(field.groupInterval)) {\r\n        if (\"string\" === typeof field.groupInterval && \"quarter\" === field.groupInterval.toLowerCase()) {\r\n            expression = getIntervalFilterExpression(selector, 3, 3 * (filterValue - 1) + 1, isExcludedFilterType)\r\n        } else if (\"number\" === typeof field.groupInterval && \"date\" !== field.dataType) {\r\n            expression = getIntervalFilterExpression(selector, field.groupInterval, filterValue, isExcludedFilterType)\r\n        }\r\n    }\r\n    return expression\r\n}\r\n\r\nfunction createFieldFilterExpressions(field, operation) {\r\n    var fieldFilterExpressions = [];\r\n    if (field.searchValue) {\r\n        return [field.dataField, \"contains\", field.searchValue]\r\n    }\r\n    if (\"exclude\" === field.filterType) {\r\n        operation = operation || \"and\"\r\n    } else {\r\n        operation = operation || \"or\"\r\n    }\r\n    each(field.filterValues, (function(index, filterValue) {\r\n        var currentExpression = [];\r\n        if (Array.isArray(filterValue)) {\r\n            var parseLevelsRecursive = field.levels && field.levels.length;\r\n            if (parseLevelsRecursive) {\r\n                currentExpression = createFieldFilterExpressions({\r\n                    filterValues: filterValue,\r\n                    filterType: field.filterType,\r\n                    levels: field.levels\r\n                }, \"and\")\r\n            }\r\n        } else {\r\n            var currentField = field.levels ? field.levels[index] : field;\r\n            currentExpression = getFilterExpressionForFilterValue(currentField, filterValue)\r\n        }\r\n        if (!currentExpression.length) {\r\n            return\r\n        }\r\n        if (fieldFilterExpressions.length) {\r\n            fieldFilterExpressions.push(operation)\r\n        }\r\n        fieldFilterExpressions.push(currentExpression)\r\n    }));\r\n    return fieldFilterExpressions\r\n}\r\n\r\nfunction createFilterExpressions(fields) {\r\n    var filterExpressions = [];\r\n    each(fields, (function(_, field) {\r\n        var fieldExpressions = createFieldFilterExpressions(field);\r\n        if (!fieldExpressions.length) {\r\n            return []\r\n        }\r\n        if (filterExpressions.length) {\r\n            filterExpressions.push(\"and\")\r\n        }\r\n        filterExpressions.push(fieldExpressions)\r\n    }));\r\n    if (1 === filterExpressions.length) {\r\n        filterExpressions = filterExpressions[0]\r\n    }\r\n    return filterExpressions\r\n}\r\n\r\nfunction mergeFilters(filter1, filter2) {\r\n    var mergedFilter;\r\n    var notEmpty = function(filter) {\r\n        return filter && filter.length\r\n    };\r\n    if (notEmpty(filter1) && notEmpty(filter2)) {\r\n        mergedFilter = [filter1, \"and\", filter2]\r\n    } else {\r\n        mergedFilter = notEmpty(filter1) ? filter1 : filter2\r\n    }\r\n    return mergedFilter\r\n}\r\n\r\nfunction createLoadOptions(options, externalFilterExpr, hasRows) {\r\n    var filterExpressions = createFilterExpressions(options.filters);\r\n    var groupingOptions = createGroupingOptions(options.rows, options.rowTake).concat(createGroupingOptions(options.columns, options.columnTake));\r\n    var loadOptions = {\r\n        groupSummary: [],\r\n        totalSummary: [],\r\n        group: groupingOptions.length ? groupingOptions : void 0,\r\n        take: groupingOptions.length ? void 0 : 1\r\n    };\r\n    if (options.rows.length && options.rowTake) {\r\n        loadOptions.skip = options.rowSkip;\r\n        loadOptions.take = options.rowTake;\r\n        loadOptions.requireGroupCount = true\r\n    } else if (options.columns.length && options.columnTake && !hasRows) {\r\n        loadOptions.skip = options.columnSkip;\r\n        loadOptions.take = options.columnTake;\r\n        loadOptions.requireGroupCount = true\r\n    }\r\n    if (externalFilterExpr) {\r\n        filterExpressions = mergeFilters(filterExpressions, externalFilterExpr)\r\n    }\r\n    if (filterExpressions.length) {\r\n        loadOptions.filter = filterExpressions\r\n    }\r\n    each(options.values, (function(_, value) {\r\n        var summaryOption = {\r\n            selector: value.dataField,\r\n            summaryType: value.summaryType || \"count\"\r\n        };\r\n        loadOptions.groupSummary.push(summaryOption);\r\n        options.includeTotalSummary && loadOptions.totalSummary.push(summaryOption)\r\n    }));\r\n    return loadOptions\r\n}\r\n\r\nfunction setValue(valuesArray, value, rowIndex, columnIndex, dataIndex) {\r\n    valuesArray[rowIndex] = valuesArray[rowIndex] || [];\r\n    valuesArray[rowIndex][columnIndex] = valuesArray[rowIndex][columnIndex] || [];\r\n    if (!isDefined(valuesArray[rowIndex][columnIndex][dataIndex])) {\r\n        valuesArray[rowIndex][columnIndex][dataIndex] = value\r\n    }\r\n}\r\n\r\nfunction parseValue(value, field) {\r\n    if (field && \"number\" === field.dataType && isString(value)) {\r\n        return Number(value)\r\n    }\r\n    if (field && \"date\" === field.dataType && !field.groupInterval && !(value instanceof Date)) {\r\n        return dateSerialization.deserializeDate(value)\r\n    }\r\n    return value\r\n}\r\n\r\nfunction parseResult(data, total, descriptions, result) {\r\n    var rowPath = [];\r\n    var columnPath = [];\r\n    var rowHash = result.rowHash;\r\n    var columnHash = result.columnHash;\r\n    if (total && total.summary) {\r\n        each(total.summary, (function(index, summary) {\r\n            setValue(result.values, summary, result.grandTotalRowIndex, result.grandTotalColumnIndex, index)\r\n        }))\r\n    }\r\n    if (total && total.groupCount >= 0) {\r\n        var skip = descriptions.rows.length ? descriptions.rowSkip : descriptions.columnSkip;\r\n        data = [...Array(skip)].concat(data);\r\n        data.length = total.groupCount\r\n    }\r\n\r\n    function getItem(dataItem, dimensionName, path, level, field) {\r\n        var dimensionHash = result[dimensionName + \"Hash\"];\r\n        var parentItem;\r\n        var parentItemChildren;\r\n        var item;\r\n        var pathValue = path.slice(0, level + 1).join(\"/\");\r\n        var parentPathValue;\r\n        if (void 0 !== dimensionHash[pathValue]) {\r\n            item = dimensionHash[pathValue]\r\n        } else {\r\n            item = {\r\n                value: parseValue(dataItem.key, field),\r\n                index: result[dimensionName + \"Index\"]++,\r\n                displayText: dataItem.displayText\r\n            };\r\n            parentPathValue = path.slice(0, level).join(\"/\");\r\n            if (level > 0 && void 0 !== dimensionHash[parentPathValue]) {\r\n                parentItem = dimensionHash[parentPathValue];\r\n                parentItemChildren = parentItem.children = parentItem.children || []\r\n            } else {\r\n                parentItemChildren = result[dimensionName + \"s\"]\r\n            }\r\n            parentItemChildren.push(item);\r\n            dimensionHash[pathValue] = item\r\n        }\r\n        return item\r\n    }\r\n    forEachGroup(data, (function(item, level) {\r\n        var rowLevel = level >= descriptions.rows.length ? descriptions.rows.length : level;\r\n        var columnLevel = level >= descriptions.rows.length ? level - descriptions.rows.length : 0;\r\n        var columnItem;\r\n        var rowItem;\r\n        if (level >= descriptions.rows.length && columnLevel >= descriptions.columns.length) {\r\n            return\r\n        }\r\n        if (level < descriptions.rows.length) {\r\n            columnPath = []\r\n        }\r\n        if (level >= descriptions.rows.length) {\r\n            if (item) {\r\n                columnPath[columnLevel] = item.key + \"\";\r\n                columnItem = getItem(item, \"column\", columnPath, columnLevel, descriptions.columns[columnLevel]);\r\n                rowItem = rowHash[rowPath.slice(0, rowLevel + 1).join(\"/\")]\r\n            } else {\r\n                result.columns.push({})\r\n            }\r\n        } else if (item) {\r\n            rowPath[rowLevel] = item.key + \"\";\r\n            rowItem = getItem(item, \"row\", rowPath, rowLevel, descriptions.rows[rowLevel]);\r\n            columnItem = columnHash[columnPath.slice(0, columnLevel + 1).join(\"/\")]\r\n        } else {\r\n            result.rows.push({})\r\n        }\r\n        var currentRowIndex = rowItem && rowItem.index || result.grandTotalRowIndex;\r\n        var currentColumnIndex = columnItem && columnItem.index || result.grandTotalColumnIndex;\r\n        each(item && item.summary || [], (function(i, summary) {\r\n            setValue(result.values, summary, currentRowIndex, currentColumnIndex, i)\r\n        }))\r\n    }));\r\n    return result\r\n}\r\n\r\nfunction getFiltersForDimension(fields) {\r\n    return (fields || []).filter(f => f.filterValues && f.filterValues.length || f.searchValue)\r\n}\r\n\r\nfunction getExpandedIndex(options, axis) {\r\n    if (options.headerName) {\r\n        if (axis === options.headerName) {\r\n            return options.path.length\r\n        } else if (options.oppositePath) {\r\n            return options.oppositePath.length\r\n        }\r\n    }\r\n    return 0\r\n}\r\n\r\nfunction getFiltersForExpandedDimension(options) {\r\n    return getFiltersByPath(options[options.headerName], options.path).concat(getFiltersByPath(options[\"rows\" === options.headerName ? \"columns\" : \"rows\"], options.oppositePath || []))\r\n}\r\n\r\nfunction getExpandedPathSliceFilter(options, dimensionName, level, firstCollapsedFieldIndex) {\r\n    var result = [];\r\n    var startSliceIndex = level > firstCollapsedFieldIndex ? 0 : firstCollapsedFieldIndex;\r\n    var fields = options.headerName !== dimensionName ? options[dimensionName].slice(startSliceIndex, level) : [];\r\n    var paths = \"rows\" === dimensionName ? options.rowExpandedPaths : options.columnExpandedPaths;\r\n    each(fields, (function(index, field) {\r\n        var filterValues = [];\r\n        each(paths, (function(_, path) {\r\n            path = path.slice(startSliceIndex, level);\r\n            if (index < path.length) {\r\n                var filterValue = path[index];\r\n                if (-1 === filterValues.indexOf(filterValue)) {\r\n                    filterValues.push(filterValue)\r\n                }\r\n            }\r\n        }));\r\n        if (filterValues.length) {\r\n            result.push(extend({}, field, {\r\n                filterType: \"include\",\r\n                filterValues: filterValues\r\n            }))\r\n        }\r\n    }));\r\n    return result\r\n}\r\n\r\nfunction getGrandTotalRequest(options, dimensionName, expandedIndex, expandedLevel, commonFilters, firstCollapsedFieldIndex) {\r\n    var expandedPaths = (\"columns\" === dimensionName ? options.columnExpandedPaths : options.rowExpandedPaths) || [];\r\n    var oppositeDimensionName = \"columns\" === dimensionName ? \"rows\" : \"columns\";\r\n    var fields = options[dimensionName];\r\n    var result = [];\r\n    var newOptions;\r\n    if (expandedPaths.length) {\r\n        for (var i = expandedIndex; i < expandedLevel + 1; i++) {\r\n            newOptions = {\r\n                filters: commonFilters.concat(getExpandedPathSliceFilter(options, dimensionName, i, firstCollapsedFieldIndex))\r\n            };\r\n            newOptions[dimensionName] = fields.slice(expandedIndex, i + 1);\r\n            newOptions[oppositeDimensionName] = [];\r\n            result.push(extend({}, options, newOptions))\r\n        }\r\n    } else {\r\n        newOptions = {\r\n            filters: commonFilters\r\n        };\r\n        newOptions[dimensionName] = fields.slice(expandedIndex, expandedLevel + 1);\r\n        newOptions[oppositeDimensionName] = [];\r\n        result.push(extend({}, options, newOptions))\r\n    }\r\n    result[0].includeTotalSummary = true;\r\n    return result\r\n}\r\n\r\nfunction getFirstCollapsedIndex(fields) {\r\n    var firstCollapsedIndex = 0;\r\n    each(fields, (function(index, field) {\r\n        if (!field.expanded) {\r\n            firstCollapsedIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return firstCollapsedIndex\r\n}\r\n\r\nfunction getRequestsData(options) {\r\n    var rowExpandedLevel = getExpandedLevel(options, \"rows\");\r\n    var columnExpandedLevel = getExpandedLevel(options, \"columns\");\r\n    var filters = options.filters || [];\r\n    var columnExpandedIndex = getExpandedIndex(options, \"columns\");\r\n    var firstCollapsedColumnIndex = getFirstCollapsedIndex(options.columns);\r\n    var firstCollapsedRowIndex = getFirstCollapsedIndex(options.rows);\r\n    var rowExpandedIndex = getExpandedIndex(options, \"rows\");\r\n    var data = [];\r\n    filters = filters.concat(getFiltersForDimension(options.rows)).concat(getFiltersForDimension(options.columns)).concat(getFiltersForExpandedDimension(options));\r\n    var columnTotalsOptions = getGrandTotalRequest(options, \"columns\", columnExpandedIndex, columnExpandedLevel, filters, firstCollapsedColumnIndex);\r\n    if (options.rows.length && options.columns.length) {\r\n        if (\"rows\" !== options.headerName) {\r\n            data = data.concat(columnTotalsOptions)\r\n        }\r\n        for (var i = rowExpandedIndex; i < rowExpandedLevel + 1; i++) {\r\n            var rows = options.rows.slice(rowExpandedIndex, i + 1);\r\n            var rowFilterByExpandedPaths = getExpandedPathSliceFilter(options, \"rows\", i, firstCollapsedRowIndex);\r\n            for (var j = columnExpandedIndex; j < columnExpandedLevel + 1; j++) {\r\n                var preparedOptions = extend({}, options, {\r\n                    columns: options.columns.slice(columnExpandedIndex, j + 1),\r\n                    rows: rows,\r\n                    filters: filters.concat(getExpandedPathSliceFilter(options, \"columns\", j, firstCollapsedColumnIndex)).concat(rowFilterByExpandedPaths)\r\n                });\r\n                data.push(preparedOptions)\r\n            }\r\n        }\r\n    } else {\r\n        data = options.columns.length ? columnTotalsOptions : getGrandTotalRequest(options, \"rows\", rowExpandedIndex, rowExpandedLevel, filters, firstCollapsedRowIndex)\r\n    }\r\n    return data\r\n}\r\n\r\nfunction prepareFields(fields) {\r\n    each(fields || [], (function(_, field) {\r\n        var levels = field.levels;\r\n        if (levels) {\r\n            prepareFields(levels)\r\n        }\r\n        setDefaultFieldValueFormatting(field)\r\n    }))\r\n}\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this._dataSource = new DataSource(options);\r\n        this._store = this._dataSource.store()\r\n    },\r\n    getFields: function(fields) {\r\n        var d = new Deferred;\r\n        this._store.load({\r\n            skip: 0,\r\n            take: 20\r\n        }).done((function(data) {\r\n            var normalizedArguments = normalizeLoadResult(data);\r\n            d.resolve(discoverObjectFields(normalizedArguments.data, fields))\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    key: function() {\r\n        return this._store.key()\r\n    },\r\n    load: function(options) {\r\n        var that = this;\r\n        var d = new Deferred;\r\n        var result = {\r\n            rows: [],\r\n            columns: [],\r\n            values: [],\r\n            grandTotalRowIndex: 0,\r\n            grandTotalColumnIndex: 0,\r\n            rowHash: {},\r\n            columnHash: {},\r\n            rowIndex: 1,\r\n            columnIndex: 1\r\n        };\r\n        var requestsData = getRequestsData(options);\r\n        var deferreds = [];\r\n        prepareFields(options.rows);\r\n        prepareFields(options.columns);\r\n        prepareFields(options.filters);\r\n        each(requestsData, (function(_, dataItem) {\r\n            deferreds.push(that._store.load(createLoadOptions(dataItem, that.filter(), options.rows.length)))\r\n        }));\r\n        when.apply(null, deferreds).done((function() {\r\n            var args = deferreds.length > 1 ? arguments : [arguments];\r\n            each(args, (function(index, argument) {\r\n                var normalizedArguments = normalizeLoadResult(argument[0], argument[1]);\r\n                parseResult(normalizedArguments.data, normalizedArguments.extra, requestsData[index], result)\r\n            }));\r\n            d.resolve({\r\n                rows: result.rows,\r\n                columns: result.columns,\r\n                values: result.values,\r\n                grandTotalRowIndex: result.grandTotalRowIndex,\r\n                grandTotalColumnIndex: result.grandTotalColumnIndex\r\n            })\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    filter: function() {\r\n        return this._dataSource.filter.apply(this._dataSource, arguments)\r\n    },\r\n    supportPaging: function() {\r\n        return false\r\n    },\r\n    createDrillDownDataSource: function(loadOptions, params) {\r\n        loadOptions = loadOptions || {};\r\n        params = params || {};\r\n        var store = this._store;\r\n        var filters = getFiltersByPath(loadOptions.rows, params.rowPath).concat(getFiltersByPath(loadOptions.columns, params.columnPath)).concat(getFiltersForDimension(loadOptions.rows)).concat(loadOptions.filters || []).concat(getFiltersForDimension(loadOptions.columns));\r\n        var filterExp = createFilterExpressions(filters);\r\n        return new DataSource({\r\n            load: function(loadOptions) {\r\n                return store.load(extend({}, loadOptions, {\r\n                    filter: mergeFilters(filterExp, loadOptions.filter),\r\n                    select: params.customColumns\r\n                }))\r\n            }\r\n        })\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.data_controller.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { map, each } from \"../../core/utils/iterator\";\nimport Class from \"../../core/class\";\nimport { format } from \"../../core/utils/string\";\nimport { deferUpdate } from \"../../core/utils/common\";\nimport { isDefined, isString } from \"../../core/utils/type\";\nimport { VirtualScrollController } from \"../grid_core/ui.grid_core.virtual_scrolling_core\";\nimport { foreachColumnInfo, createColumnsInfo } from \"../grid_core/ui.grid_core.virtual_columns_core\";\nimport { StateStoringController } from \"../grid_core/ui.grid_core.state_storing_core\";\nimport PivotGridDataSource from \"./data_source\";\nimport { findField, foreachTree, foreachTreeAsync, createPath, formatValue } from \"./ui.pivot_grid.utils\";\nvar math = Math;\nvar GRAND_TOTAL_TYPE = \"GT\";\nvar TOTAL_TYPE = \"T\";\nvar DATA_TYPE = \"D\";\nvar NOT_AVAILABLE = \"#N/A\";\nvar CHANGING_DURATION_IF_PAGINATE = 300;\n\nvar proxyMethod = function (instance, methodName, defaultResult) {\n  if (!instance[methodName]) {\n    instance[methodName] = function () {\n      var dataSource = this._dataSource;\n      return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult;\n    };\n  }\n};\n\nexport var DataController = Class.inherit(function () {\n  function formatCellValue(value, dataField, errorText) {\n    return value === NOT_AVAILABLE ? errorText : formatValue(value, dataField);\n  }\n\n  var createHeaderInfo = function () {\n    var addInfoItem = function (info, options) {\n      var breadth = options.lastIndex - options.index || 1;\n\n      var itemInfo = function (headerItem, breadth, isHorizontal, isTree) {\n        var infoItem = {\n          type: headerItem.type,\n          text: headerItem.text\n        };\n\n        if (headerItem.path) {\n          infoItem.path = headerItem.path;\n        }\n\n        if (headerItem.width) {\n          infoItem.width = headerItem.width;\n        }\n\n        if (isDefined(headerItem.wordWrapEnabled)) {\n          infoItem.wordWrapEnabled = headerItem.wordWrapEnabled;\n        }\n\n        if (headerItem.isLast) {\n          infoItem.isLast = true;\n        }\n\n        if (headerItem.sorted) {\n          infoItem.sorted = true;\n        }\n\n        if (headerItem.isMetric) {\n          infoItem.dataIndex = headerItem.dataIndex;\n        }\n\n        if (isDefined(headerItem.expanded)) {\n          infoItem.expanded = headerItem.expanded;\n        }\n\n        if (breadth > 1) {\n          infoItem[isHorizontal ? \"colspan\" : \"rowspan\"] = breadth;\n        }\n\n        if (headerItem.depthSize && headerItem.depthSize > 1) {\n          infoItem[isHorizontal ? \"rowspan\" : \"colspan\"] = headerItem.depthSize;\n        }\n\n        if (headerItem.index >= 0) {\n          infoItem.dataSourceIndex = headerItem.index;\n        }\n\n        if (isTree && headerItem.children && headerItem.children.length && !headerItem.children[0].isMetric) {\n          infoItem.width = null;\n          infoItem.isWhiteSpace = true;\n        }\n\n        return infoItem;\n      }(options.headerItem, breadth, options.isHorizontal, options.isTree);\n\n      !function (info, infoItem, itemIndex, depthIndex, isHorizontal) {\n        var index = isHorizontal ? depthIndex : itemIndex;\n\n        while (!info[index]) {\n          info.push([]);\n        }\n\n        if (isHorizontal) {\n          info[index].push(infoItem);\n        } else {\n          info[index].unshift(infoItem);\n        }\n      }(info, itemInfo, options.index, options.depth, options.isHorizontal);\n\n      if (!options.headerItem.children || 0 === options.headerItem.children.length) {\n        return options.lastIndex + 1;\n      }\n\n      return options.lastIndex;\n    };\n\n    var getViewHeaderItems = function (headerItems, headerDescriptions, cellDescriptions, depthSize, options) {\n      var cellDescriptionsCount = cellDescriptions.length;\n\n      var viewHeaderItems = function (headerItems, headerDescriptions) {\n        var headerDescriptionsCount = headerDescriptions && headerDescriptions.length || 0;\n        var childrenStack = [];\n        var d = new Deferred();\n        var headerItem;\n        when(foreachTreeAsync(headerItems, function (items, index) {\n          var item = items[0];\n          var path = createPath(items);\n          headerItem = createHeaderItem(childrenStack, path.length, index);\n          headerItem.type = DATA_TYPE;\n          headerItem.value = item.value;\n          headerItem.path = path;\n          headerItem.text = item.text;\n          headerItem.index = item.index;\n          headerItem.displayText = item.displayText;\n          headerItem.key = item.key;\n          headerItem.isEmpty = item.isEmpty;\n\n          if (path.length < headerDescriptionsCount && (!item.children || 0 !== item.children.length)) {\n            headerItem.expanded = !!item.children;\n          }\n        })).done(function () {\n          d.resolve(createHeaderItem(childrenStack, 0, 0).children || []);\n        });\n        return d;\n      }(headerItems, headerDescriptions);\n\n      var dataFields = options.dataFields;\n      var d = new Deferred();\n      when(viewHeaderItems).done(function (viewHeaderItems) {\n        options.notifyProgress(.5);\n\n        if (options.showGrandTotals) {\n          viewHeaderItems[!options.showTotalsPrior ? \"push\" : \"unshift\"]({\n            type: GRAND_TOTAL_TYPE,\n            isEmpty: options.isEmptyGrandTotal\n          });\n        }\n\n        var hideTotals = false === options.showTotals || dataFields.length > 0 && dataFields.length === options.hiddenTotals.length;\n        var hideData = dataFields.length > 0 && options.hiddenValues.length === dataFields.length;\n\n        if (hideData && hideTotals) {\n          depthSize = 1;\n        }\n\n        if (!hideTotals || \"tree\" === options.layout) {\n          !function (headerItems, headerDescriptions, showTotalsPrior, isTree) {\n            showTotalsPrior = showTotalsPrior || isTree;\n            foreachTree(headerItems, function (items, index) {\n              var item = items[0];\n              var parentChildren = (items[1] ? items[1].children : headerItems) || [];\n              var dataField = headerDescriptions[items.length - 1];\n\n              if (item.type === DATA_TYPE && item.expanded && (false !== dataField.showTotals || isTree)) {\n                -1 !== index && parentChildren.splice(showTotalsPrior ? index : index + 1, 0, extend({}, item, {\n                  children: null,\n                  type: TOTAL_TYPE,\n                  expanded: showTotalsPrior ? true : null,\n                  isAdditionalTotal: true\n                }));\n\n                if (showTotalsPrior) {\n                  item.expanded = null;\n                }\n              }\n            });\n          }(viewHeaderItems, headerDescriptions, options.showTotalsPrior, \"tree\" === options.layout);\n        }\n\n        when(foreachTreeAsync(viewHeaderItems, function (items) {\n          var item = items[0];\n\n          if (!item.children || 0 === item.children.length) {\n            item.depthSize = depthSize - items.length + 1;\n          }\n        })).done(function () {\n          if (cellDescriptionsCount > 1) {\n            !function (headerItems, cellDescriptions, options) {\n              foreachTree(headerItems, function (items) {\n                var item = items[0];\n                var i;\n\n                if (!item.children || 0 === item.children.length) {\n                  item.children = [];\n\n                  for (i = 0; i < cellDescriptions.length; i++) {\n                    var isGrandTotal = item.type === GRAND_TOTAL_TYPE;\n                    var isTotal = item.type === TOTAL_TYPE;\n                    var isValue = item.type === DATA_TYPE;\n                    var columnIsHidden = false === cellDescriptions[i].visible || isGrandTotal && options.hiddenGrandTotals.includes(i) || isTotal && options.hiddenTotals.includes(i) || isValue && options.hiddenValues.includes(i);\n\n                    if (columnIsHidden) {\n                      continue;\n                    }\n\n                    item.children.push({\n                      caption: cellDescriptions[i].caption,\n                      path: item.path,\n                      type: item.type,\n                      value: i,\n                      index: item.index,\n                      dataIndex: i,\n                      isMetric: true,\n                      isEmpty: item.isEmpty && item.isEmpty[i]\n                    });\n                  }\n                }\n              });\n            }(viewHeaderItems, cellDescriptions, options);\n          }\n\n          !options.showEmpty && function (headerItems) {\n            foreachTree([{\n              children: headerItems\n            }], function (items, index) {\n              var item = items[0];\n              var parentChildren = (items[1] ? items[1].children : headerItems) || [];\n              var isEmpty = item.isEmpty;\n\n              if (isEmpty && isEmpty.length) {\n                isEmpty = item.isEmpty.filter(function (isEmpty) {\n                  return isEmpty;\n                }).length === isEmpty.length;\n              }\n\n              if (item && !item.children && isEmpty) {\n                parentChildren.splice(index, 1);\n                !function removeEmptyParent(items, index) {\n                  var parent = items[index + 1];\n\n                  if (!items[index].children.length && parent && parent.children) {\n                    parent.children.splice(parent.children.indexOf(items[index]), 1);\n                    removeEmptyParent(items, index + 1);\n                  }\n                }(items, 1);\n              }\n            });\n          }(viewHeaderItems);\n          options.notifyProgress(.75);\n          when(foreachTreeAsync(viewHeaderItems, function (items) {\n            var item = items[0];\n            var isMetric = item.isMetric;\n            var field = headerDescriptions[items.length - 1] || {};\n\n            if (item.type === DATA_TYPE && !isMetric) {\n              item.width = field.width;\n            }\n\n            if (true === hideData && item.type === DATA_TYPE) {\n              var parentChildren = (items[1] ? items[1].children : viewHeaderItems) || [];\n              parentChildren.splice(parentChildren.indexOf(item), 1);\n              return;\n            }\n\n            if (isMetric) {\n              item.wordWrapEnabled = cellDescriptions[item.dataIndex].wordWrapEnabled;\n            } else {\n              item.wordWrapEnabled = field.wordWrapEnabled;\n            }\n\n            item.isLast = !item.children || !item.children.length;\n\n            if (item.isLast) {\n              each(options.sortBySummaryPaths, function (index, sortBySummaryPath) {\n                if (!isDefined(item.dataIndex)) {\n                  sortBySummaryPath = sortBySummaryPath.slice(0);\n                  sortBySummaryPath.pop();\n                }\n\n                if (function (items, sortBySummaryPath) {\n                  var path;\n                  var item = items[0];\n                  var stringValuesUsed = isString(sortBySummaryPath[0]);\n                  var headerItem = item.dataIndex >= 0 ? items[1] : item;\n\n                  if (stringValuesUsed && -1 !== sortBySummaryPath[0].indexOf(\"&[\") && headerItem.key || !headerItem.key) {\n                    path = createPath(items);\n                  } else {\n                    path = map(items, function (item) {\n                      return item.dataIndex >= 0 ? item.value : item.text;\n                    }).reverse();\n                  }\n\n                  if (item.type === GRAND_TOTAL_TYPE) {\n                    path = path.slice(1);\n                  }\n\n                  return path.join(\"/\") === sortBySummaryPath.join(\"/\");\n                }(items, sortBySummaryPath)) {\n                  item.sorted = true;\n                  return false;\n                }\n              });\n            }\n\n            item.text = function (item, description, options) {\n              var text = item.text;\n\n              if (isDefined(item.displayText)) {\n                text = item.displayText;\n              } else if (isDefined(item.caption)) {\n                text = item.caption;\n              } else if (item.type === GRAND_TOTAL_TYPE) {\n                text = options.texts.grandTotal;\n              }\n\n              if (item.isAdditionalTotal) {\n                text = format(options.texts.total || \"\", text);\n              }\n\n              return text;\n            }(item, 0, options);\n          })).done(function () {\n            if (!viewHeaderItems.length) {\n              viewHeaderItems.push({});\n            }\n\n            options.notifyProgress(1);\n            d.resolve(viewHeaderItems);\n          });\n        });\n      });\n      return d;\n    };\n\n    function createHeaderItem(childrenStack, depth, index) {\n      var parent = childrenStack[depth] = childrenStack[depth] || [];\n      var node = parent[index] = {};\n\n      if (childrenStack[depth + 1]) {\n        node.children = childrenStack[depth + 1];\n\n        for (var i = depth + 1; i < childrenStack.length; i++) {\n          childrenStack[i] = void 0;\n        }\n\n        childrenStack.length = depth + 1;\n      }\n\n      return node;\n    }\n\n    return function (headerItems, headerDescriptions, cellDescriptions, isHorizontal, options) {\n      var info = [];\n\n      var depthSize = function (headerItems) {\n        var depth = 0;\n        foreachTree(headerItems, function (items) {\n          depth = math.max(depth, items.length);\n        });\n        return depth;\n      }(headerItems) || 1;\n\n      var d = new Deferred();\n      getViewHeaderItems(headerItems, headerDescriptions, cellDescriptions, depthSize, options).done(function (viewHeaderItems) {\n        !function (info, viewHeaderItems, depthSize, isHorizontal, isTree) {\n          var lastIndex = 0;\n          var index;\n          var depth;\n          var indexesByDepth = [0];\n          foreachTree(viewHeaderItems, function (items) {\n            var headerItem = items[0];\n            depth = headerItem.isMetric ? depthSize : items.length - 1;\n\n            while (indexesByDepth.length - 1 < depth) {\n              indexesByDepth.push(indexesByDepth[indexesByDepth.length - 1]);\n            }\n\n            index = indexesByDepth[depth] || 0;\n            lastIndex = addInfoItem(info, {\n              headerItem: headerItem,\n              index: index,\n              lastIndex: lastIndex,\n              depth: depth,\n              isHorizontal: isHorizontal,\n              isTree: isTree\n            });\n            indexesByDepth.length = depth;\n            indexesByDepth.push(lastIndex);\n          });\n        }(info, viewHeaderItems, depthSize, isHorizontal, \"tree\" === options.layout);\n        options.notifyProgress(1);\n        d.resolve(info);\n      });\n      return d;\n    };\n  }();\n\n  function createSortPaths(headerFields, dataFields) {\n    var sortBySummaryPaths = [];\n    each(headerFields, function (index, headerField) {\n      var fieldIndex = findField(dataFields, headerField.sortBySummaryField);\n\n      if (fieldIndex >= 0) {\n        sortBySummaryPaths.push((headerField.sortBySummaryPath || []).concat([fieldIndex]));\n      }\n    });\n    return sortBySummaryPaths;\n  }\n\n  function foreachRowInfo(rowsInfo, callback) {\n    var columnOffset = 0;\n    var columnOffsetResetIndexes = [];\n\n    for (var i = 0; i < rowsInfo.length; i++) {\n      for (var j = 0; j < rowsInfo[i].length; j++) {\n        var rowSpanOffset = (rowsInfo[i][j].rowspan || 1) - 1;\n        var visibleIndex = i + rowSpanOffset;\n\n        if (columnOffsetResetIndexes[i]) {\n          columnOffset -= columnOffsetResetIndexes[i];\n          columnOffsetResetIndexes[i] = 0;\n        }\n\n        if (false === callback(rowsInfo[i][j], visibleIndex, i, j, columnOffset)) {\n          break;\n        }\n\n        columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] = (columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] || 0) + 1;\n        columnOffset++;\n      }\n    }\n  }\n\n  function getHeaderIndexedItems(headerItems, options) {\n    var visibleIndex = 0;\n    var indexedItems = [];\n    foreachTree(headerItems, function (items) {\n      var headerItem = items[0];\n      var path = createPath(items);\n\n      if (headerItem.children && false === options.showTotals) {\n        return;\n      }\n\n      var indexedItem = extend(true, {}, headerItem, {\n        visibleIndex: visibleIndex++,\n        path: path\n      });\n\n      if (isDefined(indexedItem.index)) {\n        indexedItems[indexedItem.index] = indexedItem;\n      } else {\n        indexedItems.push(indexedItem);\n      }\n    });\n    return indexedItems;\n  }\n\n  function createScrollController(dataController, component, dataAdapter) {\n    return new VirtualScrollController(component, extend({\n      hasKnownLastPage: function () {\n        return true;\n      },\n      pageCount: function () {\n        return math.ceil(this.totalItemsCount() / this.pageSize());\n      },\n      updateLoading: function () {},\n      itemsCount: function () {\n        if (this.pageIndex() < this.pageCount() - 1) {\n          return this.pageSize();\n        } else {\n          return this.totalItemsCount() % this.pageSize();\n        }\n      },\n      items: function () {\n        return [];\n      },\n      viewportItems: function () {\n        return [];\n      },\n      onChanged: function () {},\n      isLoading: function () {\n        return dataController.isLoading();\n      },\n      changingDuration: function () {\n        var dataSource = dataController._dataSource;\n\n        if (dataSource.paginate()) {\n          return CHANGING_DURATION_IF_PAGINATE;\n        }\n\n        return dataController._changingDuration || 0;\n      }\n    }, dataAdapter));\n  }\n\n  var members = {\n    ctor: function (options) {\n      var that = this;\n\n      var virtualScrollControllerChanged = that._fireChanged.bind(that);\n\n      options = that._options = options || {};\n      that.dataSourceChanged = Callbacks();\n      that._dataSource = that._createDataSource(options);\n\n      if (options.component && \"virtual\" === options.component.option(\"scrolling.mode\")) {\n        that._rowsScrollController = createScrollController(that, options.component, {\n          totalItemsCount: function () {\n            return that.totalRowCount();\n          },\n          pageIndex: function (index) {\n            return that.rowPageIndex(index);\n          },\n          pageSize: function () {\n            return that.rowPageSize();\n          },\n          load: function () {\n            if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\n              that._rowsScrollController.pageIndex(this.pageCount() - 1);\n            }\n\n            return that._rowsScrollController.handleDataChanged(function () {\n              if (that._dataSource.paginate()) {\n                that._dataSource.load();\n              } else {\n                virtualScrollControllerChanged.apply(this, arguments);\n              }\n            });\n          }\n        });\n        that._columnsScrollController = createScrollController(that, options.component, {\n          totalItemsCount: function () {\n            return that.totalColumnCount();\n          },\n          pageIndex: function (index) {\n            return that.columnPageIndex(index);\n          },\n          pageSize: function () {\n            return that.columnPageSize();\n          },\n          load: function () {\n            if (that._columnsScrollController.pageIndex() >= this.pageCount()) {\n              that._columnsScrollController.pageIndex(this.pageCount() - 1);\n            }\n\n            return that._columnsScrollController.handleDataChanged(function () {\n              if (that._dataSource.paginate()) {\n                that._dataSource.load();\n              } else {\n                virtualScrollControllerChanged.apply(this, arguments);\n              }\n            });\n          }\n        });\n      }\n\n      that._stateStoringController = new StateStoringController(options.component).init();\n      that._columnsInfo = [];\n      that._rowsInfo = [];\n      that._cellsInfo = [];\n      that.expandValueChanging = Callbacks();\n      that.loadingChanged = Callbacks();\n      that.progressChanged = Callbacks();\n      that.scrollChanged = Callbacks();\n      that.load();\n\n      that._update();\n\n      that.changed = Callbacks();\n    },\n    _fireChanged: function () {\n      var startChanging = new Date();\n      this.changed && !this._lockChanged && this.changed.fire();\n      this._changingDuration = new Date() - startChanging;\n    },\n    _correctSkipsTakes: function (rowIndex, rowSkip, rowSpan, levels, skips, takes) {\n      var endIndex = rowSpan ? rowIndex + rowSpan - 1 : rowIndex;\n      skips[levels.length] = skips[levels.length] || 0;\n      takes[levels.length] = takes[levels.length] || 0;\n\n      if (endIndex < rowSkip) {\n        skips[levels.length]++;\n      } else {\n        takes[levels.length]++;\n      }\n    },\n    _calculatePagingForRowExpandedPaths: function (options, skips, takes, rowExpandedSkips, rowExpandedTakes) {\n      var rows = this._rowsInfo;\n      var rowCount = Math.min(options.rowSkip + options.rowTake, rows.length);\n      var rowExpandedPaths = options.rowExpandedPaths;\n      var levels = [];\n      var expandedPathIndexes = {};\n      var i;\n      var j;\n      var path;\n      rowExpandedPaths.forEach((path, index) => {\n        expandedPathIndexes[path] = index;\n      });\n\n      for (i = 0; i < rowCount; i++) {\n        takes.length = skips.length = levels.length + 1;\n\n        for (j = 0; j < rows[i].length; j++) {\n          var cell = rows[i][j];\n\n          if (\"D\" === cell.type) {\n            this._correctSkipsTakes(i, options.rowSkip, cell.rowspan, levels, skips, takes);\n\n            path = cell.path || path;\n            var expandIndex = path && path.length > 1 ? expandedPathIndexes[path.slice(0, -1)] : -1;\n\n            if (expandIndex >= 0) {\n              rowExpandedSkips[expandIndex] = skips[levels.length] || 0;\n              rowExpandedTakes[expandIndex] = takes[levels.length] || 0;\n            }\n\n            if (cell.rowspan) {\n              levels.push(cell.rowspan);\n            }\n          }\n        }\n\n        levels = levels.map(level => level - 1).filter(level => level > 0);\n      }\n    },\n    _calculatePagingForColumnExpandedPaths: function (options, skips, takes, expandedSkips, expandedTakes) {\n      var skipByPath = {};\n      var takeByPath = {};\n      foreachColumnInfo(this._columnsInfo, function (columnInfo, columnIndex) {\n        if (\"D\" === columnInfo.type && columnInfo.path && void 0 === columnInfo.dataIndex) {\n          var colspan = columnInfo.colspan || 1;\n          var path = columnInfo.path.slice(0, -1).toString();\n          skipByPath[path] = skipByPath[path] || 0;\n          takeByPath[path] = takeByPath[path] || 0;\n\n          if (columnIndex + colspan <= options.columnSkip) {\n            skipByPath[path]++;\n          } else if (columnIndex < options.columnSkip + options.columnTake) {\n            takeByPath[path]++;\n          }\n        }\n      });\n      skips[0] = skipByPath[[]];\n      takes[0] = takeByPath[[]];\n      options.columnExpandedPaths.forEach(function (path, index) {\n        var skip = skipByPath[path];\n        var take = takeByPath[path];\n\n        if (void 0 !== skip) {\n          expandedSkips[index] = skip;\n        }\n\n        if (void 0 !== take) {\n          expandedTakes[index] = take;\n        }\n      });\n    },\n    _processPagingForExpandedPaths: function (options, area, storeLoadOptions, reload) {\n      var expandedPaths = options[area + \"ExpandedPaths\"];\n      var expandedSkips = expandedPaths.map(() => 0);\n      var expandedTakes = expandedPaths.map(() => reload ? options.pageSize : 0);\n      var skips = [];\n      var takes = [];\n\n      if (!reload) {\n        if (\"row\" === area) {\n          this._calculatePagingForRowExpandedPaths(options, skips, takes, expandedSkips, expandedTakes);\n        } else {\n          this._calculatePagingForColumnExpandedPaths(options, skips, takes, expandedSkips, expandedTakes);\n        }\n      }\n\n      this._savePagingForExpandedPaths(options, area, storeLoadOptions, skips[0], takes[0], expandedSkips, expandedTakes);\n    },\n    _savePagingForExpandedPaths: function (options, area, storeLoadOptions, skip, take, expandedSkips, expandedTakes) {\n      var expandedPaths = options[area + \"ExpandedPaths\"];\n      options[area + \"ExpandedPaths\"] = [];\n      options[area + \"Skip\"] = void 0 !== skip ? skip : options[area + \"Skip\"];\n      options[area + \"Take\"] = void 0 !== take ? take : options[area + \"Take\"];\n\n      for (var i = 0; i < expandedPaths.length; i++) {\n        if (expandedTakes[i]) {\n          var isOppositeArea = options.area && options.area !== area;\n          storeLoadOptions.push(extend({\n            area: area,\n            headerName: area + \"s\"\n          }, options, {\n            [area + \"Skip\"]: expandedSkips[i],\n            [area + \"Take\"]: expandedTakes[i],\n            [isOppositeArea ? \"oppositePath\" : \"path\"]: expandedPaths[i]\n          }));\n        }\n      }\n    },\n    _handleCustomizeStoreLoadOptions: function (storeLoadOptions, reload) {\n      var options = storeLoadOptions[0];\n      var rowsScrollController = this._rowsScrollController;\n\n      if (this._dataSource.paginate() && rowsScrollController) {\n        var rowPageSize = rowsScrollController.pageSize();\n\n        if (\"rows\" === options.headerName) {\n          options.rowSkip = 0;\n          options.rowTake = rowPageSize;\n          options.rowExpandedPaths = [];\n        } else {\n          options.rowSkip = rowsScrollController.beginPageIndex() * rowPageSize;\n          options.rowTake = (rowsScrollController.endPageIndex() - rowsScrollController.beginPageIndex() + 1) * rowPageSize;\n\n          this._processPagingForExpandedPaths(options, \"row\", storeLoadOptions, reload);\n        }\n      }\n\n      var columnsScrollController = this._columnsScrollController;\n\n      if (this._dataSource.paginate() && columnsScrollController) {\n        var columnPageSize = columnsScrollController.pageSize();\n        storeLoadOptions.forEach((options, index) => {\n          if (\"columns\" === options.headerName) {\n            options.columnSkip = 0;\n            options.columnTake = columnPageSize;\n            options.columnExpandedPaths = [];\n          } else {\n            options.columnSkip = columnsScrollController.beginPageIndex() * columnPageSize;\n            options.columnTake = (columnsScrollController.endPageIndex() - columnsScrollController.beginPageIndex() + 1) * columnPageSize;\n\n            this._processPagingForExpandedPaths(options, \"column\", storeLoadOptions, reload);\n          }\n        });\n      }\n    },\n    load: function () {\n      var that = this;\n      var stateStoringController = this._stateStoringController;\n\n      if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\n        stateStoringController.load().always(function (state) {\n          if (state) {\n            that._dataSource.state(state);\n          } else {\n            that._dataSource.load();\n          }\n        });\n      } else {\n        that._dataSource.load();\n      }\n    },\n    calculateVirtualContentParams: function (contentParams) {\n      var rowsScrollController = this._rowsScrollController;\n      var columnsScrollController = this._columnsScrollController;\n\n      if (rowsScrollController && columnsScrollController) {\n        rowsScrollController.viewportItemSize(contentParams.virtualRowHeight);\n        rowsScrollController.viewportSize(contentParams.viewportHeight / rowsScrollController.viewportItemSize());\n        rowsScrollController.setContentItemSizes(contentParams.itemHeights);\n        columnsScrollController.viewportItemSize(contentParams.virtualColumnWidth);\n        columnsScrollController.viewportSize(contentParams.viewportWidth / columnsScrollController.viewportItemSize());\n        columnsScrollController.setContentItemSizes(contentParams.itemWidths);\n        deferUpdate(function () {\n          columnsScrollController.loadIfNeed();\n          rowsScrollController.loadIfNeed();\n        });\n        this.scrollChanged.fire({\n          left: columnsScrollController.getViewportPosition(),\n          top: rowsScrollController.getViewportPosition()\n        });\n        return {\n          contentTop: rowsScrollController.getContentOffset(),\n          contentLeft: columnsScrollController.getContentOffset(),\n          width: columnsScrollController.getVirtualContentSize(),\n          height: rowsScrollController.getVirtualContentSize()\n        };\n      }\n    },\n    setViewportPosition: function (left, top) {\n      this._rowsScrollController.setViewportPosition(top || 0);\n\n      this._columnsScrollController.setViewportPosition(left || 0);\n    },\n    subscribeToWindowScrollEvents: function ($element) {\n      this._rowsScrollController && this._rowsScrollController.subscribeToWindowScrollEvents($element);\n    },\n    updateWindowScrollPosition: function (position) {\n      this._rowsScrollController && this._rowsScrollController.scrollTo(position);\n    },\n    updateViewOptions: function (options) {\n      extend(this._options, options);\n\n      this._update();\n    },\n    _handleExpandValueChanging: function (e) {\n      this.expandValueChanging.fire(e);\n    },\n    _handleLoadingChanged: function (isLoading) {\n      this.loadingChanged.fire(isLoading);\n    },\n    _handleProgressChanged: function (progress) {\n      this.progressChanged.fire(progress);\n    },\n    _handleFieldsPrepared: function (e) {\n      this._options.onFieldsPrepared && this._options.onFieldsPrepared(e);\n    },\n    _createDataSource: function (options) {\n      var that = this;\n      var dataSourceOptions = options.dataSource;\n      var dataSource;\n      that._isSharedDataSource = dataSourceOptions instanceof PivotGridDataSource;\n\n      if (that._isSharedDataSource) {\n        dataSource = dataSourceOptions;\n      } else {\n        dataSource = new PivotGridDataSource(dataSourceOptions);\n      }\n\n      that._expandValueChangingHandler = that._handleExpandValueChanging.bind(that);\n      that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\n      that._fieldsPreparedHandler = that._handleFieldsPrepared.bind(that);\n      that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\n\n      that._changedHandler = function () {\n        that._update();\n\n        that.dataSourceChanged.fire();\n      };\n\n      that._progressChangedHandler = function (progress) {\n        that._handleProgressChanged(.8 * progress);\n      };\n\n      dataSource.on(\"changed\", that._changedHandler);\n      dataSource.on(\"expandValueChanging\", that._expandValueChangingHandler);\n      dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\n      dataSource.on(\"progressChanged\", that._progressChangedHandler);\n      dataSource.on(\"fieldsPrepared\", that._fieldsPreparedHandler);\n      dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\n      return dataSource;\n    },\n    getDataSource: function () {\n      return this._dataSource;\n    },\n    isLoading: function () {\n      return this._dataSource.isLoading();\n    },\n    beginLoading: function () {\n      this._dataSource.beginLoading();\n    },\n    endLoading: function () {\n      this._dataSource.endLoading();\n    },\n    _update: function () {\n      var that = this;\n      var dataSource = that._dataSource;\n      var options = that._options;\n      var columnFields = dataSource.getAreaFields(\"column\");\n      var rowFields = dataSource.getAreaFields(\"row\");\n      var dataFields = dataSource.getAreaFields(\"data\");\n      var dataFieldsForRows = \"row\" === options.dataFieldArea ? dataFields : [];\n      var dataFieldsForColumns = \"row\" !== options.dataFieldArea ? dataFields : [];\n      var data = dataSource.getData();\n\n      var hiddenTotals = function (dataFields) {\n        var result = [];\n        each(dataFields, function (index, field) {\n          if (false === field.showTotals) {\n            result.push(index);\n          }\n        });\n        return result;\n      }(dataFields);\n\n      var hiddenValues = function (dataFields) {\n        var result = [];\n        dataFields.forEach(function (field, index) {\n          if (void 0 === field.showValues && false === field.showTotals || false === field.showValues) {\n            result.push(index);\n          }\n        });\n        return result;\n      }(dataFields);\n\n      var hiddenGrandTotals = function (dataFields, columnFields) {\n        var result = [];\n        each(dataFields, function (index, field) {\n          if (false === field.showGrandTotals) {\n            result.push(index);\n          }\n        });\n\n        if (0 === columnFields.length && result.length === dataFields.length) {\n          result = [];\n        }\n\n        return result;\n      }(dataFields, columnFields);\n\n      var grandTotalsAreHiddenForNotAllDataFields = dataFields.length > 0 ? hiddenGrandTotals.length !== dataFields.length : true;\n      var rowOptions = {\n        isEmptyGrandTotal: data.isEmptyGrandTotalRow,\n        texts: options.texts || {},\n        hiddenTotals: hiddenTotals,\n        hiddenValues: hiddenValues,\n        hiddenGrandTotals: [],\n        showTotals: options.showRowTotals,\n        showGrandTotals: false !== options.showRowGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\n        sortBySummaryPaths: createSortPaths(columnFields, dataFields),\n        showTotalsPrior: \"rows\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\n        showEmpty: !options.hideEmptySummaryCells,\n        layout: options.rowHeaderLayout,\n        fields: rowFields,\n        dataFields: dataFields,\n        progress: 0\n      };\n      var columnOptions = {\n        isEmptyGrandTotal: data.isEmptyGrandTotalColumn,\n        texts: options.texts || {},\n        hiddenTotals: hiddenTotals,\n        hiddenValues: hiddenValues,\n        hiddenGrandTotals: hiddenGrandTotals,\n        showTotals: options.showColumnTotals,\n        showTotalsPrior: \"columns\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\n        showGrandTotals: false !== options.showColumnGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\n        sortBySummaryPaths: createSortPaths(rowFields, dataFields),\n        showEmpty: !options.hideEmptySummaryCells,\n        fields: columnFields,\n        dataFields: dataFields,\n        progress: 0\n      };\n\n      var notifyProgress = function (progress) {\n        this.progress = progress;\n\n        that._handleProgressChanged(.8 + .1 * rowOptions.progress + .1 * columnOptions.progress);\n      };\n\n      rowOptions.notifyProgress = notifyProgress;\n      columnOptions.notifyProgress = notifyProgress;\n\n      if (!isDefined(data.grandTotalRowIndex)) {\n        data.grandTotalRowIndex = getHeaderIndexedItems(data.rows, rowOptions).length;\n      }\n\n      if (!isDefined(data.grandTotalColumnIndex)) {\n        data.grandTotalColumnIndex = getHeaderIndexedItems(data.columns, columnOptions).length;\n      }\n\n      dataSource._changeLoadingCount(1);\n\n      when(createHeaderInfo(data.columns, columnFields, dataFieldsForColumns, true, columnOptions), createHeaderInfo(data.rows, rowFields, dataFieldsForRows, false, rowOptions)).always(function () {\n        dataSource._changeLoadingCount(-1);\n      }).done(function (columnsInfo, rowsInfo) {\n        that._columnsInfo = columnsInfo;\n        that._rowsInfo = rowsInfo;\n\n        if (that._rowsScrollController && that._columnsScrollController && that.changed && !that._dataSource.paginate()) {\n          that._rowsScrollController.reset(true);\n\n          that._columnsScrollController.reset(true);\n\n          that._lockChanged = true;\n\n          that._rowsScrollController.load();\n\n          that._columnsScrollController.load();\n\n          that._lockChanged = false;\n        }\n      }).done(function () {\n        that._fireChanged();\n\n        if (that._stateStoringController.isEnabled() && !that._dataSource.isLoading()) {\n          that._stateStoringController.state(that._dataSource.state());\n\n          that._stateStoringController.save();\n        }\n      });\n    },\n    getRowsInfo: function (getAllData) {\n      var rowsInfo = this._rowsInfo;\n      var scrollController = this._rowsScrollController;\n      var rowspan;\n\n      if (scrollController && !getAllData) {\n        var startIndex = scrollController.beginPageIndex() * this.rowPageSize();\n        var endIndex = scrollController.endPageIndex() * this.rowPageSize() + this.rowPageSize();\n        var newRowsInfo = [];\n        var maxDepth = 1;\n        foreachRowInfo(rowsInfo, function (rowInfo, visibleIndex, rowIndex, _, columnIndex) {\n          var isVisible = visibleIndex >= startIndex && rowIndex < endIndex;\n          var index = rowIndex < startIndex ? 0 : rowIndex - startIndex;\n          var cell = rowInfo;\n\n          if (isVisible) {\n            newRowsInfo[index] = newRowsInfo[index] || [];\n            rowspan = rowIndex < startIndex ? rowInfo.rowspan - (startIndex - rowIndex) || 1 : rowInfo.rowspan;\n\n            if (startIndex + index + rowspan > endIndex) {\n              rowspan = endIndex - (index + startIndex) || 1;\n            }\n\n            if (rowspan !== rowInfo.rowspan) {\n              cell = extend({}, cell, {\n                rowspan: rowspan\n              });\n            }\n\n            newRowsInfo[index].push(cell);\n            maxDepth = math.max(maxDepth, columnIndex + 1);\n          } else if (void 0 > endIndex) {\n            return false;\n          }\n        });\n        foreachRowInfo(newRowsInfo, function (rowInfo, visibleIndex, rowIndex, columnIndex, realColumnIndex) {\n          var colspan = rowInfo.colspan || 1;\n\n          if (realColumnIndex + colspan > maxDepth) {\n            newRowsInfo[rowIndex][columnIndex] = extend({}, rowInfo, {\n              colspan: maxDepth - realColumnIndex || 1\n            });\n          }\n        });\n        return newRowsInfo;\n      }\n\n      return rowsInfo;\n    },\n    getColumnsInfo: function (getAllData) {\n      var info = this._columnsInfo;\n      var scrollController = this._columnsScrollController;\n\n      if (scrollController && !getAllData) {\n        var startIndex = scrollController.beginPageIndex() * this.columnPageSize();\n        var endIndex = scrollController.endPageIndex() * this.columnPageSize() + this.columnPageSize();\n        info = createColumnsInfo(info, startIndex, endIndex);\n      }\n\n      return info;\n    },\n    totalRowCount: function () {\n      return this._rowsInfo.length;\n    },\n    rowPageIndex: function (index) {\n      if (void 0 !== index) {\n        this._rowPageIndex = index;\n      }\n\n      return this._rowPageIndex || 0;\n    },\n    totalColumnCount: function () {\n      var count = 0;\n\n      if (this._columnsInfo && this._columnsInfo.length) {\n        for (var i = 0; i < this._columnsInfo[0].length; i++) {\n          count += this._columnsInfo[0][i].colspan || 1;\n        }\n      }\n\n      return count;\n    },\n    rowPageSize: function (size) {\n      if (void 0 !== size) {\n        this._rowPageSize = size;\n      }\n\n      return this._rowPageSize || 20;\n    },\n    columnPageSize: function (size) {\n      if (void 0 !== size) {\n        this._columnPageSize = size;\n      }\n\n      return this._columnPageSize || 20;\n    },\n    columnPageIndex: function (index) {\n      if (void 0 !== index) {\n        this._columnPageIndex = index;\n      }\n\n      return this._columnPageIndex || 0;\n    },\n    getCellsInfo: function (getAllData) {\n      var rowsInfo = this.getRowsInfo(getAllData);\n      var columnsInfo = this.getColumnsInfo(getAllData);\n\n      var data = this._dataSource.getData();\n\n      var texts = this._options.texts || {};\n      return function (rowsInfo, columnsInfo, data, dataFields, dataFieldArea, errorText) {\n        var info = [];\n        var dataFieldAreaInRows = \"row\" === dataFieldArea;\n        var dataSourceCells = data.values;\n        dataSourceCells.length && foreachRowInfo(rowsInfo, function (rowInfo, rowIndex) {\n          var row = info[rowIndex] = [];\n          var dataRow = dataSourceCells[rowInfo.dataSourceIndex >= 0 ? rowInfo.dataSourceIndex : data.grandTotalRowIndex] || [];\n          rowInfo.isLast && foreachColumnInfo(columnsInfo, function (columnInfo, columnIndex) {\n            var dataIndex = (dataFieldAreaInRows ? rowInfo.dataIndex : columnInfo.dataIndex) || 0;\n            var dataField = dataFields[dataIndex];\n\n            if (columnInfo.isLast && dataField && false !== dataField.visible) {\n              var cell = dataRow[columnInfo.dataSourceIndex >= 0 ? columnInfo.dataSourceIndex : data.grandTotalColumnIndex];\n\n              if (!Array.isArray(cell)) {\n                cell = [cell];\n              }\n\n              var cellValue = cell[dataIndex];\n              row[columnIndex] = {\n                text: formatCellValue(cellValue, dataField, errorText),\n                value: cellValue,\n                format: dataField.format,\n                dataType: dataField.dataType,\n                columnType: columnInfo.type,\n                rowType: rowInfo.type,\n                rowPath: rowInfo.path || [],\n                columnPath: columnInfo.path || [],\n                dataIndex: dataIndex\n              };\n\n              if (dataField.width) {\n                row[columnIndex].width = dataField.width;\n              }\n            }\n          });\n        });\n        return info;\n      }(rowsInfo, columnsInfo, data, this._dataSource.getAreaFields(\"data\"), this._options.dataFieldArea, texts.dataNotAvailable);\n    },\n    dispose: function () {\n      if (this._isSharedDataSource) {\n        this._dataSource.off(\"changed\", this._changedHandler);\n\n        this._dataSource.off(\"expandValueChanging\", this._expandValueChangingHandler);\n\n        this._dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\n\n        this._dataSource.off(\"progressChanged\", this._progressChangedHandler);\n\n        this._dataSource.off(\"fieldsPrepared\", this._fieldsPreparedHandler);\n\n        this._dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\n      } else {\n        this._dataSource.dispose();\n      }\n\n      this._columnsScrollController && this._columnsScrollController.dispose();\n      this._rowsScrollController && this._rowsScrollController.dispose();\n\n      this._stateStoringController.dispose();\n\n      this.expandValueChanging.empty();\n      this.changed.empty();\n      this.loadingChanged.empty();\n      this.progressChanged.empty();\n      this.scrollChanged.empty();\n      this.dataSourceChanged.empty();\n    }\n  };\n  proxyMethod(members, \"applyPartialDataSource\");\n  proxyMethod(members, \"collapseHeaderItem\");\n  proxyMethod(members, \"expandHeaderItem\");\n  proxyMethod(members, \"getData\");\n  proxyMethod(members, \"isEmpty\");\n  return members;\n}());","map":{"version":3,"names":["Callbacks","when","Deferred","extend","map","each","Class","format","deferUpdate","isDefined","isString","VirtualScrollController","foreachColumnInfo","createColumnsInfo","StateStoringController","PivotGridDataSource","findField","foreachTree","foreachTreeAsync","createPath","formatValue","math","Math","GRAND_TOTAL_TYPE","TOTAL_TYPE","DATA_TYPE","NOT_AVAILABLE","CHANGING_DURATION_IF_PAGINATE","proxyMethod","instance","methodName","defaultResult","dataSource","_dataSource","apply","arguments","DataController","inherit","formatCellValue","value","dataField","errorText","createHeaderInfo","addInfoItem","info","options","breadth","lastIndex","index","itemInfo","headerItem","isHorizontal","isTree","infoItem","type","text","path","width","wordWrapEnabled","isLast","sorted","isMetric","dataIndex","expanded","depthSize","dataSourceIndex","children","length","isWhiteSpace","itemIndex","depthIndex","push","unshift","depth","getViewHeaderItems","headerItems","headerDescriptions","cellDescriptions","cellDescriptionsCount","viewHeaderItems","headerDescriptionsCount","childrenStack","d","items","item","createHeaderItem","displayText","key","isEmpty","done","resolve","dataFields","notifyProgress","showGrandTotals","showTotalsPrior","isEmptyGrandTotal","hideTotals","showTotals","hiddenTotals","hideData","hiddenValues","layout","parentChildren","splice","isAdditionalTotal","i","isGrandTotal","isTotal","isValue","columnIsHidden","visible","hiddenGrandTotals","includes","caption","showEmpty","filter","removeEmptyParent","parent","indexOf","field","sortBySummaryPaths","sortBySummaryPath","slice","pop","stringValuesUsed","reverse","join","description","texts","grandTotal","total","node","max","indexesByDepth","createSortPaths","headerFields","headerField","fieldIndex","sortBySummaryField","concat","foreachRowInfo","rowsInfo","callback","columnOffset","columnOffsetResetIndexes","j","rowSpanOffset","rowspan","visibleIndex","getHeaderIndexedItems","indexedItems","indexedItem","createScrollController","dataController","component","dataAdapter","hasKnownLastPage","pageCount","ceil","totalItemsCount","pageSize","updateLoading","itemsCount","pageIndex","viewportItems","onChanged","isLoading","changingDuration","paginate","_changingDuration","members","ctor","that","virtualScrollControllerChanged","_fireChanged","bind","_options","dataSourceChanged","_createDataSource","option","_rowsScrollController","totalRowCount","rowPageIndex","rowPageSize","load","handleDataChanged","_columnsScrollController","totalColumnCount","columnPageIndex","columnPageSize","_stateStoringController","init","_columnsInfo","_rowsInfo","_cellsInfo","expandValueChanging","loadingChanged","progressChanged","scrollChanged","_update","changed","startChanging","Date","_lockChanged","fire","_correctSkipsTakes","rowIndex","rowSkip","rowSpan","levels","skips","takes","endIndex","_calculatePagingForRowExpandedPaths","rowExpandedSkips","rowExpandedTakes","rows","rowCount","min","rowTake","rowExpandedPaths","expandedPathIndexes","forEach","cell","expandIndex","level","_calculatePagingForColumnExpandedPaths","expandedSkips","expandedTakes","skipByPath","takeByPath","columnInfo","columnIndex","colspan","toString","columnSkip","columnTake","columnExpandedPaths","skip","take","_processPagingForExpandedPaths","area","storeLoadOptions","reload","expandedPaths","_savePagingForExpandedPaths","isOppositeArea","headerName","_handleCustomizeStoreLoadOptions","rowsScrollController","beginPageIndex","endPageIndex","columnsScrollController","stateStoringController","isEnabled","isLoaded","always","state","calculateVirtualContentParams","contentParams","viewportItemSize","virtualRowHeight","viewportSize","viewportHeight","setContentItemSizes","itemHeights","virtualColumnWidth","viewportWidth","itemWidths","loadIfNeed","left","getViewportPosition","top","contentTop","getContentOffset","contentLeft","getVirtualContentSize","height","setViewportPosition","subscribeToWindowScrollEvents","$element","updateWindowScrollPosition","position","scrollTo","updateViewOptions","_handleExpandValueChanging","e","_handleLoadingChanged","_handleProgressChanged","progress","_handleFieldsPrepared","onFieldsPrepared","dataSourceOptions","_isSharedDataSource","_expandValueChangingHandler","_loadingChangedHandler","_fieldsPreparedHandler","_customizeStoreLoadOptionsHandler","_changedHandler","_progressChangedHandler","on","getDataSource","beginLoading","endLoading","columnFields","getAreaFields","rowFields","dataFieldsForRows","dataFieldArea","dataFieldsForColumns","data","getData","result","showValues","grandTotalsAreHiddenForNotAllDataFields","rowOptions","isEmptyGrandTotalRow","showRowTotals","showRowGrandTotals","hideEmptySummaryCells","rowHeaderLayout","fields","columnOptions","isEmptyGrandTotalColumn","showColumnTotals","showColumnGrandTotals","grandTotalRowIndex","grandTotalColumnIndex","columns","_changeLoadingCount","columnsInfo","reset","save","getRowsInfo","getAllData","scrollController","startIndex","newRowsInfo","maxDepth","rowInfo","_","isVisible","realColumnIndex","getColumnsInfo","_rowPageIndex","count","size","_rowPageSize","_columnPageSize","_columnPageIndex","getCellsInfo","dataFieldAreaInRows","dataSourceCells","values","row","dataRow","Array","isArray","cellValue","dataType","columnType","rowType","rowPath","columnPath","dataNotAvailable","dispose","off","empty"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.data_controller.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.data_controller.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    map,\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    VirtualScrollController\r\n} from \"../grid_core/ui.grid_core.virtual_scrolling_core\";\r\nimport {\r\n    foreachColumnInfo,\r\n    createColumnsInfo\r\n} from \"../grid_core/ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    StateStoringController\r\n} from \"../grid_core/ui.grid_core.state_storing_core\";\r\nimport PivotGridDataSource from \"./data_source\";\r\nimport {\r\n    findField,\r\n    foreachTree,\r\n    foreachTreeAsync,\r\n    createPath,\r\n    formatValue\r\n} from \"./ui.pivot_grid.utils\";\r\nvar math = Math;\r\nvar GRAND_TOTAL_TYPE = \"GT\";\r\nvar TOTAL_TYPE = \"T\";\r\nvar DATA_TYPE = \"D\";\r\nvar NOT_AVAILABLE = \"#N/A\";\r\nvar CHANGING_DURATION_IF_PAGINATE = 300;\r\nvar proxyMethod = function(instance, methodName, defaultResult) {\r\n    if (!instance[methodName]) {\r\n        instance[methodName] = function() {\r\n            var dataSource = this._dataSource;\r\n            return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n        }\r\n    }\r\n};\r\nexport var DataController = Class.inherit(function() {\r\n    function formatCellValue(value, dataField, errorText) {\r\n        return value === NOT_AVAILABLE ? errorText : formatValue(value, dataField)\r\n    }\r\n    var createHeaderInfo = function() {\r\n        var addInfoItem = function(info, options) {\r\n            var breadth = options.lastIndex - options.index || 1;\r\n            var itemInfo = function(headerItem, breadth, isHorizontal, isTree) {\r\n                var infoItem = {\r\n                    type: headerItem.type,\r\n                    text: headerItem.text\r\n                };\r\n                if (headerItem.path) {\r\n                    infoItem.path = headerItem.path\r\n                }\r\n                if (headerItem.width) {\r\n                    infoItem.width = headerItem.width\r\n                }\r\n                if (isDefined(headerItem.wordWrapEnabled)) {\r\n                    infoItem.wordWrapEnabled = headerItem.wordWrapEnabled\r\n                }\r\n                if (headerItem.isLast) {\r\n                    infoItem.isLast = true\r\n                }\r\n                if (headerItem.sorted) {\r\n                    infoItem.sorted = true\r\n                }\r\n                if (headerItem.isMetric) {\r\n                    infoItem.dataIndex = headerItem.dataIndex\r\n                }\r\n                if (isDefined(headerItem.expanded)) {\r\n                    infoItem.expanded = headerItem.expanded\r\n                }\r\n                if (breadth > 1) {\r\n                    infoItem[isHorizontal ? \"colspan\" : \"rowspan\"] = breadth\r\n                }\r\n                if (headerItem.depthSize && headerItem.depthSize > 1) {\r\n                    infoItem[isHorizontal ? \"rowspan\" : \"colspan\"] = headerItem.depthSize\r\n                }\r\n                if (headerItem.index >= 0) {\r\n                    infoItem.dataSourceIndex = headerItem.index\r\n                }\r\n                if (isTree && headerItem.children && headerItem.children.length && !headerItem.children[0].isMetric) {\r\n                    infoItem.width = null;\r\n                    infoItem.isWhiteSpace = true\r\n                }\r\n                return infoItem\r\n            }(options.headerItem, breadth, options.isHorizontal, options.isTree);\r\n            ! function(info, infoItem, itemIndex, depthIndex, isHorizontal) {\r\n                var index = isHorizontal ? depthIndex : itemIndex;\r\n                while (!info[index]) {\r\n                    info.push([])\r\n                }\r\n                if (isHorizontal) {\r\n                    info[index].push(infoItem)\r\n                } else {\r\n                    info[index].unshift(infoItem)\r\n                }\r\n            }(info, itemInfo, options.index, options.depth, options.isHorizontal);\r\n            if (!options.headerItem.children || 0 === options.headerItem.children.length) {\r\n                return options.lastIndex + 1\r\n            }\r\n            return options.lastIndex\r\n        };\r\n        var getViewHeaderItems = function(headerItems, headerDescriptions, cellDescriptions, depthSize, options) {\r\n            var cellDescriptionsCount = cellDescriptions.length;\r\n            var viewHeaderItems = function(headerItems, headerDescriptions) {\r\n                var headerDescriptionsCount = headerDescriptions && headerDescriptions.length || 0;\r\n                var childrenStack = [];\r\n                var d = new Deferred;\r\n                var headerItem;\r\n                when(foreachTreeAsync(headerItems, (function(items, index) {\r\n                    var item = items[0];\r\n                    var path = createPath(items);\r\n                    headerItem = createHeaderItem(childrenStack, path.length, index);\r\n                    headerItem.type = DATA_TYPE;\r\n                    headerItem.value = item.value;\r\n                    headerItem.path = path;\r\n                    headerItem.text = item.text;\r\n                    headerItem.index = item.index;\r\n                    headerItem.displayText = item.displayText;\r\n                    headerItem.key = item.key;\r\n                    headerItem.isEmpty = item.isEmpty;\r\n                    if (path.length < headerDescriptionsCount && (!item.children || 0 !== item.children.length)) {\r\n                        headerItem.expanded = !!item.children\r\n                    }\r\n                }))).done((function() {\r\n                    d.resolve(createHeaderItem(childrenStack, 0, 0).children || [])\r\n                }));\r\n                return d\r\n            }(headerItems, headerDescriptions);\r\n            var dataFields = options.dataFields;\r\n            var d = new Deferred;\r\n            when(viewHeaderItems).done((function(viewHeaderItems) {\r\n                options.notifyProgress(.5);\r\n                if (options.showGrandTotals) {\r\n                    viewHeaderItems[!options.showTotalsPrior ? \"push\" : \"unshift\"]({\r\n                        type: GRAND_TOTAL_TYPE,\r\n                        isEmpty: options.isEmptyGrandTotal\r\n                    })\r\n                }\r\n                var hideTotals = false === options.showTotals || dataFields.length > 0 && dataFields.length === options.hiddenTotals.length;\r\n                var hideData = dataFields.length > 0 && options.hiddenValues.length === dataFields.length;\r\n                if (hideData && hideTotals) {\r\n                    depthSize = 1\r\n                }\r\n                if (!hideTotals || \"tree\" === options.layout) {\r\n                    ! function(headerItems, headerDescriptions, showTotalsPrior, isTree) {\r\n                        showTotalsPrior = showTotalsPrior || isTree;\r\n                        foreachTree(headerItems, (function(items, index) {\r\n                            var item = items[0];\r\n                            var parentChildren = (items[1] ? items[1].children : headerItems) || [];\r\n                            var dataField = headerDescriptions[items.length - 1];\r\n                            if (item.type === DATA_TYPE && item.expanded && (false !== dataField.showTotals || isTree)) {\r\n                                -1 !== index && parentChildren.splice(showTotalsPrior ? index : index + 1, 0, extend({}, item, {\r\n                                    children: null,\r\n                                    type: TOTAL_TYPE,\r\n                                    expanded: showTotalsPrior ? true : null,\r\n                                    isAdditionalTotal: true\r\n                                }));\r\n                                if (showTotalsPrior) {\r\n                                    item.expanded = null\r\n                                }\r\n                            }\r\n                        }))\r\n                    }(viewHeaderItems, headerDescriptions, options.showTotalsPrior, \"tree\" === options.layout)\r\n                }\r\n                when(foreachTreeAsync(viewHeaderItems, (function(items) {\r\n                    var item = items[0];\r\n                    if (!item.children || 0 === item.children.length) {\r\n                        item.depthSize = depthSize - items.length + 1\r\n                    }\r\n                }))).done((function() {\r\n                    if (cellDescriptionsCount > 1) {\r\n                        ! function(headerItems, cellDescriptions, options) {\r\n                            foreachTree(headerItems, (function(items) {\r\n                                var item = items[0];\r\n                                var i;\r\n                                if (!item.children || 0 === item.children.length) {\r\n                                    item.children = [];\r\n                                    for (i = 0; i < cellDescriptions.length; i++) {\r\n                                        var isGrandTotal = item.type === GRAND_TOTAL_TYPE;\r\n                                        var isTotal = item.type === TOTAL_TYPE;\r\n                                        var isValue = item.type === DATA_TYPE;\r\n                                        var columnIsHidden = false === cellDescriptions[i].visible || isGrandTotal && options.hiddenGrandTotals.includes(i) || isTotal && options.hiddenTotals.includes(i) || isValue && options.hiddenValues.includes(i);\r\n                                        if (columnIsHidden) {\r\n                                            continue\r\n                                        }\r\n                                        item.children.push({\r\n                                            caption: cellDescriptions[i].caption,\r\n                                            path: item.path,\r\n                                            type: item.type,\r\n                                            value: i,\r\n                                            index: item.index,\r\n                                            dataIndex: i,\r\n                                            isMetric: true,\r\n                                            isEmpty: item.isEmpty && item.isEmpty[i]\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }))\r\n                        }(viewHeaderItems, cellDescriptions, options)\r\n                    }!options.showEmpty && function(headerItems) {\r\n                        foreachTree([{\r\n                            children: headerItems\r\n                        }], (function(items, index) {\r\n                            var item = items[0];\r\n                            var parentChildren = (items[1] ? items[1].children : headerItems) || [];\r\n                            var isEmpty = item.isEmpty;\r\n                            if (isEmpty && isEmpty.length) {\r\n                                isEmpty = item.isEmpty.filter((function(isEmpty) {\r\n                                    return isEmpty\r\n                                })).length === isEmpty.length\r\n                            }\r\n                            if (item && !item.children && isEmpty) {\r\n                                parentChildren.splice(index, 1);\r\n                                ! function removeEmptyParent(items, index) {\r\n                                    var parent = items[index + 1];\r\n                                    if (!items[index].children.length && parent && parent.children) {\r\n                                        parent.children.splice(parent.children.indexOf(items[index]), 1);\r\n                                        removeEmptyParent(items, index + 1)\r\n                                    }\r\n                                }(items, 1)\r\n                            }\r\n                        }))\r\n                    }(viewHeaderItems);\r\n                    options.notifyProgress(.75);\r\n                    when(foreachTreeAsync(viewHeaderItems, (function(items) {\r\n                        var item = items[0];\r\n                        var isMetric = item.isMetric;\r\n                        var field = headerDescriptions[items.length - 1] || {};\r\n                        if (item.type === DATA_TYPE && !isMetric) {\r\n                            item.width = field.width\r\n                        }\r\n                        if (true === hideData && item.type === DATA_TYPE) {\r\n                            var parentChildren = (items[1] ? items[1].children : viewHeaderItems) || [];\r\n                            parentChildren.splice(parentChildren.indexOf(item), 1);\r\n                            return\r\n                        }\r\n                        if (isMetric) {\r\n                            item.wordWrapEnabled = cellDescriptions[item.dataIndex].wordWrapEnabled\r\n                        } else {\r\n                            item.wordWrapEnabled = field.wordWrapEnabled\r\n                        }\r\n                        item.isLast = !item.children || !item.children.length;\r\n                        if (item.isLast) {\r\n                            each(options.sortBySummaryPaths, (function(index, sortBySummaryPath) {\r\n                                if (!isDefined(item.dataIndex)) {\r\n                                    sortBySummaryPath = sortBySummaryPath.slice(0);\r\n                                    sortBySummaryPath.pop()\r\n                                }\r\n                                if (function(items, sortBySummaryPath) {\r\n                                        var path;\r\n                                        var item = items[0];\r\n                                        var stringValuesUsed = isString(sortBySummaryPath[0]);\r\n                                        var headerItem = item.dataIndex >= 0 ? items[1] : item;\r\n                                        if (stringValuesUsed && -1 !== sortBySummaryPath[0].indexOf(\"&[\") && headerItem.key || !headerItem.key) {\r\n                                            path = createPath(items)\r\n                                        } else {\r\n                                            path = map(items, (function(item) {\r\n                                                return item.dataIndex >= 0 ? item.value : item.text\r\n                                            })).reverse()\r\n                                        }\r\n                                        if (item.type === GRAND_TOTAL_TYPE) {\r\n                                            path = path.slice(1)\r\n                                        }\r\n                                        return path.join(\"/\") === sortBySummaryPath.join(\"/\")\r\n                                    }(items, sortBySummaryPath)) {\r\n                                    item.sorted = true;\r\n                                    return false\r\n                                }\r\n                            }))\r\n                        }\r\n                        item.text = function(item, description, options) {\r\n                            var text = item.text;\r\n                            if (isDefined(item.displayText)) {\r\n                                text = item.displayText\r\n                            } else if (isDefined(item.caption)) {\r\n                                text = item.caption\r\n                            } else if (item.type === GRAND_TOTAL_TYPE) {\r\n                                text = options.texts.grandTotal\r\n                            }\r\n                            if (item.isAdditionalTotal) {\r\n                                text = format(options.texts.total || \"\", text)\r\n                            }\r\n                            return text\r\n                        }(item, 0, options)\r\n                    }))).done((function() {\r\n                        if (!viewHeaderItems.length) {\r\n                            viewHeaderItems.push({})\r\n                        }\r\n                        options.notifyProgress(1);\r\n                        d.resolve(viewHeaderItems)\r\n                    }))\r\n                }))\r\n            }));\r\n            return d\r\n        };\r\n\r\n        function createHeaderItem(childrenStack, depth, index) {\r\n            var parent = childrenStack[depth] = childrenStack[depth] || [];\r\n            var node = parent[index] = {};\r\n            if (childrenStack[depth + 1]) {\r\n                node.children = childrenStack[depth + 1];\r\n                for (var i = depth + 1; i < childrenStack.length; i++) {\r\n                    childrenStack[i] = void 0\r\n                }\r\n                childrenStack.length = depth + 1\r\n            }\r\n            return node\r\n        }\r\n        return function(headerItems, headerDescriptions, cellDescriptions, isHorizontal, options) {\r\n            var info = [];\r\n            var depthSize = function(headerItems) {\r\n                var depth = 0;\r\n                foreachTree(headerItems, (function(items) {\r\n                    depth = math.max(depth, items.length)\r\n                }));\r\n                return depth\r\n            }(headerItems) || 1;\r\n            var d = new Deferred;\r\n            getViewHeaderItems(headerItems, headerDescriptions, cellDescriptions, depthSize, options).done((function(viewHeaderItems) {\r\n                ! function(info, viewHeaderItems, depthSize, isHorizontal, isTree) {\r\n                    var lastIndex = 0;\r\n                    var index;\r\n                    var depth;\r\n                    var indexesByDepth = [0];\r\n                    foreachTree(viewHeaderItems, (function(items) {\r\n                        var headerItem = items[0];\r\n                        depth = headerItem.isMetric ? depthSize : items.length - 1;\r\n                        while (indexesByDepth.length - 1 < depth) {\r\n                            indexesByDepth.push(indexesByDepth[indexesByDepth.length - 1])\r\n                        }\r\n                        index = indexesByDepth[depth] || 0;\r\n                        lastIndex = addInfoItem(info, {\r\n                            headerItem: headerItem,\r\n                            index: index,\r\n                            lastIndex: lastIndex,\r\n                            depth: depth,\r\n                            isHorizontal: isHorizontal,\r\n                            isTree: isTree\r\n                        });\r\n                        indexesByDepth.length = depth;\r\n                        indexesByDepth.push(lastIndex)\r\n                    }))\r\n                }(info, viewHeaderItems, depthSize, isHorizontal, \"tree\" === options.layout);\r\n                options.notifyProgress(1);\r\n                d.resolve(info)\r\n            }));\r\n            return d\r\n        }\r\n    }();\r\n\r\n    function createSortPaths(headerFields, dataFields) {\r\n        var sortBySummaryPaths = [];\r\n        each(headerFields, (function(index, headerField) {\r\n            var fieldIndex = findField(dataFields, headerField.sortBySummaryField);\r\n            if (fieldIndex >= 0) {\r\n                sortBySummaryPaths.push((headerField.sortBySummaryPath || []).concat([fieldIndex]))\r\n            }\r\n        }));\r\n        return sortBySummaryPaths\r\n    }\r\n\r\n    function foreachRowInfo(rowsInfo, callback) {\r\n        var columnOffset = 0;\r\n        var columnOffsetResetIndexes = [];\r\n        for (var i = 0; i < rowsInfo.length; i++) {\r\n            for (var j = 0; j < rowsInfo[i].length; j++) {\r\n                var rowSpanOffset = (rowsInfo[i][j].rowspan || 1) - 1;\r\n                var visibleIndex = i + rowSpanOffset;\r\n                if (columnOffsetResetIndexes[i]) {\r\n                    columnOffset -= columnOffsetResetIndexes[i];\r\n                    columnOffsetResetIndexes[i] = 0\r\n                }\r\n                if (false === callback(rowsInfo[i][j], visibleIndex, i, j, columnOffset)) {\r\n                    break\r\n                }\r\n                columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] = (columnOffsetResetIndexes[i + (rowsInfo[i][j].rowspan || 1)] || 0) + 1;\r\n                columnOffset++\r\n            }\r\n        }\r\n    }\r\n\r\n    function getHeaderIndexedItems(headerItems, options) {\r\n        var visibleIndex = 0;\r\n        var indexedItems = [];\r\n        foreachTree(headerItems, (function(items) {\r\n            var headerItem = items[0];\r\n            var path = createPath(items);\r\n            if (headerItem.children && false === options.showTotals) {\r\n                return\r\n            }\r\n            var indexedItem = extend(true, {}, headerItem, {\r\n                visibleIndex: visibleIndex++,\r\n                path: path\r\n            });\r\n            if (isDefined(indexedItem.index)) {\r\n                indexedItems[indexedItem.index] = indexedItem\r\n            } else {\r\n                indexedItems.push(indexedItem)\r\n            }\r\n        }));\r\n        return indexedItems\r\n    }\r\n\r\n    function createScrollController(dataController, component, dataAdapter) {\r\n        return new VirtualScrollController(component, extend({\r\n            hasKnownLastPage: function() {\r\n                return true\r\n            },\r\n            pageCount: function() {\r\n                return math.ceil(this.totalItemsCount() / this.pageSize())\r\n            },\r\n            updateLoading: function() {},\r\n            itemsCount: function() {\r\n                if (this.pageIndex() < this.pageCount() - 1) {\r\n                    return this.pageSize()\r\n                } else {\r\n                    return this.totalItemsCount() % this.pageSize()\r\n                }\r\n            },\r\n            items: function() {\r\n                return []\r\n            },\r\n            viewportItems: function() {\r\n                return []\r\n            },\r\n            onChanged: function() {},\r\n            isLoading: function() {\r\n                return dataController.isLoading()\r\n            },\r\n            changingDuration: function() {\r\n                var dataSource = dataController._dataSource;\r\n                if (dataSource.paginate()) {\r\n                    return CHANGING_DURATION_IF_PAGINATE\r\n                }\r\n                return dataController._changingDuration || 0\r\n            }\r\n        }, dataAdapter))\r\n    }\r\n    var members = {\r\n        ctor: function(options) {\r\n            var that = this;\r\n            var virtualScrollControllerChanged = that._fireChanged.bind(that);\r\n            options = that._options = options || {};\r\n            that.dataSourceChanged = Callbacks();\r\n            that._dataSource = that._createDataSource(options);\r\n            if (options.component && \"virtual\" === options.component.option(\"scrolling.mode\")) {\r\n                that._rowsScrollController = createScrollController(that, options.component, {\r\n                    totalItemsCount: function() {\r\n                        return that.totalRowCount()\r\n                    },\r\n                    pageIndex: function(index) {\r\n                        return that.rowPageIndex(index)\r\n                    },\r\n                    pageSize: function() {\r\n                        return that.rowPageSize()\r\n                    },\r\n                    load: function() {\r\n                        if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                            that._rowsScrollController.pageIndex(this.pageCount() - 1)\r\n                        }\r\n                        return that._rowsScrollController.handleDataChanged((function() {\r\n                            if (that._dataSource.paginate()) {\r\n                                that._dataSource.load()\r\n                            } else {\r\n                                virtualScrollControllerChanged.apply(this, arguments)\r\n                            }\r\n                        }))\r\n                    }\r\n                });\r\n                that._columnsScrollController = createScrollController(that, options.component, {\r\n                    totalItemsCount: function() {\r\n                        return that.totalColumnCount()\r\n                    },\r\n                    pageIndex: function(index) {\r\n                        return that.columnPageIndex(index)\r\n                    },\r\n                    pageSize: function() {\r\n                        return that.columnPageSize()\r\n                    },\r\n                    load: function() {\r\n                        if (that._columnsScrollController.pageIndex() >= this.pageCount()) {\r\n                            that._columnsScrollController.pageIndex(this.pageCount() - 1)\r\n                        }\r\n                        return that._columnsScrollController.handleDataChanged((function() {\r\n                            if (that._dataSource.paginate()) {\r\n                                that._dataSource.load()\r\n                            } else {\r\n                                virtualScrollControllerChanged.apply(this, arguments)\r\n                            }\r\n                        }))\r\n                    }\r\n                })\r\n            }\r\n            that._stateStoringController = new StateStoringController(options.component).init();\r\n            that._columnsInfo = [];\r\n            that._rowsInfo = [];\r\n            that._cellsInfo = [];\r\n            that.expandValueChanging = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.progressChanged = Callbacks();\r\n            that.scrollChanged = Callbacks();\r\n            that.load();\r\n            that._update();\r\n            that.changed = Callbacks()\r\n        },\r\n        _fireChanged: function() {\r\n            var startChanging = new Date;\r\n            this.changed && !this._lockChanged && this.changed.fire();\r\n            this._changingDuration = new Date - startChanging\r\n        },\r\n        _correctSkipsTakes: function(rowIndex, rowSkip, rowSpan, levels, skips, takes) {\r\n            var endIndex = rowSpan ? rowIndex + rowSpan - 1 : rowIndex;\r\n            skips[levels.length] = skips[levels.length] || 0;\r\n            takes[levels.length] = takes[levels.length] || 0;\r\n            if (endIndex < rowSkip) {\r\n                skips[levels.length]++\r\n            } else {\r\n                takes[levels.length]++\r\n            }\r\n        },\r\n        _calculatePagingForRowExpandedPaths: function(options, skips, takes, rowExpandedSkips, rowExpandedTakes) {\r\n            var rows = this._rowsInfo;\r\n            var rowCount = Math.min(options.rowSkip + options.rowTake, rows.length);\r\n            var rowExpandedPaths = options.rowExpandedPaths;\r\n            var levels = [];\r\n            var expandedPathIndexes = {};\r\n            var i;\r\n            var j;\r\n            var path;\r\n            rowExpandedPaths.forEach((path, index) => {\r\n                expandedPathIndexes[path] = index\r\n            });\r\n            for (i = 0; i < rowCount; i++) {\r\n                takes.length = skips.length = levels.length + 1;\r\n                for (j = 0; j < rows[i].length; j++) {\r\n                    var cell = rows[i][j];\r\n                    if (\"D\" === cell.type) {\r\n                        this._correctSkipsTakes(i, options.rowSkip, cell.rowspan, levels, skips, takes);\r\n                        path = cell.path || path;\r\n                        var expandIndex = path && path.length > 1 ? expandedPathIndexes[path.slice(0, -1)] : -1;\r\n                        if (expandIndex >= 0) {\r\n                            rowExpandedSkips[expandIndex] = skips[levels.length] || 0;\r\n                            rowExpandedTakes[expandIndex] = takes[levels.length] || 0\r\n                        }\r\n                        if (cell.rowspan) {\r\n                            levels.push(cell.rowspan)\r\n                        }\r\n                    }\r\n                }\r\n                levels = levels.map(level => level - 1).filter(level => level > 0)\r\n            }\r\n        },\r\n        _calculatePagingForColumnExpandedPaths: function(options, skips, takes, expandedSkips, expandedTakes) {\r\n            var skipByPath = {};\r\n            var takeByPath = {};\r\n            foreachColumnInfo(this._columnsInfo, (function(columnInfo, columnIndex) {\r\n                if (\"D\" === columnInfo.type && columnInfo.path && void 0 === columnInfo.dataIndex) {\r\n                    var colspan = columnInfo.colspan || 1;\r\n                    var path = columnInfo.path.slice(0, -1).toString();\r\n                    skipByPath[path] = skipByPath[path] || 0;\r\n                    takeByPath[path] = takeByPath[path] || 0;\r\n                    if (columnIndex + colspan <= options.columnSkip) {\r\n                        skipByPath[path]++\r\n                    } else if (columnIndex < options.columnSkip + options.columnTake) {\r\n                        takeByPath[path]++\r\n                    }\r\n                }\r\n            }));\r\n            skips[0] = skipByPath[[]];\r\n            takes[0] = takeByPath[[]];\r\n            options.columnExpandedPaths.forEach((function(path, index) {\r\n                var skip = skipByPath[path];\r\n                var take = takeByPath[path];\r\n                if (void 0 !== skip) {\r\n                    expandedSkips[index] = skip\r\n                }\r\n                if (void 0 !== take) {\r\n                    expandedTakes[index] = take\r\n                }\r\n            }))\r\n        },\r\n        _processPagingForExpandedPaths: function(options, area, storeLoadOptions, reload) {\r\n            var expandedPaths = options[area + \"ExpandedPaths\"];\r\n            var expandedSkips = expandedPaths.map(() => 0);\r\n            var expandedTakes = expandedPaths.map(() => reload ? options.pageSize : 0);\r\n            var skips = [];\r\n            var takes = [];\r\n            if (!reload) {\r\n                if (\"row\" === area) {\r\n                    this._calculatePagingForRowExpandedPaths(options, skips, takes, expandedSkips, expandedTakes)\r\n                } else {\r\n                    this._calculatePagingForColumnExpandedPaths(options, skips, takes, expandedSkips, expandedTakes)\r\n                }\r\n            }\r\n            this._savePagingForExpandedPaths(options, area, storeLoadOptions, skips[0], takes[0], expandedSkips, expandedTakes)\r\n        },\r\n        _savePagingForExpandedPaths: function(options, area, storeLoadOptions, skip, take, expandedSkips, expandedTakes) {\r\n            var expandedPaths = options[area + \"ExpandedPaths\"];\r\n            options[area + \"ExpandedPaths\"] = [];\r\n            options[area + \"Skip\"] = void 0 !== skip ? skip : options[area + \"Skip\"];\r\n            options[area + \"Take\"] = void 0 !== take ? take : options[area + \"Take\"];\r\n            for (var i = 0; i < expandedPaths.length; i++) {\r\n                if (expandedTakes[i]) {\r\n                    var isOppositeArea = options.area && options.area !== area;\r\n                    storeLoadOptions.push(extend({\r\n                        area: area,\r\n                        headerName: area + \"s\"\r\n                    }, options, {\r\n                        [area + \"Skip\"]: expandedSkips[i],\r\n                        [area + \"Take\"]: expandedTakes[i],\r\n                        [isOppositeArea ? \"oppositePath\" : \"path\"]: expandedPaths[i]\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions: function(storeLoadOptions, reload) {\r\n            var options = storeLoadOptions[0];\r\n            var rowsScrollController = this._rowsScrollController;\r\n            if (this._dataSource.paginate() && rowsScrollController) {\r\n                var rowPageSize = rowsScrollController.pageSize();\r\n                if (\"rows\" === options.headerName) {\r\n                    options.rowSkip = 0;\r\n                    options.rowTake = rowPageSize;\r\n                    options.rowExpandedPaths = []\r\n                } else {\r\n                    options.rowSkip = rowsScrollController.beginPageIndex() * rowPageSize;\r\n                    options.rowTake = (rowsScrollController.endPageIndex() - rowsScrollController.beginPageIndex() + 1) * rowPageSize;\r\n                    this._processPagingForExpandedPaths(options, \"row\", storeLoadOptions, reload)\r\n                }\r\n            }\r\n            var columnsScrollController = this._columnsScrollController;\r\n            if (this._dataSource.paginate() && columnsScrollController) {\r\n                var columnPageSize = columnsScrollController.pageSize();\r\n                storeLoadOptions.forEach((options, index) => {\r\n                    if (\"columns\" === options.headerName) {\r\n                        options.columnSkip = 0;\r\n                        options.columnTake = columnPageSize;\r\n                        options.columnExpandedPaths = []\r\n                    } else {\r\n                        options.columnSkip = columnsScrollController.beginPageIndex() * columnPageSize;\r\n                        options.columnTake = (columnsScrollController.endPageIndex() - columnsScrollController.beginPageIndex() + 1) * columnPageSize;\r\n                        this._processPagingForExpandedPaths(options, \"column\", storeLoadOptions, reload)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        load: function() {\r\n            var that = this;\r\n            var stateStoringController = this._stateStoringController;\r\n            if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                stateStoringController.load().always((function(state) {\r\n                    if (state) {\r\n                        that._dataSource.state(state)\r\n                    } else {\r\n                        that._dataSource.load()\r\n                    }\r\n                }))\r\n            } else {\r\n                that._dataSource.load()\r\n            }\r\n        },\r\n        calculateVirtualContentParams: function(contentParams) {\r\n            var rowsScrollController = this._rowsScrollController;\r\n            var columnsScrollController = this._columnsScrollController;\r\n            if (rowsScrollController && columnsScrollController) {\r\n                rowsScrollController.viewportItemSize(contentParams.virtualRowHeight);\r\n                rowsScrollController.viewportSize(contentParams.viewportHeight / rowsScrollController.viewportItemSize());\r\n                rowsScrollController.setContentItemSizes(contentParams.itemHeights);\r\n                columnsScrollController.viewportItemSize(contentParams.virtualColumnWidth);\r\n                columnsScrollController.viewportSize(contentParams.viewportWidth / columnsScrollController.viewportItemSize());\r\n                columnsScrollController.setContentItemSizes(contentParams.itemWidths);\r\n                deferUpdate((function() {\r\n                    columnsScrollController.loadIfNeed();\r\n                    rowsScrollController.loadIfNeed()\r\n                }));\r\n                this.scrollChanged.fire({\r\n                    left: columnsScrollController.getViewportPosition(),\r\n                    top: rowsScrollController.getViewportPosition()\r\n                });\r\n                return {\r\n                    contentTop: rowsScrollController.getContentOffset(),\r\n                    contentLeft: columnsScrollController.getContentOffset(),\r\n                    width: columnsScrollController.getVirtualContentSize(),\r\n                    height: rowsScrollController.getVirtualContentSize()\r\n                }\r\n            }\r\n        },\r\n        setViewportPosition: function(left, top) {\r\n            this._rowsScrollController.setViewportPosition(top || 0);\r\n            this._columnsScrollController.setViewportPosition(left || 0)\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._rowsScrollController && this._rowsScrollController.subscribeToWindowScrollEvents($element)\r\n        },\r\n        updateWindowScrollPosition: function(position) {\r\n            this._rowsScrollController && this._rowsScrollController.scrollTo(position)\r\n        },\r\n        updateViewOptions: function(options) {\r\n            extend(this._options, options);\r\n            this._update()\r\n        },\r\n        _handleExpandValueChanging: function(e) {\r\n            this.expandValueChanging.fire(e)\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleProgressChanged: function(progress) {\r\n            this.progressChanged.fire(progress)\r\n        },\r\n        _handleFieldsPrepared: function(e) {\r\n            this._options.onFieldsPrepared && this._options.onFieldsPrepared(e)\r\n        },\r\n        _createDataSource: function(options) {\r\n            var that = this;\r\n            var dataSourceOptions = options.dataSource;\r\n            var dataSource;\r\n            that._isSharedDataSource = dataSourceOptions instanceof PivotGridDataSource;\r\n            if (that._isSharedDataSource) {\r\n                dataSource = dataSourceOptions\r\n            } else {\r\n                dataSource = new PivotGridDataSource(dataSourceOptions)\r\n            }\r\n            that._expandValueChangingHandler = that._handleExpandValueChanging.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._fieldsPreparedHandler = that._handleFieldsPrepared.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._changedHandler = function() {\r\n                that._update();\r\n                that.dataSourceChanged.fire()\r\n            };\r\n            that._progressChangedHandler = function(progress) {\r\n                that._handleProgressChanged(.8 * progress)\r\n            };\r\n            dataSource.on(\"changed\", that._changedHandler);\r\n            dataSource.on(\"expandValueChanging\", that._expandValueChangingHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"progressChanged\", that._progressChangedHandler);\r\n            dataSource.on(\"fieldsPrepared\", that._fieldsPreparedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            return dataSource\r\n        },\r\n        getDataSource: function() {\r\n            return this._dataSource\r\n        },\r\n        isLoading: function() {\r\n            return this._dataSource.isLoading()\r\n        },\r\n        beginLoading: function() {\r\n            this._dataSource.beginLoading()\r\n        },\r\n        endLoading: function() {\r\n            this._dataSource.endLoading()\r\n        },\r\n        _update: function() {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var options = that._options;\r\n            var columnFields = dataSource.getAreaFields(\"column\");\r\n            var rowFields = dataSource.getAreaFields(\"row\");\r\n            var dataFields = dataSource.getAreaFields(\"data\");\r\n            var dataFieldsForRows = \"row\" === options.dataFieldArea ? dataFields : [];\r\n            var dataFieldsForColumns = \"row\" !== options.dataFieldArea ? dataFields : [];\r\n            var data = dataSource.getData();\r\n            var hiddenTotals = function(dataFields) {\r\n                var result = [];\r\n                each(dataFields, (function(index, field) {\r\n                    if (false === field.showTotals) {\r\n                        result.push(index)\r\n                    }\r\n                }));\r\n                return result\r\n            }(dataFields);\r\n            var hiddenValues = function(dataFields) {\r\n                var result = [];\r\n                dataFields.forEach((function(field, index) {\r\n                    if (void 0 === field.showValues && false === field.showTotals || false === field.showValues) {\r\n                        result.push(index)\r\n                    }\r\n                }));\r\n                return result\r\n            }(dataFields);\r\n            var hiddenGrandTotals = function(dataFields, columnFields) {\r\n                var result = [];\r\n                each(dataFields, (function(index, field) {\r\n                    if (false === field.showGrandTotals) {\r\n                        result.push(index)\r\n                    }\r\n                }));\r\n                if (0 === columnFields.length && result.length === dataFields.length) {\r\n                    result = []\r\n                }\r\n                return result\r\n            }(dataFields, columnFields);\r\n            var grandTotalsAreHiddenForNotAllDataFields = dataFields.length > 0 ? hiddenGrandTotals.length !== dataFields.length : true;\r\n            var rowOptions = {\r\n                isEmptyGrandTotal: data.isEmptyGrandTotalRow,\r\n                texts: options.texts || {},\r\n                hiddenTotals: hiddenTotals,\r\n                hiddenValues: hiddenValues,\r\n                hiddenGrandTotals: [],\r\n                showTotals: options.showRowTotals,\r\n                showGrandTotals: false !== options.showRowGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\r\n                sortBySummaryPaths: createSortPaths(columnFields, dataFields),\r\n                showTotalsPrior: \"rows\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\r\n                showEmpty: !options.hideEmptySummaryCells,\r\n                layout: options.rowHeaderLayout,\r\n                fields: rowFields,\r\n                dataFields: dataFields,\r\n                progress: 0\r\n            };\r\n            var columnOptions = {\r\n                isEmptyGrandTotal: data.isEmptyGrandTotalColumn,\r\n                texts: options.texts || {},\r\n                hiddenTotals: hiddenTotals,\r\n                hiddenValues: hiddenValues,\r\n                hiddenGrandTotals: hiddenGrandTotals,\r\n                showTotals: options.showColumnTotals,\r\n                showTotalsPrior: \"columns\" === options.showTotalsPrior || \"both\" === options.showTotalsPrior,\r\n                showGrandTotals: false !== options.showColumnGrandTotals && grandTotalsAreHiddenForNotAllDataFields,\r\n                sortBySummaryPaths: createSortPaths(rowFields, dataFields),\r\n                showEmpty: !options.hideEmptySummaryCells,\r\n                fields: columnFields,\r\n                dataFields: dataFields,\r\n                progress: 0\r\n            };\r\n            var notifyProgress = function(progress) {\r\n                this.progress = progress;\r\n                that._handleProgressChanged(.8 + .1 * rowOptions.progress + .1 * columnOptions.progress)\r\n            };\r\n            rowOptions.notifyProgress = notifyProgress;\r\n            columnOptions.notifyProgress = notifyProgress;\r\n            if (!isDefined(data.grandTotalRowIndex)) {\r\n                data.grandTotalRowIndex = getHeaderIndexedItems(data.rows, rowOptions).length\r\n            }\r\n            if (!isDefined(data.grandTotalColumnIndex)) {\r\n                data.grandTotalColumnIndex = getHeaderIndexedItems(data.columns, columnOptions).length\r\n            }\r\n            dataSource._changeLoadingCount(1);\r\n            when(createHeaderInfo(data.columns, columnFields, dataFieldsForColumns, true, columnOptions), createHeaderInfo(data.rows, rowFields, dataFieldsForRows, false, rowOptions)).always((function() {\r\n                dataSource._changeLoadingCount(-1)\r\n            })).done((function(columnsInfo, rowsInfo) {\r\n                that._columnsInfo = columnsInfo;\r\n                that._rowsInfo = rowsInfo;\r\n                if (that._rowsScrollController && that._columnsScrollController && that.changed && !that._dataSource.paginate()) {\r\n                    that._rowsScrollController.reset(true);\r\n                    that._columnsScrollController.reset(true);\r\n                    that._lockChanged = true;\r\n                    that._rowsScrollController.load();\r\n                    that._columnsScrollController.load();\r\n                    that._lockChanged = false\r\n                }\r\n            })).done((function() {\r\n                that._fireChanged();\r\n                if (that._stateStoringController.isEnabled() && !that._dataSource.isLoading()) {\r\n                    that._stateStoringController.state(that._dataSource.state());\r\n                    that._stateStoringController.save()\r\n                }\r\n            }))\r\n        },\r\n        getRowsInfo: function(getAllData) {\r\n            var rowsInfo = this._rowsInfo;\r\n            var scrollController = this._rowsScrollController;\r\n            var rowspan;\r\n            if (scrollController && !getAllData) {\r\n                var startIndex = scrollController.beginPageIndex() * this.rowPageSize();\r\n                var endIndex = scrollController.endPageIndex() * this.rowPageSize() + this.rowPageSize();\r\n                var newRowsInfo = [];\r\n                var maxDepth = 1;\r\n                foreachRowInfo(rowsInfo, (function(rowInfo, visibleIndex, rowIndex, _, columnIndex) {\r\n                    var isVisible = visibleIndex >= startIndex && rowIndex < endIndex;\r\n                    var index = rowIndex < startIndex ? 0 : rowIndex - startIndex;\r\n                    var cell = rowInfo;\r\n                    if (isVisible) {\r\n                        newRowsInfo[index] = newRowsInfo[index] || [];\r\n                        rowspan = rowIndex < startIndex ? rowInfo.rowspan - (startIndex - rowIndex) || 1 : rowInfo.rowspan;\r\n                        if (startIndex + index + rowspan > endIndex) {\r\n                            rowspan = endIndex - (index + startIndex) || 1\r\n                        }\r\n                        if (rowspan !== rowInfo.rowspan) {\r\n                            cell = extend({}, cell, {\r\n                                rowspan: rowspan\r\n                            })\r\n                        }\r\n                        newRowsInfo[index].push(cell);\r\n                        maxDepth = math.max(maxDepth, columnIndex + 1)\r\n                    } else if (void 0 > endIndex) {\r\n                        return false\r\n                    }\r\n                }));\r\n                foreachRowInfo(newRowsInfo, (function(rowInfo, visibleIndex, rowIndex, columnIndex, realColumnIndex) {\r\n                    var colspan = rowInfo.colspan || 1;\r\n                    if (realColumnIndex + colspan > maxDepth) {\r\n                        newRowsInfo[rowIndex][columnIndex] = extend({}, rowInfo, {\r\n                            colspan: maxDepth - realColumnIndex || 1\r\n                        })\r\n                    }\r\n                }));\r\n                return newRowsInfo\r\n            }\r\n            return rowsInfo\r\n        },\r\n        getColumnsInfo: function(getAllData) {\r\n            var info = this._columnsInfo;\r\n            var scrollController = this._columnsScrollController;\r\n            if (scrollController && !getAllData) {\r\n                var startIndex = scrollController.beginPageIndex() * this.columnPageSize();\r\n                var endIndex = scrollController.endPageIndex() * this.columnPageSize() + this.columnPageSize();\r\n                info = createColumnsInfo(info, startIndex, endIndex)\r\n            }\r\n            return info\r\n        },\r\n        totalRowCount: function() {\r\n            return this._rowsInfo.length\r\n        },\r\n        rowPageIndex: function(index) {\r\n            if (void 0 !== index) {\r\n                this._rowPageIndex = index\r\n            }\r\n            return this._rowPageIndex || 0\r\n        },\r\n        totalColumnCount: function() {\r\n            var count = 0;\r\n            if (this._columnsInfo && this._columnsInfo.length) {\r\n                for (var i = 0; i < this._columnsInfo[0].length; i++) {\r\n                    count += this._columnsInfo[0][i].colspan || 1\r\n                }\r\n            }\r\n            return count\r\n        },\r\n        rowPageSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._rowPageSize = size\r\n            }\r\n            return this._rowPageSize || 20\r\n        },\r\n        columnPageSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._columnPageSize = size\r\n            }\r\n            return this._columnPageSize || 20\r\n        },\r\n        columnPageIndex: function(index) {\r\n            if (void 0 !== index) {\r\n                this._columnPageIndex = index\r\n            }\r\n            return this._columnPageIndex || 0\r\n        },\r\n        getCellsInfo: function(getAllData) {\r\n            var rowsInfo = this.getRowsInfo(getAllData);\r\n            var columnsInfo = this.getColumnsInfo(getAllData);\r\n            var data = this._dataSource.getData();\r\n            var texts = this._options.texts || {};\r\n            return function(rowsInfo, columnsInfo, data, dataFields, dataFieldArea, errorText) {\r\n                var info = [];\r\n                var dataFieldAreaInRows = \"row\" === dataFieldArea;\r\n                var dataSourceCells = data.values;\r\n                dataSourceCells.length && foreachRowInfo(rowsInfo, (function(rowInfo, rowIndex) {\r\n                    var row = info[rowIndex] = [];\r\n                    var dataRow = dataSourceCells[rowInfo.dataSourceIndex >= 0 ? rowInfo.dataSourceIndex : data.grandTotalRowIndex] || [];\r\n                    rowInfo.isLast && foreachColumnInfo(columnsInfo, (function(columnInfo, columnIndex) {\r\n                        var dataIndex = (dataFieldAreaInRows ? rowInfo.dataIndex : columnInfo.dataIndex) || 0;\r\n                        var dataField = dataFields[dataIndex];\r\n                        if (columnInfo.isLast && dataField && false !== dataField.visible) {\r\n                            var cell = dataRow[columnInfo.dataSourceIndex >= 0 ? columnInfo.dataSourceIndex : data.grandTotalColumnIndex];\r\n                            if (!Array.isArray(cell)) {\r\n                                cell = [cell]\r\n                            }\r\n                            var cellValue = cell[dataIndex];\r\n                            row[columnIndex] = {\r\n                                text: formatCellValue(cellValue, dataField, errorText),\r\n                                value: cellValue,\r\n                                format: dataField.format,\r\n                                dataType: dataField.dataType,\r\n                                columnType: columnInfo.type,\r\n                                rowType: rowInfo.type,\r\n                                rowPath: rowInfo.path || [],\r\n                                columnPath: columnInfo.path || [],\r\n                                dataIndex: dataIndex\r\n                            };\r\n                            if (dataField.width) {\r\n                                row[columnIndex].width = dataField.width\r\n                            }\r\n                        }\r\n                    }))\r\n                }));\r\n                return info\r\n            }(rowsInfo, columnsInfo, data, this._dataSource.getAreaFields(\"data\"), this._options.dataFieldArea, texts.dataNotAvailable)\r\n        },\r\n        dispose: function() {\r\n            if (this._isSharedDataSource) {\r\n                this._dataSource.off(\"changed\", this._changedHandler);\r\n                this._dataSource.off(\"expandValueChanging\", this._expandValueChangingHandler);\r\n                this._dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n                this._dataSource.off(\"progressChanged\", this._progressChangedHandler);\r\n                this._dataSource.off(\"fieldsPrepared\", this._fieldsPreparedHandler);\r\n                this._dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler)\r\n            } else {\r\n                this._dataSource.dispose()\r\n            }\r\n            this._columnsScrollController && this._columnsScrollController.dispose();\r\n            this._rowsScrollController && this._rowsScrollController.dispose();\r\n            this._stateStoringController.dispose();\r\n            this.expandValueChanging.empty();\r\n            this.changed.empty();\r\n            this.loadingChanged.empty();\r\n            this.progressChanged.empty();\r\n            this.scrollChanged.empty();\r\n            this.dataSourceChanged.empty()\r\n        }\r\n    };\r\n    proxyMethod(members, \"applyPartialDataSource\");\r\n    proxyMethod(members, \"collapseHeaderItem\");\r\n    proxyMethod(members, \"expandHeaderItem\");\r\n    proxyMethod(members, \"getData\");\r\n    proxyMethod(members, \"isEmpty\");\r\n    return members\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
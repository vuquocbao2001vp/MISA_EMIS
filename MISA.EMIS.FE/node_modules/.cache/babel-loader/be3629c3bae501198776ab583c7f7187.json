{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/base_series.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar seriesNS = {};\nimport { isFunction, isDefined as _isDefined, isEmptyObject as _isEmptyObject } from \"../../core/utils/type\";\nimport { extend as _extend } from \"../../core/utils/extend\";\nimport { each as _each } from \"../../core/utils/iterator\";\nimport { Point } from \"./points/base_point\";\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nimport { noop as _noop } from \"../../core/utils/common\";\nimport consts from \"../components/consts\";\nvar states = consts.states;\nimport rangeCalculator from \"./helpers/range_data_calculator\";\nimport * as scatterSeries from \"./scatter_series\";\nimport * as lineSeries from \"./line_series\";\nimport * as areaSeries from \"./area_series\";\nimport * as barSeries from \"./bar_series\";\nimport { chart as rangeSeriesChart } from \"./range_series\";\nimport { chart as bubbleSeriesChart } from \"./bubble_series\";\nimport * as pieSeries from \"./pie_series\";\nimport * as financialSeries from \"./financial_series\";\nimport * as stackedSeries from \"./stacked_series\";\nvar DISCRETE = \"discrete\";\nvar SELECTED_STATE = states.selectedMark;\nvar HOVER_STATE = states.hoverMark;\nvar HOVER = states.hover;\nvar NORMAL = states.normal;\nvar SELECTION = states.selection;\nvar APPLY_SELECTED = states.applySelected;\nvar APPLY_HOVER = states.applyHover;\nvar RESET_ITEM = states.resetItem;\nvar NONE_MODE = \"none\";\nvar INCLUDE_POINTS = \"includepoints\";\nvar NEAREST_POINT = \"nearestpoint\";\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\nvar ALL_SERIES_POINTS = \"allseriespoints\";\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\nvar POINT_HOVER = \"pointHover\";\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\nvar SERIES_SELECT = \"seriesSelect\";\nvar POINT_SELECT = \"pointSelect\";\nvar POINT_DESELECT = \"pointDeselect\";\n\nvar getEmptyBusinessRange = function () {\n  return {\n    arg: {},\n    val: {}\n  };\n};\n\nfunction triggerEvent(element, event, point) {\n  element && element.trigger(event, point);\n}\n\nseriesNS.mixins = {\n  chart: {},\n  pie: {},\n  polar: {}\n};\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\n\n_extend(seriesNS.mixins.pie, pieSeries);\n\n_extend(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, rangeSeriesChart, bubbleSeriesChart, financialSeries, stackedSeries.chart);\n\n_extend(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, stackedSeries.polar);\n\nfunction includePointsMode(mode) {\n  mode = _normalizeEnum(mode);\n  return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS;\n}\n\nfunction getLabelOptions(labelOptions, defaultColor) {\n  var opt = labelOptions || {};\n  var labelFont = _extend({}, opt.font) || {};\n  var labelBorder = opt.border || {};\n  var labelConnector = opt.connector || {};\n  var backgroundAttr = {\n    fill: opt.backgroundColor || defaultColor,\n    \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\n    stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\n    dashStyle: labelBorder.dashStyle\n  };\n  var connectorAttr = {\n    stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\n    \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\n  };\n  labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === _normalizeEnum(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\n  return {\n    alignment: opt.alignment,\n    format: opt.format,\n    argumentFormat: opt.argumentFormat,\n    customizeText: isFunction(opt.customizeText) ? opt.customizeText : void 0,\n    attributes: {\n      font: labelFont\n    },\n    visible: 0 !== labelFont.size ? opt.visible : false,\n    showForZeroValues: opt.showForZeroValues,\n    horizontalOffset: opt.horizontalOffset,\n    verticalOffset: opt.verticalOffset,\n    radialOffset: opt.radialOffset,\n    background: backgroundAttr,\n    position: opt.position,\n    connector: connectorAttr,\n    rotationAngle: opt.rotationAngle,\n    wordWrap: opt.wordWrap,\n    textOverflow: opt.textOverflow,\n    cssClass: opt.cssClass,\n    displayFormat: opt.displayFormat\n  };\n}\n\nfunction setPointHoverState(point, legendCallback) {\n  point.fullState |= HOVER_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction releasePointHoverState(point, legendCallback) {\n  point.fullState &= ~HOVER_STATE;\n  point.applyView(legendCallback);\n  point.releaseHoverState();\n}\n\nfunction setPointSelectedState(point, legendCallback) {\n  point.fullState |= SELECTED_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction releasePointSelectedState(point, legendCallback) {\n  point.fullState &= ~SELECTED_STATE;\n  point.applyView(legendCallback);\n}\n\nfunction mergePointOptionsCore(base, extra) {\n  var options = _extend({}, base, extra);\n\n  options.border = _extend({}, base && base.border, extra && extra.border);\n  return options;\n}\n\nfunction mergePointOptions(base, extra) {\n  var options = mergePointOptionsCore(base, extra);\n  options.image = _extend(true, {}, base.image, extra.image);\n  options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\n  options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\n  return options;\n}\n\nexport function Series(settings, options) {\n  this.fullState = 0;\n  this._extGroups = settings;\n  this._renderer = settings.renderer;\n  this._group = settings.renderer.g().attr({\n    class: \"dxc-series\"\n  });\n  this._eventTrigger = settings.eventTrigger;\n  this._eventPipe = settings.eventPipe;\n  this._incidentOccurred = settings.incidentOccurred;\n  this._legendCallback = _noop;\n  this.updateOptions(options, settings);\n}\n\nfunction getData(pointData) {\n  return pointData.data;\n}\n\nfunction getValueChecker(axisType, axis) {\n  if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\n    return () => true;\n  } else {\n    return value => value > 0;\n  }\n}\n\nSeries.prototype = {\n  constructor: Series,\n  _createLegendState: _noop,\n  getLegendStyles: function () {\n    return this._styles.legendStyles;\n  },\n  _createStyles: function (options) {\n    var mainSeriesColor = options.mainSeriesColor;\n    this._styles = {\n      normal: this._parseStyle(options, mainSeriesColor, mainSeriesColor),\n      hover: this._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\n      selection: this._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\n      legendStyles: {\n        normal: this._createLegendState(options, mainSeriesColor),\n        hover: this._createLegendState(options.hoverStyle || {}, mainSeriesColor),\n        selection: this._createLegendState(options.selectionStyle || {}, mainSeriesColor)\n      }\n    };\n  },\n\n  setClippingParams(baseId, wideId, forceClipping) {\n    var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\n    this._paneClipRectID = baseId;\n    this._widePaneClipRectID = wideId;\n    this._forceClipping = forceClipping;\n    this._clipLabels = clipLabels;\n  },\n\n  applyClip: function () {\n    this._group.attr({\n      \"clip-path\": this._paneClipRectID\n    });\n  },\n  resetClip: function () {\n    this._group.attr({\n      \"clip-path\": null\n    });\n  },\n  getTagField: function () {\n    return this._options.tagField || \"tag\";\n  },\n  getValueFields: _noop,\n  getSizeField: _noop,\n  getArgumentField: _noop,\n  getPoints: function () {\n    return this._points;\n  },\n  getPointsInViewPort: function () {\n    return rangeCalculator.getPointsInViewPort(this);\n  },\n  _createPoint: function (data, index, oldPoint) {\n    data.index = index;\n    var pointsByArgument = this.pointsByArgument;\n\n    var options = this._getCreatingPointOptions(data);\n\n    var arg = data.argument.valueOf();\n    var point = oldPoint;\n\n    if (point) {\n      point.update(data, options);\n    } else {\n      point = new Point(this, data, options);\n\n      if (this.isSelected() && includePointsMode(this.lastSelectionMode)) {\n        point.setView(SELECTION);\n      }\n    }\n\n    var pointByArgument = pointsByArgument[arg];\n\n    if (pointByArgument) {\n      pointByArgument.push(point);\n    } else {\n      pointsByArgument[arg] = [point];\n    }\n\n    if (point.hasValue()) {\n      this.customizePoint(point, data);\n    }\n\n    return point;\n  },\n  getRangeData: function () {\n    return this._visible ? this._getRangeData() : getEmptyBusinessRange();\n  },\n  getArgumentRange: function () {\n    return this._visible ? rangeCalculator.getArgumentRange(this) : getEmptyBusinessRange();\n  },\n  getViewport: function () {\n    return rangeCalculator.getViewport(this);\n  },\n  _deleteGroup: function (groupName) {\n    var group = this[groupName];\n\n    if (group) {\n      group.dispose();\n      this[groupName] = null;\n    }\n  },\n\n  updateOptions(newOptions, settings) {\n    var widgetType = newOptions.widgetType;\n    var oldType = this.type;\n    var newType = newOptions.type;\n    this.type = newType && _normalizeEnum(newType.toString());\n\n    if (!this._checkType(widgetType) || this._checkPolarBarType(widgetType, newOptions)) {\n      this.dispose();\n      this.isUpdated = false;\n      return;\n    }\n\n    if (oldType !== this.type) {\n      this._firstDrawing = true;\n\n      this._resetType(oldType, widgetType);\n\n      this._setType(this.type, widgetType);\n    } else {\n      this._defineDrawingState();\n    }\n\n    this._options = newOptions;\n    this._pointOptions = null;\n    this.name = newOptions.name;\n    this.pane = newOptions.pane;\n    this.tag = newOptions.tag;\n\n    if (settings) {\n      this._seriesModes = settings.commonSeriesModes || this._seriesModes;\n      this._valueAxis = settings.valueAxis || this._valueAxis;\n      this.axis = this._valueAxis && this._valueAxis.name;\n      this._argumentAxis = settings.argumentAxis || this._argumentAxis;\n    }\n\n    this._createStyles(newOptions);\n\n    this._stackName = null;\n\n    this._updateOptions(newOptions);\n\n    this._visible = newOptions.visible;\n    this.isUpdated = true;\n    this.stack = newOptions.stack;\n    this.barOverlapGroup = newOptions.barOverlapGroup;\n\n    this._createGroups();\n\n    this._processEmptyValue = newOptions.ignoreEmptyPoints ? x => null === x ? void 0 : x : x => x;\n  },\n\n  _defineDrawingState() {\n    this._firstDrawing = true;\n  },\n\n  _disposePoints: function (points) {\n    _each(points || [], function (_, p) {\n      p.dispose();\n    });\n  },\n  updateDataType: function (settings) {\n    this.argumentType = settings.argumentType;\n    this.valueType = settings.valueType;\n    this.argumentAxisType = settings.argumentAxisType;\n    this.valueAxisType = settings.valueAxisType;\n    this.showZero = settings.showZero;\n    this._argumentChecker = getValueChecker(settings.argumentAxisType, this.getArgumentAxis());\n    this._valueChecker = getValueChecker(settings.valueAxisType, this.getValueAxis());\n    return this;\n  },\n  _argumentChecker: function () {\n    return true;\n  },\n  _valueChecker: function () {\n    return true;\n  },\n  getOptions: function () {\n    return this._options;\n  },\n  _getOldPoint: function (data, oldPointsByArgument, index) {\n    var arg = data.argument && data.argument.valueOf();\n    var point = (oldPointsByArgument[arg] || [])[0];\n\n    if (point) {\n      oldPointsByArgument[arg].splice(0, 1);\n    }\n\n    return point;\n  },\n  updateData: function (data) {\n    var options = this._options;\n    var nameField = options.nameField;\n    data = data || [];\n\n    if (data.length) {\n      this._canRenderCompleteHandle = true;\n    }\n\n    var dataSelector = this._getPointDataSelector();\n\n    var itemsWithoutArgument = 0;\n    this._data = data.reduce((data, dataItem, index) => {\n      var pointDataItem = dataSelector(dataItem);\n\n      if (_isDefined(pointDataItem.argument)) {\n        if (!nameField || dataItem[nameField] === options.nameFieldValue) {\n          pointDataItem.index = index;\n          data.push(pointDataItem);\n        }\n      } else {\n        itemsWithoutArgument++;\n      }\n\n      return data;\n    }, []);\n\n    if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\n      this._incidentOccurred(\"W2002\", [this.name, this.getArgumentField()]);\n    }\n\n    this._endUpdateData();\n  },\n\n  _getData() {\n    var data = this._data || [];\n\n    if (this.useAggregation()) {\n      data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data);\n    }\n\n    return data;\n  },\n\n  useAggregation: function () {\n    var aggregation = this.getOptions().aggregation;\n    return aggregation && aggregation.enabled;\n  },\n  autoHidePointMarkersEnabled: _noop,\n  usePointsToDefineAutoHiding: _noop,\n\n  createPoints(useAllAggregatedPoints) {\n    this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\n\n    this._createPoints();\n  },\n\n  _normalizeUsingAllAggregatedPoints: function (useAllAggregatedPoints) {\n    this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints);\n  },\n  _createPoints: function () {\n    var that = this;\n    var oldPointsByArgument = that.pointsByArgument || {};\n\n    var data = that._getData();\n\n    that.pointsByArgument = {};\n\n    that._calculateErrorBars(data);\n\n    var skippedFields = {};\n    var points = data.reduce((points, pointDataItem) => {\n      if (that._checkData(pointDataItem, skippedFields)) {\n        var pointIndex = points.length;\n\n        var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\n\n        var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\n\n        points.push(point);\n      }\n\n      return points;\n    }, []);\n\n    for (var field in skippedFields) {\n      if (skippedFields[field] === data.length) {\n        that._incidentOccurred(\"W2002\", [that.name, field]);\n      }\n    }\n\n    Object.keys(oldPointsByArgument).forEach(key => that._disposePoints(oldPointsByArgument[key]));\n    that._points = points;\n  },\n  _removeOldSegments: function () {\n    var that = this;\n    var startIndex = that._segments.length;\n\n    _each(that._graphics.splice(startIndex, that._graphics.length) || [], function (_, elem) {\n      that._removeElement(elem);\n    });\n\n    if (that._trackers) {\n      _each(that._trackers.splice(startIndex, that._trackers.length) || [], function (_, elem) {\n        elem.remove();\n      });\n    }\n  },\n  _drawElements: function (animationEnabled, firstDrawing, translateAllPoints) {\n    var that = this;\n    var points = that._points || [];\n\n    var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\n\n    var groupForPoint = {\n      markers: that._markersGroup,\n      errorBars: that._errorBarGroup\n    };\n    that._drawnPoints = [];\n    that._graphics = that._graphics || [];\n    that._segments = [];\n    var segments = points.reduce(function (segments, p) {\n      var segment = segments[segments.length - 1];\n\n      if (!p.translated || translateAllPoints) {\n        p.translate();\n        !translateAllPoints && p.setDefaultCoords();\n      }\n\n      if (p.hasValue() && p.hasCoords()) {\n        translateAllPoints && that._drawPoint({\n          point: p,\n          groups: groupForPoint,\n          hasAnimation: animationEnabled,\n          firstDrawing: firstDrawing\n        });\n        segment.push(p);\n      } else if (!p.hasValue()) {\n        segment.length && segments.push([]);\n      } else {\n        p.setInvisibility();\n      }\n\n      return segments;\n    }, [[]]);\n    segments.forEach(function (segment, index) {\n      if (segment.length) {\n        that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1);\n      }\n    }, segments);\n    that._firstDrawing = !points.length;\n\n    that._removeOldSegments();\n\n    animationEnabled && that._animate(firstDrawing);\n  },\n  draw: function (animationEnabled, hideLayoutLabels, legendCallback) {\n    var firstDrawing = this._firstDrawing;\n    this._legendCallback = legendCallback || this._legendCallback;\n\n    if (!this._visible) {\n      this._group.remove();\n\n      return;\n    }\n\n    this._appendInGroup();\n\n    this._applyVisibleArea();\n\n    this._setGroupsSettings(animationEnabled, firstDrawing);\n\n    !firstDrawing && !this._resetApplyingAnimation && this._drawElements(false, firstDrawing, false);\n\n    this._drawElements(animationEnabled, firstDrawing, true);\n\n    hideLayoutLabels && this.hideLabels();\n\n    if (this.isSelected()) {\n      this._changeStyle(this.lastSelectionMode, void 0, true);\n    } else if (this.isHovered()) {\n      this._changeStyle(this.lastHoverMode, void 0, true);\n    } else {\n      this._applyStyle(this._styles.normal);\n    }\n\n    this._resetApplyingAnimation = false;\n  },\n  _setLabelGroupSettings: function (animationEnabled) {\n    var settings = {\n      class: \"dxc-labels\",\n      \"pointer-events\": \"none\"\n    };\n    this._clipLabels && this._applyElementsClipRect(settings);\n\n    this._applyClearingSettings(settings);\n\n    animationEnabled && (settings.opacity = .001);\n\n    this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup);\n  },\n  _checkType: function (widgetType) {\n    return !!seriesNS.mixins[widgetType][this.type];\n  },\n  _checkPolarBarType: function (widgetType, options) {\n    return \"polar\" === widgetType && options.spiderWidget && -1 !== this.type.indexOf(\"bar\");\n  },\n  _resetType: function (seriesType, widgetType) {\n    var methodName;\n    var methods;\n\n    if (seriesType) {\n      methods = seriesNS.mixins[widgetType][seriesType];\n\n      for (methodName in methods) {\n        delete this[methodName];\n      }\n    }\n  },\n  _setType: function (seriesType, widgetType) {\n    var methodName;\n    var methods = seriesNS.mixins[widgetType][seriesType];\n\n    for (methodName in methods) {\n      this[methodName] = methods[methodName];\n    }\n  },\n  _setPointsView: function (view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.setView(view);\n      }\n    });\n  },\n  _resetPointsView: function (view, target) {\n    this.getPoints().forEach(function (point) {\n      if (target !== point) {\n        point.resetView(view);\n      }\n    });\n  },\n  _resetNearestPoint: function () {\n    this._nearestPoint && null !== this._nearestPoint.series && this._nearestPoint.resetView(HOVER);\n    this._nearestPoint = null;\n  },\n  _setSelectedState: function (mode) {\n    this.lastSelectionMode = _normalizeEnum(mode || this._options.selectionMode);\n    this.fullState = this.fullState | SELECTED_STATE;\n\n    this._resetNearestPoint();\n\n    this._changeStyle(this.lastSelectionMode);\n\n    if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\n      this._resetPointsView(HOVER);\n    }\n  },\n  _releaseSelectedState: function () {\n    this.fullState = this.fullState & ~SELECTED_STATE;\n\n    this._changeStyle(this.lastSelectionMode, SELECTION);\n\n    if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\n      this._setPointsView(HOVER);\n    }\n  },\n  isFullStackedSeries: function () {\n    return 0 === this.type.indexOf(\"fullstacked\");\n  },\n  isStackedSeries: function () {\n    return 0 === this.type.indexOf(\"stacked\");\n  },\n  resetApplyingAnimation: function (isFirstDrawing) {\n    this._resetApplyingAnimation = true;\n\n    if (isFirstDrawing) {\n      this._firstDrawing = true;\n    }\n  },\n  isFinancialSeries: function () {\n    return \"stock\" === this.type || \"candlestick\" === this.type;\n  },\n  _canChangeView: function () {\n    return !this.isSelected() && _normalizeEnum(this._options.hoverMode) !== NONE_MODE;\n  },\n  _changeStyle: function (mode, resetView, skipPoints) {\n    var state = this.fullState;\n    var styles = [NORMAL, HOVER, SELECTION, SELECTION];\n\n    if (\"none\" === this.lastHoverMode) {\n      state &= ~HOVER_STATE;\n    }\n\n    if (\"none\" === this.lastSelectionMode) {\n      state &= ~SELECTED_STATE;\n    }\n\n    if (includePointsMode(mode) && !skipPoints) {\n      if (!resetView) {\n        this._setPointsView(styles[state]);\n      } else {\n        this._resetPointsView(resetView);\n      }\n    }\n\n    this._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\n\n    this._applyStyle(this._styles[styles[state]]);\n  },\n  updateHover: function (x, y) {\n    var currentNearestPoint = this._nearestPoint;\n    var point = this.isHovered() && this.lastHoverMode === NEAREST_POINT && this.getNeighborPoint(x, y);\n\n    if (point !== currentNearestPoint && !(this.isSelected() && this.lastSelectionMode !== NONE_MODE)) {\n      this._resetNearestPoint();\n\n      if (point) {\n        point.setView(HOVER);\n        this._nearestPoint = point;\n      }\n    }\n  },\n  _getMainAxisName: function () {\n    return this._options.rotated ? \"X\" : \"Y\";\n  },\n  areLabelsVisible: function () {\n    return !_isDefined(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount;\n  },\n  getLabelVisibility: function () {\n    return this.areLabelsVisible() && this._options.label && this._options.label.visible;\n  },\n  customizePoint: function (point, pointData) {\n    var options = this._options;\n    var customizePoint = options.customizePoint;\n    var customizeObject;\n    var pointOptions;\n    var customLabelOptions;\n    var customOptions;\n    var customizeLabel = options.customizeLabel;\n    var useLabelCustomOptions;\n    var usePointCustomOptions;\n\n    if (customizeLabel && customizeLabel.call) {\n      customizeObject = _extend({\n        seriesName: this.name\n      }, pointData);\n      customizeObject.series = this;\n      customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\n      useLabelCustomOptions = customLabelOptions && !_isEmptyObject(customLabelOptions);\n      customLabelOptions = useLabelCustomOptions ? _extend(true, {}, options.label, customLabelOptions) : null;\n    }\n\n    if (customizePoint && customizePoint.call) {\n      customizeObject = customizeObject || _extend({\n        seriesName: this.name\n      }, pointData);\n      customizeObject.series = this;\n      customOptions = customizePoint.call(customizeObject, customizeObject);\n      usePointCustomOptions = customOptions && !_isEmptyObject(customOptions);\n    }\n\n    if (useLabelCustomOptions || usePointCustomOptions) {\n      pointOptions = this._parsePointOptions(this._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\n      pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\n      pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\n      point.updateOptions(pointOptions);\n    }\n  },\n  show: function () {\n    if (!this._visible) {\n      this._changeVisibility(true);\n    }\n  },\n  hide: function () {\n    if (this._visible) {\n      this._changeVisibility(false);\n    }\n  },\n  _changeVisibility: function (visibility) {\n    this._visible = this._options.visible = visibility;\n\n    this._updatePointsVisibility();\n\n    this.hidePointTooltip();\n\n    this._options.visibilityChanged(this);\n  },\n  _updatePointsVisibility: _noop,\n  hideLabels: function () {\n    _each(this._points, function (_, point) {\n      point._label.draw(false);\n    });\n  },\n  _parsePointOptions: function (pointOptions, labelOptions, data, point) {\n    var options = this._options;\n\n    var styles = this._createPointStyles(pointOptions, data, point);\n\n    var parsedOptions = _extend({}, pointOptions, {\n      type: options.type,\n      rotated: options.rotated,\n      styles: styles,\n      widgetType: options.widgetType,\n      visibilityChanged: options.visibilityChanged\n    });\n\n    parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\n\n    if (this.areErrorBarsVisible()) {\n      parsedOptions.errorBars = options.valueErrorBar;\n    }\n\n    return parsedOptions;\n  },\n  _preparePointOptions: function (customOptions) {\n    var pointOptions = this._getOptionsForPoint();\n\n    return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions;\n  },\n  _getMarkerGroupOptions: function () {\n    return _extend(false, {}, this._getOptionsForPoint(), {\n      hoverStyle: {},\n      selectionStyle: {}\n    });\n  },\n  _getAggregationMethod: function (isDiscrete, aggregateByCategory) {\n    var options = this.getOptions().aggregation;\n\n    var method = _normalizeEnum(options.method);\n\n    var customAggregator = \"custom\" === method && options.calculate;\n    var aggregator;\n\n    if (isDiscrete && !aggregateByCategory) {\n      aggregator = _ref => {\n        var {\n          data: data\n        } = _ref;\n        return data[0];\n      };\n    } else {\n      aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator];\n    }\n\n    return customAggregator || aggregator;\n  },\n\n  _resample(_ref2, data) {\n    var {\n      interval: interval,\n      ticks: ticks,\n      aggregateByCategory: aggregateByCategory\n    } = _ref2;\n    var that = this;\n    var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\n    var dataIndex = 0;\n\n    var dataSelector = this._getPointDataSelector();\n\n    var options = that.getOptions();\n\n    var addAggregatedData = (target, data, aggregationInfo) => {\n      if (!data) {\n        return;\n      }\n\n      var processData = d => {\n        var pointData = d && dataSelector(d, options);\n\n        if (pointData && that._checkData(pointData)) {\n          pointData.aggregationInfo = aggregationInfo;\n          target.push(pointData);\n        }\n      };\n\n      if (Array.isArray(data)) {\n        data.forEach(processData);\n      } else {\n        processData(data);\n      }\n    };\n\n    var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\n\n    if (isDiscrete) {\n      if (aggregateByCategory) {\n        var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\n        var groups = categories.reduce((g, category) => {\n          g[category.valueOf()] = [];\n          return g;\n        }, {});\n        data.forEach(dataItem => {\n          groups[dataItem.argument.valueOf()].push(dataItem);\n        });\n        return categories.reduce((result, c) => {\n          addAggregatedData(result, aggregationMethod({\n            aggregationInterval: null,\n            intervalStart: c,\n            intervalEnd: c,\n            data: groups[c.valueOf()].map(getData)\n          }, that));\n          return result;\n        }, []);\n      } else {\n        return data.reduce((result, dataItem, index, data) => {\n          result[1].push(dataItem);\n\n          if (index === data.length - 1 || (index + 1) % interval === 0) {\n            var dataInInterval = result[1];\n            var aggregationInfo = {\n              aggregationInterval: interval,\n              data: dataInInterval.map(getData)\n            };\n            addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\n            result[1] = [];\n          }\n\n          return result;\n        }, [[], []])[0];\n      }\n    }\n\n    var aggregatedData = [];\n\n    if (1 === ticks.length) {\n      var aggregationInfo = {\n        intervalStart: ticks[0],\n        intervalEnd: ticks[0],\n        aggregationInterval: null,\n        data: data.map(getData)\n      };\n      addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo);\n    } else {\n      for (var i = 1; i < ticks.length; i++) {\n        var intervalEnd = ticks[i];\n        var intervalStart = ticks[i - 1];\n        var dataInInterval = [];\n\n        while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\n          if (data[dataIndex].argument >= intervalStart) {\n            dataInInterval.push(data[dataIndex]);\n          }\n\n          dataIndex++;\n        }\n\n        var _aggregationInfo = {\n          intervalStart: intervalStart,\n          intervalEnd: intervalEnd,\n          aggregationInterval: interval,\n          data: dataInInterval.map(getData)\n        };\n        addAggregatedData(aggregatedData, aggregationMethod(_aggregationInfo, that), _aggregationInfo);\n      }\n    }\n\n    that._endUpdateData();\n\n    return aggregatedData;\n  },\n\n  canRenderCompleteHandle: function () {\n    var result = this._canRenderCompleteHandle;\n    delete this._canRenderCompleteHandle;\n    return !!result;\n  },\n  isHovered: function () {\n    return !!(1 & this.fullState);\n  },\n  isSelected: function () {\n    return !!(2 & this.fullState);\n  },\n  isVisible: function () {\n    return this._visible;\n  },\n  getAllPoints: function () {\n    this._createAllAggregatedPoints();\n\n    return (this._points || []).slice();\n  },\n  getPointByPos: function (pos) {\n    this._createAllAggregatedPoints();\n\n    return (this._points || [])[pos];\n  },\n  getVisiblePoints: function () {\n    return (this._drawnPoints || []).slice();\n  },\n  selectPoint: function (point) {\n    if (!point.isSelected()) {\n      setPointSelectedState(point, this._legendCallback);\n\n      this._eventPipe({\n        action: POINT_SELECT,\n        target: point\n      });\n\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  deselectPoint: function (point) {\n    if (point.isSelected()) {\n      releasePointSelectedState(point, this._legendCallback);\n\n      this._eventPipe({\n        action: POINT_DESELECT,\n        target: point\n      });\n\n      this._eventTrigger(POINT_SELECTION_CHANGED, {\n        target: point\n      });\n    }\n  },\n  hover: function (mode) {\n    var eventTrigger = this._eventTrigger;\n\n    if (this.isHovered()) {\n      return;\n    }\n\n    this.lastHoverMode = _normalizeEnum(mode || this._options.hoverMode);\n    this.fullState = this.fullState | HOVER_STATE;\n\n    this._changeStyle(this.lastHoverMode, void 0, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\n\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: this\n    });\n  },\n  clearHover: function () {\n    var eventTrigger = this._eventTrigger;\n\n    if (!this.isHovered()) {\n      return;\n    }\n\n    this._resetNearestPoint();\n\n    this.fullState = this.fullState & ~HOVER_STATE;\n\n    this._changeStyle(this.lastHoverMode, HOVER, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\n\n    eventTrigger(SERIES_HOVER_CHANGED, {\n      target: this\n    });\n  },\n  hoverPoint: function (point) {\n    if (!point.isHovered()) {\n      point.clearHover();\n      setPointHoverState(point, this._legendCallback);\n      this._canChangeView() && this._applyStyle(this._styles.hover);\n\n      this._eventPipe({\n        action: POINT_HOVER,\n        target: point\n      });\n\n      this._eventTrigger(POINT_HOVER_CHANGED, {\n        target: point\n      });\n    }\n  },\n  clearPointHover: function () {\n    var that = this;\n    that.getPoints().some(function (currentPoint) {\n      if (currentPoint.isHovered()) {\n        releasePointHoverState(currentPoint, that._legendCallback);\n        that._canChangeView() && that._applyStyle(that._styles.normal);\n\n        that._eventPipe({\n          action: CLEAR_POINT_HOVER,\n          target: currentPoint\n        });\n\n        that._eventTrigger(POINT_HOVER_CHANGED, {\n          target: currentPoint\n        });\n\n        return true;\n      }\n\n      return false;\n    });\n  },\n  showPointTooltip: function (point) {\n    triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point);\n  },\n  hidePointTooltip: function (point) {\n    triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point);\n  },\n  select: function () {\n    if (!this.isSelected()) {\n      this._setSelectedState(this._options.selectionMode);\n\n      this._eventPipe({\n        action: SERIES_SELECT,\n        target: this\n      });\n\n      this._group.toForeground();\n\n      this._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: this\n      });\n    }\n  },\n  clearSelection: function () {\n    if (this.isSelected()) {\n      this._releaseSelectedState();\n\n      this._eventTrigger(SERIES_SELECTION_CHANGED, {\n        target: this\n      });\n    }\n  },\n  getPointsByArg: function (arg, skipPointsCreation) {\n    var argValue = arg.valueOf();\n    var points = this.pointsByArgument[argValue];\n\n    if (!points && !skipPointsCreation && this._createAllAggregatedPoints()) {\n      points = this.pointsByArgument[argValue];\n    }\n\n    return points || [];\n  },\n  _createAllAggregatedPoints: function () {\n    if (this.useAggregation() && !this._useAllAggregatedPoints) {\n      this.createPoints(true);\n      return true;\n    }\n\n    return false;\n  },\n  getPointsByKeys: function (arg) {\n    return this.getPointsByArg(arg);\n  },\n  notify: function (data) {\n    var that = this;\n    var action = data.action;\n    var seriesModes = that._seriesModes;\n    var target = data.target;\n    var targetOptions = target.getOptions();\n\n    var pointHoverMode = _normalizeEnum(targetOptions.hoverMode);\n\n    var selectionModeOfPoint = _normalizeEnum(targetOptions.selectionMode);\n\n    if (action === POINT_HOVER) {\n      that._hoverPointHandler(target, pointHoverMode, data.notifyLegend);\n    } else if (action === CLEAR_POINT_HOVER) {\n      that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend);\n    } else if (action === SERIES_SELECT) {\n      target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection();\n    } else if (action === POINT_SELECT) {\n      if (\"single\" === seriesModes.pointSelectionMode) {\n        that.getPoints().some(function (currentPoint) {\n          if (currentPoint !== target && currentPoint.isSelected()) {\n            that.deselectPoint(currentPoint);\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      that._selectPointHandler(target, selectionModeOfPoint);\n    } else if (action === POINT_DESELECT) {\n      that._deselectPointHandler(target, selectionModeOfPoint);\n    }\n  },\n  _selectPointHandler: function (target, mode) {\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === this && this._setPointsView(SELECTION, target);\n    } else if (mode === ALL_ARGUMENT_POINTS) {\n      this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint !== target && currentPoint.setView(SELECTION);\n      });\n    }\n  },\n  _deselectPointHandler: function (target, mode) {\n    if (mode === ALL_SERIES_POINTS) {\n      target.series === this && this._resetPointsView(SELECTION, target);\n    } else if (mode === ALL_ARGUMENT_POINTS) {\n      this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint !== target && currentPoint.resetView(SELECTION);\n      });\n    }\n  },\n  _hoverPointHandler: function (target, mode, notifyLegend) {\n    if (target.series !== this && mode === ALL_ARGUMENT_POINTS) {\n      this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.setView(HOVER);\n      });\n      notifyLegend && this._legendCallback(target);\n    } else if (mode === ALL_SERIES_POINTS && target.series === this) {\n      this._setPointsView(HOVER, target);\n    }\n  },\n  _clearPointHoverHandler: function (target, mode, notifyLegend) {\n    if (mode === ALL_ARGUMENT_POINTS) {\n      target.series !== this && this.getPointsByKeys(target.argument, target.argumentIndex).forEach(function (currentPoint) {\n        currentPoint.resetView(HOVER);\n      });\n      notifyLegend && this._legendCallback(target);\n    } else if (mode === ALL_SERIES_POINTS && target.series === this) {\n      this._resetPointsView(HOVER, target);\n    }\n  },\n  _deletePoints: function () {\n    this._disposePoints(this._points);\n\n    this._points = this._drawnPoints = null;\n  },\n  _deleteTrackers: function () {\n    _each(this._trackers || [], function (_, tracker) {\n      tracker.remove();\n    });\n\n    this._trackersGroup && this._trackersGroup.dispose();\n    this._trackers = this._trackersGroup = null;\n  },\n  dispose: function () {\n    this._deletePoints();\n\n    this._group.dispose();\n\n    this._labelsGroup && this._labelsGroup.dispose();\n    this._errorBarGroup && this._errorBarGroup.dispose();\n\n    this._deleteTrackers();\n\n    this._group = this._extGroups = this._markersGroup = this._elementsGroup = this._bordersGroup = this._labelsGroup = this._errorBarGroup = this._graphics = this._rangeData = this._renderer = this._styles = this._options = this._pointOptions = this._drawnPoints = this.pointsByArgument = this._segments = this._prevSeries = null;\n  },\n  correctPosition: _noop,\n  drawTrackers: _noop,\n  getNeighborPoint: _noop,\n  areErrorBarsVisible: _noop,\n  getMarginOptions: function () {\n    return this._patchMarginOptions({\n      percentStick: this.isFullStackedSeries()\n    });\n  },\n  getColor: function () {\n    return this.getLegendStyles().normal.fill;\n  },\n  getOpacity: function () {\n    return this._options.opacity;\n  },\n  getStackName: function () {\n    return this._stackName;\n  },\n  getBarOverlapGroup: function () {\n    return this._options.barOverlapGroup;\n  },\n  getPointByCoord: function (x, y) {\n    var point = this.getNeighborPoint(x, y);\n    return null !== point && void 0 !== point && point.coordsIn(x, y) ? point : null;\n  },\n  getValueAxis: function () {\n    return this._valueAxis;\n  },\n  getArgumentAxis: function () {\n    return this._argumentAxis;\n  },\n\n  getMarkersGroup() {\n    return this._markersGroup;\n  },\n\n  getRenderer() {\n    return this._renderer;\n  },\n\n  removePointElements() {\n    if (this._markersGroup) {\n      _each(this._points, (_, p) => p.deleteMarker());\n\n      this._markersGroup.dispose();\n\n      this._markersGroup = null;\n    }\n  },\n\n  removeGraphicElements() {\n    var that = this;\n\n    if (that._elementsGroup) {\n      that._elementsGroup.dispose();\n\n      that._elementsGroup = null;\n    }\n\n    _each(that._graphics || [], (_, elem) => {\n      that._removeElement(elem);\n    });\n\n    that._graphics = null;\n  },\n\n  removeBordersGroup() {\n    if (this._bordersGroup) {\n      this._bordersGroup.dispose();\n\n      this._bordersGroup = null;\n    }\n  }\n\n};\nexport var mixins = seriesNS.mixins;","map":{"version":3,"names":["seriesNS","isFunction","isDefined","_isDefined","isEmptyObject","_isEmptyObject","extend","_extend","each","_each","Point","normalizeEnum","_normalizeEnum","noop","_noop","consts","states","rangeCalculator","scatterSeries","lineSeries","areaSeries","barSeries","chart","rangeSeriesChart","bubbleSeriesChart","pieSeries","financialSeries","stackedSeries","DISCRETE","SELECTED_STATE","selectedMark","HOVER_STATE","hoverMark","HOVER","hover","NORMAL","normal","SELECTION","selection","APPLY_SELECTED","applySelected","APPLY_HOVER","applyHover","RESET_ITEM","resetItem","NONE_MODE","INCLUDE_POINTS","NEAREST_POINT","SERIES_SELECTION_CHANGED","POINT_SELECTION_CHANGED","SERIES_HOVER_CHANGED","POINT_HOVER_CHANGED","ALL_SERIES_POINTS","ALL_ARGUMENT_POINTS","POINT_HOVER","CLEAR_POINT_HOVER","SERIES_SELECT","POINT_SELECT","POINT_DESELECT","getEmptyBusinessRange","arg","val","triggerEvent","element","event","point","trigger","mixins","pie","polar","scatter","includePointsMode","mode","getLabelOptions","labelOptions","defaultColor","opt","labelFont","font","labelBorder","border","labelConnector","connector","backgroundAttr","fill","backgroundColor","visible","width","stroke","color","dashStyle","connectorAttr","position","alignment","format","argumentFormat","customizeText","attributes","size","showForZeroValues","horizontalOffset","verticalOffset","radialOffset","background","rotationAngle","wordWrap","textOverflow","cssClass","displayFormat","setPointHoverState","legendCallback","fullState","applyView","releasePointHoverState","releaseHoverState","setPointSelectedState","releasePointSelectedState","mergePointOptionsCore","base","extra","options","mergePointOptions","image","selectionStyle","hoverStyle","Series","settings","_extGroups","_renderer","renderer","_group","g","attr","class","_eventTrigger","eventTrigger","_eventPipe","eventPipe","_incidentOccurred","incidentOccurred","_legendCallback","updateOptions","getData","pointData","data","getValueChecker","axisType","axis","getOptions","allowNegatives","value","prototype","constructor","_createLegendState","getLegendStyles","_styles","legendStyles","_createStyles","mainSeriesColor","_parseStyle","setClippingParams","baseId","wideId","forceClipping","clipLabels","arguments","length","_paneClipRectID","_widePaneClipRectID","_forceClipping","_clipLabels","applyClip","resetClip","getTagField","_options","tagField","getValueFields","getSizeField","getArgumentField","getPoints","_points","getPointsInViewPort","_createPoint","index","oldPoint","pointsByArgument","_getCreatingPointOptions","argument","valueOf","update","isSelected","lastSelectionMode","setView","pointByArgument","push","hasValue","customizePoint","getRangeData","_visible","_getRangeData","getArgumentRange","getViewport","_deleteGroup","groupName","group","dispose","newOptions","widgetType","oldType","type","newType","toString","_checkType","_checkPolarBarType","isUpdated","_firstDrawing","_resetType","_setType","_defineDrawingState","_pointOptions","name","pane","tag","_seriesModes","commonSeriesModes","_valueAxis","valueAxis","_argumentAxis","argumentAxis","_stackName","_updateOptions","stack","barOverlapGroup","_createGroups","_processEmptyValue","ignoreEmptyPoints","x","_disposePoints","points","_","p","updateDataType","argumentType","valueType","argumentAxisType","valueAxisType","showZero","_argumentChecker","getArgumentAxis","_valueChecker","getValueAxis","_getOldPoint","oldPointsByArgument","splice","updateData","nameField","_canRenderCompleteHandle","dataSelector","_getPointDataSelector","itemsWithoutArgument","_data","reduce","dataItem","pointDataItem","nameFieldValue","_endUpdateData","_getData","useAggregation","_resample","getAggregationInfo","_useAllAggregatedPoints","aggregation","enabled","autoHidePointMarkersEnabled","usePointsToDefineAutoHiding","createPoints","useAllAggregatedPoints","_normalizeUsingAllAggregatedPoints","_createPoints","that","_calculateErrorBars","skippedFields","_checkData","pointIndex","field","Object","keys","forEach","key","_removeOldSegments","startIndex","_segments","_graphics","elem","_removeElement","_trackers","remove","_drawElements","animationEnabled","firstDrawing","translateAllPoints","closeSegment","closed","groupForPoint","markers","_markersGroup","errorBars","_errorBarGroup","_drawnPoints","segments","segment","translated","translate","setDefaultCoords","hasCoords","_drawPoint","groups","hasAnimation","setInvisibility","_drawSegment","_animate","draw","hideLayoutLabels","_appendInGroup","_applyVisibleArea","_setGroupsSettings","_resetApplyingAnimation","hideLabels","_changeStyle","isHovered","lastHoverMode","_applyStyle","_setLabelGroupSettings","_applyElementsClipRect","_applyClearingSettings","opacity","_labelsGroup","append","labelsGroup","spiderWidget","indexOf","seriesType","methodName","methods","_setPointsView","view","target","_resetPointsView","resetView","_resetNearestPoint","_nearestPoint","series","_setSelectedState","selectionMode","_releaseSelectedState","isFullStackedSeries","isStackedSeries","resetApplyingAnimation","isFirstDrawing","isFinancialSeries","_canChangeView","hoverMode","skipPoints","state","styles","updateHover","y","currentNearestPoint","getNeighborPoint","_getMainAxisName","rotated","areLabelsVisible","maxLabelCount","getLabelVisibility","label","customizeObject","pointOptions","customLabelOptions","customOptions","customizeLabel","useLabelCustomOptions","usePointCustomOptions","call","seriesName","_parsePointOptions","_preparePointOptions","show","_changeVisibility","hide","visibility","_updatePointsVisibility","hidePointTooltip","visibilityChanged","_label","_createPointStyles","parsedOptions","areErrorBarsVisible","valueErrorBar","_getOptionsForPoint","_getMarkerGroupOptions","_getAggregationMethod","isDiscrete","aggregateByCategory","method","customAggregator","calculate","aggregator","_ref","_aggregators","_defaultAggregator","_ref2","interval","ticks","dataIndex","addAggregatedData","aggregationInfo","processData","d","Array","isArray","aggregationMethod","categories","getTranslator","getBusinessRange","category","result","c","aggregationInterval","intervalStart","intervalEnd","map","dataInInterval","aggregatedData","i","_aggregationInfo","canRenderCompleteHandle","isVisible","getAllPoints","_createAllAggregatedPoints","slice","getPointByPos","pos","getVisiblePoints","selectPoint","action","deselectPoint","clearHover","hoverPoint","clearPointHover","some","currentPoint","showPointTooltip","seriesGroup","select","toForeground","clearSelection","getPointsByArg","skipPointsCreation","argValue","getPointsByKeys","notify","seriesModes","targetOptions","pointHoverMode","selectionModeOfPoint","_hoverPointHandler","notifyLegend","_clearPointHoverHandler","seriesSelectionMode","pointSelectionMode","_selectPointHandler","_deselectPointHandler","argumentIndex","_deletePoints","_deleteTrackers","tracker","_trackersGroup","_elementsGroup","_bordersGroup","_rangeData","_prevSeries","correctPosition","drawTrackers","getMarginOptions","_patchMarginOptions","percentStick","getColor","getOpacity","getStackName","getBarOverlapGroup","getPointByCoord","coordsIn","getMarkersGroup","getRenderer","removePointElements","deleteMarker","removeGraphicElements","removeBordersGroup"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/series/base_series.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/series/base_series.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar seriesNS = {};\r\nimport {\r\n    isFunction,\r\n    isDefined as _isDefined,\r\n    isEmptyObject as _isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend as _extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each as _each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    Point\r\n} from \"./points/base_point\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum\r\n} from \"../core/utils\";\r\nimport {\r\n    noop as _noop\r\n} from \"../../core/utils/common\";\r\nimport consts from \"../components/consts\";\r\nvar states = consts.states;\r\nimport rangeCalculator from \"./helpers/range_data_calculator\";\r\nimport * as scatterSeries from \"./scatter_series\";\r\nimport * as lineSeries from \"./line_series\";\r\nimport * as areaSeries from \"./area_series\";\r\nimport * as barSeries from \"./bar_series\";\r\nimport {\r\n    chart as rangeSeriesChart\r\n} from \"./range_series\";\r\nimport {\r\n    chart as bubbleSeriesChart\r\n} from \"./bubble_series\";\r\nimport * as pieSeries from \"./pie_series\";\r\nimport * as financialSeries from \"./financial_series\";\r\nimport * as stackedSeries from \"./stacked_series\";\r\nvar DISCRETE = \"discrete\";\r\nvar SELECTED_STATE = states.selectedMark;\r\nvar HOVER_STATE = states.hoverMark;\r\nvar HOVER = states.hover;\r\nvar NORMAL = states.normal;\r\nvar SELECTION = states.selection;\r\nvar APPLY_SELECTED = states.applySelected;\r\nvar APPLY_HOVER = states.applyHover;\r\nvar RESET_ITEM = states.resetItem;\r\nvar NONE_MODE = \"none\";\r\nvar INCLUDE_POINTS = \"includepoints\";\r\nvar NEAREST_POINT = \"nearestpoint\";\r\nvar SERIES_SELECTION_CHANGED = \"seriesSelectionChanged\";\r\nvar POINT_SELECTION_CHANGED = \"pointSelectionChanged\";\r\nvar SERIES_HOVER_CHANGED = \"seriesHoverChanged\";\r\nvar POINT_HOVER_CHANGED = \"pointHoverChanged\";\r\nvar ALL_SERIES_POINTS = \"allseriespoints\";\r\nvar ALL_ARGUMENT_POINTS = \"allargumentpoints\";\r\nvar POINT_HOVER = \"pointHover\";\r\nvar CLEAR_POINT_HOVER = \"clearPointHover\";\r\nvar SERIES_SELECT = \"seriesSelect\";\r\nvar POINT_SELECT = \"pointSelect\";\r\nvar POINT_DESELECT = \"pointDeselect\";\r\nvar getEmptyBusinessRange = function() {\r\n    return {\r\n        arg: {},\r\n        val: {}\r\n    }\r\n};\r\n\r\nfunction triggerEvent(element, event, point) {\r\n    element && element.trigger(event, point)\r\n}\r\nseriesNS.mixins = {\r\n    chart: {},\r\n    pie: {},\r\n    polar: {}\r\n};\r\nseriesNS.mixins.chart.scatter = scatterSeries.chart;\r\nseriesNS.mixins.polar.scatter = scatterSeries.polar;\r\n_extend(seriesNS.mixins.pie, pieSeries);\r\n_extend(seriesNS.mixins.chart, lineSeries.chart, areaSeries.chart, barSeries.chart, rangeSeriesChart, bubbleSeriesChart, financialSeries, stackedSeries.chart);\r\n_extend(seriesNS.mixins.polar, lineSeries.polar, areaSeries.polar, barSeries.polar, stackedSeries.polar);\r\n\r\nfunction includePointsMode(mode) {\r\n    mode = _normalizeEnum(mode);\r\n    return mode === INCLUDE_POINTS || mode === ALL_SERIES_POINTS\r\n}\r\n\r\nfunction getLabelOptions(labelOptions, defaultColor) {\r\n    var opt = labelOptions || {};\r\n    var labelFont = _extend({}, opt.font) || {};\r\n    var labelBorder = opt.border || {};\r\n    var labelConnector = opt.connector || {};\r\n    var backgroundAttr = {\r\n        fill: opt.backgroundColor || defaultColor,\r\n        \"stroke-width\": labelBorder.visible ? labelBorder.width || 0 : 0,\r\n        stroke: labelBorder.visible && labelBorder.width ? labelBorder.color : \"none\",\r\n        dashStyle: labelBorder.dashStyle\r\n    };\r\n    var connectorAttr = {\r\n        stroke: labelConnector.visible && labelConnector.width ? labelConnector.color || defaultColor : \"none\",\r\n        \"stroke-width\": labelConnector.visible ? labelConnector.width || 0 : 0\r\n    };\r\n    labelFont.color = \"none\" === opt.backgroundColor && \"#ffffff\" === _normalizeEnum(labelFont.color) && \"inside\" !== opt.position ? defaultColor : labelFont.color;\r\n    return {\r\n        alignment: opt.alignment,\r\n        format: opt.format,\r\n        argumentFormat: opt.argumentFormat,\r\n        customizeText: isFunction(opt.customizeText) ? opt.customizeText : void 0,\r\n        attributes: {\r\n            font: labelFont\r\n        },\r\n        visible: 0 !== labelFont.size ? opt.visible : false,\r\n        showForZeroValues: opt.showForZeroValues,\r\n        horizontalOffset: opt.horizontalOffset,\r\n        verticalOffset: opt.verticalOffset,\r\n        radialOffset: opt.radialOffset,\r\n        background: backgroundAttr,\r\n        position: opt.position,\r\n        connector: connectorAttr,\r\n        rotationAngle: opt.rotationAngle,\r\n        wordWrap: opt.wordWrap,\r\n        textOverflow: opt.textOverflow,\r\n        cssClass: opt.cssClass,\r\n        displayFormat: opt.displayFormat\r\n    }\r\n}\r\n\r\nfunction setPointHoverState(point, legendCallback) {\r\n    point.fullState |= HOVER_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointHoverState(point, legendCallback) {\r\n    point.fullState &= ~HOVER_STATE;\r\n    point.applyView(legendCallback);\r\n    point.releaseHoverState()\r\n}\r\n\r\nfunction setPointSelectedState(point, legendCallback) {\r\n    point.fullState |= SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction releasePointSelectedState(point, legendCallback) {\r\n    point.fullState &= ~SELECTED_STATE;\r\n    point.applyView(legendCallback)\r\n}\r\n\r\nfunction mergePointOptionsCore(base, extra) {\r\n    var options = _extend({}, base, extra);\r\n    options.border = _extend({}, base && base.border, extra && extra.border);\r\n    return options\r\n}\r\n\r\nfunction mergePointOptions(base, extra) {\r\n    var options = mergePointOptionsCore(base, extra);\r\n    options.image = _extend(true, {}, base.image, extra.image);\r\n    options.selectionStyle = mergePointOptionsCore(base.selectionStyle, extra.selectionStyle);\r\n    options.hoverStyle = mergePointOptionsCore(base.hoverStyle, extra.hoverStyle);\r\n    return options\r\n}\r\nexport function Series(settings, options) {\r\n    this.fullState = 0;\r\n    this._extGroups = settings;\r\n    this._renderer = settings.renderer;\r\n    this._group = settings.renderer.g().attr({\r\n        class: \"dxc-series\"\r\n    });\r\n    this._eventTrigger = settings.eventTrigger;\r\n    this._eventPipe = settings.eventPipe;\r\n    this._incidentOccurred = settings.incidentOccurred;\r\n    this._legendCallback = _noop;\r\n    this.updateOptions(options, settings)\r\n}\r\n\r\nfunction getData(pointData) {\r\n    return pointData.data\r\n}\r\n\r\nfunction getValueChecker(axisType, axis) {\r\n    if (!axis || \"logarithmic\" !== axisType || false !== axis.getOptions().allowNegatives) {\r\n        return () => true\r\n    } else {\r\n        return value => value > 0\r\n    }\r\n}\r\nSeries.prototype = {\r\n    constructor: Series,\r\n    _createLegendState: _noop,\r\n    getLegendStyles: function() {\r\n        return this._styles.legendStyles\r\n    },\r\n    _createStyles: function(options) {\r\n        var mainSeriesColor = options.mainSeriesColor;\r\n        this._styles = {\r\n            normal: this._parseStyle(options, mainSeriesColor, mainSeriesColor),\r\n            hover: this._parseStyle(options.hoverStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            selection: this._parseStyle(options.selectionStyle || {}, mainSeriesColor, mainSeriesColor),\r\n            legendStyles: {\r\n                normal: this._createLegendState(options, mainSeriesColor),\r\n                hover: this._createLegendState(options.hoverStyle || {}, mainSeriesColor),\r\n                selection: this._createLegendState(options.selectionStyle || {}, mainSeriesColor)\r\n            }\r\n        }\r\n    },\r\n    setClippingParams(baseId, wideId, forceClipping) {\r\n        var clipLabels = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : true;\r\n        this._paneClipRectID = baseId;\r\n        this._widePaneClipRectID = wideId;\r\n        this._forceClipping = forceClipping;\r\n        this._clipLabels = clipLabels\r\n    },\r\n    applyClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": this._paneClipRectID\r\n        })\r\n    },\r\n    resetClip: function() {\r\n        this._group.attr({\r\n            \"clip-path\": null\r\n        })\r\n    },\r\n    getTagField: function() {\r\n        return this._options.tagField || \"tag\"\r\n    },\r\n    getValueFields: _noop,\r\n    getSizeField: _noop,\r\n    getArgumentField: _noop,\r\n    getPoints: function() {\r\n        return this._points\r\n    },\r\n    getPointsInViewPort: function() {\r\n        return rangeCalculator.getPointsInViewPort(this)\r\n    },\r\n    _createPoint: function(data, index, oldPoint) {\r\n        data.index = index;\r\n        var pointsByArgument = this.pointsByArgument;\r\n        var options = this._getCreatingPointOptions(data);\r\n        var arg = data.argument.valueOf();\r\n        var point = oldPoint;\r\n        if (point) {\r\n            point.update(data, options)\r\n        } else {\r\n            point = new Point(this, data, options);\r\n            if (this.isSelected() && includePointsMode(this.lastSelectionMode)) {\r\n                point.setView(SELECTION)\r\n            }\r\n        }\r\n        var pointByArgument = pointsByArgument[arg];\r\n        if (pointByArgument) {\r\n            pointByArgument.push(point)\r\n        } else {\r\n            pointsByArgument[arg] = [point]\r\n        }\r\n        if (point.hasValue()) {\r\n            this.customizePoint(point, data)\r\n        }\r\n        return point\r\n    },\r\n    getRangeData: function() {\r\n        return this._visible ? this._getRangeData() : getEmptyBusinessRange()\r\n    },\r\n    getArgumentRange: function() {\r\n        return this._visible ? rangeCalculator.getArgumentRange(this) : getEmptyBusinessRange()\r\n    },\r\n    getViewport: function() {\r\n        return rangeCalculator.getViewport(this)\r\n    },\r\n    _deleteGroup: function(groupName) {\r\n        var group = this[groupName];\r\n        if (group) {\r\n            group.dispose();\r\n            this[groupName] = null\r\n        }\r\n    },\r\n    updateOptions(newOptions, settings) {\r\n        var widgetType = newOptions.widgetType;\r\n        var oldType = this.type;\r\n        var newType = newOptions.type;\r\n        this.type = newType && _normalizeEnum(newType.toString());\r\n        if (!this._checkType(widgetType) || this._checkPolarBarType(widgetType, newOptions)) {\r\n            this.dispose();\r\n            this.isUpdated = false;\r\n            return\r\n        }\r\n        if (oldType !== this.type) {\r\n            this._firstDrawing = true;\r\n            this._resetType(oldType, widgetType);\r\n            this._setType(this.type, widgetType)\r\n        } else {\r\n            this._defineDrawingState()\r\n        }\r\n        this._options = newOptions;\r\n        this._pointOptions = null;\r\n        this.name = newOptions.name;\r\n        this.pane = newOptions.pane;\r\n        this.tag = newOptions.tag;\r\n        if (settings) {\r\n            this._seriesModes = settings.commonSeriesModes || this._seriesModes;\r\n            this._valueAxis = settings.valueAxis || this._valueAxis;\r\n            this.axis = this._valueAxis && this._valueAxis.name;\r\n            this._argumentAxis = settings.argumentAxis || this._argumentAxis\r\n        }\r\n        this._createStyles(newOptions);\r\n        this._stackName = null;\r\n        this._updateOptions(newOptions);\r\n        this._visible = newOptions.visible;\r\n        this.isUpdated = true;\r\n        this.stack = newOptions.stack;\r\n        this.barOverlapGroup = newOptions.barOverlapGroup;\r\n        this._createGroups();\r\n        this._processEmptyValue = newOptions.ignoreEmptyPoints ? x => null === x ? void 0 : x : x => x\r\n    },\r\n    _defineDrawingState() {\r\n        this._firstDrawing = true\r\n    },\r\n    _disposePoints: function(points) {\r\n        _each(points || [], (function(_, p) {\r\n            p.dispose()\r\n        }))\r\n    },\r\n    updateDataType: function(settings) {\r\n        this.argumentType = settings.argumentType;\r\n        this.valueType = settings.valueType;\r\n        this.argumentAxisType = settings.argumentAxisType;\r\n        this.valueAxisType = settings.valueAxisType;\r\n        this.showZero = settings.showZero;\r\n        this._argumentChecker = getValueChecker(settings.argumentAxisType, this.getArgumentAxis());\r\n        this._valueChecker = getValueChecker(settings.valueAxisType, this.getValueAxis());\r\n        return this\r\n    },\r\n    _argumentChecker: function() {\r\n        return true\r\n    },\r\n    _valueChecker: function() {\r\n        return true\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    _getOldPoint: function(data, oldPointsByArgument, index) {\r\n        var arg = data.argument && data.argument.valueOf();\r\n        var point = (oldPointsByArgument[arg] || [])[0];\r\n        if (point) {\r\n            oldPointsByArgument[arg].splice(0, 1)\r\n        }\r\n        return point\r\n    },\r\n    updateData: function(data) {\r\n        var options = this._options;\r\n        var nameField = options.nameField;\r\n        data = data || [];\r\n        if (data.length) {\r\n            this._canRenderCompleteHandle = true\r\n        }\r\n        var dataSelector = this._getPointDataSelector();\r\n        var itemsWithoutArgument = 0;\r\n        this._data = data.reduce((data, dataItem, index) => {\r\n            var pointDataItem = dataSelector(dataItem);\r\n            if (_isDefined(pointDataItem.argument)) {\r\n                if (!nameField || dataItem[nameField] === options.nameFieldValue) {\r\n                    pointDataItem.index = index;\r\n                    data.push(pointDataItem)\r\n                }\r\n            } else {\r\n                itemsWithoutArgument++\r\n            }\r\n            return data\r\n        }, []);\r\n        if (itemsWithoutArgument && itemsWithoutArgument === data.length) {\r\n            this._incidentOccurred(\"W2002\", [this.name, this.getArgumentField()])\r\n        }\r\n        this._endUpdateData()\r\n    },\r\n    _getData() {\r\n        var data = this._data || [];\r\n        if (this.useAggregation()) {\r\n            data = this._resample(this.getArgumentAxis().getAggregationInfo(this._useAllAggregatedPoints, this.argumentAxisType !== DISCRETE ? this.getArgumentRange() : {}), data)\r\n        }\r\n        return data\r\n    },\r\n    useAggregation: function() {\r\n        var aggregation = this.getOptions().aggregation;\r\n        return aggregation && aggregation.enabled\r\n    },\r\n    autoHidePointMarkersEnabled: _noop,\r\n    usePointsToDefineAutoHiding: _noop,\r\n    createPoints(useAllAggregatedPoints) {\r\n        this._normalizeUsingAllAggregatedPoints(useAllAggregatedPoints);\r\n        this._createPoints()\r\n    },\r\n    _normalizeUsingAllAggregatedPoints: function(useAllAggregatedPoints) {\r\n        this._useAllAggregatedPoints = this.useAggregation() && (this.argumentAxisType === DISCRETE || (this._data || []).length > 1 && !!useAllAggregatedPoints)\r\n    },\r\n    _createPoints: function() {\r\n        var that = this;\r\n        var oldPointsByArgument = that.pointsByArgument || {};\r\n        var data = that._getData();\r\n        that.pointsByArgument = {};\r\n        that._calculateErrorBars(data);\r\n        var skippedFields = {};\r\n        var points = data.reduce((points, pointDataItem) => {\r\n            if (that._checkData(pointDataItem, skippedFields)) {\r\n                var pointIndex = points.length;\r\n                var oldPoint = that._getOldPoint(pointDataItem, oldPointsByArgument, pointIndex);\r\n                var point = that._createPoint(pointDataItem, pointIndex, oldPoint);\r\n                points.push(point)\r\n            }\r\n            return points\r\n        }, []);\r\n        for (var field in skippedFields) {\r\n            if (skippedFields[field] === data.length) {\r\n                that._incidentOccurred(\"W2002\", [that.name, field])\r\n            }\r\n        }\r\n        Object.keys(oldPointsByArgument).forEach(key => that._disposePoints(oldPointsByArgument[key]));\r\n        that._points = points\r\n    },\r\n    _removeOldSegments: function() {\r\n        var that = this;\r\n        var startIndex = that._segments.length;\r\n        _each(that._graphics.splice(startIndex, that._graphics.length) || [], (function(_, elem) {\r\n            that._removeElement(elem)\r\n        }));\r\n        if (that._trackers) {\r\n            _each(that._trackers.splice(startIndex, that._trackers.length) || [], (function(_, elem) {\r\n                elem.remove()\r\n            }))\r\n        }\r\n    },\r\n    _drawElements: function(animationEnabled, firstDrawing, translateAllPoints) {\r\n        var that = this;\r\n        var points = that._points || [];\r\n        var closeSegment = points[0] && points[0].hasValue() && that._options.closed;\r\n        var groupForPoint = {\r\n            markers: that._markersGroup,\r\n            errorBars: that._errorBarGroup\r\n        };\r\n        that._drawnPoints = [];\r\n        that._graphics = that._graphics || [];\r\n        that._segments = [];\r\n        var segments = points.reduce((function(segments, p) {\r\n            var segment = segments[segments.length - 1];\r\n            if (!p.translated || translateAllPoints) {\r\n                p.translate();\r\n                !translateAllPoints && p.setDefaultCoords()\r\n            }\r\n            if (p.hasValue() && p.hasCoords()) {\r\n                translateAllPoints && that._drawPoint({\r\n                    point: p,\r\n                    groups: groupForPoint,\r\n                    hasAnimation: animationEnabled,\r\n                    firstDrawing: firstDrawing\r\n                });\r\n                segment.push(p)\r\n            } else if (!p.hasValue()) {\r\n                segment.length && segments.push([])\r\n            } else {\r\n                p.setInvisibility()\r\n            }\r\n            return segments\r\n        }), [\r\n            []\r\n        ]);\r\n        segments.forEach((function(segment, index) {\r\n            if (segment.length) {\r\n                that._drawSegment(segment, animationEnabled, index, closeSegment && index === this.length - 1)\r\n            }\r\n        }), segments);\r\n        that._firstDrawing = !points.length;\r\n        that._removeOldSegments();\r\n        animationEnabled && that._animate(firstDrawing)\r\n    },\r\n    draw: function(animationEnabled, hideLayoutLabels, legendCallback) {\r\n        var firstDrawing = this._firstDrawing;\r\n        this._legendCallback = legendCallback || this._legendCallback;\r\n        if (!this._visible) {\r\n            this._group.remove();\r\n            return\r\n        }\r\n        this._appendInGroup();\r\n        this._applyVisibleArea();\r\n        this._setGroupsSettings(animationEnabled, firstDrawing);\r\n        !firstDrawing && !this._resetApplyingAnimation && this._drawElements(false, firstDrawing, false);\r\n        this._drawElements(animationEnabled, firstDrawing, true);\r\n        hideLayoutLabels && this.hideLabels();\r\n        if (this.isSelected()) {\r\n            this._changeStyle(this.lastSelectionMode, void 0, true)\r\n        } else if (this.isHovered()) {\r\n            this._changeStyle(this.lastHoverMode, void 0, true)\r\n        } else {\r\n            this._applyStyle(this._styles.normal)\r\n        }\r\n        this._resetApplyingAnimation = false\r\n    },\r\n    _setLabelGroupSettings: function(animationEnabled) {\r\n        var settings = {\r\n            class: \"dxc-labels\",\r\n            \"pointer-events\": \"none\"\r\n        };\r\n        this._clipLabels && this._applyElementsClipRect(settings);\r\n        this._applyClearingSettings(settings);\r\n        animationEnabled && (settings.opacity = .001);\r\n        this._labelsGroup.attr(settings).append(this._extGroups.labelsGroup)\r\n    },\r\n    _checkType: function(widgetType) {\r\n        return !!seriesNS.mixins[widgetType][this.type]\r\n    },\r\n    _checkPolarBarType: function(widgetType, options) {\r\n        return \"polar\" === widgetType && options.spiderWidget && -1 !== this.type.indexOf(\"bar\")\r\n    },\r\n    _resetType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods;\r\n        if (seriesType) {\r\n            methods = seriesNS.mixins[widgetType][seriesType];\r\n            for (methodName in methods) {\r\n                delete this[methodName]\r\n            }\r\n        }\r\n    },\r\n    _setType: function(seriesType, widgetType) {\r\n        var methodName;\r\n        var methods = seriesNS.mixins[widgetType][seriesType];\r\n        for (methodName in methods) {\r\n            this[methodName] = methods[methodName]\r\n        }\r\n    },\r\n    _setPointsView: function(view, target) {\r\n        this.getPoints().forEach((function(point) {\r\n            if (target !== point) {\r\n                point.setView(view)\r\n            }\r\n        }))\r\n    },\r\n    _resetPointsView: function(view, target) {\r\n        this.getPoints().forEach((function(point) {\r\n            if (target !== point) {\r\n                point.resetView(view)\r\n            }\r\n        }))\r\n    },\r\n    _resetNearestPoint: function() {\r\n        this._nearestPoint && null !== this._nearestPoint.series && this._nearestPoint.resetView(HOVER);\r\n        this._nearestPoint = null\r\n    },\r\n    _setSelectedState: function(mode) {\r\n        this.lastSelectionMode = _normalizeEnum(mode || this._options.selectionMode);\r\n        this.fullState = this.fullState | SELECTED_STATE;\r\n        this._resetNearestPoint();\r\n        this._changeStyle(this.lastSelectionMode);\r\n        if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\r\n            this._resetPointsView(HOVER)\r\n        }\r\n    },\r\n    _releaseSelectedState: function() {\r\n        this.fullState = this.fullState & ~SELECTED_STATE;\r\n        this._changeStyle(this.lastSelectionMode, SELECTION);\r\n        if (this.lastSelectionMode !== NONE_MODE && this.isHovered() && includePointsMode(this.lastHoverMode)) {\r\n            this._setPointsView(HOVER)\r\n        }\r\n    },\r\n    isFullStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"fullstacked\")\r\n    },\r\n    isStackedSeries: function() {\r\n        return 0 === this.type.indexOf(\"stacked\")\r\n    },\r\n    resetApplyingAnimation: function(isFirstDrawing) {\r\n        this._resetApplyingAnimation = true;\r\n        if (isFirstDrawing) {\r\n            this._firstDrawing = true\r\n        }\r\n    },\r\n    isFinancialSeries: function() {\r\n        return \"stock\" === this.type || \"candlestick\" === this.type\r\n    },\r\n    _canChangeView: function() {\r\n        return !this.isSelected() && _normalizeEnum(this._options.hoverMode) !== NONE_MODE\r\n    },\r\n    _changeStyle: function(mode, resetView, skipPoints) {\r\n        var state = this.fullState;\r\n        var styles = [NORMAL, HOVER, SELECTION, SELECTION];\r\n        if (\"none\" === this.lastHoverMode) {\r\n            state &= ~HOVER_STATE\r\n        }\r\n        if (\"none\" === this.lastSelectionMode) {\r\n            state &= ~SELECTED_STATE\r\n        }\r\n        if (includePointsMode(mode) && !skipPoints) {\r\n            if (!resetView) {\r\n                this._setPointsView(styles[state])\r\n            } else {\r\n                this._resetPointsView(resetView)\r\n            }\r\n        }\r\n        this._legendCallback([RESET_ITEM, APPLY_HOVER, APPLY_SELECTED, APPLY_SELECTED][state]);\r\n        this._applyStyle(this._styles[styles[state]])\r\n    },\r\n    updateHover: function(x, y) {\r\n        var currentNearestPoint = this._nearestPoint;\r\n        var point = this.isHovered() && this.lastHoverMode === NEAREST_POINT && this.getNeighborPoint(x, y);\r\n        if (point !== currentNearestPoint && !(this.isSelected() && this.lastSelectionMode !== NONE_MODE)) {\r\n            this._resetNearestPoint();\r\n            if (point) {\r\n                point.setView(HOVER);\r\n                this._nearestPoint = point\r\n            }\r\n        }\r\n    },\r\n    _getMainAxisName: function() {\r\n        return this._options.rotated ? \"X\" : \"Y\"\r\n    },\r\n    areLabelsVisible: function() {\r\n        return !_isDefined(this._options.maxLabelCount) || this._points.length <= this._options.maxLabelCount\r\n    },\r\n    getLabelVisibility: function() {\r\n        return this.areLabelsVisible() && this._options.label && this._options.label.visible\r\n    },\r\n    customizePoint: function(point, pointData) {\r\n        var options = this._options;\r\n        var customizePoint = options.customizePoint;\r\n        var customizeObject;\r\n        var pointOptions;\r\n        var customLabelOptions;\r\n        var customOptions;\r\n        var customizeLabel = options.customizeLabel;\r\n        var useLabelCustomOptions;\r\n        var usePointCustomOptions;\r\n        if (customizeLabel && customizeLabel.call) {\r\n            customizeObject = _extend({\r\n                seriesName: this.name\r\n            }, pointData);\r\n            customizeObject.series = this;\r\n            customLabelOptions = customizeLabel.call(customizeObject, customizeObject);\r\n            useLabelCustomOptions = customLabelOptions && !_isEmptyObject(customLabelOptions);\r\n            customLabelOptions = useLabelCustomOptions ? _extend(true, {}, options.label, customLabelOptions) : null\r\n        }\r\n        if (customizePoint && customizePoint.call) {\r\n            customizeObject = customizeObject || _extend({\r\n                seriesName: this.name\r\n            }, pointData);\r\n            customizeObject.series = this;\r\n            customOptions = customizePoint.call(customizeObject, customizeObject);\r\n            usePointCustomOptions = customOptions && !_isEmptyObject(customOptions)\r\n        }\r\n        if (useLabelCustomOptions || usePointCustomOptions) {\r\n            pointOptions = this._parsePointOptions(this._preparePointOptions(customOptions), customLabelOptions || options.label, pointData, point);\r\n            pointOptions.styles.useLabelCustomOptions = useLabelCustomOptions;\r\n            pointOptions.styles.usePointCustomOptions = usePointCustomOptions;\r\n            point.updateOptions(pointOptions)\r\n        }\r\n    },\r\n    show: function() {\r\n        if (!this._visible) {\r\n            this._changeVisibility(true)\r\n        }\r\n    },\r\n    hide: function() {\r\n        if (this._visible) {\r\n            this._changeVisibility(false)\r\n        }\r\n    },\r\n    _changeVisibility: function(visibility) {\r\n        this._visible = this._options.visible = visibility;\r\n        this._updatePointsVisibility();\r\n        this.hidePointTooltip();\r\n        this._options.visibilityChanged(this)\r\n    },\r\n    _updatePointsVisibility: _noop,\r\n    hideLabels: function() {\r\n        _each(this._points, (function(_, point) {\r\n            point._label.draw(false)\r\n        }))\r\n    },\r\n    _parsePointOptions: function(pointOptions, labelOptions, data, point) {\r\n        var options = this._options;\r\n        var styles = this._createPointStyles(pointOptions, data, point);\r\n        var parsedOptions = _extend({}, pointOptions, {\r\n            type: options.type,\r\n            rotated: options.rotated,\r\n            styles: styles,\r\n            widgetType: options.widgetType,\r\n            visibilityChanged: options.visibilityChanged\r\n        });\r\n        parsedOptions.label = getLabelOptions(labelOptions, styles.normal.fill);\r\n        if (this.areErrorBarsVisible()) {\r\n            parsedOptions.errorBars = options.valueErrorBar\r\n        }\r\n        return parsedOptions\r\n    },\r\n    _preparePointOptions: function(customOptions) {\r\n        var pointOptions = this._getOptionsForPoint();\r\n        return customOptions ? mergePointOptions(pointOptions, customOptions) : pointOptions\r\n    },\r\n    _getMarkerGroupOptions: function() {\r\n        return _extend(false, {}, this._getOptionsForPoint(), {\r\n            hoverStyle: {},\r\n            selectionStyle: {}\r\n        })\r\n    },\r\n    _getAggregationMethod: function(isDiscrete, aggregateByCategory) {\r\n        var options = this.getOptions().aggregation;\r\n        var method = _normalizeEnum(options.method);\r\n        var customAggregator = \"custom\" === method && options.calculate;\r\n        var aggregator;\r\n        if (isDiscrete && !aggregateByCategory) {\r\n            aggregator = _ref => {\r\n                var {\r\n                    data: data\r\n                } = _ref;\r\n                return data[0]\r\n            }\r\n        } else {\r\n            aggregator = this._aggregators[method] || this._aggregators[this._defaultAggregator]\r\n        }\r\n        return customAggregator || aggregator\r\n    },\r\n    _resample(_ref2, data) {\r\n        var {\r\n            interval: interval,\r\n            ticks: ticks,\r\n            aggregateByCategory: aggregateByCategory\r\n        } = _ref2;\r\n        var that = this;\r\n        var isDiscrete = that.argumentAxisType === DISCRETE || that.valueAxisType === DISCRETE;\r\n        var dataIndex = 0;\r\n        var dataSelector = this._getPointDataSelector();\r\n        var options = that.getOptions();\r\n        var addAggregatedData = (target, data, aggregationInfo) => {\r\n            if (!data) {\r\n                return\r\n            }\r\n            var processData = d => {\r\n                var pointData = d && dataSelector(d, options);\r\n                if (pointData && that._checkData(pointData)) {\r\n                    pointData.aggregationInfo = aggregationInfo;\r\n                    target.push(pointData)\r\n                }\r\n            };\r\n            if (Array.isArray(data)) {\r\n                data.forEach(processData)\r\n            } else {\r\n                processData(data)\r\n            }\r\n        };\r\n        var aggregationMethod = this._getAggregationMethod(isDiscrete, aggregateByCategory);\r\n        if (isDiscrete) {\r\n            if (aggregateByCategory) {\r\n                var categories = this.getArgumentAxis().getTranslator().getBusinessRange().categories;\r\n                var groups = categories.reduce((g, category) => {\r\n                    g[category.valueOf()] = [];\r\n                    return g\r\n                }, {});\r\n                data.forEach(dataItem => {\r\n                    groups[dataItem.argument.valueOf()].push(dataItem)\r\n                });\r\n                return categories.reduce((result, c) => {\r\n                    addAggregatedData(result, aggregationMethod({\r\n                        aggregationInterval: null,\r\n                        intervalStart: c,\r\n                        intervalEnd: c,\r\n                        data: groups[c.valueOf()].map(getData)\r\n                    }, that));\r\n                    return result\r\n                }, [])\r\n            } else {\r\n                return data.reduce((result, dataItem, index, data) => {\r\n                    result[1].push(dataItem);\r\n                    if (index === data.length - 1 || (index + 1) % interval === 0) {\r\n                        var dataInInterval = result[1];\r\n                        var aggregationInfo = {\r\n                            aggregationInterval: interval,\r\n                            data: dataInInterval.map(getData)\r\n                        };\r\n                        addAggregatedData(result[0], aggregationMethod(aggregationInfo, that));\r\n                        result[1] = []\r\n                    }\r\n                    return result\r\n                }, [\r\n                    [],\r\n                    []\r\n                ])[0]\r\n            }\r\n        }\r\n        var aggregatedData = [];\r\n        if (1 === ticks.length) {\r\n            var aggregationInfo = {\r\n                intervalStart: ticks[0],\r\n                intervalEnd: ticks[0],\r\n                aggregationInterval: null,\r\n                data: data.map(getData)\r\n            };\r\n            addAggregatedData(aggregatedData, aggregationMethod(aggregationInfo, that), aggregationInfo)\r\n        } else {\r\n            for (var i = 1; i < ticks.length; i++) {\r\n                var intervalEnd = ticks[i];\r\n                var intervalStart = ticks[i - 1];\r\n                var dataInInterval = [];\r\n                while (data[dataIndex] && data[dataIndex].argument < intervalEnd) {\r\n                    if (data[dataIndex].argument >= intervalStart) {\r\n                        dataInInterval.push(data[dataIndex])\r\n                    }\r\n                    dataIndex++\r\n                }\r\n                var _aggregationInfo = {\r\n                    intervalStart: intervalStart,\r\n                    intervalEnd: intervalEnd,\r\n                    aggregationInterval: interval,\r\n                    data: dataInInterval.map(getData)\r\n                };\r\n                addAggregatedData(aggregatedData, aggregationMethod(_aggregationInfo, that), _aggregationInfo)\r\n            }\r\n        }\r\n        that._endUpdateData();\r\n        return aggregatedData\r\n    },\r\n    canRenderCompleteHandle: function() {\r\n        var result = this._canRenderCompleteHandle;\r\n        delete this._canRenderCompleteHandle;\r\n        return !!result\r\n    },\r\n    isHovered: function() {\r\n        return !!(1 & this.fullState)\r\n    },\r\n    isSelected: function() {\r\n        return !!(2 & this.fullState)\r\n    },\r\n    isVisible: function() {\r\n        return this._visible\r\n    },\r\n    getAllPoints: function() {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || []).slice()\r\n    },\r\n    getPointByPos: function(pos) {\r\n        this._createAllAggregatedPoints();\r\n        return (this._points || [])[pos]\r\n    },\r\n    getVisiblePoints: function() {\r\n        return (this._drawnPoints || []).slice()\r\n    },\r\n    selectPoint: function(point) {\r\n        if (!point.isSelected()) {\r\n            setPointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_SELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    deselectPoint: function(point) {\r\n        if (point.isSelected()) {\r\n            releasePointSelectedState(point, this._legendCallback);\r\n            this._eventPipe({\r\n                action: POINT_DESELECT,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_SELECTION_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    hover: function(mode) {\r\n        var eventTrigger = this._eventTrigger;\r\n        if (this.isHovered()) {\r\n            return\r\n        }\r\n        this.lastHoverMode = _normalizeEnum(mode || this._options.hoverMode);\r\n        this.fullState = this.fullState | HOVER_STATE;\r\n        this._changeStyle(this.lastHoverMode, void 0, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: this\r\n        })\r\n    },\r\n    clearHover: function() {\r\n        var eventTrigger = this._eventTrigger;\r\n        if (!this.isHovered()) {\r\n            return\r\n        }\r\n        this._resetNearestPoint();\r\n        this.fullState = this.fullState & ~HOVER_STATE;\r\n        this._changeStyle(this.lastHoverMode, HOVER, this.isSelected() && this.lastSelectionMode !== NONE_MODE);\r\n        eventTrigger(SERIES_HOVER_CHANGED, {\r\n            target: this\r\n        })\r\n    },\r\n    hoverPoint: function(point) {\r\n        if (!point.isHovered()) {\r\n            point.clearHover();\r\n            setPointHoverState(point, this._legendCallback);\r\n            this._canChangeView() && this._applyStyle(this._styles.hover);\r\n            this._eventPipe({\r\n                action: POINT_HOVER,\r\n                target: point\r\n            });\r\n            this._eventTrigger(POINT_HOVER_CHANGED, {\r\n                target: point\r\n            })\r\n        }\r\n    },\r\n    clearPointHover: function() {\r\n        var that = this;\r\n        that.getPoints().some((function(currentPoint) {\r\n            if (currentPoint.isHovered()) {\r\n                releasePointHoverState(currentPoint, that._legendCallback);\r\n                that._canChangeView() && that._applyStyle(that._styles.normal);\r\n                that._eventPipe({\r\n                    action: CLEAR_POINT_HOVER,\r\n                    target: currentPoint\r\n                });\r\n                that._eventTrigger(POINT_HOVER_CHANGED, {\r\n                    target: currentPoint\r\n                });\r\n                return true\r\n            }\r\n            return false\r\n        }))\r\n    },\r\n    showPointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"showpointtooltip\", point)\r\n    },\r\n    hidePointTooltip: function(point) {\r\n        triggerEvent(this._extGroups.seriesGroup, \"hidepointtooltip\", point)\r\n    },\r\n    select: function() {\r\n        if (!this.isSelected()) {\r\n            this._setSelectedState(this._options.selectionMode);\r\n            this._eventPipe({\r\n                action: SERIES_SELECT,\r\n                target: this\r\n            });\r\n            this._group.toForeground();\r\n            this._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: this\r\n            })\r\n        }\r\n    },\r\n    clearSelection: function() {\r\n        if (this.isSelected()) {\r\n            this._releaseSelectedState();\r\n            this._eventTrigger(SERIES_SELECTION_CHANGED, {\r\n                target: this\r\n            })\r\n        }\r\n    },\r\n    getPointsByArg: function(arg, skipPointsCreation) {\r\n        var argValue = arg.valueOf();\r\n        var points = this.pointsByArgument[argValue];\r\n        if (!points && !skipPointsCreation && this._createAllAggregatedPoints()) {\r\n            points = this.pointsByArgument[argValue]\r\n        }\r\n        return points || []\r\n    },\r\n    _createAllAggregatedPoints: function() {\r\n        if (this.useAggregation() && !this._useAllAggregatedPoints) {\r\n            this.createPoints(true);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    getPointsByKeys: function(arg) {\r\n        return this.getPointsByArg(arg)\r\n    },\r\n    notify: function(data) {\r\n        var that = this;\r\n        var action = data.action;\r\n        var seriesModes = that._seriesModes;\r\n        var target = data.target;\r\n        var targetOptions = target.getOptions();\r\n        var pointHoverMode = _normalizeEnum(targetOptions.hoverMode);\r\n        var selectionModeOfPoint = _normalizeEnum(targetOptions.selectionMode);\r\n        if (action === POINT_HOVER) {\r\n            that._hoverPointHandler(target, pointHoverMode, data.notifyLegend)\r\n        } else if (action === CLEAR_POINT_HOVER) {\r\n            that._clearPointHoverHandler(target, pointHoverMode, data.notifyLegend)\r\n        } else if (action === SERIES_SELECT) {\r\n            target !== that && \"single\" === seriesModes.seriesSelectionMode && that.clearSelection()\r\n        } else if (action === POINT_SELECT) {\r\n            if (\"single\" === seriesModes.pointSelectionMode) {\r\n                that.getPoints().some((function(currentPoint) {\r\n                    if (currentPoint !== target && currentPoint.isSelected()) {\r\n                        that.deselectPoint(currentPoint);\r\n                        return true\r\n                    }\r\n                    return false\r\n                }))\r\n            }\r\n            that._selectPointHandler(target, selectionModeOfPoint)\r\n        } else if (action === POINT_DESELECT) {\r\n            that._deselectPointHandler(target, selectionModeOfPoint)\r\n        }\r\n    },\r\n    _selectPointHandler: function(target, mode) {\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === this && this._setPointsView(SELECTION, target)\r\n        } else if (mode === ALL_ARGUMENT_POINTS) {\r\n            this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint !== target && currentPoint.setView(SELECTION)\r\n            }))\r\n        }\r\n    },\r\n    _deselectPointHandler: function(target, mode) {\r\n        if (mode === ALL_SERIES_POINTS) {\r\n            target.series === this && this._resetPointsView(SELECTION, target)\r\n        } else if (mode === ALL_ARGUMENT_POINTS) {\r\n            this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint !== target && currentPoint.resetView(SELECTION)\r\n            }))\r\n        }\r\n    },\r\n    _hoverPointHandler: function(target, mode, notifyLegend) {\r\n        if (target.series !== this && mode === ALL_ARGUMENT_POINTS) {\r\n            this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint.setView(HOVER)\r\n            }));\r\n            notifyLegend && this._legendCallback(target)\r\n        } else if (mode === ALL_SERIES_POINTS && target.series === this) {\r\n            this._setPointsView(HOVER, target)\r\n        }\r\n    },\r\n    _clearPointHoverHandler: function(target, mode, notifyLegend) {\r\n        if (mode === ALL_ARGUMENT_POINTS) {\r\n            target.series !== this && this.getPointsByKeys(target.argument, target.argumentIndex).forEach((function(currentPoint) {\r\n                currentPoint.resetView(HOVER)\r\n            }));\r\n            notifyLegend && this._legendCallback(target)\r\n        } else if (mode === ALL_SERIES_POINTS && target.series === this) {\r\n            this._resetPointsView(HOVER, target)\r\n        }\r\n    },\r\n    _deletePoints: function() {\r\n        this._disposePoints(this._points);\r\n        this._points = this._drawnPoints = null\r\n    },\r\n    _deleteTrackers: function() {\r\n        _each(this._trackers || [], (function(_, tracker) {\r\n            tracker.remove()\r\n        }));\r\n        this._trackersGroup && this._trackersGroup.dispose();\r\n        this._trackers = this._trackersGroup = null\r\n    },\r\n    dispose: function() {\r\n        this._deletePoints();\r\n        this._group.dispose();\r\n        this._labelsGroup && this._labelsGroup.dispose();\r\n        this._errorBarGroup && this._errorBarGroup.dispose();\r\n        this._deleteTrackers();\r\n        this._group = this._extGroups = this._markersGroup = this._elementsGroup = this._bordersGroup = this._labelsGroup = this._errorBarGroup = this._graphics = this._rangeData = this._renderer = this._styles = this._options = this._pointOptions = this._drawnPoints = this.pointsByArgument = this._segments = this._prevSeries = null\r\n    },\r\n    correctPosition: _noop,\r\n    drawTrackers: _noop,\r\n    getNeighborPoint: _noop,\r\n    areErrorBarsVisible: _noop,\r\n    getMarginOptions: function() {\r\n        return this._patchMarginOptions({\r\n            percentStick: this.isFullStackedSeries()\r\n        })\r\n    },\r\n    getColor: function() {\r\n        return this.getLegendStyles().normal.fill\r\n    },\r\n    getOpacity: function() {\r\n        return this._options.opacity\r\n    },\r\n    getStackName: function() {\r\n        return this._stackName\r\n    },\r\n    getBarOverlapGroup: function() {\r\n        return this._options.barOverlapGroup\r\n    },\r\n    getPointByCoord: function(x, y) {\r\n        var point = this.getNeighborPoint(x, y);\r\n        return null !== point && void 0 !== point && point.coordsIn(x, y) ? point : null\r\n    },\r\n    getValueAxis: function() {\r\n        return this._valueAxis\r\n    },\r\n    getArgumentAxis: function() {\r\n        return this._argumentAxis\r\n    },\r\n    getMarkersGroup() {\r\n        return this._markersGroup\r\n    },\r\n    getRenderer() {\r\n        return this._renderer\r\n    },\r\n    removePointElements() {\r\n        if (this._markersGroup) {\r\n            _each(this._points, (_, p) => p.deleteMarker());\r\n            this._markersGroup.dispose();\r\n            this._markersGroup = null\r\n        }\r\n    },\r\n    removeGraphicElements() {\r\n        var that = this;\r\n        if (that._elementsGroup) {\r\n            that._elementsGroup.dispose();\r\n            that._elementsGroup = null\r\n        }\r\n        _each(that._graphics || [], (_, elem) => {\r\n            that._removeElement(elem)\r\n        });\r\n        that._graphics = null\r\n    },\r\n    removeBordersGroup() {\r\n        if (this._bordersGroup) {\r\n            this._bordersGroup.dispose();\r\n            this._bordersGroup = null\r\n        }\r\n    }\r\n};\r\nexport var mixins = seriesNS.mixins;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
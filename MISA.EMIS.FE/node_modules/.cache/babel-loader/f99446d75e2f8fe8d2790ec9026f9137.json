{"ast":null,"code":"import { Component, findDOMfromVNode } from 'inferno';\nimport { InfernoEffectHost } from './effect_host';\n\nconst areObjectsEqual = (firstObject, secondObject) => {\n  const bothAreObjects = firstObject instanceof Object && secondObject instanceof Object;\n\n  if (!bothAreObjects) {\n    return firstObject === secondObject;\n  }\n\n  const firstObjectKeys = Object.keys(firstObject);\n  const secondObjectKeys = Object.keys(secondObject);\n\n  if (firstObjectKeys.length !== secondObjectKeys.length) {\n    return false;\n  }\n\n  const hasDifferentElement = firstObjectKeys.some(key => firstObject[key] !== secondObject[key]);\n  return !hasDifferentElement;\n};\n\nexport class BaseInfernoComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this._pendingContext = this.context;\n  }\n\n  componentWillReceiveProps(_, context) {\n    this._pendingContext = context !== null && context !== void 0 ? context : {};\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !areObjectsEqual(this.props, nextProps) || !areObjectsEqual(this.state, nextState) || !areObjectsEqual(this.context, this._pendingContext);\n  }\n\n}\nexport class InfernoComponent extends BaseInfernoComponent {\n  constructor() {\n    super(...arguments);\n    this._effects = [];\n  }\n\n  createEffects() {\n    return [];\n  }\n\n  updateEffects() {}\n\n  componentWillMount() {\n    InfernoEffectHost.lock();\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  componentWillUpdate(_nextProps, _nextState, _context) {\n    InfernoEffectHost.lock();\n  }\n\n  componentDidMount() {\n    InfernoEffectHost.callbacks.push(() => {\n      this._effects = this.createEffects();\n    });\n    InfernoEffectHost.callEffects();\n  }\n\n  componentDidUpdate() {\n    InfernoEffectHost.callbacks.push(() => this.updateEffects());\n    InfernoEffectHost.callEffects();\n  }\n\n  destroyEffects() {\n    this._effects.forEach(e => e.dispose());\n  }\n\n  componentWillUnmount() {\n    this.destroyEffects();\n  }\n\n}\nexport class InfernoWrapperComponent extends InfernoComponent {\n  constructor() {\n    super(...arguments);\n    this.vDomElement = null;\n  }\n\n  vDomUpdateClasses() {\n    const el = this.vDomElement;\n    const currentClasses = el.className.length ? el.className.split(' ') : [];\n    const addedClasses = currentClasses.filter(className => el.dxClasses.previous.indexOf(className) < 0);\n    const removedClasses = el.dxClasses.previous.filter(className => currentClasses.indexOf(className) < 0);\n    addedClasses.forEach(value => {\n      const indexInRemoved = el.dxClasses.removed.indexOf(value);\n\n      if (indexInRemoved > -1) {\n        el.dxClasses.removed.splice(indexInRemoved, 1);\n      } else {\n        el.dxClasses.added.push(value);\n      }\n    });\n    removedClasses.forEach(value => {\n      const indexInAdded = el.dxClasses.added.indexOf(value);\n\n      if (indexInAdded > -1) {\n        el.dxClasses.added.splice(indexInAdded, 1);\n      } else {\n        el.dxClasses.removed.push(value);\n      }\n    });\n  }\n\n  componentDidMount() {\n    const el = findDOMfromVNode(this.$LI, true);\n    this.vDomElement = el;\n    super.componentDidMount();\n    el.dxClasses = el.dxClasses || {\n      removed: [],\n      added: [],\n      previous: []\n    };\n    el.dxClasses.previous = (el === null || el === void 0 ? void 0 : el.className.length) ? el.className.split(' ') : [];\n  }\n\n  componentDidUpdate() {\n    super.componentDidUpdate();\n    const el = this.vDomElement;\n\n    if (el !== null) {\n      el.dxClasses.added.forEach(className => el.classList.add(className));\n      el.dxClasses.removed.forEach(className => el.classList.remove(className));\n      el.dxClasses.previous = el.className.length ? el.className.split(' ') : [];\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = super.shouldComponentUpdate(nextProps, nextState);\n\n    if (shouldUpdate) {\n      this.vDomUpdateClasses();\n    }\n\n    return shouldUpdate;\n  }\n\n}","map":{"version":3,"names":["Component","findDOMfromVNode","InfernoEffectHost","areObjectsEqual","firstObject","secondObject","bothAreObjects","Object","firstObjectKeys","keys","secondObjectKeys","length","hasDifferentElement","some","key","BaseInfernoComponent","constructor","arguments","_pendingContext","context","componentWillReceiveProps","_","shouldComponentUpdate","nextProps","nextState","props","state","InfernoComponent","_effects","createEffects","updateEffects","componentWillMount","lock","componentWillUpdate","_nextProps","_nextState","_context","componentDidMount","callbacks","push","callEffects","componentDidUpdate","destroyEffects","forEach","e","dispose","componentWillUnmount","InfernoWrapperComponent","vDomElement","vDomUpdateClasses","el","currentClasses","className","split","addedClasses","filter","dxClasses","previous","indexOf","removedClasses","value","indexInRemoved","removed","splice","added","indexInAdded","$LI","classList","add","remove","shouldUpdate"],"sources":["E:/MisaProject/MISA_EMIS/MISA.EMIS.FE/node_modules/@devextreme/runtime/esm/inferno/base_component.js"],"sourcesContent":["import { Component, findDOMfromVNode } from 'inferno';\nimport { InfernoEffectHost } from './effect_host';\nconst areObjectsEqual = (firstObject, secondObject) => {\n    const bothAreObjects = firstObject instanceof Object && secondObject instanceof Object;\n    if (!bothAreObjects) {\n        return firstObject === secondObject;\n    }\n    const firstObjectKeys = Object.keys(firstObject);\n    const secondObjectKeys = Object.keys(secondObject);\n    if (firstObjectKeys.length !== secondObjectKeys.length) {\n        return false;\n    }\n    const hasDifferentElement = firstObjectKeys.some((key) => firstObject[key] !== secondObject[key]);\n    return !hasDifferentElement;\n};\nexport class BaseInfernoComponent extends Component {\n    constructor() {\n        super(...arguments);\n        this._pendingContext = this.context;\n    }\n    componentWillReceiveProps(_, context) {\n        this._pendingContext = context !== null && context !== void 0 ? context : {};\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return (!areObjectsEqual(this.props, nextProps)\n            || !areObjectsEqual(this.state, nextState)\n            || !areObjectsEqual(this.context, this._pendingContext));\n    }\n}\nexport class InfernoComponent extends BaseInfernoComponent {\n    constructor() {\n        super(...arguments);\n        this._effects = [];\n    }\n    createEffects() {\n        return [];\n    }\n    updateEffects() { }\n    componentWillMount() {\n        InfernoEffectHost.lock();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentWillUpdate(_nextProps, _nextState, _context) {\n        InfernoEffectHost.lock();\n    }\n    componentDidMount() {\n        InfernoEffectHost.callbacks.push(() => { this._effects = this.createEffects(); });\n        InfernoEffectHost.callEffects();\n    }\n    componentDidUpdate() {\n        InfernoEffectHost.callbacks.push(() => this.updateEffects());\n        InfernoEffectHost.callEffects();\n    }\n    destroyEffects() {\n        this._effects.forEach((e) => e.dispose());\n    }\n    componentWillUnmount() {\n        this.destroyEffects();\n    }\n}\nexport class InfernoWrapperComponent extends InfernoComponent {\n    constructor() {\n        super(...arguments);\n        this.vDomElement = null;\n    }\n    vDomUpdateClasses() {\n        const el = this.vDomElement;\n        const currentClasses = el.className.length\n            ? el.className.split(' ')\n            : [];\n        const addedClasses = currentClasses.filter((className) => el.dxClasses.previous.indexOf(className) < 0);\n        const removedClasses = el.dxClasses.previous.filter((className) => currentClasses.indexOf(className) < 0);\n        addedClasses.forEach((value) => {\n            const indexInRemoved = el.dxClasses.removed.indexOf(value);\n            if (indexInRemoved > -1) {\n                el.dxClasses.removed.splice(indexInRemoved, 1);\n            }\n            else {\n                el.dxClasses.added.push(value);\n            }\n        });\n        removedClasses.forEach((value) => {\n            const indexInAdded = el.dxClasses.added.indexOf(value);\n            if (indexInAdded > -1) {\n                el.dxClasses.added.splice(indexInAdded, 1);\n            }\n            else {\n                el.dxClasses.removed.push(value);\n            }\n        });\n    }\n    componentDidMount() {\n        const el = findDOMfromVNode(this.$LI, true);\n        this.vDomElement = el;\n        super.componentDidMount();\n        el.dxClasses = el.dxClasses || {\n            removed: [], added: [], previous: [],\n        };\n        el.dxClasses.previous = (el === null || el === void 0 ? void 0 : el.className.length) ? el.className.split(' ')\n            : [];\n    }\n    componentDidUpdate() {\n        super.componentDidUpdate();\n        const el = this.vDomElement;\n        if (el !== null) {\n            el.dxClasses.added.forEach((className) => el.classList.add(className));\n            el.dxClasses.removed.forEach((className) => el.classList.remove(className));\n            el.dxClasses.previous = el.className.length\n                ? el.className.split(' ')\n                : [];\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = super.shouldComponentUpdate(nextProps, nextState);\n        if (shouldUpdate) {\n            this.vDomUpdateClasses();\n        }\n        return shouldUpdate;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
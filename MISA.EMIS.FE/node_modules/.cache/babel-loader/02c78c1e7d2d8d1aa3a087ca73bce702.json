{"ast":null,"code":"import { freqIsDailyOrGreater } from '../types';\nimport dateutil from '../dateutil';\nimport Iterinfo from '../iterinfo/index';\nimport RRule from '../rrule';\nimport { buildTimeset } from '../parseoptions';\nimport { notEmpty, includes, isPresent } from '../helpers';\nimport { DateWithZone } from '../datewithzone';\nimport { buildPoslist } from './poslist';\nimport { DateTime } from '../datetime';\nexport function iter(iterResult, options) {\n  var dtstart = options.dtstart,\n      freq = options.freq,\n      interval = options.interval,\n      until = options.until,\n      bysetpos = options.bysetpos;\n  var count = options.count;\n\n  if (count === 0 || interval === 0) {\n    return emitResult(iterResult);\n  }\n\n  var counterDate = DateTime.fromDate(dtstart);\n  var ii = new Iterinfo(options);\n  ii.rebuild(counterDate.year, counterDate.month);\n  var timeset = makeTimeset(ii, counterDate, options);\n\n  while (true) {\n    var _a = ii.getdayset(freq)(counterDate.year, counterDate.month, counterDate.day),\n        dayset = _a[0],\n        start = _a[1],\n        end = _a[2];\n\n    var filtered = removeFilteredDays(dayset, start, end, ii, options);\n\n    if (notEmpty(bysetpos)) {\n      var poslist = buildPoslist(bysetpos, timeset, start, end, ii, dayset);\n\n      for (var j = 0; j < poslist.length; j++) {\n        var res = poslist[j];\n\n        if (until && res > until) {\n          return emitResult(iterResult);\n        }\n\n        if (res >= dtstart) {\n          var rezonedDate = rezoneIfNeeded(res, options);\n\n          if (!iterResult.accept(rezonedDate)) {\n            return emitResult(iterResult);\n          }\n\n          if (count) {\n            --count;\n\n            if (!count) {\n              return emitResult(iterResult);\n            }\n          }\n        }\n      }\n    } else {\n      for (var j = start; j < end; j++) {\n        var currentDay = dayset[j];\n\n        if (!isPresent(currentDay)) {\n          continue;\n        }\n\n        var date = dateutil.fromOrdinal(ii.yearordinal + currentDay);\n\n        for (var k = 0; k < timeset.length; k++) {\n          var time = timeset[k];\n          var res = dateutil.combine(date, time);\n\n          if (until && res > until) {\n            return emitResult(iterResult);\n          }\n\n          if (res >= dtstart) {\n            var rezonedDate = rezoneIfNeeded(res, options);\n\n            if (!iterResult.accept(rezonedDate)) {\n              return emitResult(iterResult);\n            }\n\n            if (count) {\n              --count;\n\n              if (!count) {\n                return emitResult(iterResult);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (options.interval === 0) {\n      return emitResult(iterResult);\n    } // Handle frequency and interval\n\n\n    counterDate.add(options, filtered);\n\n    if (counterDate.year > dateutil.MAXYEAR) {\n      return emitResult(iterResult);\n    }\n\n    if (!freqIsDailyOrGreater(freq)) {\n      timeset = ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, 0);\n    }\n\n    ii.rebuild(counterDate.year, counterDate.month);\n  }\n}\n\nfunction isFiltered(ii, currentDay, options) {\n  var bymonth = options.bymonth,\n      byweekno = options.byweekno,\n      byweekday = options.byweekday,\n      byeaster = options.byeaster,\n      bymonthday = options.bymonthday,\n      bynmonthday = options.bynmonthday,\n      byyearday = options.byyearday;\n  return notEmpty(bymonth) && !includes(bymonth, ii.mmask[currentDay]) || notEmpty(byweekno) && !ii.wnomask[currentDay] || notEmpty(byweekday) && !includes(byweekday, ii.wdaymask[currentDay]) || notEmpty(ii.nwdaymask) && !ii.nwdaymask[currentDay] || byeaster !== null && !includes(ii.eastermask, currentDay) || (notEmpty(bymonthday) || notEmpty(bynmonthday)) && !includes(bymonthday, ii.mdaymask[currentDay]) && !includes(bynmonthday, ii.nmdaymask[currentDay]) || notEmpty(byyearday) && (currentDay < ii.yearlen && !includes(byyearday, currentDay + 1) && !includes(byyearday, -ii.yearlen + currentDay) || currentDay >= ii.yearlen && !includes(byyearday, currentDay + 1 - ii.yearlen) && !includes(byyearday, -ii.nextyearlen + currentDay - ii.yearlen));\n}\n\nfunction rezoneIfNeeded(date, options) {\n  return new DateWithZone(date, options.tzid).rezonedDate();\n}\n\nfunction emitResult(iterResult) {\n  return iterResult.getValue();\n}\n\nfunction removeFilteredDays(dayset, start, end, ii, options) {\n  var filtered = false;\n\n  for (var dayCounter = start; dayCounter < end; dayCounter++) {\n    var currentDay = dayset[dayCounter];\n    filtered = isFiltered(ii, currentDay, options);\n    if (filtered) dayset[currentDay] = null;\n  }\n\n  return filtered;\n}\n\nfunction makeTimeset(ii, counterDate, options) {\n  var freq = options.freq,\n      byhour = options.byhour,\n      byminute = options.byminute,\n      bysecond = options.bysecond;\n\n  if (freqIsDailyOrGreater(freq)) {\n    return buildTimeset(options);\n  }\n\n  if (freq >= RRule.HOURLY && notEmpty(byhour) && !includes(byhour, counterDate.hour) || freq >= RRule.MINUTELY && notEmpty(byminute) && !includes(byminute, counterDate.minute) || freq >= RRule.SECONDLY && notEmpty(bysecond) && !includes(bysecond, counterDate.second)) {\n    return [];\n  }\n\n  return ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, counterDate.millisecond);\n}","map":{"version":3,"mappings":"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","names":["freqIsDailyOrGreater","dateutil","Iterinfo","RRule","buildTimeset","notEmpty","includes","isPresent","DateWithZone","buildPoslist","DateTime","iter","iterResult","options","freq","interval","until","bysetpos","count","emitResult","counterDate","fromDate","dtstart","ii","rebuild","year","month","timeset","makeTimeset","dayset","start","end","filtered","removeFilteredDays","poslist","j","length","res","rezonedDate","rezoneIfNeeded","accept","currentDay","date","fromOrdinal","yearordinal","k","time","combine","add","MAXYEAR","gettimeset","hour","minute","second","isFiltered","byweekno","byweekday","byeaster","bymonthday","bynmonthday","byyearday","bymonth","mmask","wnomask","wdaymask","nwdaymask","eastermask","mdaymask","nmdaymask","yearlen","nextyearlen","tzid","getValue","dayCounter","byhour","byminute","bysecond","HOURLY","MINUTELY","SECONDLY","millisecond"],"sourceRoot":"","sources":["../../../../src/iter/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
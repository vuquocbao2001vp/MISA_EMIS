{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport dateutil from './dateutil';\nimport IterResult from './iterresult';\nimport CallbackIterResult from './callbackiterresult';\nimport { Frequency } from './types';\nimport { parseOptions, initializeOptions } from './parseoptions';\nimport { parseString } from './parsestring';\nimport { optionsToString } from './optionstostring';\nimport { Cache } from './cache';\nimport { Weekday } from './weekday';\nimport { iter } from './iter/index';\n\nvar getnlp = function () {\n  // Lazy, runtime import to avoid circular refs.\n  if (!getnlp._nlp) {\n    getnlp._nlp = require('./nlp');\n  }\n\n  return getnlp._nlp;\n}; // =============================================================================\n// RRule\n// =============================================================================\n\n\nexport var Days = {\n  MO: new Weekday(0),\n  TU: new Weekday(1),\n  WE: new Weekday(2),\n  TH: new Weekday(3),\n  FR: new Weekday(4),\n  SA: new Weekday(5),\n  SU: new Weekday(6)\n};\nexport var DEFAULT_OPTIONS = {\n  freq: Frequency.YEARLY,\n  dtstart: null,\n  interval: 1,\n  wkst: Days.MO,\n  count: null,\n  until: null,\n  tzid: null,\n  bysetpos: null,\n  bymonth: null,\n  bymonthday: null,\n  bynmonthday: null,\n  byyearday: null,\n  byweekno: null,\n  byweekday: null,\n  bynweekday: null,\n  byhour: null,\n  byminute: null,\n  bysecond: null,\n  byeaster: null\n};\nexport var defaultKeys = Object.keys(DEFAULT_OPTIONS);\n/**\n *\n * @param {Options?} options - see <http://labix.org/python-dateutil/#head-cf004ee9a75592797e076752b2a889c10f445418>\n *        The only required option is `freq`, one of RRule.YEARLY, RRule.MONTHLY, ...\n * @constructor\n */\n\nvar RRule =\n/** @class */\nfunction () {\n  function RRule(options, noCache) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (noCache === void 0) {\n      noCache = false;\n    } // RFC string\n\n\n    this._cache = noCache ? null : new Cache(); // used by toString()\n\n    this.origOptions = initializeOptions(options);\n    var parsedOptions = parseOptions(options).parsedOptions;\n    this.options = parsedOptions;\n  }\n\n  RRule.parseText = function (text, language) {\n    return getnlp().parseText(text, language);\n  };\n\n  RRule.fromText = function (text, language) {\n    return getnlp().fromText(text, language);\n  };\n\n  RRule.fromString = function (str) {\n    return new RRule(RRule.parseString(str) || undefined);\n  };\n\n  RRule.prototype._iter = function (iterResult) {\n    return iter(iterResult, this.options);\n  };\n\n  RRule.prototype._cacheGet = function (what, args) {\n    if (!this._cache) return false;\n    return this._cache._cacheGet(what, args);\n  };\n\n  RRule.prototype._cacheAdd = function (what, value, args) {\n    if (!this._cache) return;\n    return this._cache._cacheAdd(what, value, args);\n  };\n  /**\n   * @param {Function} iterator - optional function that will be called\n   *                   on each date that is added. It can return false\n   *                   to stop the iteration.\n   * @return Array containing all recurrences.\n   */\n\n\n  RRule.prototype.all = function (iterator) {\n    if (iterator) {\n      return this._iter(new CallbackIterResult('all', {}, iterator));\n    }\n\n    var result = this._cacheGet('all');\n\n    if (result === false) {\n      result = this._iter(new IterResult('all', {}));\n\n      this._cacheAdd('all', result);\n    }\n\n    return result;\n  };\n  /**\n   * Returns all the occurrences of the rrule between after and before.\n   * The inc keyword defines what happens if after and/or before are\n   * themselves occurrences. With inc == True, they will be included in the\n   * list, if they are found in the recurrence set.\n   * @return Array\n   */\n\n\n  RRule.prototype.between = function (after, before, inc, iterator) {\n    if (inc === void 0) {\n      inc = false;\n    }\n\n    if (!dateutil.isValidDate(after) || !dateutil.isValidDate(before)) throw new Error('Invalid date passed in to RRule.between');\n    var args = {\n      before: before,\n      after: after,\n      inc: inc\n    };\n\n    if (iterator) {\n      return this._iter(new CallbackIterResult('between', args, iterator));\n    }\n\n    var result = this._cacheGet('between', args);\n\n    if (result === false) {\n      result = this._iter(new IterResult('between', args));\n\n      this._cacheAdd('between', result, args);\n    }\n\n    return result;\n  };\n  /**\n   * Returns the last recurrence before the given datetime instance.\n   * The inc keyword defines what happens if dt is an occurrence.\n   * With inc == True, if dt itself is an occurrence, it will be returned.\n   * @return Date or null\n   */\n\n\n  RRule.prototype.before = function (dt, inc) {\n    if (inc === void 0) {\n      inc = false;\n    }\n\n    if (!dateutil.isValidDate(dt)) throw new Error('Invalid date passed in to RRule.before');\n    var args = {\n      dt: dt,\n      inc: inc\n    };\n\n    var result = this._cacheGet('before', args);\n\n    if (result === false) {\n      result = this._iter(new IterResult('before', args));\n\n      this._cacheAdd('before', result, args);\n    }\n\n    return result;\n  };\n  /**\n   * Returns the first recurrence after the given datetime instance.\n   * The inc keyword defines what happens if dt is an occurrence.\n   * With inc == True, if dt itself is an occurrence, it will be returned.\n   * @return Date or null\n   */\n\n\n  RRule.prototype.after = function (dt, inc) {\n    if (inc === void 0) {\n      inc = false;\n    }\n\n    if (!dateutil.isValidDate(dt)) throw new Error('Invalid date passed in to RRule.after');\n    var args = {\n      dt: dt,\n      inc: inc\n    };\n\n    var result = this._cacheGet('after', args);\n\n    if (result === false) {\n      result = this._iter(new IterResult('after', args));\n\n      this._cacheAdd('after', result, args);\n    }\n\n    return result;\n  };\n  /**\n   * Returns the number of recurrences in this set. It will have go trough\n   * the whole recurrence, if this hasn't been done before.\n   */\n\n\n  RRule.prototype.count = function () {\n    return this.all().length;\n  };\n  /**\n   * Converts the rrule into its string representation\n   * @see <http://www.ietf.org/rfc/rfc2445.txt>\n   * @return String\n   */\n\n\n  RRule.prototype.toString = function () {\n    return optionsToString(this.origOptions);\n  };\n  /**\n   * Will convert all rules described in nlp:ToText\n   * to text.\n   */\n\n\n  RRule.prototype.toText = function (gettext, language, dateFormatter) {\n    return getnlp().toText(this, gettext, language, dateFormatter);\n  };\n\n  RRule.prototype.isFullyConvertibleToText = function () {\n    return getnlp().isFullyConvertible(this);\n  };\n  /**\n   * @return a RRule instance with the same freq and options\n   *          as this one (cache is not cloned)\n   */\n\n\n  RRule.prototype.clone = function () {\n    return new RRule(this.origOptions);\n  }; // RRule class 'constants'\n\n\n  RRule.FREQUENCIES = ['YEARLY', 'MONTHLY', 'WEEKLY', 'DAILY', 'HOURLY', 'MINUTELY', 'SECONDLY'];\n  RRule.YEARLY = Frequency.YEARLY;\n  RRule.MONTHLY = Frequency.MONTHLY;\n  RRule.WEEKLY = Frequency.WEEKLY;\n  RRule.DAILY = Frequency.DAILY;\n  RRule.HOURLY = Frequency.HOURLY;\n  RRule.MINUTELY = Frequency.MINUTELY;\n  RRule.SECONDLY = Frequency.SECONDLY;\n  RRule.MO = Days.MO;\n  RRule.TU = Days.TU;\n  RRule.WE = Days.WE;\n  RRule.TH = Days.TH;\n  RRule.FR = Days.FR;\n  RRule.SA = Days.SA;\n  RRule.SU = Days.SU;\n  RRule.parseString = parseString;\n  RRule.optionsToString = optionsToString;\n  return RRule;\n}();\n\nexport default RRule;","map":{"version":3,"mappings":"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","names":["dateutil","IterResult","CallbackIterResult","Frequency","parseOptions","initializeOptions","parseString","optionsToString","Cache","Weekday","iter","getnlp","_nlp","require","Days","MO","TU","WE","TH","FR","SA","SU","DEFAULT_OPTIONS","freq","YEARLY","dtstart","interval","wkst","count","until","tzid","bysetpos","bymonth","bymonthday","bynmonthday","byyearday","byweekno","byweekday","bynweekday","byhour","byminute","bysecond","byeaster","defaultKeys","Object","keys","options","noCache","_cache","origOptions","parsedOptions","RRule","text","language","parseText","fromText","str","undefined","iterResult","what","args","_cacheGet","value","_cacheAdd","iterator","_iter","result","after","before","inc","isValidDate","Error","dt","all","length","gettext","dateFormatter","toText","isFullyConvertible","MONTHLY","WEEKLY","DAILY","HOURLY","MINUTELY","SECONDLY"],"sourceRoot":"","sources":["../../../src/rrule.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
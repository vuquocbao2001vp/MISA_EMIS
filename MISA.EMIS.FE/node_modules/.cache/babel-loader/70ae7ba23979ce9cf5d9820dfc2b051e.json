{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/remote_query.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport queryAdapters from \"./query_adapters\";\nimport { errors, handleError } from \"./errors\";\nimport { each } from \"../core/utils/iterator\";\nimport { isFunction } from \"../core/utils/type\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport arrayQueryImpl from \"./array_query\";\n\nvar remoteQueryImpl = function remoteQueryImpl(url, queryOptions, tasks) {\n  tasks = tasks || [];\n  queryOptions = queryOptions || {};\n\n  var createTask = function (name, args) {\n    return {\n      name: name,\n      args: args\n    };\n  };\n\n  var exec = function (executorTask) {\n    var d = new Deferred();\n\n    var _adapterFactory;\n\n    var _adapter;\n\n    var _taskQueue;\n\n    var _currentTask;\n\n    var _mergedSortArgs;\n\n    var rejectWithNotify = function (error) {\n      var handler = queryOptions.errorHandler;\n\n      if (handler) {\n        handler(error);\n      }\n\n      handleError(error);\n      d.reject(error);\n    };\n\n    function mergeSortTask(task) {\n      switch (task.name) {\n        case \"sortBy\":\n          _mergedSortArgs = [task.args];\n          return true;\n\n        case \"thenBy\":\n          if (!_mergedSortArgs) {\n            throw errors.Error(\"E4004\");\n          }\n\n          _mergedSortArgs.push(task.args);\n\n          return true;\n      }\n\n      return false;\n    }\n\n    try {\n      _adapterFactory = queryOptions.adapter;\n\n      if (!isFunction(_adapterFactory)) {\n        _adapterFactory = queryAdapters[_adapterFactory];\n      }\n\n      _adapter = _adapterFactory(queryOptions);\n      _taskQueue = [].concat(tasks).concat(executorTask);\n      var optimize = _adapter.optimize;\n\n      if (optimize) {\n        optimize(_taskQueue);\n      }\n\n      while (_taskQueue.length) {\n        _currentTask = _taskQueue[0];\n\n        if (!mergeSortTask(_currentTask)) {\n          if (_mergedSortArgs) {\n            _taskQueue.unshift(createTask(\"multiSort\", [_mergedSortArgs]));\n\n            _mergedSortArgs = null;\n            continue;\n          }\n\n          if (\"enumerate\" !== String(_currentTask.name)) {\n            if (!_adapter[_currentTask.name] || false === _adapter[_currentTask.name].apply(_adapter, _currentTask.args)) {\n              break;\n            }\n          }\n        }\n\n        _taskQueue.shift();\n      }\n\n      !function () {\n        var head = _taskQueue[0];\n        var unmergedTasks = [];\n\n        if (head && \"multiSort\" === head.name) {\n          _taskQueue.shift();\n\n          each(head.args[0], function () {\n            unmergedTasks.push(createTask(unmergedTasks.length ? \"thenBy\" : \"sortBy\", this));\n          });\n        }\n\n        _taskQueue = unmergedTasks.concat(_taskQueue);\n      }();\n\n      _adapter.exec(url).done(function (result, extra) {\n        if (!_taskQueue.length) {\n          d.resolve(result, extra);\n        } else {\n          var clientChain = arrayQueryImpl(result, {\n            errorHandler: queryOptions.errorHandler\n          });\n          each(_taskQueue, function () {\n            clientChain = clientChain[this.name].apply(clientChain, this.args);\n          });\n          clientChain.done(d.resolve).fail(d.reject);\n        }\n      }).fail(rejectWithNotify);\n    } catch (x) {\n      rejectWithNotify(x);\n    }\n\n    return d.promise();\n  };\n\n  var query = {};\n  each([\"sortBy\", \"thenBy\", \"filter\", \"slice\", \"select\", \"groupBy\"], function () {\n    var name = String(this);\n\n    query[name] = function () {\n      return remoteQueryImpl(url, queryOptions, tasks.concat(createTask(name, arguments)));\n    };\n  });\n  each([\"count\", \"min\", \"max\", \"sum\", \"avg\", \"aggregate\", \"enumerate\"], function () {\n    var name = String(this);\n\n    query[name] = function () {\n      return exec.call(this, createTask(name, arguments));\n    };\n  });\n  return query;\n};\n\nexport default remoteQueryImpl;","map":{"version":3,"names":["queryAdapters","errors","handleError","each","isFunction","Deferred","arrayQueryImpl","remoteQueryImpl","url","queryOptions","tasks","createTask","name","args","exec","executorTask","d","_adapterFactory","_adapter","_taskQueue","_currentTask","_mergedSortArgs","rejectWithNotify","error","handler","errorHandler","reject","mergeSortTask","task","Error","push","adapter","concat","optimize","length","unshift","String","apply","shift","head","unmergedTasks","done","result","extra","resolve","clientChain","fail","x","promise","query","arguments","call"],"sources":["E:/MisaProject/W2022_06/MISA.EMIS.FE/node_modules/devextreme/esm/data/remote_query.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/data/remote_query.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport queryAdapters from \"./query_adapters\";\r\nimport {\r\n    errors,\r\n    handleError\r\n} from \"./errors\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport arrayQueryImpl from \"./array_query\";\r\nvar remoteQueryImpl = function remoteQueryImpl(url, queryOptions, tasks) {\r\n    tasks = tasks || [];\r\n    queryOptions = queryOptions || {};\r\n    var createTask = function(name, args) {\r\n        return {\r\n            name: name,\r\n            args: args\r\n        }\r\n    };\r\n    var exec = function(executorTask) {\r\n        var d = new Deferred;\r\n        var _adapterFactory;\r\n        var _adapter;\r\n        var _taskQueue;\r\n        var _currentTask;\r\n        var _mergedSortArgs;\r\n        var rejectWithNotify = function(error) {\r\n            var handler = queryOptions.errorHandler;\r\n            if (handler) {\r\n                handler(error)\r\n            }\r\n            handleError(error);\r\n            d.reject(error)\r\n        };\r\n\r\n        function mergeSortTask(task) {\r\n            switch (task.name) {\r\n                case \"sortBy\":\r\n                    _mergedSortArgs = [task.args];\r\n                    return true;\r\n                case \"thenBy\":\r\n                    if (!_mergedSortArgs) {\r\n                        throw errors.Error(\"E4004\")\r\n                    }\r\n                    _mergedSortArgs.push(task.args);\r\n                    return true\r\n            }\r\n            return false\r\n        }\r\n        try {\r\n            _adapterFactory = queryOptions.adapter;\r\n            if (!isFunction(_adapterFactory)) {\r\n                _adapterFactory = queryAdapters[_adapterFactory]\r\n            }\r\n            _adapter = _adapterFactory(queryOptions);\r\n            _taskQueue = [].concat(tasks).concat(executorTask);\r\n            var optimize = _adapter.optimize;\r\n            if (optimize) {\r\n                optimize(_taskQueue)\r\n            }\r\n            while (_taskQueue.length) {\r\n                _currentTask = _taskQueue[0];\r\n                if (!mergeSortTask(_currentTask)) {\r\n                    if (_mergedSortArgs) {\r\n                        _taskQueue.unshift(createTask(\"multiSort\", [_mergedSortArgs]));\r\n                        _mergedSortArgs = null;\r\n                        continue\r\n                    }\r\n                    if (\"enumerate\" !== String(_currentTask.name)) {\r\n                        if (!_adapter[_currentTask.name] || false === _adapter[_currentTask.name].apply(_adapter, _currentTask.args)) {\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                _taskQueue.shift()\r\n            }! function() {\r\n                var head = _taskQueue[0];\r\n                var unmergedTasks = [];\r\n                if (head && \"multiSort\" === head.name) {\r\n                    _taskQueue.shift();\r\n                    each(head.args[0], (function() {\r\n                        unmergedTasks.push(createTask(unmergedTasks.length ? \"thenBy\" : \"sortBy\", this))\r\n                    }))\r\n                }\r\n                _taskQueue = unmergedTasks.concat(_taskQueue)\r\n            }();\r\n            _adapter.exec(url).done((function(result, extra) {\r\n                if (!_taskQueue.length) {\r\n                    d.resolve(result, extra)\r\n                } else {\r\n                    var clientChain = arrayQueryImpl(result, {\r\n                        errorHandler: queryOptions.errorHandler\r\n                    });\r\n                    each(_taskQueue, (function() {\r\n                        clientChain = clientChain[this.name].apply(clientChain, this.args)\r\n                    }));\r\n                    clientChain.done(d.resolve).fail(d.reject)\r\n                }\r\n            })).fail(rejectWithNotify)\r\n        } catch (x) {\r\n            rejectWithNotify(x)\r\n        }\r\n        return d.promise()\r\n    };\r\n    var query = {};\r\n    each([\"sortBy\", \"thenBy\", \"filter\", \"slice\", \"select\", \"groupBy\"], (function() {\r\n        var name = String(this);\r\n        query[name] = function() {\r\n            return remoteQueryImpl(url, queryOptions, tasks.concat(createTask(name, arguments)))\r\n        }\r\n    }));\r\n    each([\"count\", \"min\", \"max\", \"sum\", \"avg\", \"aggregate\", \"enumerate\"], (function() {\r\n        var name = String(this);\r\n        query[name] = function() {\r\n            return exec.call(this, createTask(name, arguments))\r\n        }\r\n    }));\r\n    return query\r\n};\r\nexport default remoteQueryImpl;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,SACIC,MADJ,EAEIC,WAFJ,QAGO,UAHP;AAIA,SACIC,IADJ,QAEO,wBAFP;AAGA,SACIC,UADJ,QAEO,oBAFP;AAGA,SACIC,QADJ,QAEO,wBAFP;AAGA,OAAOC,cAAP,MAA2B,eAA3B;;AACA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4CC,KAA5C,EAAmD;EACrEA,KAAK,GAAGA,KAAK,IAAI,EAAjB;EACAD,YAAY,GAAGA,YAAY,IAAI,EAA/B;;EACA,IAAIE,UAAU,GAAG,UAASC,IAAT,EAAeC,IAAf,EAAqB;IAClC,OAAO;MACHD,IAAI,EAAEA,IADH;MAEHC,IAAI,EAAEA;IAFH,CAAP;EAIH,CALD;;EAMA,IAAIC,IAAI,GAAG,UAASC,YAAT,EAAuB;IAC9B,IAAIC,CAAC,GAAG,IAAIX,QAAJ,EAAR;;IACA,IAAIY,eAAJ;;IACA,IAAIC,QAAJ;;IACA,IAAIC,UAAJ;;IACA,IAAIC,YAAJ;;IACA,IAAIC,eAAJ;;IACA,IAAIC,gBAAgB,GAAG,UAASC,KAAT,EAAgB;MACnC,IAAIC,OAAO,GAAGf,YAAY,CAACgB,YAA3B;;MACA,IAAID,OAAJ,EAAa;QACTA,OAAO,CAACD,KAAD,CAAP;MACH;;MACDrB,WAAW,CAACqB,KAAD,CAAX;MACAP,CAAC,CAACU,MAAF,CAASH,KAAT;IACH,CAPD;;IASA,SAASI,aAAT,CAAuBC,IAAvB,EAA6B;MACzB,QAAQA,IAAI,CAAChB,IAAb;QACI,KAAK,QAAL;UACIS,eAAe,GAAG,CAACO,IAAI,CAACf,IAAN,CAAlB;UACA,OAAO,IAAP;;QACJ,KAAK,QAAL;UACI,IAAI,CAACQ,eAAL,EAAsB;YAClB,MAAMpB,MAAM,CAAC4B,KAAP,CAAa,OAAb,CAAN;UACH;;UACDR,eAAe,CAACS,IAAhB,CAAqBF,IAAI,CAACf,IAA1B;;UACA,OAAO,IAAP;MATR;;MAWA,OAAO,KAAP;IACH;;IACD,IAAI;MACAI,eAAe,GAAGR,YAAY,CAACsB,OAA/B;;MACA,IAAI,CAAC3B,UAAU,CAACa,eAAD,CAAf,EAAkC;QAC9BA,eAAe,GAAGjB,aAAa,CAACiB,eAAD,CAA/B;MACH;;MACDC,QAAQ,GAAGD,eAAe,CAACR,YAAD,CAA1B;MACAU,UAAU,GAAG,GAAGa,MAAH,CAAUtB,KAAV,EAAiBsB,MAAjB,CAAwBjB,YAAxB,CAAb;MACA,IAAIkB,QAAQ,GAAGf,QAAQ,CAACe,QAAxB;;MACA,IAAIA,QAAJ,EAAc;QACVA,QAAQ,CAACd,UAAD,CAAR;MACH;;MACD,OAAOA,UAAU,CAACe,MAAlB,EAA0B;QACtBd,YAAY,GAAGD,UAAU,CAAC,CAAD,CAAzB;;QACA,IAAI,CAACQ,aAAa,CAACP,YAAD,CAAlB,EAAkC;UAC9B,IAAIC,eAAJ,EAAqB;YACjBF,UAAU,CAACgB,OAAX,CAAmBxB,UAAU,CAAC,WAAD,EAAc,CAACU,eAAD,CAAd,CAA7B;;YACAA,eAAe,GAAG,IAAlB;YACA;UACH;;UACD,IAAI,gBAAgBe,MAAM,CAAChB,YAAY,CAACR,IAAd,CAA1B,EAA+C;YAC3C,IAAI,CAACM,QAAQ,CAACE,YAAY,CAACR,IAAd,CAAT,IAAgC,UAAUM,QAAQ,CAACE,YAAY,CAACR,IAAd,CAAR,CAA4ByB,KAA5B,CAAkCnB,QAAlC,EAA4CE,YAAY,CAACP,IAAzD,CAA9C,EAA8G;cAC1G;YACH;UACJ;QACJ;;QACDM,UAAU,CAACmB,KAAX;MACH;;MAAA,CAAE,YAAW;QACV,IAAIC,IAAI,GAAGpB,UAAU,CAAC,CAAD,CAArB;QACA,IAAIqB,aAAa,GAAG,EAApB;;QACA,IAAID,IAAI,IAAI,gBAAgBA,IAAI,CAAC3B,IAAjC,EAAuC;UACnCO,UAAU,CAACmB,KAAX;;UACAnC,IAAI,CAACoC,IAAI,CAAC1B,IAAL,CAAU,CAAV,CAAD,EAAgB,YAAW;YAC3B2B,aAAa,CAACV,IAAd,CAAmBnB,UAAU,CAAC6B,aAAa,CAACN,MAAd,GAAuB,QAAvB,GAAkC,QAAnC,EAA6C,IAA7C,CAA7B;UACH,CAFG,CAAJ;QAGH;;QACDf,UAAU,GAAGqB,aAAa,CAACR,MAAd,CAAqBb,UAArB,CAAb;MACH,CAVE,EAAF;;MAWDD,QAAQ,CAACJ,IAAT,CAAcN,GAAd,EAAmBiC,IAAnB,CAAyB,UAASC,MAAT,EAAiBC,KAAjB,EAAwB;QAC7C,IAAI,CAACxB,UAAU,CAACe,MAAhB,EAAwB;UACpBlB,CAAC,CAAC4B,OAAF,CAAUF,MAAV,EAAkBC,KAAlB;QACH,CAFD,MAEO;UACH,IAAIE,WAAW,GAAGvC,cAAc,CAACoC,MAAD,EAAS;YACrCjB,YAAY,EAAEhB,YAAY,CAACgB;UADU,CAAT,CAAhC;UAGAtB,IAAI,CAACgB,UAAD,EAAc,YAAW;YACzB0B,WAAW,GAAGA,WAAW,CAAC,KAAKjC,IAAN,CAAX,CAAuByB,KAAvB,CAA6BQ,WAA7B,EAA0C,KAAKhC,IAA/C,CAAd;UACH,CAFG,CAAJ;UAGAgC,WAAW,CAACJ,IAAZ,CAAiBzB,CAAC,CAAC4B,OAAnB,EAA4BE,IAA5B,CAAiC9B,CAAC,CAACU,MAAnC;QACH;MACJ,CAZD,EAYIoB,IAZJ,CAYSxB,gBAZT;IAaH,CAlDD,CAkDE,OAAOyB,CAAP,EAAU;MACRzB,gBAAgB,CAACyB,CAAD,CAAhB;IACH;;IACD,OAAO/B,CAAC,CAACgC,OAAF,EAAP;EACH,CApFD;;EAqFA,IAAIC,KAAK,GAAG,EAAZ;EACA9C,IAAI,CAAC,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,QAAxC,EAAkD,SAAlD,CAAD,EAAgE,YAAW;IAC3E,IAAIS,IAAI,GAAGwB,MAAM,CAAC,IAAD,CAAjB;;IACAa,KAAK,CAACrC,IAAD,CAAL,GAAc,YAAW;MACrB,OAAOL,eAAe,CAACC,GAAD,EAAMC,YAAN,EAAoBC,KAAK,CAACsB,MAAN,CAAarB,UAAU,CAACC,IAAD,EAAOsC,SAAP,CAAvB,CAApB,CAAtB;IACH,CAFD;EAGH,CALG,CAAJ;EAMA/C,IAAI,CAAC,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,EAAwB,KAAxB,EAA+B,KAA/B,EAAsC,WAAtC,EAAmD,WAAnD,CAAD,EAAmE,YAAW;IAC9E,IAAIS,IAAI,GAAGwB,MAAM,CAAC,IAAD,CAAjB;;IACAa,KAAK,CAACrC,IAAD,CAAL,GAAc,YAAW;MACrB,OAAOE,IAAI,CAACqC,IAAL,CAAU,IAAV,EAAgBxC,UAAU,CAACC,IAAD,EAAOsC,SAAP,CAA1B,CAAP;IACH,CAFD;EAGH,CALG,CAAJ;EAMA,OAAOD,KAAP;AACH,CA5GD;;AA6GA,eAAe1C,eAAf"},"metadata":{},"sourceType":"module"}
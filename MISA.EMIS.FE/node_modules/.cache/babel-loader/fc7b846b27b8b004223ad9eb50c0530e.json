{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../widget/ui.errors\";\nimport { deepExtendArraySafe } from \"../../core/utils/object\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nimport { ExpressionUtils } from \"./expressionUtils\";\nvar PROPERTY_NAMES = {\n  startDate: \"startDate\",\n  endDate: \"endDate\",\n  allDay: \"allDay\",\n  text: \"text\",\n  description: \"description\",\n  startDateTimeZone: \"startDateTimeZone\",\n  endDateTimeZone: \"endDateTimeZone\",\n  recurrenceRule: \"recurrenceRule\",\n  recurrenceException: \"recurrenceException\",\n  disabled: \"disabled\"\n};\n\nclass AppointmentAdapter {\n  constructor(rawAppointment, dataAccessors, timeZoneCalculator, options) {\n    this.rawAppointment = rawAppointment;\n    this.dataAccessors = dataAccessors;\n    this.timeZoneCalculator = timeZoneCalculator;\n    this.options = options;\n  }\n\n  get duration() {\n    return this.endDate ? this.endDate - this.startDate : 0;\n  }\n\n  get startDate() {\n    var result = this.getField(PROPERTY_NAMES.startDate);\n    return void 0 === result ? result : new Date(result);\n  }\n\n  set startDate(value) {\n    this.setField(PROPERTY_NAMES.startDate, value);\n  }\n\n  get endDate() {\n    var result = this.getField(PROPERTY_NAMES.endDate);\n    return void 0 === result ? result : new Date(result);\n  }\n\n  set endDate(value) {\n    this.setField(PROPERTY_NAMES.endDate, value);\n  }\n\n  get allDay() {\n    return this.getField(PROPERTY_NAMES.allDay);\n  }\n\n  set allDay(value) {\n    this.setField(PROPERTY_NAMES.allDay, value);\n  }\n\n  get text() {\n    return this.getField(PROPERTY_NAMES.text);\n  }\n\n  set text(value) {\n    this.setField(PROPERTY_NAMES.text, value);\n  }\n\n  get description() {\n    return this.getField(PROPERTY_NAMES.description);\n  }\n\n  set description(value) {\n    this.setField(PROPERTY_NAMES.description, value);\n  }\n\n  get startDateTimeZone() {\n    return this.getField(PROPERTY_NAMES.startDateTimeZone);\n  }\n\n  get endDateTimeZone() {\n    return this.getField(PROPERTY_NAMES.endDateTimeZone);\n  }\n\n  get recurrenceRule() {\n    return this.getField(PROPERTY_NAMES.recurrenceRule);\n  }\n\n  set recurrenceRule(value) {\n    this.setField(PROPERTY_NAMES.recurrenceRule, value);\n  }\n\n  get recurrenceException() {\n    return this.getField(PROPERTY_NAMES.recurrenceException);\n  }\n\n  set recurrenceException(value) {\n    this.setField(PROPERTY_NAMES.recurrenceException, value);\n  }\n\n  get disabled() {\n    return !!this.getField(PROPERTY_NAMES.disabled);\n  }\n\n  get isRecurrent() {\n    return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule);\n  }\n\n  getField(property) {\n    return ExpressionUtils.getField(this.dataAccessors, property, this.rawAppointment);\n  }\n\n  setField(property, value) {\n    return ExpressionUtils.setField(this.dataAccessors, property, this.rawAppointment, value);\n  }\n\n  calculateStartDate(pathTimeZoneConversion) {\n    if (!this.startDate || isNaN(this.startDate.getTime())) {\n      throw errors.Error(\"E1032\", this.text);\n    }\n\n    return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion);\n  }\n\n  calculateEndDate(pathTimeZoneConversion) {\n    return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion);\n  }\n\n  calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\n    if (!date) {\n      return;\n    }\n\n    return this.timeZoneCalculator.createDate(date, {\n      appointmentTimeZone: appointmentTimeZone,\n      path: pathTimeZoneConversion\n    });\n  }\n\n  clone() {\n    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n    var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.dataAccessors, this.timeZoneCalculator, options);\n\n    if (null !== options && void 0 !== options && options.pathTimeZone) {\n      result.startDate = result.calculateStartDate(options.pathTimeZone);\n      result.endDate = result.calculateEndDate(options.pathTimeZone);\n    }\n\n    return result;\n  }\n\n  source() {\n    var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n\n    if (serializeDate) {\n      var clonedAdapter = this.clone();\n      clonedAdapter.startDate = this.startDate;\n      clonedAdapter.endDate = this.endDate;\n      return clonedAdapter.source();\n    }\n\n    return extend({}, this.rawAppointment);\n  }\n\n}\n\nexport default AppointmentAdapter;\nexport var createAppointmentAdapter = (rawAppointment, dataAccessors, timeZoneCalculator, options) => new AppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator, options);","map":{"version":3,"names":["extend","errors","deepExtendArraySafe","getRecurrenceProcessor","ExpressionUtils","PROPERTY_NAMES","startDate","endDate","allDay","text","description","startDateTimeZone","endDateTimeZone","recurrenceRule","recurrenceException","disabled","AppointmentAdapter","constructor","rawAppointment","dataAccessors","timeZoneCalculator","options","duration","result","getField","Date","value","setField","isRecurrent","isValidRecurrenceRule","property","calculateStartDate","pathTimeZoneConversion","isNaN","getTime","Error","calculateDate","calculateEndDate","date","appointmentTimeZone","createDate","path","clone","arguments","length","pathTimeZone","source","serializeDate","clonedAdapter","createAppointmentAdapter"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/scheduler/appointmentAdapter.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nimport {\r\n    ExpressionUtils\r\n} from \"./expressionUtils\";\r\nvar PROPERTY_NAMES = {\r\n    startDate: \"startDate\",\r\n    endDate: \"endDate\",\r\n    allDay: \"allDay\",\r\n    text: \"text\",\r\n    description: \"description\",\r\n    startDateTimeZone: \"startDateTimeZone\",\r\n    endDateTimeZone: \"endDateTimeZone\",\r\n    recurrenceRule: \"recurrenceRule\",\r\n    recurrenceException: \"recurrenceException\",\r\n    disabled: \"disabled\"\r\n};\r\nclass AppointmentAdapter {\r\n    constructor(rawAppointment, dataAccessors, timeZoneCalculator, options) {\r\n        this.rawAppointment = rawAppointment;\r\n        this.dataAccessors = dataAccessors;\r\n        this.timeZoneCalculator = timeZoneCalculator;\r\n        this.options = options\r\n    }\r\n    get duration() {\r\n        return this.endDate ? this.endDate - this.startDate : 0\r\n    }\r\n    get startDate() {\r\n        var result = this.getField(PROPERTY_NAMES.startDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set startDate(value) {\r\n        this.setField(PROPERTY_NAMES.startDate, value)\r\n    }\r\n    get endDate() {\r\n        var result = this.getField(PROPERTY_NAMES.endDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set endDate(value) {\r\n        this.setField(PROPERTY_NAMES.endDate, value)\r\n    }\r\n    get allDay() {\r\n        return this.getField(PROPERTY_NAMES.allDay)\r\n    }\r\n    set allDay(value) {\r\n        this.setField(PROPERTY_NAMES.allDay, value)\r\n    }\r\n    get text() {\r\n        return this.getField(PROPERTY_NAMES.text)\r\n    }\r\n    set text(value) {\r\n        this.setField(PROPERTY_NAMES.text, value)\r\n    }\r\n    get description() {\r\n        return this.getField(PROPERTY_NAMES.description)\r\n    }\r\n    set description(value) {\r\n        this.setField(PROPERTY_NAMES.description, value)\r\n    }\r\n    get startDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.startDateTimeZone)\r\n    }\r\n    get endDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.endDateTimeZone)\r\n    }\r\n    get recurrenceRule() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceRule)\r\n    }\r\n    set recurrenceRule(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceRule, value)\r\n    }\r\n    get recurrenceException() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceException)\r\n    }\r\n    set recurrenceException(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceException, value)\r\n    }\r\n    get disabled() {\r\n        return !!this.getField(PROPERTY_NAMES.disabled)\r\n    }\r\n    get isRecurrent() {\r\n        return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule)\r\n    }\r\n    getField(property) {\r\n        return ExpressionUtils.getField(this.dataAccessors, property, this.rawAppointment)\r\n    }\r\n    setField(property, value) {\r\n        return ExpressionUtils.setField(this.dataAccessors, property, this.rawAppointment, value)\r\n    }\r\n    calculateStartDate(pathTimeZoneConversion) {\r\n        if (!this.startDate || isNaN(this.startDate.getTime())) {\r\n            throw errors.Error(\"E1032\", this.text)\r\n        }\r\n        return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateEndDate(pathTimeZoneConversion) {\r\n        return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\r\n        if (!date) {\r\n            return\r\n        }\r\n        return this.timeZoneCalculator.createDate(date, {\r\n            appointmentTimeZone: appointmentTimeZone,\r\n            path: pathTimeZoneConversion\r\n        })\r\n    }\r\n    clone() {\r\n        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\r\n        var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.dataAccessors, this.timeZoneCalculator, options);\r\n        if (null !== options && void 0 !== options && options.pathTimeZone) {\r\n            result.startDate = result.calculateStartDate(options.pathTimeZone);\r\n            result.endDate = result.calculateEndDate(options.pathTimeZone)\r\n        }\r\n        return result\r\n    }\r\n    source() {\r\n        var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        if (serializeDate) {\r\n            var clonedAdapter = this.clone();\r\n            clonedAdapter.startDate = this.startDate;\r\n            clonedAdapter.endDate = this.endDate;\r\n            return clonedAdapter.source()\r\n        }\r\n        return extend({}, this.rawAppointment)\r\n    }\r\n}\r\nexport default AppointmentAdapter;\r\nexport var createAppointmentAdapter = (rawAppointment, dataAccessors, timeZoneCalculator, options) => new AppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator, options);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.area_item.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { setWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport Class from \"../../core/class\";\nimport { getPublicElement } from \"../../core/element\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport { isDefined } from \"../../core/utils/type\";\nvar PIVOTGRID_EXPAND_CLASS = \"dx-expand\";\n\nvar getRealElementWidth = function (element) {\n  var width = 0;\n  var offsetWidth = element.offsetWidth;\n\n  if (element.getBoundingClientRect) {\n    var clientRect = getBoundingRect(element);\n    width = clientRect.width;\n\n    if (!width) {\n      width = clientRect.right - clientRect.left;\n    }\n\n    if (width <= offsetWidth - 1) {\n      width = offsetWidth;\n    }\n  }\n\n  return width > 0 ? width : offsetWidth;\n};\n\nfunction getFakeTableOffset(scrollPos, elementOffset, tableSize, viewPortSize) {\n  var offset = 0;\n  var halfTableCount = 0;\n  var halfTableSize = tableSize / 2;\n\n  if (scrollPos + viewPortSize - (elementOffset + tableSize) > 1) {\n    if (scrollPos >= elementOffset + tableSize + halfTableSize) {\n      halfTableCount = parseInt((scrollPos - (elementOffset + tableSize)) / halfTableSize, 10);\n    }\n\n    offset = elementOffset + tableSize + halfTableSize * halfTableCount;\n  } else if (scrollPos < elementOffset) {\n    if (scrollPos <= elementOffset - halfTableSize) {\n      halfTableCount = parseInt((scrollPos - (elementOffset - halfTableSize)) / halfTableSize, 10);\n    }\n\n    offset = elementOffset - (tableSize - halfTableSize * halfTableCount);\n  } else {\n    offset = elementOffset;\n  }\n\n  return offset;\n}\n\nexport var AreaItem = Class.inherit({\n  ctor: function (component) {\n    this.component = component;\n  },\n  option: function () {\n    return this.component.option.apply(this.component, arguments);\n  },\n  _getRowElement: function (index) {\n    if (this._tableElement && this._tableElement.length > 0) {\n      return this._tableElement[0].rows[index];\n    }\n\n    return null;\n  },\n  _createGroupElement: function () {\n    return $(\"<div>\");\n  },\n  _createTableElement: function () {\n    return $(\"<table>\");\n  },\n  _getCellText: function (cell, encodeHtml) {\n    var cellText = cell.isWhiteSpace ? \"&nbsp\" : cell.text || \"&nbsp\";\n\n    if (encodeHtml && (-1 !== cellText.indexOf(\"<\") || -1 !== cellText.indexOf(\">\"))) {\n      cellText = $(\"<div>\").text(cellText).html();\n    }\n\n    return cellText;\n  },\n  _getRowClassNames: function () {},\n  _applyCustomStyles: function (options) {\n    if (options.cell.width) {\n      options.cssArray.push(\"min-width:\" + options.cell.width + \"px\");\n    }\n\n    if (options.cell.sorted) {\n      options.classArray.push(\"dx-pivotgrid-sorted\");\n    }\n  },\n  _getMainElementMarkup: function () {\n    return \"<tbody>\";\n  },\n  _getCloseMainElementMarkup: function () {\n    return \"</tbody>\";\n  },\n  _renderTableContent: function (tableElement, data) {\n    var rowsCount = data.length;\n    var row;\n    var cell;\n    var i;\n    var j;\n    var cellText;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var markupArray = [];\n    var encodeHtml = this.option(\"encodeHtml\");\n    var rowClassNames;\n    tableElement.data(\"area\", this._getAreaName());\n    tableElement.data(\"data\", data);\n    tableElement.css(\"width\", \"\");\n    markupArray.push(this._getMainElementMarkup());\n\n    for (i = 0; i < rowsCount; i++) {\n      row = data[i];\n      var columnMarkupArray = [];\n      rowClassNames = [];\n      markupArray.push(\"<tr \");\n\n      for (j = 0; j < row.length; j++) {\n        cell = row[j];\n\n        this._getRowClassNames(i, cell, rowClassNames);\n\n        columnMarkupArray.push(\"<td \");\n\n        if (cell) {\n          cell.rowspan && columnMarkupArray.push(\"rowspan='\" + (cell.rowspan || 1) + \"'\");\n          cell.colspan && columnMarkupArray.push(\"colspan='\" + (cell.colspan || 1) + \"'\");\n          var styleOptions = {\n            cellElement: void 0,\n            cell: cell,\n            cellsCount: row.length,\n            cellIndex: j,\n            rowElement: void 0,\n            rowIndex: i,\n            rowsCount: rowsCount,\n            rtlEnabled: rtlEnabled,\n            classArray: [],\n            cssArray: []\n          };\n\n          this._applyCustomStyles(styleOptions);\n\n          if (styleOptions.cssArray.length) {\n            columnMarkupArray.push(\"style='\");\n            columnMarkupArray.push(styleOptions.cssArray.join(\";\"));\n            columnMarkupArray.push(\"'\");\n          }\n\n          if (styleOptions.classArray.length) {\n            columnMarkupArray.push(\"class='\");\n            columnMarkupArray.push(styleOptions.classArray.join(\" \"));\n            columnMarkupArray.push(\"'\");\n          }\n\n          columnMarkupArray.push(\">\");\n\n          if (isDefined(cell.expanded)) {\n            columnMarkupArray.push(\"<div class='dx-expand-icon-container'><span class='\" + PIVOTGRID_EXPAND_CLASS + \"'></span></div>\");\n          }\n\n          cellText = this._getCellText(cell, encodeHtml);\n        } else {\n          cellText = \"\";\n        }\n\n        columnMarkupArray.push(\"<span \");\n\n        if (isDefined(cell.wordWrapEnabled)) {\n          columnMarkupArray.push(\"style='white-space:\", cell.wordWrapEnabled ? \"normal\" : \"nowrap\", \";'\");\n        }\n\n        columnMarkupArray.push(\">\" + cellText + \"</span>\");\n\n        if (cell.sorted) {\n          columnMarkupArray.push(\"<span class='dx-icon-sorted'></span>\");\n        }\n\n        columnMarkupArray.push(\"</td>\");\n      }\n\n      if (rowClassNames.length) {\n        markupArray.push(\"class='\");\n        markupArray.push(rowClassNames.join(\" \"));\n        markupArray.push(\"'\");\n      }\n\n      markupArray.push(\">\");\n      markupArray.push(columnMarkupArray.join(\"\"));\n      markupArray.push(\"</tr>\");\n    }\n\n    markupArray.push(this._getCloseMainElementMarkup());\n    tableElement.append(markupArray.join(\"\"));\n\n    this._triggerOnCellPrepared(tableElement, data);\n  },\n  _triggerOnCellPrepared: function (tableElement, data) {\n    var rowElements = tableElement.find(\"tr\");\n\n    var areaName = this._getAreaName();\n\n    var onCellPrepared = this.option(\"onCellPrepared\");\n\n    var hasEvent = this.component._eventsStrategy.hasEvent(\"cellPrepared\");\n\n    var rowElement;\n    var $cellElement;\n    var onCellPreparedArgs;\n\n    var defaultActionArgs = this.component._defaultActionArgs();\n\n    var row;\n    var cell;\n    var rowIndex;\n    var columnIndex;\n\n    if (onCellPrepared || hasEvent) {\n      for (rowIndex = 0; rowIndex < data.length; rowIndex++) {\n        row = data[rowIndex];\n        rowElement = rowElements.eq(rowIndex);\n\n        for (columnIndex = 0; columnIndex < row.length; columnIndex++) {\n          cell = row[columnIndex];\n          $cellElement = rowElement.children().eq(columnIndex);\n          onCellPreparedArgs = {\n            area: areaName,\n            rowIndex: rowIndex,\n            columnIndex: columnIndex,\n            cellElement: getPublicElement($cellElement),\n            cell: cell\n          };\n\n          if (hasEvent) {\n            this.component._trigger(\"onCellPrepared\", onCellPreparedArgs);\n          } else {\n            onCellPrepared(extend(onCellPreparedArgs, defaultActionArgs));\n          }\n        }\n      }\n    }\n  },\n  _getRowHeight: function (index) {\n    var row = this._getRowElement(index);\n\n    var height = 0;\n    var offsetHeight = row.offsetHeight;\n\n    if (row && row.lastChild) {\n      if (row.getBoundingClientRect) {\n        var clientRect = getBoundingRect(row);\n        height = clientRect.height;\n\n        if (height <= offsetHeight - 1) {\n          height = offsetHeight;\n        }\n      }\n\n      return height > 0 ? height : offsetHeight;\n    }\n\n    return 0;\n  },\n  _setRowHeight: function (index, value) {\n    var row = this._getRowElement(index);\n\n    if (row) {\n      row.style.height = value + \"px\";\n    }\n  },\n  getRowsLength: function () {\n    if (this._tableElement && this._tableElement.length > 0) {\n      return this._tableElement[0].rows.length;\n    }\n\n    return 0;\n  },\n  getRowsHeight: function () {\n    var result = [];\n    var rowsLength = this.getRowsLength();\n    var i;\n\n    for (i = 0; i < rowsLength; i++) {\n      result.push(this._getRowHeight(i));\n    }\n\n    return result;\n  },\n  setRowsHeight: function (values) {\n    var totalHeight = 0;\n    var valuesLength = values.length;\n    var i;\n\n    for (i = 0; i < valuesLength; i++) {\n      totalHeight += values[i];\n\n      this._setRowHeight(i, values[i]);\n    }\n\n    this._tableHeight = totalHeight;\n    this._tableElement[0].style.height = totalHeight + \"px\";\n  },\n  getColumnsWidth: function () {\n    var rowsLength = this.getRowsLength();\n    var rowIndex;\n    var row;\n    var i;\n    var columnIndex;\n    var processedCells = [];\n    var result = [];\n\n    var fillCells = function (cells, rowIndex, columnIndex, rowSpan, colSpan) {\n      var rowOffset;\n      var columnOffset;\n\n      for (rowOffset = 0; rowOffset < rowSpan; rowOffset++) {\n        for (columnOffset = 0; columnOffset < colSpan; columnOffset++) {\n          cells[rowIndex + rowOffset] = cells[rowIndex + rowOffset] || [];\n          cells[rowIndex + rowOffset][columnIndex + columnOffset] = true;\n        }\n      }\n    };\n\n    if (rowsLength) {\n      for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n        processedCells[rowIndex] = processedCells[rowIndex] || [];\n        row = this._getRowElement(rowIndex);\n\n        for (i = 0; i < row.cells.length; i++) {\n          for (columnIndex = 0; processedCells[rowIndex][columnIndex]; columnIndex++) {}\n\n          fillCells(processedCells, rowIndex, columnIndex, row.cells[i].rowSpan, row.cells[i].colSpan);\n\n          if (1 === row.cells[i].colSpan) {\n            result[columnIndex] = result[columnIndex] || getRealElementWidth(row.cells[i]);\n          }\n        }\n      }\n    }\n\n    return result;\n  },\n  setColumnsWidth: function (values) {\n    var i;\n    var tableElement = this._tableElement[0];\n    var colgroupElementHTML = \"\";\n    var columnsCount = this.getColumnsCount();\n    var columnWidth = [];\n\n    for (i = 0; i < columnsCount; i++) {\n      columnWidth.push(values[i] || 0);\n    }\n\n    for (i = columnsCount; i < values.length && values; i++) {\n      columnWidth[columnsCount - 1] += values[i];\n    }\n\n    for (i = 0; i < columnsCount; i++) {\n      colgroupElementHTML += '<col style=\"width: ' + columnWidth[i] + 'px\">';\n    }\n\n    this._colgroupElement.html(colgroupElementHTML);\n\n    this._tableWidth = columnWidth.reduce((sum, width) => sum + width, 0);\n    tableElement.style.width = this._tableWidth + \"px\";\n    tableElement.style.tableLayout = \"fixed\";\n  },\n  resetColumnsWidth: function () {\n    setWidth(this._colgroupElement.find(\"col\"), \"auto\");\n\n    this._tableElement.css({\n      width: \"\",\n      tableLayout: \"\"\n    });\n  },\n  setGroupWidth: function (value) {\n    this._getScrollable().option(\"width\", value);\n  },\n  setGroupHeight: function (value) {\n    this._getScrollable().option(\"height\", value);\n  },\n  getGroupHeight: function () {\n    return this._getGroupElementSize(\"height\");\n  },\n  getGroupWidth: function () {\n    return this._getGroupElementSize(\"width\");\n  },\n\n  _getGroupElementSize(dimension) {\n    var size = this.groupElement()[0].style[dimension];\n\n    if (size.indexOf(\"px\") > 0) {\n      return parseFloat(size);\n    }\n\n    return null;\n  },\n\n  groupElement: function () {\n    return this._groupElement;\n  },\n  tableElement: function () {\n    return this._tableElement;\n  },\n  element: function () {\n    return this._rootElement;\n  },\n  headElement: function () {\n    return this._tableElement.find(\"thead\");\n  },\n  _setTableCss: function (styles) {\n    if (this.option(\"rtlEnabled\")) {\n      styles.right = styles.left;\n      delete styles.left;\n    }\n\n    this.tableElement().css(styles);\n  },\n  setVirtualContentParams: function (params) {\n    this._virtualContent.css({\n      width: params.width,\n      height: params.height\n    });\n\n    var scrollable = this._getScrollable();\n\n    if (null !== scrollable && void 0 !== scrollable && scrollable.isRenovated()) {\n      this._getScrollable().option(\"classes\", \"dx-virtual-mode\");\n    } else {\n      this.groupElement().addClass(\"dx-virtual-mode\");\n    }\n  },\n  disableVirtualMode: function () {\n    var scrollable = this._getScrollable();\n\n    if (null !== scrollable && void 0 !== scrollable && scrollable.isRenovated()) {\n      this._getScrollable().option(\"classes\", \"\");\n    } else {\n      this.groupElement().removeClass(\"dx-virtual-mode\");\n    }\n  },\n  _renderVirtualContent: function () {\n    if (!this._virtualContent && \"virtual\" === this.option(\"scrolling.mode\")) {\n      this._virtualContent = $(\"<div>\").addClass(\"dx-virtual-content\").insertBefore(this._tableElement);\n    }\n  },\n  reset: function () {\n    var tableElement = this._tableElement[0];\n    this._fakeTable && this._fakeTable.detach();\n    this._fakeTable = null;\n    this.disableVirtualMode();\n    this.setGroupWidth(\"100%\");\n    this.setGroupHeight(\"auto\");\n    this.resetColumnsWidth();\n\n    if (tableElement) {\n      for (var i = 0; i < tableElement.rows.length; i++) {\n        tableElement.rows[i].style.height = \"\";\n      }\n\n      tableElement.style.height = \"\";\n      tableElement.style.width = \"100%\";\n    }\n  },\n  _updateFakeTableVisibility: function () {\n    var tableElement = this.tableElement()[0];\n    var horizontalOffsetName = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\n    var fakeTableElement = this._fakeTable[0];\n\n    if (tableElement.style.top === fakeTableElement.style.top && fakeTableElement.style[horizontalOffsetName] === tableElement.style[horizontalOffsetName]) {\n      this._fakeTable.addClass(\"dx-hidden\");\n    } else {\n      this._fakeTable.removeClass(\"dx-hidden\");\n    }\n  },\n  _moveFakeTableHorizontally: function (scrollPos) {\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var offsetStyleName = rtlEnabled ? \"right\" : \"left\";\n    var tableElementOffset = parseFloat(this.tableElement()[0].style[offsetStyleName]);\n    var offset = getFakeTableOffset(scrollPos, tableElementOffset, this._tableWidth, this.getGroupWidth());\n\n    if (parseFloat(this._fakeTable[0].style[offsetStyleName]) !== offset) {\n      this._fakeTable[0].style[offsetStyleName] = offset + \"px\";\n    }\n  },\n  _moveFakeTableTop: function (scrollPos) {\n    var tableElementOffsetTop = parseFloat(this.tableElement()[0].style.top);\n    var offsetTop = getFakeTableOffset(scrollPos, tableElementOffsetTop, this._tableHeight, this.getGroupHeight());\n\n    if (parseFloat(this._fakeTable[0].style.top) !== offsetTop) {\n      this._fakeTable[0].style.top = offsetTop + \"px\";\n    }\n  },\n  _moveFakeTable: function () {\n    this._updateFakeTableVisibility();\n  },\n  _createFakeTable: function () {\n    if (!this._fakeTable) {\n      this._fakeTable = this.tableElement().clone().addClass(\"dx-pivot-grid-fake-table\").appendTo(this._virtualContent);\n    }\n  },\n  render: function (rootElement, data) {\n    if (this._tableElement) {\n      try {\n        this._tableElement[0].innerHTML = \"\";\n      } catch (e) {\n        this._tableElement.empty();\n      }\n\n      this._tableElement.attr(\"style\", \"\");\n    } else {\n      this._groupElement = this._createGroupElement();\n      this._tableElement = this._createTableElement();\n\n      this._tableElement.appendTo(this._groupElement);\n\n      this._groupElement.appendTo(rootElement);\n\n      this._rootElement = rootElement;\n    }\n\n    this._colgroupElement = $(\"<colgroup>\").appendTo(this._tableElement);\n\n    this._renderTableContent(this._tableElement, data);\n\n    this._renderVirtualContent();\n  },\n  _getScrollable: function () {\n    return this.groupElement().data(\"dxScrollable\");\n  },\n\n  _getMaxLeftOffset(scrollable) {\n    var containerElement = $(scrollable.container()).get(0);\n    return containerElement.scrollWidth - containerElement.clientWidth;\n  },\n\n  on: function (eventName, handler) {\n    var that = this;\n\n    var scrollable = that._getScrollable();\n\n    if (scrollable) {\n      scrollable.on(eventName, function (e) {\n        if (that.option(\"rtlEnabled\") && isDefined(e.scrollOffset.left)) {\n          e.scrollOffset.left = that._getMaxLeftOffset(scrollable) - e.scrollOffset.left;\n        }\n\n        handler(e);\n      });\n    }\n\n    return this;\n  },\n  off: function (eventName) {\n    var scrollable = this._getScrollable();\n\n    if (scrollable) {\n      scrollable.off(eventName);\n    }\n\n    return this;\n  },\n  scrollTo: function (pos) {\n    var scrollable = this._getScrollable();\n\n    var scrollablePos = pos;\n\n    if (scrollable) {\n      if (this.option(\"rtlEnabled\")) {\n        if (\"column\" === this._getAreaName()) {\n          scrollablePos = this._getMaxLeftOffset(scrollable) - pos.left;\n        } else if (\"data\" === this._getAreaName()) {\n          scrollablePos = {\n            left: this._getMaxLeftOffset(scrollable) - pos.left,\n            top: pos.top\n          };\n        }\n      }\n\n      scrollable.scrollTo(scrollablePos);\n\n      if (this._virtualContent) {\n        this._createFakeTable();\n\n        this._moveFakeTable(pos);\n      }\n    }\n  },\n  updateScrollable: function () {\n    var scrollable = this._getScrollable();\n\n    if (scrollable) {\n      return scrollable.update();\n    }\n  },\n  getColumnsCount: function () {\n    var columnCount = 0;\n\n    var row = this._getRowElement(0);\n\n    var cells;\n\n    if (row) {\n      cells = row.cells;\n\n      for (var i = 0, len = cells.length; i < len; ++i) {\n        columnCount += cells[i].colSpan;\n      }\n    }\n\n    return columnCount;\n  },\n  getData: function () {\n    var tableElement = this._tableElement;\n    return tableElement ? tableElement.data(\"data\") : [];\n  }\n});","map":{"version":3,"names":["setWidth","$","Class","getPublicElement","extend","getBoundingRect","isDefined","PIVOTGRID_EXPAND_CLASS","getRealElementWidth","element","width","offsetWidth","getBoundingClientRect","clientRect","right","left","getFakeTableOffset","scrollPos","elementOffset","tableSize","viewPortSize","offset","halfTableCount","halfTableSize","parseInt","AreaItem","inherit","ctor","component","option","apply","arguments","_getRowElement","index","_tableElement","length","rows","_createGroupElement","_createTableElement","_getCellText","cell","encodeHtml","cellText","isWhiteSpace","text","indexOf","html","_getRowClassNames","_applyCustomStyles","options","cssArray","push","sorted","classArray","_getMainElementMarkup","_getCloseMainElementMarkup","_renderTableContent","tableElement","data","rowsCount","row","i","j","rtlEnabled","markupArray","rowClassNames","_getAreaName","css","columnMarkupArray","rowspan","colspan","styleOptions","cellElement","cellsCount","cellIndex","rowElement","rowIndex","join","expanded","wordWrapEnabled","append","_triggerOnCellPrepared","rowElements","find","areaName","onCellPrepared","hasEvent","_eventsStrategy","$cellElement","onCellPreparedArgs","defaultActionArgs","_defaultActionArgs","columnIndex","eq","children","area","_trigger","_getRowHeight","height","offsetHeight","lastChild","_setRowHeight","value","style","getRowsLength","getRowsHeight","result","rowsLength","setRowsHeight","values","totalHeight","valuesLength","_tableHeight","getColumnsWidth","processedCells","fillCells","cells","rowSpan","colSpan","rowOffset","columnOffset","setColumnsWidth","colgroupElementHTML","columnsCount","getColumnsCount","columnWidth","_colgroupElement","_tableWidth","reduce","sum","tableLayout","resetColumnsWidth","setGroupWidth","_getScrollable","setGroupHeight","getGroupHeight","_getGroupElementSize","getGroupWidth","dimension","size","groupElement","parseFloat","_groupElement","_rootElement","headElement","_setTableCss","styles","setVirtualContentParams","params","_virtualContent","scrollable","isRenovated","addClass","disableVirtualMode","removeClass","_renderVirtualContent","insertBefore","reset","_fakeTable","detach","_updateFakeTableVisibility","horizontalOffsetName","fakeTableElement","top","_moveFakeTableHorizontally","offsetStyleName","tableElementOffset","_moveFakeTableTop","tableElementOffsetTop","offsetTop","_moveFakeTable","_createFakeTable","clone","appendTo","render","rootElement","innerHTML","e","empty","attr","_getMaxLeftOffset","containerElement","container","get","scrollWidth","clientWidth","on","eventName","handler","that","scrollOffset","off","scrollTo","pos","scrollablePos","updateScrollable","update","columnCount","len","getData"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.area_item.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.area_item.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar PIVOTGRID_EXPAND_CLASS = \"dx-expand\";\r\nvar getRealElementWidth = function(element) {\r\n    var width = 0;\r\n    var offsetWidth = element.offsetWidth;\r\n    if (element.getBoundingClientRect) {\r\n        var clientRect = getBoundingRect(element);\r\n        width = clientRect.width;\r\n        if (!width) {\r\n            width = clientRect.right - clientRect.left\r\n        }\r\n        if (width <= offsetWidth - 1) {\r\n            width = offsetWidth\r\n        }\r\n    }\r\n    return width > 0 ? width : offsetWidth\r\n};\r\n\r\nfunction getFakeTableOffset(scrollPos, elementOffset, tableSize, viewPortSize) {\r\n    var offset = 0;\r\n    var halfTableCount = 0;\r\n    var halfTableSize = tableSize / 2;\r\n    if (scrollPos + viewPortSize - (elementOffset + tableSize) > 1) {\r\n        if (scrollPos >= elementOffset + tableSize + halfTableSize) {\r\n            halfTableCount = parseInt((scrollPos - (elementOffset + tableSize)) / halfTableSize, 10)\r\n        }\r\n        offset = elementOffset + tableSize + halfTableSize * halfTableCount\r\n    } else if (scrollPos < elementOffset) {\r\n        if (scrollPos <= elementOffset - halfTableSize) {\r\n            halfTableCount = parseInt((scrollPos - (elementOffset - halfTableSize)) / halfTableSize, 10)\r\n        }\r\n        offset = elementOffset - (tableSize - halfTableSize * halfTableCount)\r\n    } else {\r\n        offset = elementOffset\r\n    }\r\n    return offset\r\n}\r\nexport var AreaItem = Class.inherit({\r\n    ctor: function(component) {\r\n        this.component = component\r\n    },\r\n    option: function() {\r\n        return this.component.option.apply(this.component, arguments)\r\n    },\r\n    _getRowElement: function(index) {\r\n        if (this._tableElement && this._tableElement.length > 0) {\r\n            return this._tableElement[0].rows[index]\r\n        }\r\n        return null\r\n    },\r\n    _createGroupElement: function() {\r\n        return $(\"<div>\")\r\n    },\r\n    _createTableElement: function() {\r\n        return $(\"<table>\")\r\n    },\r\n    _getCellText: function(cell, encodeHtml) {\r\n        var cellText = cell.isWhiteSpace ? \"&nbsp\" : cell.text || \"&nbsp\";\r\n        if (encodeHtml && (-1 !== cellText.indexOf(\"<\") || -1 !== cellText.indexOf(\">\"))) {\r\n            cellText = $(\"<div>\").text(cellText).html()\r\n        }\r\n        return cellText\r\n    },\r\n    _getRowClassNames: function() {},\r\n    _applyCustomStyles: function(options) {\r\n        if (options.cell.width) {\r\n            options.cssArray.push(\"min-width:\" + options.cell.width + \"px\")\r\n        }\r\n        if (options.cell.sorted) {\r\n            options.classArray.push(\"dx-pivotgrid-sorted\")\r\n        }\r\n    },\r\n    _getMainElementMarkup: function() {\r\n        return \"<tbody>\"\r\n    },\r\n    _getCloseMainElementMarkup: function() {\r\n        return \"</tbody>\"\r\n    },\r\n    _renderTableContent: function(tableElement, data) {\r\n        var rowsCount = data.length;\r\n        var row;\r\n        var cell;\r\n        var i;\r\n        var j;\r\n        var cellText;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var markupArray = [];\r\n        var encodeHtml = this.option(\"encodeHtml\");\r\n        var rowClassNames;\r\n        tableElement.data(\"area\", this._getAreaName());\r\n        tableElement.data(\"data\", data);\r\n        tableElement.css(\"width\", \"\");\r\n        markupArray.push(this._getMainElementMarkup());\r\n        for (i = 0; i < rowsCount; i++) {\r\n            row = data[i];\r\n            var columnMarkupArray = [];\r\n            rowClassNames = [];\r\n            markupArray.push(\"<tr \");\r\n            for (j = 0; j < row.length; j++) {\r\n                cell = row[j];\r\n                this._getRowClassNames(i, cell, rowClassNames);\r\n                columnMarkupArray.push(\"<td \");\r\n                if (cell) {\r\n                    cell.rowspan && columnMarkupArray.push(\"rowspan='\" + (cell.rowspan || 1) + \"'\");\r\n                    cell.colspan && columnMarkupArray.push(\"colspan='\" + (cell.colspan || 1) + \"'\");\r\n                    var styleOptions = {\r\n                        cellElement: void 0,\r\n                        cell: cell,\r\n                        cellsCount: row.length,\r\n                        cellIndex: j,\r\n                        rowElement: void 0,\r\n                        rowIndex: i,\r\n                        rowsCount: rowsCount,\r\n                        rtlEnabled: rtlEnabled,\r\n                        classArray: [],\r\n                        cssArray: []\r\n                    };\r\n                    this._applyCustomStyles(styleOptions);\r\n                    if (styleOptions.cssArray.length) {\r\n                        columnMarkupArray.push(\"style='\");\r\n                        columnMarkupArray.push(styleOptions.cssArray.join(\";\"));\r\n                        columnMarkupArray.push(\"'\")\r\n                    }\r\n                    if (styleOptions.classArray.length) {\r\n                        columnMarkupArray.push(\"class='\");\r\n                        columnMarkupArray.push(styleOptions.classArray.join(\" \"));\r\n                        columnMarkupArray.push(\"'\")\r\n                    }\r\n                    columnMarkupArray.push(\">\");\r\n                    if (isDefined(cell.expanded)) {\r\n                        columnMarkupArray.push(\"<div class='dx-expand-icon-container'><span class='\" + PIVOTGRID_EXPAND_CLASS + \"'></span></div>\")\r\n                    }\r\n                    cellText = this._getCellText(cell, encodeHtml)\r\n                } else {\r\n                    cellText = \"\"\r\n                }\r\n                columnMarkupArray.push(\"<span \");\r\n                if (isDefined(cell.wordWrapEnabled)) {\r\n                    columnMarkupArray.push(\"style='white-space:\", cell.wordWrapEnabled ? \"normal\" : \"nowrap\", \";'\")\r\n                }\r\n                columnMarkupArray.push(\">\" + cellText + \"</span>\");\r\n                if (cell.sorted) {\r\n                    columnMarkupArray.push(\"<span class='dx-icon-sorted'></span>\")\r\n                }\r\n                columnMarkupArray.push(\"</td>\")\r\n            }\r\n            if (rowClassNames.length) {\r\n                markupArray.push(\"class='\");\r\n                markupArray.push(rowClassNames.join(\" \"));\r\n                markupArray.push(\"'\")\r\n            }\r\n            markupArray.push(\">\");\r\n            markupArray.push(columnMarkupArray.join(\"\"));\r\n            markupArray.push(\"</tr>\")\r\n        }\r\n        markupArray.push(this._getCloseMainElementMarkup());\r\n        tableElement.append(markupArray.join(\"\"));\r\n        this._triggerOnCellPrepared(tableElement, data)\r\n    },\r\n    _triggerOnCellPrepared: function(tableElement, data) {\r\n        var rowElements = tableElement.find(\"tr\");\r\n        var areaName = this._getAreaName();\r\n        var onCellPrepared = this.option(\"onCellPrepared\");\r\n        var hasEvent = this.component._eventsStrategy.hasEvent(\"cellPrepared\");\r\n        var rowElement;\r\n        var $cellElement;\r\n        var onCellPreparedArgs;\r\n        var defaultActionArgs = this.component._defaultActionArgs();\r\n        var row;\r\n        var cell;\r\n        var rowIndex;\r\n        var columnIndex;\r\n        if (onCellPrepared || hasEvent) {\r\n            for (rowIndex = 0; rowIndex < data.length; rowIndex++) {\r\n                row = data[rowIndex];\r\n                rowElement = rowElements.eq(rowIndex);\r\n                for (columnIndex = 0; columnIndex < row.length; columnIndex++) {\r\n                    cell = row[columnIndex];\r\n                    $cellElement = rowElement.children().eq(columnIndex);\r\n                    onCellPreparedArgs = {\r\n                        area: areaName,\r\n                        rowIndex: rowIndex,\r\n                        columnIndex: columnIndex,\r\n                        cellElement: getPublicElement($cellElement),\r\n                        cell: cell\r\n                    };\r\n                    if (hasEvent) {\r\n                        this.component._trigger(\"onCellPrepared\", onCellPreparedArgs)\r\n                    } else {\r\n                        onCellPrepared(extend(onCellPreparedArgs, defaultActionArgs))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRowHeight: function(index) {\r\n        var row = this._getRowElement(index);\r\n        var height = 0;\r\n        var offsetHeight = row.offsetHeight;\r\n        if (row && row.lastChild) {\r\n            if (row.getBoundingClientRect) {\r\n                var clientRect = getBoundingRect(row);\r\n                height = clientRect.height;\r\n                if (height <= offsetHeight - 1) {\r\n                    height = offsetHeight\r\n                }\r\n            }\r\n            return height > 0 ? height : offsetHeight\r\n        }\r\n        return 0\r\n    },\r\n    _setRowHeight: function(index, value) {\r\n        var row = this._getRowElement(index);\r\n        if (row) {\r\n            row.style.height = value + \"px\"\r\n        }\r\n    },\r\n    getRowsLength: function() {\r\n        if (this._tableElement && this._tableElement.length > 0) {\r\n            return this._tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    getRowsHeight: function() {\r\n        var result = [];\r\n        var rowsLength = this.getRowsLength();\r\n        var i;\r\n        for (i = 0; i < rowsLength; i++) {\r\n            result.push(this._getRowHeight(i))\r\n        }\r\n        return result\r\n    },\r\n    setRowsHeight: function(values) {\r\n        var totalHeight = 0;\r\n        var valuesLength = values.length;\r\n        var i;\r\n        for (i = 0; i < valuesLength; i++) {\r\n            totalHeight += values[i];\r\n            this._setRowHeight(i, values[i])\r\n        }\r\n        this._tableHeight = totalHeight;\r\n        this._tableElement[0].style.height = totalHeight + \"px\"\r\n    },\r\n    getColumnsWidth: function() {\r\n        var rowsLength = this.getRowsLength();\r\n        var rowIndex;\r\n        var row;\r\n        var i;\r\n        var columnIndex;\r\n        var processedCells = [];\r\n        var result = [];\r\n        var fillCells = function(cells, rowIndex, columnIndex, rowSpan, colSpan) {\r\n            var rowOffset;\r\n            var columnOffset;\r\n            for (rowOffset = 0; rowOffset < rowSpan; rowOffset++) {\r\n                for (columnOffset = 0; columnOffset < colSpan; columnOffset++) {\r\n                    cells[rowIndex + rowOffset] = cells[rowIndex + rowOffset] || [];\r\n                    cells[rowIndex + rowOffset][columnIndex + columnOffset] = true\r\n                }\r\n            }\r\n        };\r\n        if (rowsLength) {\r\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\r\n                processedCells[rowIndex] = processedCells[rowIndex] || [];\r\n                row = this._getRowElement(rowIndex);\r\n                for (i = 0; i < row.cells.length; i++) {\r\n                    for (columnIndex = 0; processedCells[rowIndex][columnIndex]; columnIndex++) {}\r\n                    fillCells(processedCells, rowIndex, columnIndex, row.cells[i].rowSpan, row.cells[i].colSpan);\r\n                    if (1 === row.cells[i].colSpan) {\r\n                        result[columnIndex] = result[columnIndex] || getRealElementWidth(row.cells[i])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    setColumnsWidth: function(values) {\r\n        var i;\r\n        var tableElement = this._tableElement[0];\r\n        var colgroupElementHTML = \"\";\r\n        var columnsCount = this.getColumnsCount();\r\n        var columnWidth = [];\r\n        for (i = 0; i < columnsCount; i++) {\r\n            columnWidth.push(values[i] || 0)\r\n        }\r\n        for (i = columnsCount; i < values.length && values; i++) {\r\n            columnWidth[columnsCount - 1] += values[i]\r\n        }\r\n        for (i = 0; i < columnsCount; i++) {\r\n            colgroupElementHTML += '<col style=\"width: ' + columnWidth[i] + 'px\">'\r\n        }\r\n        this._colgroupElement.html(colgroupElementHTML);\r\n        this._tableWidth = columnWidth.reduce((sum, width) => sum + width, 0);\r\n        tableElement.style.width = this._tableWidth + \"px\";\r\n        tableElement.style.tableLayout = \"fixed\"\r\n    },\r\n    resetColumnsWidth: function() {\r\n        setWidth(this._colgroupElement.find(\"col\"), \"auto\");\r\n        this._tableElement.css({\r\n            width: \"\",\r\n            tableLayout: \"\"\r\n        })\r\n    },\r\n    setGroupWidth: function(value) {\r\n        this._getScrollable().option(\"width\", value)\r\n    },\r\n    setGroupHeight: function(value) {\r\n        this._getScrollable().option(\"height\", value)\r\n    },\r\n    getGroupHeight: function() {\r\n        return this._getGroupElementSize(\"height\")\r\n    },\r\n    getGroupWidth: function() {\r\n        return this._getGroupElementSize(\"width\")\r\n    },\r\n    _getGroupElementSize(dimension) {\r\n        var size = this.groupElement()[0].style[dimension];\r\n        if (size.indexOf(\"px\") > 0) {\r\n            return parseFloat(size)\r\n        }\r\n        return null\r\n    },\r\n    groupElement: function() {\r\n        return this._groupElement\r\n    },\r\n    tableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    element: function() {\r\n        return this._rootElement\r\n    },\r\n    headElement: function() {\r\n        return this._tableElement.find(\"thead\")\r\n    },\r\n    _setTableCss: function(styles) {\r\n        if (this.option(\"rtlEnabled\")) {\r\n            styles.right = styles.left;\r\n            delete styles.left\r\n        }\r\n        this.tableElement().css(styles)\r\n    },\r\n    setVirtualContentParams: function(params) {\r\n        this._virtualContent.css({\r\n            width: params.width,\r\n            height: params.height\r\n        });\r\n        var scrollable = this._getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable.isRenovated()) {\r\n            this._getScrollable().option(\"classes\", \"dx-virtual-mode\")\r\n        } else {\r\n            this.groupElement().addClass(\"dx-virtual-mode\")\r\n        }\r\n    },\r\n    disableVirtualMode: function() {\r\n        var scrollable = this._getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable.isRenovated()) {\r\n            this._getScrollable().option(\"classes\", \"\")\r\n        } else {\r\n            this.groupElement().removeClass(\"dx-virtual-mode\")\r\n        }\r\n    },\r\n    _renderVirtualContent: function() {\r\n        if (!this._virtualContent && \"virtual\" === this.option(\"scrolling.mode\")) {\r\n            this._virtualContent = $(\"<div>\").addClass(\"dx-virtual-content\").insertBefore(this._tableElement)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var tableElement = this._tableElement[0];\r\n        this._fakeTable && this._fakeTable.detach();\r\n        this._fakeTable = null;\r\n        this.disableVirtualMode();\r\n        this.setGroupWidth(\"100%\");\r\n        this.setGroupHeight(\"auto\");\r\n        this.resetColumnsWidth();\r\n        if (tableElement) {\r\n            for (var i = 0; i < tableElement.rows.length; i++) {\r\n                tableElement.rows[i].style.height = \"\"\r\n            }\r\n            tableElement.style.height = \"\";\r\n            tableElement.style.width = \"100%\"\r\n        }\r\n    },\r\n    _updateFakeTableVisibility: function() {\r\n        var tableElement = this.tableElement()[0];\r\n        var horizontalOffsetName = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        var fakeTableElement = this._fakeTable[0];\r\n        if (tableElement.style.top === fakeTableElement.style.top && fakeTableElement.style[horizontalOffsetName] === tableElement.style[horizontalOffsetName]) {\r\n            this._fakeTable.addClass(\"dx-hidden\")\r\n        } else {\r\n            this._fakeTable.removeClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    _moveFakeTableHorizontally: function(scrollPos) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var offsetStyleName = rtlEnabled ? \"right\" : \"left\";\r\n        var tableElementOffset = parseFloat(this.tableElement()[0].style[offsetStyleName]);\r\n        var offset = getFakeTableOffset(scrollPos, tableElementOffset, this._tableWidth, this.getGroupWidth());\r\n        if (parseFloat(this._fakeTable[0].style[offsetStyleName]) !== offset) {\r\n            this._fakeTable[0].style[offsetStyleName] = offset + \"px\"\r\n        }\r\n    },\r\n    _moveFakeTableTop: function(scrollPos) {\r\n        var tableElementOffsetTop = parseFloat(this.tableElement()[0].style.top);\r\n        var offsetTop = getFakeTableOffset(scrollPos, tableElementOffsetTop, this._tableHeight, this.getGroupHeight());\r\n        if (parseFloat(this._fakeTable[0].style.top) !== offsetTop) {\r\n            this._fakeTable[0].style.top = offsetTop + \"px\"\r\n        }\r\n    },\r\n    _moveFakeTable: function() {\r\n        this._updateFakeTableVisibility()\r\n    },\r\n    _createFakeTable: function() {\r\n        if (!this._fakeTable) {\r\n            this._fakeTable = this.tableElement().clone().addClass(\"dx-pivot-grid-fake-table\").appendTo(this._virtualContent)\r\n        }\r\n    },\r\n    render: function(rootElement, data) {\r\n        if (this._tableElement) {\r\n            try {\r\n                this._tableElement[0].innerHTML = \"\"\r\n            } catch (e) {\r\n                this._tableElement.empty()\r\n            }\r\n            this._tableElement.attr(\"style\", \"\")\r\n        } else {\r\n            this._groupElement = this._createGroupElement();\r\n            this._tableElement = this._createTableElement();\r\n            this._tableElement.appendTo(this._groupElement);\r\n            this._groupElement.appendTo(rootElement);\r\n            this._rootElement = rootElement\r\n        }\r\n        this._colgroupElement = $(\"<colgroup>\").appendTo(this._tableElement);\r\n        this._renderTableContent(this._tableElement, data);\r\n        this._renderVirtualContent()\r\n    },\r\n    _getScrollable: function() {\r\n        return this.groupElement().data(\"dxScrollable\")\r\n    },\r\n    _getMaxLeftOffset(scrollable) {\r\n        var containerElement = $(scrollable.container()).get(0);\r\n        return containerElement.scrollWidth - containerElement.clientWidth\r\n    },\r\n    on: function(eventName, handler) {\r\n        var that = this;\r\n        var scrollable = that._getScrollable();\r\n        if (scrollable) {\r\n            scrollable.on(eventName, (function(e) {\r\n                if (that.option(\"rtlEnabled\") && isDefined(e.scrollOffset.left)) {\r\n                    e.scrollOffset.left = that._getMaxLeftOffset(scrollable) - e.scrollOffset.left\r\n                }\r\n                handler(e)\r\n            }))\r\n        }\r\n        return this\r\n    },\r\n    off: function(eventName) {\r\n        var scrollable = this._getScrollable();\r\n        if (scrollable) {\r\n            scrollable.off(eventName)\r\n        }\r\n        return this\r\n    },\r\n    scrollTo: function(pos) {\r\n        var scrollable = this._getScrollable();\r\n        var scrollablePos = pos;\r\n        if (scrollable) {\r\n            if (this.option(\"rtlEnabled\")) {\r\n                if (\"column\" === this._getAreaName()) {\r\n                    scrollablePos = this._getMaxLeftOffset(scrollable) - pos.left\r\n                } else if (\"data\" === this._getAreaName()) {\r\n                    scrollablePos = {\r\n                        left: this._getMaxLeftOffset(scrollable) - pos.left,\r\n                        top: pos.top\r\n                    }\r\n                }\r\n            }\r\n            scrollable.scrollTo(scrollablePos);\r\n            if (this._virtualContent) {\r\n                this._createFakeTable();\r\n                this._moveFakeTable(pos)\r\n            }\r\n        }\r\n    },\r\n    updateScrollable: function() {\r\n        var scrollable = this._getScrollable();\r\n        if (scrollable) {\r\n            return scrollable.update()\r\n        }\r\n    },\r\n    getColumnsCount: function() {\r\n        var columnCount = 0;\r\n        var row = this._getRowElement(0);\r\n        var cells;\r\n        if (row) {\r\n            cells = row.cells;\r\n            for (var i = 0, len = cells.length; i < len; ++i) {\r\n                columnCount += cells[i].colSpan\r\n            }\r\n        }\r\n        return columnCount\r\n    },\r\n    getData: function() {\r\n        var tableElement = this._tableElement;\r\n        return tableElement ? tableElement.data(\"data\") : []\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
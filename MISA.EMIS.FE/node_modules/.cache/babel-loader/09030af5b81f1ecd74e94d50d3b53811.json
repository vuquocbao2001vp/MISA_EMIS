{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/**\r\n * DevExtreme (esm/ui/pivot_grid/data_source.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { normalizeDataSourceOptions } from \"../../data/data_source/utils\";\nimport Store from \"../../data/abstract_store\";\nimport { executeAsync } from \"../../core/utils/common\";\nimport { isFunction, isNumeric, isDefined, isString, isPlainObject } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeIndexes } from \"../../core/utils/array\";\nimport { each } from \"../../core/utils/iterator\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport Class from \"../../core/class\";\nimport { EventsStrategy } from \"../../core/events_strategy\";\nimport { titleize } from \"../../core/utils/inflector\";\nimport { LocalStore } from \"./local_store\";\nimport RemoteStore from \"./remote_store\";\nimport { sort } from \"./data_source.utils\";\nimport { XmlaStore } from \"./xmla_store/xmla_store\";\nimport { applyDisplaySummaryMode, createMockSummaryCell, applyRunningTotal } from \"./ui.pivot_grid.summary_display_modes\";\nimport { foreachTree, foreachTreeAsync, findField, formatValue, createPath, setFieldProperty, getFieldsDataType } from \"./ui.pivot_grid.utils\";\nvar DESCRIPTION_NAME_BY_AREA = {\n  row: \"rows\",\n  column: \"columns\",\n  data: \"values\",\n  filter: \"filters\"\n};\nvar STATE_PROPERTIES = [\"area\", \"areaIndex\", \"sortOrder\", \"filterType\", \"filterValues\", \"sortBy\", \"sortBySummaryField\", \"sortBySummaryPath\", \"expanded\", \"summaryType\", \"summaryDisplayMode\"];\nvar CALCULATED_PROPERTIES = [\"format\", \"selector\", \"customizeText\", \"caption\"];\nvar ALL_CALCULATED_PROPERTIES = CALCULATED_PROPERTIES.concat([\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"]);\n\nfunction createCaption(field) {\n  var caption = field.dataField || field.groupName || \"\";\n  var summaryType = (field.summaryType || \"\").toLowerCase();\n\n  if (isString(field.groupInterval)) {\n    caption += \"_\" + field.groupInterval;\n  }\n\n  if (summaryType && \"custom\" !== summaryType) {\n    summaryType = summaryType.replace(/^./, summaryType[0].toUpperCase());\n\n    if (caption.length) {\n      summaryType = \" (\" + summaryType + \")\";\n    }\n  } else {\n    summaryType = \"\";\n  }\n\n  return titleize(caption) + summaryType;\n}\n\nfunction resetFieldState(field, properties) {\n  var initialProperties = field._initProperties || {};\n  each(properties, function (_, prop) {\n    if (Object.prototype.hasOwnProperty.call(initialProperties, prop)) {\n      field[prop] = initialProperties[prop];\n    }\n  });\n}\n\nfunction updateCalculatedFieldProperties(field, calculatedProperties) {\n  resetFieldState(field, calculatedProperties);\n\n  if (!isDefined(field.caption)) {\n    setFieldProperty(field, \"caption\", createCaption(field));\n  }\n}\n\nfunction areExpressionsUsed(dataFields) {\n  return dataFields.some(function (field) {\n    return field.summaryDisplayMode || field.calculateSummaryValue;\n  });\n}\n\nfunction isRunningTotalUsed(dataFields) {\n  return dataFields.some(function (field) {\n    return !!field.runningTotal;\n  });\n}\n\nfunction isDataExists(data) {\n  return data.rows.length || data.columns.length || data.values.length;\n}\n\nexport default Class.inherit(function () {\n  var findHeaderItem = function (headerItems, path) {\n    if (headerItems._cacheByPath) {\n      return headerItems._cacheByPath[path.join(\".\")] || null;\n    }\n  };\n\n  var getHeaderItemsLastIndex = function getHeaderItemsLastIndex(headerItems, grandTotalIndex) {\n    var i;\n    var lastIndex = -1;\n    var headerItem;\n\n    if (headerItems) {\n      for (i = 0; i < headerItems.length; i++) {\n        headerItem = headerItems[i];\n\n        if (void 0 !== headerItem.index) {\n          lastIndex = Math.max(lastIndex, headerItem.index);\n        }\n\n        if (headerItem.children) {\n          lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.children));\n        } else if (headerItem.collapsedChildren) {\n          lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.collapsedChildren));\n        }\n      }\n    }\n\n    if (isDefined(grandTotalIndex)) {\n      lastIndex = Math.max(lastIndex, grandTotalIndex);\n    }\n\n    return lastIndex;\n  };\n\n  var updateHeaderItemChildren = function (headerItems, headerItem, children, grandTotalIndex) {\n    var applyingHeaderItemsCount = getHeaderItemsLastIndex(children) + 1;\n    var emptyIndex = getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\n    var index;\n    var applyingItemIndexesToCurrent = [];\n    var needIndexUpdate = false;\n    var d = new Deferred();\n\n    if (headerItem.children && headerItem.children.length === children.length) {\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n\n        if (void 0 !== child.index) {\n          if (void 0 === headerItem.children[i].index) {\n            child.index = applyingItemIndexesToCurrent[child.index] = emptyIndex++;\n            headerItem.children[i] = child;\n          } else {\n            applyingItemIndexesToCurrent[child.index] = headerItem.children[i].index;\n          }\n        }\n      }\n    } else {\n      needIndexUpdate = true;\n\n      for (index = 0; index < applyingHeaderItemsCount; index++) {\n        applyingItemIndexesToCurrent[index] = emptyIndex++;\n      }\n\n      headerItem.children = children;\n    }\n\n    when(foreachTreeAsync(headerItem.children, function (items) {\n      if (needIndexUpdate) {\n        items[0].index = applyingItemIndexesToCurrent[items[0].index];\n      }\n    })).done(function () {\n      d.resolve(applyingItemIndexesToCurrent);\n    });\n    return d;\n  };\n\n  var updateHeaderItems = function (headerItems, newHeaderItems, grandTotalIndex) {\n    var d = new Deferred();\n    var emptyIndex = grandTotalIndex >= 0 && getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\n    var applyingItemIndexesToCurrent = [];\n    when(foreachTreeAsync(headerItems, function (items) {\n      delete items[0].collapsedChildren;\n    })).done(function () {\n      when(foreachTreeAsync(newHeaderItems, function (newItems, index) {\n        var newItem = newItems[0];\n\n        if (newItem.index >= 0) {\n          var headerItem = findHeaderItem(headerItems, createPath(newItems));\n\n          if (headerItem && headerItem.index >= 0) {\n            applyingItemIndexesToCurrent[newItem.index] = headerItem.index;\n          } else if (emptyIndex) {\n            var path = createPath(newItems.slice(1));\n            headerItem = findHeaderItem(headerItems, path);\n            var parentItems = path.length ? headerItem && headerItem.children : headerItems;\n\n            if (parentItems) {\n              parentItems[index] = newItem;\n              newItem.index = applyingItemIndexesToCurrent[newItem.index] = emptyIndex++;\n            }\n          }\n        }\n      })).done(function () {\n        d.resolve(applyingItemIndexesToCurrent);\n      });\n    });\n    return d;\n  };\n\n  var updateDataSourceCells = function (dataSource, newDataSourceCells, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\n    var newRowIndex;\n    var newColumnIndex;\n    var newRowCells;\n    var newCell;\n    var rowIndex;\n    var columnIndex;\n    var dataSourceCells = dataSource.values;\n\n    if (newDataSourceCells) {\n      for (newRowIndex = 0; newRowIndex <= newDataSourceCells.length; newRowIndex++) {\n        newRowCells = newDataSourceCells[newRowIndex];\n        rowIndex = newRowItemIndexesToCurrent[newRowIndex];\n\n        if (!isDefined(rowIndex)) {\n          rowIndex = dataSource.grandTotalRowIndex;\n        }\n\n        if (newRowCells && isDefined(rowIndex)) {\n          if (!dataSourceCells[rowIndex]) {\n            dataSourceCells[rowIndex] = [];\n          }\n\n          for (newColumnIndex = 0; newColumnIndex <= newRowCells.length; newColumnIndex++) {\n            newCell = newRowCells[newColumnIndex];\n            columnIndex = newColumnItemIndexesToCurrent[newColumnIndex];\n\n            if (!isDefined(columnIndex)) {\n              columnIndex = dataSource.grandTotalColumnIndex;\n            }\n\n            if (isDefined(newCell) && isDefined(columnIndex)) {\n              dataSourceCells[rowIndex][columnIndex] = newCell;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function createLocalOrRemoteStore(dataSourceOptions, notifyProgress) {\n    var StoreConstructor = dataSourceOptions.remoteOperations || dataSourceOptions.paginate ? RemoteStore : LocalStore;\n    return new StoreConstructor(extend(normalizeDataSourceOptions(dataSourceOptions), {\n      onChanged: null,\n      onLoadingChanged: null,\n      onProgressChanged: notifyProgress\n    }));\n  }\n\n  function getExpandedPaths(dataSource, loadOptions, dimensionName, prevLoadOptions) {\n    var result = [];\n    var fields = loadOptions && loadOptions[dimensionName] || [];\n    var prevFields = prevLoadOptions && prevLoadOptions[dimensionName] || [];\n    foreachTree(dataSource[dimensionName], function (items) {\n      var item = items[0];\n      var path = createPath(items);\n\n      if (item.children && fields[path.length - 1] && !fields[path.length - 1].expanded) {\n        if (path.length < fields.length && (!prevLoadOptions || function (fields, prevFields, count) {\n          for (var i = 0; i < count; i++) {\n            if (!fields[i] || !prevFields[i] || fields[i].index !== prevFields[i].index) {\n              return false;\n            }\n          }\n\n          return true;\n        }(fields, prevFields, path.length))) {\n          result.push(path.slice());\n        }\n      }\n    }, true);\n    return result;\n  }\n\n  function setFieldProperties(field, srcField, skipInitPropertySave, properties) {\n    if (srcField) {\n      each(properties, function (_, name) {\n        if (skipInitPropertySave) {\n          field[name] = srcField[name];\n        } else {\n          if ((\"summaryType\" === name || \"summaryDisplayMode\" === name) && void 0 === srcField[name]) {\n            return;\n          }\n\n          setFieldProperty(field, name, srcField[name]);\n        }\n      });\n    } else {\n      resetFieldState(field, properties);\n    }\n\n    return field;\n  }\n\n  function getFieldsState(fields, properties) {\n    var result = [];\n    each(fields, function (_, field) {\n      result.push(setFieldProperties({\n        dataField: field.dataField,\n        name: field.name\n      }, field, true, properties));\n    });\n    return result;\n  }\n\n  function getFieldStateId(field) {\n    if (field.name) {\n      return field.name;\n    }\n\n    return field.dataField + \"\";\n  }\n\n  function getFieldsById(fields, id) {\n    var result = [];\n    each(fields || [], function (_, field) {\n      if (getFieldStateId(field) === id) {\n        result.push(field);\n      }\n    });\n    return result;\n  }\n\n  function setFieldsState(stateFields, fields) {\n    stateFields = stateFields || [];\n    var fieldsById = {};\n    var id;\n    each(fields, function (_, field) {\n      id = getFieldStateId(field);\n\n      if (!fieldsById[id]) {\n        fieldsById[id] = getFieldsById(fields, getFieldStateId(field));\n      }\n    });\n    each(fieldsById, function (id, fields) {\n      !function (stateFields, fields) {\n        stateFields = stateFields || [];\n        each(fields, function (index, field) {\n          setFieldProperties(field, stateFields[index], false, STATE_PROPERTIES);\n          updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES);\n        });\n        return fields;\n      }(getFieldsById(stateFields, id), fields);\n    });\n    return fields;\n  }\n\n  function sortFieldsByAreaIndex(fields) {\n    fields.sort(function (field1, field2) {\n      return field1.areaIndex - field2.areaIndex || field1.groupIndex - field2.groupIndex;\n    });\n  }\n\n  function getFieldId(field, retrieveFieldsOptionValue) {\n    var groupName = field.groupName || \"\";\n    return (field.dataField || groupName) + (field.groupInterval ? groupName + field.groupInterval : \"NOGROUP\") + (retrieveFieldsOptionValue ? \"\" : groupName);\n  }\n\n  function mergeFields(fields, storeFields, retrieveFieldsOptionValue) {\n    var result = [];\n    var fieldsDictionary = {};\n    var removedFields = {};\n    var dataTypes = getFieldsDataType(fields);\n\n    if (storeFields) {\n      each(storeFields, function (_, field) {\n        fieldsDictionary[getFieldId(field, retrieveFieldsOptionValue)] = field;\n      });\n      each(fields, function (_, field) {\n        var fieldKey = getFieldId(field, retrieveFieldsOptionValue);\n        var storeField = fieldsDictionary[fieldKey] || removedFields[fieldKey];\n        var mergedField;\n\n        if (storeField) {\n          if (storeField._initProperties) {\n            resetFieldState(storeField, ALL_CALCULATED_PROPERTIES);\n          }\n\n          mergedField = extend({}, storeField, field, {\n            _initProperties: null\n          });\n        } else {\n          fieldsDictionary[fieldKey] = mergedField = field;\n        }\n\n        extend(mergedField, {\n          dataType: dataTypes[field.dataField]\n        });\n        delete fieldsDictionary[fieldKey];\n        removedFields[fieldKey] = storeField;\n        result.push(mergedField);\n      });\n\n      if (retrieveFieldsOptionValue) {\n        each(fieldsDictionary, function (_, field) {\n          result.push(field);\n        });\n      }\n    } else {\n      result = fields;\n    }\n\n    result.push.apply(result, []);\n    !function (fields) {\n      fields.forEach(field => {\n        if (field.groupName && field.groupInterval && void 0 === field.groupIndex) {\n          var maxGroupIndex = fields.filter(f => f.groupName === field.groupName && isNumeric(f.groupIndex)).map(f => f.groupIndex).reduce((prev, current) => Math.max(prev, current), -1);\n          field.groupIndex = maxGroupIndex + 1;\n        }\n      });\n    }(result);\n    return result;\n  }\n\n  function getFields(that) {\n    var result = new Deferred();\n    var store = that._store;\n    var storeFields = store && store.getFields(that._fields);\n    var mergedFields;\n    when(storeFields).done(function (storeFields) {\n      that._storeFields = storeFields;\n      mergedFields = mergeFields(that._fields, storeFields, that._retrieveFields);\n      result.resolve(mergedFields);\n    }).fail(result.reject);\n    return result;\n  }\n\n  function formatHeaderItems(data, loadOptions, headerName) {\n    return foreachTreeAsync(data[headerName], function (items) {\n      var item = items[0];\n      item.text = item.text || formatValue(item.value, loadOptions[headerName][createPath(items).length - 1]);\n    });\n  }\n\n  function formatHeaders(loadOptions, data) {\n    return when(formatHeaderItems(data, loadOptions, \"columns\"), formatHeaderItems(data, loadOptions, \"rows\"));\n  }\n\n  function updateCache(headerItems) {\n    var d = new Deferred();\n    var cacheByPath = {};\n    when(foreachTreeAsync(headerItems, function (items) {\n      var path = createPath(items).join(\".\");\n      cacheByPath[path] = items[0];\n    })).done(d.resolve);\n    headerItems._cacheByPath = cacheByPath;\n    return d;\n  }\n\n  function _getAreaFields(fields, area) {\n    var areaFields = [];\n    each(fields, function () {\n      if (function (field, area) {\n        var canAddFieldInArea = \"data\" === area || false !== field.visible;\n        return field.area === area && !isDefined(field.groupIndex) && canAddFieldInArea;\n      }(this, area)) {\n        areaFields.push(this);\n      }\n    });\n    return areaFields;\n  }\n\n  return {\n    ctor: function (options) {\n      options = options || {};\n      this._eventsStrategy = new EventsStrategy(this);\n      var that = this;\n\n      var store = function (dataSourceOptions, notifyProgress) {\n        var store;\n        var storeOptions;\n\n        if (isPlainObject(dataSourceOptions) && dataSourceOptions.load) {\n          store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress);\n        } else {\n          if (dataSourceOptions && !dataSourceOptions.store) {\n            dataSourceOptions = {\n              store: dataSourceOptions\n            };\n          }\n\n          storeOptions = dataSourceOptions.store;\n\n          if (\"xmla\" === storeOptions.type) {\n            store = new XmlaStore(storeOptions);\n          } else if (isPlainObject(storeOptions) && storeOptions.type || storeOptions instanceof Store || Array.isArray(storeOptions)) {\n            store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress);\n          } else if (storeOptions instanceof Class) {\n            store = storeOptions;\n          }\n        }\n\n        return store;\n      }(options, function (progress) {\n        that._eventsStrategy.fireEvent(\"progressChanged\", [progress]);\n      });\n\n      that._store = store;\n      that._paginate = !!options.paginate;\n      that._pageSize = options.pageSize || 40;\n      that._data = {\n        rows: [],\n        columns: [],\n        values: []\n      };\n      that._loadingCount = 0;\n      that._isFieldsModified = false;\n      each([\"changed\", \"loadError\", \"loadingChanged\", \"progressChanged\", \"fieldsPrepared\", \"expandValueChanging\"], function (_, eventName) {\n        var optionName = \"on\" + eventName[0].toUpperCase() + eventName.slice(1);\n\n        if (Object.prototype.hasOwnProperty.call(options, optionName)) {\n          this.on(eventName, options[optionName]);\n        }\n      }.bind(this));\n      that._retrieveFields = isDefined(options.retrieveFields) ? options.retrieveFields : true;\n      that._fields = options.fields || [];\n      that._descriptions = options.descriptions ? extend(that._createDescriptions(), options.descriptions) : void 0;\n\n      if (!store) {\n        extend(true, that._data, options.store || options);\n      }\n    },\n    getData: function () {\n      return this._data;\n    },\n    getAreaFields: function (area, collectGroups) {\n      var areaFields = [];\n      var descriptions;\n\n      if (collectGroups || \"data\" === area) {\n        areaFields = _getAreaFields(this._fields, area);\n        sortFieldsByAreaIndex(areaFields);\n      } else {\n        descriptions = this._descriptions || {};\n        areaFields = descriptions[DESCRIPTION_NAME_BY_AREA[area]] || [];\n      }\n\n      return areaFields;\n    },\n    fields: function (_fields) {\n      if (_fields) {\n        this._fields = mergeFields(_fields, this._storeFields, this._retrieveFields);\n\n        this._fieldsPrepared(this._fields);\n      }\n\n      return this._fields;\n    },\n    field: function (id, options) {\n      var fields = this._fields;\n      var field = fields && fields[isNumeric(id) ? id : findField(fields, id)];\n      var levels;\n\n      if (field && options) {\n        each(options, function (optionName, optionValue) {\n          var isInitialization = !STATE_PROPERTIES.includes(optionName);\n          setFieldProperty(field, optionName, optionValue, isInitialization);\n\n          if (\"sortOrder\" === optionName) {\n            levels = field.levels || [];\n\n            for (var i = 0; i < levels.length; i++) {\n              levels[i][optionName] = optionValue;\n            }\n          }\n        });\n        updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES);\n        this._descriptions = this._createDescriptions(field);\n        this._isFieldsModified = true;\n\n        this._eventsStrategy.fireEvent(\"fieldChanged\", [field]);\n      }\n\n      return field;\n    },\n    getFieldValues: function (index, applyFilters, options) {\n      var that = this;\n      var field = this._fields && this._fields[index];\n      var store = this.store();\n      var loadFields = [];\n      var loadOptions = {\n        columns: loadFields,\n        rows: [],\n        values: this.getAreaFields(\"data\"),\n        filters: applyFilters ? this._fields.filter(f => f !== field && f.area && f.filterValues && f.filterValues.length) : [],\n        skipValues: true\n      };\n      var searchValue;\n      var d = new Deferred();\n\n      if (options) {\n        searchValue = options.searchValue;\n        loadOptions.columnSkip = options.skip;\n        loadOptions.columnTake = options.take;\n      }\n\n      if (field && store) {\n        each(field.levels || [field], function () {\n          loadFields.push(extend({}, this, {\n            expanded: true,\n            filterValues: null,\n            sortOrder: \"asc\",\n            sortBySummaryField: null,\n            searchValue: searchValue\n          }));\n        });\n        store.load(loadOptions).done(function (data) {\n          if (loadOptions.columnSkip) {\n            data.columns = data.columns.slice(loadOptions.columnSkip);\n          }\n\n          if (loadOptions.columnTake) {\n            data.columns = data.columns.slice(0, loadOptions.columnTake);\n          }\n\n          formatHeaders(loadOptions, data);\n\n          if (!loadOptions.columnTake) {\n            that._sort(loadOptions, data);\n          }\n\n          d.resolve(data.columns);\n        }).fail(d);\n      } else {\n        d.reject();\n      }\n\n      return d;\n    },\n    reload: function () {\n      return this.load({\n        reload: true\n      });\n    },\n    filter: function () {\n      var store = this._store;\n      return store.filter.apply(store, arguments);\n    },\n    load: function (options) {\n      var that = this;\n      var d = new Deferred();\n      options = options || {};\n      that.beginLoading();\n      d.fail(function (e) {\n        that._eventsStrategy.fireEvent(\"loadError\", [e]);\n      }).always(function () {\n        that.endLoading();\n      });\n\n      function loadTask() {\n        that._delayedLoadTask = void 0;\n\n        if (!that._descriptions) {\n          when(getFields(that)).done(function (fields) {\n            that._fieldsPrepared(fields);\n\n            that._loadCore(options, d);\n          }).fail(d.reject).fail(that._loadErrorHandler);\n        } else {\n          that._loadCore(options, d);\n        }\n      }\n\n      if (that.store()) {\n        that._delayedLoadTask = executeAsync(loadTask);\n      } else {\n        loadTask();\n      }\n\n      return d;\n    },\n    createDrillDownDataSource: function (params) {\n      return this._store.createDrillDownDataSource(this._descriptions, params);\n    },\n    _createDescriptions: function (currentField) {\n      var fields = this.fields();\n      var descriptions = {\n        rows: [],\n        columns: [],\n        values: [],\n        filters: []\n      };\n      each([\"row\", \"column\", \"data\", \"filter\"], function (_, areaName) {\n        normalizeIndexes(_getAreaFields(fields, areaName), \"areaIndex\", currentField);\n      });\n      each(fields || [], function (_, field) {\n        var descriptionName = DESCRIPTION_NAME_BY_AREA[field.area];\n        var dimension = descriptions[descriptionName];\n        var groupName = field.groupName;\n\n        if (groupName && !isNumeric(field.groupIndex)) {\n          field.levels = function (fields, groupingField) {\n            return fields.filter(field => field.groupName === groupingField.groupName && isNumeric(field.groupIndex) && false !== field.visible).map(function (field) {\n              return extend(field, {\n                areaIndex: groupingField.areaIndex,\n                area: groupingField.area,\n                expanded: isDefined(field.expanded) ? field.expanded : groupingField.expanded,\n                dataField: field.dataField || groupingField.dataField,\n                dataType: field.dataType || groupingField.dataType,\n                sortBy: field.sortBy || groupingField.sortBy,\n                sortOrder: field.sortOrder || groupingField.sortOrder,\n                sortBySummaryField: field.sortBySummaryField || groupingField.sortBySummaryField,\n                sortBySummaryPath: field.sortBySummaryPath || groupingField.sortBySummaryPath,\n                visible: field.visible || groupingField.visible,\n                showTotals: isDefined(field.showTotals) ? field.showTotals : groupingField.showTotals,\n                showGrandTotals: isDefined(field.showGrandTotals) ? field.showGrandTotals : groupingField.showGrandTotals\n              });\n            }).sort(function (a, b) {\n              return a.groupIndex - b.groupIndex;\n            });\n          }(fields, field);\n        }\n\n        if (!dimension || groupName && isNumeric(field.groupIndex) || false === field.visible && \"data\" !== field.area && \"filter\" !== field.area) {\n          return;\n        }\n\n        if (field.levels && dimension !== descriptions.filters && dimension !== descriptions.values) {\n          dimension.push.apply(dimension, field.levels);\n\n          if (field.filterValues && field.filterValues.length) {\n            descriptions.filters.push(field);\n          }\n        } else {\n          dimension.push(field);\n        }\n      });\n      each(descriptions, function (_, fields) {\n        sortFieldsByAreaIndex(fields);\n      });\n      var indices = {};\n      each(descriptions.values, function (_, field) {\n        var expression = field.calculateSummaryValue;\n\n        if (isFunction(expression)) {\n          var summaryCell = createMockSummaryCell(descriptions, fields, indices);\n          expression(summaryCell);\n        }\n      });\n      return descriptions;\n    },\n    _fieldsPrepared: function (fields) {\n      this._fields = fields;\n      each(fields, function (index, field) {\n        field.index = index;\n        updateCalculatedFieldProperties(field, ALL_CALCULATED_PROPERTIES);\n      });\n      var currentFieldState = getFieldsState(fields, [\"caption\"]);\n\n      this._eventsStrategy.fireEvent(\"fieldsPrepared\", [fields]);\n\n      for (var i = 0; i < fields.length; i++) {\n        if (fields[i].caption !== currentFieldState[i].caption) {\n          setFieldProperty(fields[i], \"caption\", fields[i].caption, true);\n        }\n      }\n\n      this._descriptions = this._createDescriptions();\n    },\n    isLoading: function () {\n      return this._loadingCount > 0;\n    },\n    state: function (_state, skipLoading) {\n      var that = this;\n\n      if (arguments.length) {\n        _state = extend({\n          rowExpandedPaths: [],\n          columnExpandedPaths: []\n        }, _state);\n\n        if (!that._descriptions) {\n          that.beginLoading();\n          when(getFields(that)).done(function (fields) {\n            that._fields = setFieldsState(_state.fields, fields);\n\n            that._fieldsPrepared(fields);\n\n            !skipLoading && that.load(_state);\n          }).always(function () {\n            that.endLoading();\n          });\n        } else {\n          that._fields = setFieldsState(_state.fields, that._fields);\n          that._descriptions = that._createDescriptions();\n          !skipLoading && that.load(_state);\n        }\n      } else {\n        return {\n          fields: getFieldsState(that._fields, STATE_PROPERTIES),\n          columnExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"columns\", that._lastLoadOptions),\n          rowExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"rows\", that._lastLoadOptions)\n        };\n      }\n    },\n    beginLoading: function () {\n      this._changeLoadingCount(1);\n    },\n    endLoading: function () {\n      this._changeLoadingCount(-1);\n    },\n    _changeLoadingCount: function (increment) {\n      var oldLoading = this.isLoading();\n      this._loadingCount += increment;\n      var newLoading = this.isLoading();\n\n      if (oldLoading ^ newLoading) {\n        this._eventsStrategy.fireEvent(\"loadingChanged\", [newLoading]);\n      }\n    },\n    _hasPagingValues: function (options, area, oppositeIndex) {\n      var takeField = area + \"Take\";\n      var skipField = area + \"Skip\";\n      var values = this._data.values;\n      var items = this._data[area + \"s\"];\n      var oppositeArea = \"row\" === area ? \"column\" : \"row\";\n      var indices = [];\n\n      if (options.path && options.area === area) {\n        var headerItem = findHeaderItem(items, options.path);\n        items = headerItem && headerItem.children;\n\n        if (!items) {\n          return false;\n        }\n      }\n\n      if (options.oppositePath && options.area === oppositeArea) {\n        var _headerItem = findHeaderItem(items, options.oppositePath);\n\n        items = _headerItem && _headerItem.children;\n\n        if (!items) {\n          return false;\n        }\n      }\n\n      for (var i = options[skipField]; i < options[skipField] + options[takeField]; i++) {\n        if (items[i]) {\n          indices.push(items[i].index);\n        }\n      }\n\n      return indices.every(index => {\n        if (void 0 !== index) {\n          if (\"row\" === area) {\n            return (values[index] || [])[oppositeIndex];\n          } else {\n            return (values[oppositeIndex] || [])[index];\n          }\n        }\n      });\n    },\n    _processPagingCacheByArea: function (options, pageSize, area) {\n      var takeField = area + \"Take\";\n      var skipField = area + \"Skip\";\n      var items = this._data[area + \"s\"];\n      var oppositeArea = \"row\" === area ? \"column\" : \"row\";\n      var item;\n\n      if (options[takeField]) {\n        if (options.path && options.area === area) {\n          var headerItem = findHeaderItem(items, options.path);\n          items = headerItem && headerItem.children || [];\n        }\n\n        if (options.oppositePath && options.area === oppositeArea) {\n          var _headerItem2 = findHeaderItem(items, options.oppositePath);\n\n          items = _headerItem2 && _headerItem2.children || [];\n        }\n\n        do {\n          item = items[options[skipField]];\n\n          if (item && void 0 !== item.index) {\n            if (this._hasPagingValues(options, oppositeArea, item.index)) {\n              options[skipField]++;\n              options[takeField]--;\n            } else {\n              break;\n            }\n          }\n        } while (item && void 0 !== item.index && options[takeField]);\n\n        if (options[takeField]) {\n          var start = Math.floor(options[skipField] / pageSize) * pageSize;\n          var end = Math.ceil((options[skipField] + options[takeField]) / pageSize) * pageSize;\n          options[skipField] = start;\n          options[takeField] = end - start;\n        }\n      }\n    },\n    _processPagingCache: function (storeLoadOptions) {\n      var pageSize = this._pageSize;\n\n      if (pageSize < 0) {\n        return;\n      }\n\n      for (var i = 0; i < storeLoadOptions.length; i++) {\n        this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"row\");\n\n        this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"column\");\n      }\n    },\n    _loadCore: function (options, deferred) {\n      var that = this;\n      var store = this._store;\n      var descriptions = this._descriptions;\n\n      var reload = options.reload || this.paginate() && that._isFieldsModified;\n\n      var paginate = this.paginate();\n      var headerName = DESCRIPTION_NAME_BY_AREA[options.area];\n      options = options || {};\n\n      if (store) {\n        extend(options, descriptions);\n        options.columnExpandedPaths = options.columnExpandedPaths || getExpandedPaths(this._data, options, \"columns\", that._lastLoadOptions);\n        options.rowExpandedPaths = options.rowExpandedPaths || getExpandedPaths(this._data, options, \"rows\", that._lastLoadOptions);\n\n        if (paginate) {\n          options.pageSize = this._pageSize;\n        }\n\n        if (headerName) {\n          options.headerName = headerName;\n        }\n\n        that.beginLoading();\n        deferred.always(function () {\n          that.endLoading();\n        });\n        var storeLoadOptions = [options];\n\n        that._eventsStrategy.fireEvent(\"customizeStoreLoadOptions\", [storeLoadOptions, reload]);\n\n        if (!reload) {\n          that._processPagingCache(storeLoadOptions);\n        }\n\n        storeLoadOptions = storeLoadOptions.filter(options => !(options.rows.length && 0 === options.rowTake) && !(options.columns.length && 0 === options.columnTake));\n\n        if (!storeLoadOptions.length) {\n          that._update(deferred);\n\n          return;\n        }\n\n        var results = storeLoadOptions.map(options => store.load(options));\n        when.apply(null, results).done(function () {\n          var results = arguments;\n\n          for (var i = 0; i < results.length; i++) {\n            var _options = storeLoadOptions[i];\n            var data = results[i];\n            var isLast = i === results.length - 1;\n\n            if (_options.path) {\n              that.applyPartialDataSource(_options.area, _options.path, data, isLast ? deferred : false, _options.oppositePath);\n            } else if (paginate && !reload && isDataExists(that._data)) {\n              that.mergePartialDataSource(data, isLast ? deferred : false);\n            } else {\n              extend(that._data, data);\n              that._lastLoadOptions = _options;\n\n              that._update(isLast ? deferred : false);\n            }\n          }\n        }).fail(deferred.reject);\n      } else {\n        that._update(deferred);\n      }\n    },\n    _sort: function (descriptions, data, getAscOrder) {\n      var store = this._store;\n\n      if (store && !this._paginate) {\n        sort(descriptions, data, getAscOrder);\n      }\n    },\n    paginate: function () {\n      return this._paginate && this._store && this._store.supportPaging();\n    },\n    isEmpty: function () {\n      var dataFields = this.getAreaFields(\"data\").filter(f => false !== f.visible);\n      var data = this.getData();\n      return !dataFields.length || !data.values.length;\n    },\n    _update: function (deferred) {\n      var that = this;\n      var descriptions = that._descriptions;\n      var loadedData = that._data;\n      var dataFields = descriptions.values;\n      var expressionsUsed = areExpressionsUsed(dataFields);\n      when(formatHeaders(descriptions, loadedData), updateCache(loadedData.rows), updateCache(loadedData.columns)).done(function () {\n        if (expressionsUsed) {\n          that._sort(descriptions, loadedData, expressionsUsed);\n\n          !that.isEmpty() && applyDisplaySummaryMode(descriptions, loadedData);\n        }\n\n        that._sort(descriptions, loadedData);\n\n        !that.isEmpty() && isRunningTotalUsed(dataFields) && applyRunningTotal(descriptions, loadedData);\n        that._data = loadedData;\n        false !== deferred && when(deferred).done(function () {\n          that._isFieldsModified = false;\n\n          that._eventsStrategy.fireEvent(\"changed\");\n\n          if (isDefined(that._data.grandTotalRowIndex)) {\n            loadedData.grandTotalRowIndex = that._data.grandTotalRowIndex;\n          }\n\n          if (isDefined(that._data.grandTotalColumnIndex)) {\n            loadedData.grandTotalColumnIndex = that._data.grandTotalColumnIndex;\n          }\n        });\n        deferred && deferred.resolve(that._data);\n      });\n      return deferred;\n    },\n    store: function () {\n      return this._store;\n    },\n    collapseHeaderItem: function (area, path) {\n      var headerItems = \"column\" === area ? this._data.columns : this._data.rows;\n      var headerItem = findHeaderItem(headerItems, path);\n      var field = this.getAreaFields(area)[path.length - 1];\n\n      if (headerItem && headerItem.children) {\n        this._eventsStrategy.fireEvent(\"expandValueChanging\", [{\n          area: area,\n          path: path,\n          expanded: false\n        }]);\n\n        if (field) {\n          field.expanded = false;\n        }\n\n        headerItem.collapsedChildren = headerItem.children;\n        delete headerItem.children;\n\n        this._update();\n\n        if (this.paginate()) {\n          this.load();\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    collapseAll: function (id) {\n      var dataChanged = false;\n      var field = this.field(id) || {};\n      var areaOffsets = [this.getAreaFields(field.area).indexOf(field)];\n      field.expanded = false;\n\n      if (field && field.levels) {\n        areaOffsets = [];\n        field.levels.forEach(f => {\n          areaOffsets.push(this.getAreaFields(field.area).indexOf(f));\n          f.expanded = false;\n        });\n      }\n\n      foreachTree(this._data[field.area + \"s\"], function (items) {\n        var item = items[0];\n        var path = createPath(items);\n\n        if (item && item.children && -1 !== areaOffsets.indexOf(path.length - 1)) {\n          item.collapsedChildren = item.children;\n          delete item.children;\n          dataChanged = true;\n        }\n      }, true);\n      dataChanged && this._update();\n    },\n    expandAll: function (id) {\n      var field = this.field(id);\n\n      if (field && field.area) {\n        field.expanded = true;\n\n        if (field && field.levels) {\n          field.levels.forEach(f => {\n            f.expanded = true;\n          });\n        }\n\n        this.load();\n      }\n    },\n    expandHeaderItem: function (area, path) {\n      var headerItems = \"column\" === area ? this._data.columns : this._data.rows;\n      var headerItem = findHeaderItem(headerItems, path);\n\n      if (headerItem && !headerItem.children) {\n        var hasCache = !!headerItem.collapsedChildren;\n        var options = {\n          area: area,\n          path: path,\n          expanded: true,\n          needExpandData: !hasCache\n        };\n\n        this._eventsStrategy.fireEvent(\"expandValueChanging\", [options]);\n\n        if (hasCache) {\n          headerItem.children = headerItem.collapsedChildren;\n          delete headerItem.collapsedChildren;\n\n          this._update();\n        } else if (this.store()) {\n          this.load(options);\n        }\n\n        return hasCache;\n      }\n\n      return false;\n    },\n    mergePartialDataSource: function (dataSource, deferred) {\n      var that = this;\n      var loadedData = that._data;\n      var newRowItemIndexesToCurrent;\n      var newColumnItemIndexesToCurrent;\n\n      if (dataSource && dataSource.values) {\n        dataSource.rows = dataSource.rows || [];\n        dataSource.columns = dataSource.columns || [];\n        newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalColumnIndex);\n        newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex);\n        when(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done(function (newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\n          if (newRowItemIndexesToCurrent.length || newColumnItemIndexesToCurrent.length) {\n            updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent);\n          }\n\n          that._update(deferred);\n        });\n      }\n    },\n    applyPartialDataSource: function (area, path, dataSource, deferred, oppositePath) {\n      var that = this;\n      var loadedData = that._data;\n      var headerItems = \"column\" === area ? loadedData.columns : loadedData.rows;\n      var headerItem;\n      var oppositeHeaderItems = \"column\" === area ? loadedData.rows : loadedData.columns;\n      var oppositeHeaderItem;\n      var newRowItemIndexesToCurrent;\n      var newColumnItemIndexesToCurrent;\n\n      if (dataSource && dataSource.values) {\n        dataSource.rows = dataSource.rows || [];\n        dataSource.columns = dataSource.columns || [];\n        headerItem = findHeaderItem(headerItems, path);\n        oppositeHeaderItem = oppositePath && findHeaderItem(oppositeHeaderItems, oppositePath);\n\n        if (headerItem) {\n          if (\"column\" === area) {\n            newColumnItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.columns, loadedData.grandTotalColumnIndex);\n\n            if (oppositeHeaderItem) {\n              newRowItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.rows, loadedData.grandTotalRowIndex);\n            } else {\n              newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalRowIndex);\n            }\n          } else {\n            newRowItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.rows, loadedData.grandTotalRowIndex);\n\n            if (oppositeHeaderItem) {\n              newColumnItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.columns, loadedData.grandTotalColumnIndex);\n            } else {\n              newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex);\n            }\n          }\n\n          when(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done(function (newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\n            if (\"row\" === area && newRowItemIndexesToCurrent.length || \"column\" === area && newColumnItemIndexesToCurrent.length) {\n              updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent);\n            }\n\n            that._update(deferred);\n          });\n        }\n      }\n    },\n\n    on(eventName, eventHandler) {\n      this._eventsStrategy.on(eventName, eventHandler);\n\n      return this;\n    },\n\n    off(eventName, eventHandler) {\n      this._eventsStrategy.off(eventName, eventHandler);\n\n      return this;\n    },\n\n    dispose: function () {\n      var delayedLoadTask = this._delayedLoadTask;\n\n      this._eventsStrategy.dispose();\n\n      if (delayedLoadTask) {\n        delayedLoadTask.abort();\n      }\n\n      this._isDisposed = true;\n    },\n    isDisposed: function () {\n      return !!this._isDisposed;\n    }\n  };\n}());","map":{"version":3,"names":["normalizeDataSourceOptions","Store","executeAsync","isFunction","isNumeric","isDefined","isString","isPlainObject","extend","normalizeIndexes","each","when","Deferred","Class","EventsStrategy","titleize","LocalStore","RemoteStore","sort","XmlaStore","applyDisplaySummaryMode","createMockSummaryCell","applyRunningTotal","foreachTree","foreachTreeAsync","findField","formatValue","createPath","setFieldProperty","getFieldsDataType","DESCRIPTION_NAME_BY_AREA","row","column","data","filter","STATE_PROPERTIES","CALCULATED_PROPERTIES","ALL_CALCULATED_PROPERTIES","concat","createCaption","field","caption","dataField","groupName","summaryType","toLowerCase","groupInterval","replace","toUpperCase","length","resetFieldState","properties","initialProperties","_initProperties","_","prop","Object","prototype","hasOwnProperty","call","updateCalculatedFieldProperties","calculatedProperties","areExpressionsUsed","dataFields","some","summaryDisplayMode","calculateSummaryValue","isRunningTotalUsed","runningTotal","isDataExists","rows","columns","values","inherit","findHeaderItem","headerItems","path","_cacheByPath","join","getHeaderItemsLastIndex","grandTotalIndex","i","lastIndex","headerItem","index","Math","max","children","collapsedChildren","updateHeaderItemChildren","applyingHeaderItemsCount","emptyIndex","applyingItemIndexesToCurrent","needIndexUpdate","d","child","items","done","resolve","updateHeaderItems","newHeaderItems","newItems","newItem","slice","parentItems","updateDataSourceCells","dataSource","newDataSourceCells","newRowItemIndexesToCurrent","newColumnItemIndexesToCurrent","newRowIndex","newColumnIndex","newRowCells","newCell","rowIndex","columnIndex","dataSourceCells","grandTotalRowIndex","grandTotalColumnIndex","createLocalOrRemoteStore","dataSourceOptions","notifyProgress","StoreConstructor","remoteOperations","paginate","onChanged","onLoadingChanged","onProgressChanged","getExpandedPaths","loadOptions","dimensionName","prevLoadOptions","result","fields","prevFields","item","expanded","count","push","setFieldProperties","srcField","skipInitPropertySave","name","getFieldsState","getFieldStateId","getFieldsById","id","setFieldsState","stateFields","fieldsById","sortFieldsByAreaIndex","field1","field2","areaIndex","groupIndex","getFieldId","retrieveFieldsOptionValue","mergeFields","storeFields","fieldsDictionary","removedFields","dataTypes","fieldKey","storeField","mergedField","dataType","apply","forEach","maxGroupIndex","f","map","reduce","prev","current","getFields","that","store","_store","_fields","mergedFields","_storeFields","_retrieveFields","fail","reject","formatHeaderItems","headerName","text","value","formatHeaders","updateCache","cacheByPath","_getAreaFields","area","areaFields","canAddFieldInArea","visible","ctor","options","_eventsStrategy","storeOptions","load","type","Array","isArray","progress","fireEvent","_paginate","_pageSize","pageSize","_data","_loadingCount","_isFieldsModified","eventName","optionName","on","bind","retrieveFields","_descriptions","descriptions","_createDescriptions","getData","getAreaFields","collectGroups","_fieldsPrepared","levels","optionValue","isInitialization","includes","getFieldValues","applyFilters","loadFields","filters","filterValues","skipValues","searchValue","columnSkip","skip","columnTake","take","sortOrder","sortBySummaryField","_sort","reload","arguments","beginLoading","e","always","endLoading","loadTask","_delayedLoadTask","_loadCore","_loadErrorHandler","createDrillDownDataSource","params","currentField","areaName","descriptionName","dimension","groupingField","sortBy","sortBySummaryPath","showTotals","showGrandTotals","a","b","indices","expression","summaryCell","currentFieldState","isLoading","state","_state","skipLoading","rowExpandedPaths","columnExpandedPaths","_lastLoadOptions","_changeLoadingCount","increment","oldLoading","newLoading","_hasPagingValues","oppositeIndex","takeField","skipField","oppositeArea","oppositePath","_headerItem","every","_processPagingCacheByArea","_headerItem2","start","floor","end","ceil","_processPagingCache","storeLoadOptions","deferred","rowTake","_update","results","_options","isLast","applyPartialDataSource","mergePartialDataSource","getAscOrder","supportPaging","isEmpty","loadedData","expressionsUsed","collapseHeaderItem","collapseAll","dataChanged","areaOffsets","indexOf","expandAll","expandHeaderItem","hasCache","needExpandData","oppositeHeaderItems","oppositeHeaderItem","eventHandler","off","dispose","delayedLoadTask","abort","_isDisposed","isDisposed"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/pivot_grid/data_source.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/data_source.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport Store from \"../../data/abstract_store\";\r\nimport {\r\n    executeAsync\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isNumeric,\r\n    isDefined,\r\n    isString,\r\n    isPlainObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    EventsStrategy\r\n} from \"../../core/events_strategy\";\r\nimport {\r\n    titleize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    LocalStore\r\n} from \"./local_store\";\r\nimport RemoteStore from \"./remote_store\";\r\nimport {\r\n    sort\r\n} from \"./data_source.utils\";\r\nimport {\r\n    XmlaStore\r\n} from \"./xmla_store/xmla_store\";\r\nimport {\r\n    applyDisplaySummaryMode,\r\n    createMockSummaryCell,\r\n    applyRunningTotal\r\n} from \"./ui.pivot_grid.summary_display_modes\";\r\nimport {\r\n    foreachTree,\r\n    foreachTreeAsync,\r\n    findField,\r\n    formatValue,\r\n    createPath,\r\n    setFieldProperty,\r\n    getFieldsDataType\r\n} from \"./ui.pivot_grid.utils\";\r\nvar DESCRIPTION_NAME_BY_AREA = {\r\n    row: \"rows\",\r\n    column: \"columns\",\r\n    data: \"values\",\r\n    filter: \"filters\"\r\n};\r\nvar STATE_PROPERTIES = [\"area\", \"areaIndex\", \"sortOrder\", \"filterType\", \"filterValues\", \"sortBy\", \"sortBySummaryField\", \"sortBySummaryPath\", \"expanded\", \"summaryType\", \"summaryDisplayMode\"];\r\nvar CALCULATED_PROPERTIES = [\"format\", \"selector\", \"customizeText\", \"caption\"];\r\nvar ALL_CALCULATED_PROPERTIES = CALCULATED_PROPERTIES.concat([\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"]);\r\n\r\nfunction createCaption(field) {\r\n    var caption = field.dataField || field.groupName || \"\";\r\n    var summaryType = (field.summaryType || \"\").toLowerCase();\r\n    if (isString(field.groupInterval)) {\r\n        caption += \"_\" + field.groupInterval\r\n    }\r\n    if (summaryType && \"custom\" !== summaryType) {\r\n        summaryType = summaryType.replace(/^./, summaryType[0].toUpperCase());\r\n        if (caption.length) {\r\n            summaryType = \" (\" + summaryType + \")\"\r\n        }\r\n    } else {\r\n        summaryType = \"\"\r\n    }\r\n    return titleize(caption) + summaryType\r\n}\r\n\r\nfunction resetFieldState(field, properties) {\r\n    var initialProperties = field._initProperties || {};\r\n    each(properties, (function(_, prop) {\r\n        if (Object.prototype.hasOwnProperty.call(initialProperties, prop)) {\r\n            field[prop] = initialProperties[prop]\r\n        }\r\n    }))\r\n}\r\n\r\nfunction updateCalculatedFieldProperties(field, calculatedProperties) {\r\n    resetFieldState(field, calculatedProperties);\r\n    if (!isDefined(field.caption)) {\r\n        setFieldProperty(field, \"caption\", createCaption(field))\r\n    }\r\n}\r\n\r\nfunction areExpressionsUsed(dataFields) {\r\n    return dataFields.some((function(field) {\r\n        return field.summaryDisplayMode || field.calculateSummaryValue\r\n    }))\r\n}\r\n\r\nfunction isRunningTotalUsed(dataFields) {\r\n    return dataFields.some((function(field) {\r\n        return !!field.runningTotal\r\n    }))\r\n}\r\n\r\nfunction isDataExists(data) {\r\n    return data.rows.length || data.columns.length || data.values.length\r\n}\r\nexport default Class.inherit(function() {\r\n    var findHeaderItem = function(headerItems, path) {\r\n        if (headerItems._cacheByPath) {\r\n            return headerItems._cacheByPath[path.join(\".\")] || null\r\n        }\r\n    };\r\n    var getHeaderItemsLastIndex = function getHeaderItemsLastIndex(headerItems, grandTotalIndex) {\r\n        var i;\r\n        var lastIndex = -1;\r\n        var headerItem;\r\n        if (headerItems) {\r\n            for (i = 0; i < headerItems.length; i++) {\r\n                headerItem = headerItems[i];\r\n                if (void 0 !== headerItem.index) {\r\n                    lastIndex = Math.max(lastIndex, headerItem.index)\r\n                }\r\n                if (headerItem.children) {\r\n                    lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.children))\r\n                } else if (headerItem.collapsedChildren) {\r\n                    lastIndex = Math.max(lastIndex, getHeaderItemsLastIndex(headerItem.collapsedChildren))\r\n                }\r\n            }\r\n        }\r\n        if (isDefined(grandTotalIndex)) {\r\n            lastIndex = Math.max(lastIndex, grandTotalIndex)\r\n        }\r\n        return lastIndex\r\n    };\r\n    var updateHeaderItemChildren = function(headerItems, headerItem, children, grandTotalIndex) {\r\n        var applyingHeaderItemsCount = getHeaderItemsLastIndex(children) + 1;\r\n        var emptyIndex = getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\r\n        var index;\r\n        var applyingItemIndexesToCurrent = [];\r\n        var needIndexUpdate = false;\r\n        var d = new Deferred;\r\n        if (headerItem.children && headerItem.children.length === children.length) {\r\n            for (var i = 0; i < children.length; i++) {\r\n                var child = children[i];\r\n                if (void 0 !== child.index) {\r\n                    if (void 0 === headerItem.children[i].index) {\r\n                        child.index = applyingItemIndexesToCurrent[child.index] = emptyIndex++;\r\n                        headerItem.children[i] = child\r\n                    } else {\r\n                        applyingItemIndexesToCurrent[child.index] = headerItem.children[i].index\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            needIndexUpdate = true;\r\n            for (index = 0; index < applyingHeaderItemsCount; index++) {\r\n                applyingItemIndexesToCurrent[index] = emptyIndex++\r\n            }\r\n            headerItem.children = children\r\n        }\r\n        when(foreachTreeAsync(headerItem.children, (function(items) {\r\n            if (needIndexUpdate) {\r\n                items[0].index = applyingItemIndexesToCurrent[items[0].index]\r\n            }\r\n        }))).done((function() {\r\n            d.resolve(applyingItemIndexesToCurrent)\r\n        }));\r\n        return d\r\n    };\r\n    var updateHeaderItems = function(headerItems, newHeaderItems, grandTotalIndex) {\r\n        var d = new Deferred;\r\n        var emptyIndex = grandTotalIndex >= 0 && getHeaderItemsLastIndex(headerItems, grandTotalIndex) + 1;\r\n        var applyingItemIndexesToCurrent = [];\r\n        when(foreachTreeAsync(headerItems, (function(items) {\r\n            delete items[0].collapsedChildren\r\n        }))).done((function() {\r\n            when(foreachTreeAsync(newHeaderItems, (function(newItems, index) {\r\n                var newItem = newItems[0];\r\n                if (newItem.index >= 0) {\r\n                    var headerItem = findHeaderItem(headerItems, createPath(newItems));\r\n                    if (headerItem && headerItem.index >= 0) {\r\n                        applyingItemIndexesToCurrent[newItem.index] = headerItem.index\r\n                    } else if (emptyIndex) {\r\n                        var path = createPath(newItems.slice(1));\r\n                        headerItem = findHeaderItem(headerItems, path);\r\n                        var parentItems = path.length ? headerItem && headerItem.children : headerItems;\r\n                        if (parentItems) {\r\n                            parentItems[index] = newItem;\r\n                            newItem.index = applyingItemIndexesToCurrent[newItem.index] = emptyIndex++\r\n                        }\r\n                    }\r\n                }\r\n            }))).done((function() {\r\n                d.resolve(applyingItemIndexesToCurrent)\r\n            }))\r\n        }));\r\n        return d\r\n    };\r\n    var updateDataSourceCells = function(dataSource, newDataSourceCells, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\r\n        var newRowIndex;\r\n        var newColumnIndex;\r\n        var newRowCells;\r\n        var newCell;\r\n        var rowIndex;\r\n        var columnIndex;\r\n        var dataSourceCells = dataSource.values;\r\n        if (newDataSourceCells) {\r\n            for (newRowIndex = 0; newRowIndex <= newDataSourceCells.length; newRowIndex++) {\r\n                newRowCells = newDataSourceCells[newRowIndex];\r\n                rowIndex = newRowItemIndexesToCurrent[newRowIndex];\r\n                if (!isDefined(rowIndex)) {\r\n                    rowIndex = dataSource.grandTotalRowIndex\r\n                }\r\n                if (newRowCells && isDefined(rowIndex)) {\r\n                    if (!dataSourceCells[rowIndex]) {\r\n                        dataSourceCells[rowIndex] = []\r\n                    }\r\n                    for (newColumnIndex = 0; newColumnIndex <= newRowCells.length; newColumnIndex++) {\r\n                        newCell = newRowCells[newColumnIndex];\r\n                        columnIndex = newColumnItemIndexesToCurrent[newColumnIndex];\r\n                        if (!isDefined(columnIndex)) {\r\n                            columnIndex = dataSource.grandTotalColumnIndex\r\n                        }\r\n                        if (isDefined(newCell) && isDefined(columnIndex)) {\r\n                            dataSourceCells[rowIndex][columnIndex] = newCell\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function createLocalOrRemoteStore(dataSourceOptions, notifyProgress) {\r\n        var StoreConstructor = dataSourceOptions.remoteOperations || dataSourceOptions.paginate ? RemoteStore : LocalStore;\r\n        return new StoreConstructor(extend(normalizeDataSourceOptions(dataSourceOptions), {\r\n            onChanged: null,\r\n            onLoadingChanged: null,\r\n            onProgressChanged: notifyProgress\r\n        }))\r\n    }\r\n\r\n    function getExpandedPaths(dataSource, loadOptions, dimensionName, prevLoadOptions) {\r\n        var result = [];\r\n        var fields = loadOptions && loadOptions[dimensionName] || [];\r\n        var prevFields = prevLoadOptions && prevLoadOptions[dimensionName] || [];\r\n        foreachTree(dataSource[dimensionName], (function(items) {\r\n            var item = items[0];\r\n            var path = createPath(items);\r\n            if (item.children && fields[path.length - 1] && !fields[path.length - 1].expanded) {\r\n                if (path.length < fields.length && (!prevLoadOptions || function(fields, prevFields, count) {\r\n                        for (var i = 0; i < count; i++) {\r\n                            if (!fields[i] || !prevFields[i] || fields[i].index !== prevFields[i].index) {\r\n                                return false\r\n                            }\r\n                        }\r\n                        return true\r\n                    }(fields, prevFields, path.length))) {\r\n                    result.push(path.slice())\r\n                }\r\n            }\r\n        }), true);\r\n        return result\r\n    }\r\n\r\n    function setFieldProperties(field, srcField, skipInitPropertySave, properties) {\r\n        if (srcField) {\r\n            each(properties, (function(_, name) {\r\n                if (skipInitPropertySave) {\r\n                    field[name] = srcField[name]\r\n                } else {\r\n                    if ((\"summaryType\" === name || \"summaryDisplayMode\" === name) && void 0 === srcField[name]) {\r\n                        return\r\n                    }\r\n                    setFieldProperty(field, name, srcField[name])\r\n                }\r\n            }))\r\n        } else {\r\n            resetFieldState(field, properties)\r\n        }\r\n        return field\r\n    }\r\n\r\n    function getFieldsState(fields, properties) {\r\n        var result = [];\r\n        each(fields, (function(_, field) {\r\n            result.push(setFieldProperties({\r\n                dataField: field.dataField,\r\n                name: field.name\r\n            }, field, true, properties))\r\n        }));\r\n        return result\r\n    }\r\n\r\n    function getFieldStateId(field) {\r\n        if (field.name) {\r\n            return field.name\r\n        }\r\n        return field.dataField + \"\"\r\n    }\r\n\r\n    function getFieldsById(fields, id) {\r\n        var result = [];\r\n        each(fields || [], (function(_, field) {\r\n            if (getFieldStateId(field) === id) {\r\n                result.push(field)\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n\r\n    function setFieldsState(stateFields, fields) {\r\n        stateFields = stateFields || [];\r\n        var fieldsById = {};\r\n        var id;\r\n        each(fields, (function(_, field) {\r\n            id = getFieldStateId(field);\r\n            if (!fieldsById[id]) {\r\n                fieldsById[id] = getFieldsById(fields, getFieldStateId(field))\r\n            }\r\n        }));\r\n        each(fieldsById, (function(id, fields) {\r\n            ! function(stateFields, fields) {\r\n                stateFields = stateFields || [];\r\n                each(fields, (function(index, field) {\r\n                    setFieldProperties(field, stateFields[index], false, STATE_PROPERTIES);\r\n                    updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES)\r\n                }));\r\n                return fields\r\n            }(getFieldsById(stateFields, id), fields)\r\n        }));\r\n        return fields\r\n    }\r\n\r\n    function sortFieldsByAreaIndex(fields) {\r\n        fields.sort((function(field1, field2) {\r\n            return field1.areaIndex - field2.areaIndex || field1.groupIndex - field2.groupIndex\r\n        }))\r\n    }\r\n\r\n    function getFieldId(field, retrieveFieldsOptionValue) {\r\n        var groupName = field.groupName || \"\";\r\n        return (field.dataField || groupName) + (field.groupInterval ? groupName + field.groupInterval : \"NOGROUP\") + (retrieveFieldsOptionValue ? \"\" : groupName)\r\n    }\r\n\r\n    function mergeFields(fields, storeFields, retrieveFieldsOptionValue) {\r\n        var result = [];\r\n        var fieldsDictionary = {};\r\n        var removedFields = {};\r\n        var dataTypes = getFieldsDataType(fields);\r\n        if (storeFields) {\r\n            each(storeFields, (function(_, field) {\r\n                fieldsDictionary[getFieldId(field, retrieveFieldsOptionValue)] = field\r\n            }));\r\n            each(fields, (function(_, field) {\r\n                var fieldKey = getFieldId(field, retrieveFieldsOptionValue);\r\n                var storeField = fieldsDictionary[fieldKey] || removedFields[fieldKey];\r\n                var mergedField;\r\n                if (storeField) {\r\n                    if (storeField._initProperties) {\r\n                        resetFieldState(storeField, ALL_CALCULATED_PROPERTIES)\r\n                    }\r\n                    mergedField = extend({}, storeField, field, {\r\n                        _initProperties: null\r\n                    })\r\n                } else {\r\n                    fieldsDictionary[fieldKey] = mergedField = field\r\n                }\r\n                extend(mergedField, {\r\n                    dataType: dataTypes[field.dataField]\r\n                });\r\n                delete fieldsDictionary[fieldKey];\r\n                removedFields[fieldKey] = storeField;\r\n                result.push(mergedField)\r\n            }));\r\n            if (retrieveFieldsOptionValue) {\r\n                each(fieldsDictionary, (function(_, field) {\r\n                    result.push(field)\r\n                }))\r\n            }\r\n        } else {\r\n            result = fields\r\n        }\r\n        result.push.apply(result, []);\r\n        ! function(fields) {\r\n            fields.forEach(field => {\r\n                if (field.groupName && field.groupInterval && void 0 === field.groupIndex) {\r\n                    var maxGroupIndex = fields.filter(f => f.groupName === field.groupName && isNumeric(f.groupIndex)).map(f => f.groupIndex).reduce((prev, current) => Math.max(prev, current), -1);\r\n                    field.groupIndex = maxGroupIndex + 1\r\n                }\r\n            })\r\n        }(result);\r\n        return result\r\n    }\r\n\r\n    function getFields(that) {\r\n        var result = new Deferred;\r\n        var store = that._store;\r\n        var storeFields = store && store.getFields(that._fields);\r\n        var mergedFields;\r\n        when(storeFields).done((function(storeFields) {\r\n            that._storeFields = storeFields;\r\n            mergedFields = mergeFields(that._fields, storeFields, that._retrieveFields);\r\n            result.resolve(mergedFields)\r\n        })).fail(result.reject);\r\n        return result\r\n    }\r\n\r\n    function formatHeaderItems(data, loadOptions, headerName) {\r\n        return foreachTreeAsync(data[headerName], (function(items) {\r\n            var item = items[0];\r\n            item.text = item.text || formatValue(item.value, loadOptions[headerName][createPath(items).length - 1])\r\n        }))\r\n    }\r\n\r\n    function formatHeaders(loadOptions, data) {\r\n        return when(formatHeaderItems(data, loadOptions, \"columns\"), formatHeaderItems(data, loadOptions, \"rows\"))\r\n    }\r\n\r\n    function updateCache(headerItems) {\r\n        var d = new Deferred;\r\n        var cacheByPath = {};\r\n        when(foreachTreeAsync(headerItems, (function(items) {\r\n            var path = createPath(items).join(\".\");\r\n            cacheByPath[path] = items[0]\r\n        }))).done(d.resolve);\r\n        headerItems._cacheByPath = cacheByPath;\r\n        return d\r\n    }\r\n\r\n    function _getAreaFields(fields, area) {\r\n        var areaFields = [];\r\n        each(fields, (function() {\r\n            if (function(field, area) {\r\n                    var canAddFieldInArea = \"data\" === area || false !== field.visible;\r\n                    return field.area === area && !isDefined(field.groupIndex) && canAddFieldInArea\r\n                }(this, area)) {\r\n                areaFields.push(this)\r\n            }\r\n        }));\r\n        return areaFields\r\n    }\r\n    return {\r\n        ctor: function(options) {\r\n            options = options || {};\r\n            this._eventsStrategy = new EventsStrategy(this);\r\n            var that = this;\r\n            var store = function(dataSourceOptions, notifyProgress) {\r\n                var store;\r\n                var storeOptions;\r\n                if (isPlainObject(dataSourceOptions) && dataSourceOptions.load) {\r\n                    store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress)\r\n                } else {\r\n                    if (dataSourceOptions && !dataSourceOptions.store) {\r\n                        dataSourceOptions = {\r\n                            store: dataSourceOptions\r\n                        }\r\n                    }\r\n                    storeOptions = dataSourceOptions.store;\r\n                    if (\"xmla\" === storeOptions.type) {\r\n                        store = new XmlaStore(storeOptions)\r\n                    } else if (isPlainObject(storeOptions) && storeOptions.type || storeOptions instanceof Store || Array.isArray(storeOptions)) {\r\n                        store = createLocalOrRemoteStore(dataSourceOptions, notifyProgress)\r\n                    } else if (storeOptions instanceof Class) {\r\n                        store = storeOptions\r\n                    }\r\n                }\r\n                return store\r\n            }(options, (function(progress) {\r\n                that._eventsStrategy.fireEvent(\"progressChanged\", [progress])\r\n            }));\r\n            that._store = store;\r\n            that._paginate = !!options.paginate;\r\n            that._pageSize = options.pageSize || 40;\r\n            that._data = {\r\n                rows: [],\r\n                columns: [],\r\n                values: []\r\n            };\r\n            that._loadingCount = 0;\r\n            that._isFieldsModified = false;\r\n            each([\"changed\", \"loadError\", \"loadingChanged\", \"progressChanged\", \"fieldsPrepared\", \"expandValueChanging\"], function(_, eventName) {\r\n                var optionName = \"on\" + eventName[0].toUpperCase() + eventName.slice(1);\r\n                if (Object.prototype.hasOwnProperty.call(options, optionName)) {\r\n                    this.on(eventName, options[optionName])\r\n                }\r\n            }.bind(this));\r\n            that._retrieveFields = isDefined(options.retrieveFields) ? options.retrieveFields : true;\r\n            that._fields = options.fields || [];\r\n            that._descriptions = options.descriptions ? extend(that._createDescriptions(), options.descriptions) : void 0;\r\n            if (!store) {\r\n                extend(true, that._data, options.store || options)\r\n            }\r\n        },\r\n        getData: function() {\r\n            return this._data\r\n        },\r\n        getAreaFields: function(area, collectGroups) {\r\n            var areaFields = [];\r\n            var descriptions;\r\n            if (collectGroups || \"data\" === area) {\r\n                areaFields = _getAreaFields(this._fields, area);\r\n                sortFieldsByAreaIndex(areaFields)\r\n            } else {\r\n                descriptions = this._descriptions || {};\r\n                areaFields = descriptions[DESCRIPTION_NAME_BY_AREA[area]] || []\r\n            }\r\n            return areaFields\r\n        },\r\n        fields: function(_fields) {\r\n            if (_fields) {\r\n                this._fields = mergeFields(_fields, this._storeFields, this._retrieveFields);\r\n                this._fieldsPrepared(this._fields)\r\n            }\r\n            return this._fields\r\n        },\r\n        field: function(id, options) {\r\n            var fields = this._fields;\r\n            var field = fields && fields[isNumeric(id) ? id : findField(fields, id)];\r\n            var levels;\r\n            if (field && options) {\r\n                each(options, (function(optionName, optionValue) {\r\n                    var isInitialization = !STATE_PROPERTIES.includes(optionName);\r\n                    setFieldProperty(field, optionName, optionValue, isInitialization);\r\n                    if (\"sortOrder\" === optionName) {\r\n                        levels = field.levels || [];\r\n                        for (var i = 0; i < levels.length; i++) {\r\n                            levels[i][optionName] = optionValue\r\n                        }\r\n                    }\r\n                }));\r\n                updateCalculatedFieldProperties(field, CALCULATED_PROPERTIES);\r\n                this._descriptions = this._createDescriptions(field);\r\n                this._isFieldsModified = true;\r\n                this._eventsStrategy.fireEvent(\"fieldChanged\", [field])\r\n            }\r\n            return field\r\n        },\r\n        getFieldValues: function(index, applyFilters, options) {\r\n            var that = this;\r\n            var field = this._fields && this._fields[index];\r\n            var store = this.store();\r\n            var loadFields = [];\r\n            var loadOptions = {\r\n                columns: loadFields,\r\n                rows: [],\r\n                values: this.getAreaFields(\"data\"),\r\n                filters: applyFilters ? this._fields.filter(f => f !== field && f.area && f.filterValues && f.filterValues.length) : [],\r\n                skipValues: true\r\n            };\r\n            var searchValue;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                searchValue = options.searchValue;\r\n                loadOptions.columnSkip = options.skip;\r\n                loadOptions.columnTake = options.take\r\n            }\r\n            if (field && store) {\r\n                each(field.levels || [field], (function() {\r\n                    loadFields.push(extend({}, this, {\r\n                        expanded: true,\r\n                        filterValues: null,\r\n                        sortOrder: \"asc\",\r\n                        sortBySummaryField: null,\r\n                        searchValue: searchValue\r\n                    }))\r\n                }));\r\n                store.load(loadOptions).done((function(data) {\r\n                    if (loadOptions.columnSkip) {\r\n                        data.columns = data.columns.slice(loadOptions.columnSkip)\r\n                    }\r\n                    if (loadOptions.columnTake) {\r\n                        data.columns = data.columns.slice(0, loadOptions.columnTake)\r\n                    }\r\n                    formatHeaders(loadOptions, data);\r\n                    if (!loadOptions.columnTake) {\r\n                        that._sort(loadOptions, data)\r\n                    }\r\n                    d.resolve(data.columns)\r\n                })).fail(d)\r\n            } else {\r\n                d.reject()\r\n            }\r\n            return d\r\n        },\r\n        reload: function() {\r\n            return this.load({\r\n                reload: true\r\n            })\r\n        },\r\n        filter: function() {\r\n            var store = this._store;\r\n            return store.filter.apply(store, arguments)\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var d = new Deferred;\r\n            options = options || {};\r\n            that.beginLoading();\r\n            d.fail((function(e) {\r\n                that._eventsStrategy.fireEvent(\"loadError\", [e])\r\n            })).always((function() {\r\n                that.endLoading()\r\n            }));\r\n\r\n            function loadTask() {\r\n                that._delayedLoadTask = void 0;\r\n                if (!that._descriptions) {\r\n                    when(getFields(that)).done((function(fields) {\r\n                        that._fieldsPrepared(fields);\r\n                        that._loadCore(options, d)\r\n                    })).fail(d.reject).fail(that._loadErrorHandler)\r\n                } else {\r\n                    that._loadCore(options, d)\r\n                }\r\n            }\r\n            if (that.store()) {\r\n                that._delayedLoadTask = executeAsync(loadTask)\r\n            } else {\r\n                loadTask()\r\n            }\r\n            return d\r\n        },\r\n        createDrillDownDataSource: function(params) {\r\n            return this._store.createDrillDownDataSource(this._descriptions, params)\r\n        },\r\n        _createDescriptions: function(currentField) {\r\n            var fields = this.fields();\r\n            var descriptions = {\r\n                rows: [],\r\n                columns: [],\r\n                values: [],\r\n                filters: []\r\n            };\r\n            each([\"row\", \"column\", \"data\", \"filter\"], (function(_, areaName) {\r\n                normalizeIndexes(_getAreaFields(fields, areaName), \"areaIndex\", currentField)\r\n            }));\r\n            each(fields || [], (function(_, field) {\r\n                var descriptionName = DESCRIPTION_NAME_BY_AREA[field.area];\r\n                var dimension = descriptions[descriptionName];\r\n                var groupName = field.groupName;\r\n                if (groupName && !isNumeric(field.groupIndex)) {\r\n                    field.levels = function(fields, groupingField) {\r\n                        return fields.filter(field => field.groupName === groupingField.groupName && isNumeric(field.groupIndex) && false !== field.visible).map((function(field) {\r\n                            return extend(field, {\r\n                                areaIndex: groupingField.areaIndex,\r\n                                area: groupingField.area,\r\n                                expanded: isDefined(field.expanded) ? field.expanded : groupingField.expanded,\r\n                                dataField: field.dataField || groupingField.dataField,\r\n                                dataType: field.dataType || groupingField.dataType,\r\n                                sortBy: field.sortBy || groupingField.sortBy,\r\n                                sortOrder: field.sortOrder || groupingField.sortOrder,\r\n                                sortBySummaryField: field.sortBySummaryField || groupingField.sortBySummaryField,\r\n                                sortBySummaryPath: field.sortBySummaryPath || groupingField.sortBySummaryPath,\r\n                                visible: field.visible || groupingField.visible,\r\n                                showTotals: isDefined(field.showTotals) ? field.showTotals : groupingField.showTotals,\r\n                                showGrandTotals: isDefined(field.showGrandTotals) ? field.showGrandTotals : groupingField.showGrandTotals\r\n                            })\r\n                        })).sort((function(a, b) {\r\n                            return a.groupIndex - b.groupIndex\r\n                        }))\r\n                    }(fields, field)\r\n                }\r\n                if (!dimension || groupName && isNumeric(field.groupIndex) || false === field.visible && \"data\" !== field.area && \"filter\" !== field.area) {\r\n                    return\r\n                }\r\n                if (field.levels && dimension !== descriptions.filters && dimension !== descriptions.values) {\r\n                    dimension.push.apply(dimension, field.levels);\r\n                    if (field.filterValues && field.filterValues.length) {\r\n                        descriptions.filters.push(field)\r\n                    }\r\n                } else {\r\n                    dimension.push(field)\r\n                }\r\n            }));\r\n            each(descriptions, (function(_, fields) {\r\n                sortFieldsByAreaIndex(fields)\r\n            }));\r\n            var indices = {};\r\n            each(descriptions.values, (function(_, field) {\r\n                var expression = field.calculateSummaryValue;\r\n                if (isFunction(expression)) {\r\n                    var summaryCell = createMockSummaryCell(descriptions, fields, indices);\r\n                    expression(summaryCell)\r\n                }\r\n            }));\r\n            return descriptions\r\n        },\r\n        _fieldsPrepared: function(fields) {\r\n            this._fields = fields;\r\n            each(fields, (function(index, field) {\r\n                field.index = index;\r\n                updateCalculatedFieldProperties(field, ALL_CALCULATED_PROPERTIES)\r\n            }));\r\n            var currentFieldState = getFieldsState(fields, [\"caption\"]);\r\n            this._eventsStrategy.fireEvent(\"fieldsPrepared\", [fields]);\r\n            for (var i = 0; i < fields.length; i++) {\r\n                if (fields[i].caption !== currentFieldState[i].caption) {\r\n                    setFieldProperty(fields[i], \"caption\", fields[i].caption, true)\r\n                }\r\n            }\r\n            this._descriptions = this._createDescriptions()\r\n        },\r\n        isLoading: function() {\r\n            return this._loadingCount > 0\r\n        },\r\n        state: function(_state, skipLoading) {\r\n            var that = this;\r\n            if (arguments.length) {\r\n                _state = extend({\r\n                    rowExpandedPaths: [],\r\n                    columnExpandedPaths: []\r\n                }, _state);\r\n                if (!that._descriptions) {\r\n                    that.beginLoading();\r\n                    when(getFields(that)).done((function(fields) {\r\n                        that._fields = setFieldsState(_state.fields, fields);\r\n                        that._fieldsPrepared(fields);\r\n                        !skipLoading && that.load(_state)\r\n                    })).always((function() {\r\n                        that.endLoading()\r\n                    }))\r\n                } else {\r\n                    that._fields = setFieldsState(_state.fields, that._fields);\r\n                    that._descriptions = that._createDescriptions();\r\n                    !skipLoading && that.load(_state)\r\n                }\r\n            } else {\r\n                return {\r\n                    fields: getFieldsState(that._fields, STATE_PROPERTIES),\r\n                    columnExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"columns\", that._lastLoadOptions),\r\n                    rowExpandedPaths: getExpandedPaths(that._data, that._descriptions, \"rows\", that._lastLoadOptions)\r\n                }\r\n            }\r\n        },\r\n        beginLoading: function() {\r\n            this._changeLoadingCount(1)\r\n        },\r\n        endLoading: function() {\r\n            this._changeLoadingCount(-1)\r\n        },\r\n        _changeLoadingCount: function(increment) {\r\n            var oldLoading = this.isLoading();\r\n            this._loadingCount += increment;\r\n            var newLoading = this.isLoading();\r\n            if (oldLoading ^ newLoading) {\r\n                this._eventsStrategy.fireEvent(\"loadingChanged\", [newLoading])\r\n            }\r\n        },\r\n        _hasPagingValues: function(options, area, oppositeIndex) {\r\n            var takeField = area + \"Take\";\r\n            var skipField = area + \"Skip\";\r\n            var values = this._data.values;\r\n            var items = this._data[area + \"s\"];\r\n            var oppositeArea = \"row\" === area ? \"column\" : \"row\";\r\n            var indices = [];\r\n            if (options.path && options.area === area) {\r\n                var headerItem = findHeaderItem(items, options.path);\r\n                items = headerItem && headerItem.children;\r\n                if (!items) {\r\n                    return false\r\n                }\r\n            }\r\n            if (options.oppositePath && options.area === oppositeArea) {\r\n                var _headerItem = findHeaderItem(items, options.oppositePath);\r\n                items = _headerItem && _headerItem.children;\r\n                if (!items) {\r\n                    return false\r\n                }\r\n            }\r\n            for (var i = options[skipField]; i < options[skipField] + options[takeField]; i++) {\r\n                if (items[i]) {\r\n                    indices.push(items[i].index)\r\n                }\r\n            }\r\n            return indices.every(index => {\r\n                if (void 0 !== index) {\r\n                    if (\"row\" === area) {\r\n                        return (values[index] || [])[oppositeIndex]\r\n                    } else {\r\n                        return (values[oppositeIndex] || [])[index]\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _processPagingCacheByArea: function(options, pageSize, area) {\r\n            var takeField = area + \"Take\";\r\n            var skipField = area + \"Skip\";\r\n            var items = this._data[area + \"s\"];\r\n            var oppositeArea = \"row\" === area ? \"column\" : \"row\";\r\n            var item;\r\n            if (options[takeField]) {\r\n                if (options.path && options.area === area) {\r\n                    var headerItem = findHeaderItem(items, options.path);\r\n                    items = headerItem && headerItem.children || []\r\n                }\r\n                if (options.oppositePath && options.area === oppositeArea) {\r\n                    var _headerItem2 = findHeaderItem(items, options.oppositePath);\r\n                    items = _headerItem2 && _headerItem2.children || []\r\n                }\r\n                do {\r\n                    item = items[options[skipField]];\r\n                    if (item && void 0 !== item.index) {\r\n                        if (this._hasPagingValues(options, oppositeArea, item.index)) {\r\n                            options[skipField]++;\r\n                            options[takeField]--\r\n                        } else {\r\n                            break\r\n                        }\r\n                    }\r\n                } while (item && void 0 !== item.index && options[takeField]);\r\n                if (options[takeField]) {\r\n                    var start = Math.floor(options[skipField] / pageSize) * pageSize;\r\n                    var end = Math.ceil((options[skipField] + options[takeField]) / pageSize) * pageSize;\r\n                    options[skipField] = start;\r\n                    options[takeField] = end - start\r\n                }\r\n            }\r\n        },\r\n        _processPagingCache: function(storeLoadOptions) {\r\n            var pageSize = this._pageSize;\r\n            if (pageSize < 0) {\r\n                return\r\n            }\r\n            for (var i = 0; i < storeLoadOptions.length; i++) {\r\n                this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"row\");\r\n                this._processPagingCacheByArea(storeLoadOptions[i], pageSize, \"column\")\r\n            }\r\n        },\r\n        _loadCore: function(options, deferred) {\r\n            var that = this;\r\n            var store = this._store;\r\n            var descriptions = this._descriptions;\r\n            var reload = options.reload || this.paginate() && that._isFieldsModified;\r\n            var paginate = this.paginate();\r\n            var headerName = DESCRIPTION_NAME_BY_AREA[options.area];\r\n            options = options || {};\r\n            if (store) {\r\n                extend(options, descriptions);\r\n                options.columnExpandedPaths = options.columnExpandedPaths || getExpandedPaths(this._data, options, \"columns\", that._lastLoadOptions);\r\n                options.rowExpandedPaths = options.rowExpandedPaths || getExpandedPaths(this._data, options, \"rows\", that._lastLoadOptions);\r\n                if (paginate) {\r\n                    options.pageSize = this._pageSize\r\n                }\r\n                if (headerName) {\r\n                    options.headerName = headerName\r\n                }\r\n                that.beginLoading();\r\n                deferred.always((function() {\r\n                    that.endLoading()\r\n                }));\r\n                var storeLoadOptions = [options];\r\n                that._eventsStrategy.fireEvent(\"customizeStoreLoadOptions\", [storeLoadOptions, reload]);\r\n                if (!reload) {\r\n                    that._processPagingCache(storeLoadOptions)\r\n                }\r\n                storeLoadOptions = storeLoadOptions.filter(options => !(options.rows.length && 0 === options.rowTake) && !(options.columns.length && 0 === options.columnTake));\r\n                if (!storeLoadOptions.length) {\r\n                    that._update(deferred);\r\n                    return\r\n                }\r\n                var results = storeLoadOptions.map(options => store.load(options));\r\n                when.apply(null, results).done((function() {\r\n                    var results = arguments;\r\n                    for (var i = 0; i < results.length; i++) {\r\n                        var _options = storeLoadOptions[i];\r\n                        var data = results[i];\r\n                        var isLast = i === results.length - 1;\r\n                        if (_options.path) {\r\n                            that.applyPartialDataSource(_options.area, _options.path, data, isLast ? deferred : false, _options.oppositePath)\r\n                        } else if (paginate && !reload && isDataExists(that._data)) {\r\n                            that.mergePartialDataSource(data, isLast ? deferred : false)\r\n                        } else {\r\n                            extend(that._data, data);\r\n                            that._lastLoadOptions = _options;\r\n                            that._update(isLast ? deferred : false)\r\n                        }\r\n                    }\r\n                })).fail(deferred.reject)\r\n            } else {\r\n                that._update(deferred)\r\n            }\r\n        },\r\n        _sort: function(descriptions, data, getAscOrder) {\r\n            var store = this._store;\r\n            if (store && !this._paginate) {\r\n                sort(descriptions, data, getAscOrder)\r\n            }\r\n        },\r\n        paginate: function() {\r\n            return this._paginate && this._store && this._store.supportPaging()\r\n        },\r\n        isEmpty: function() {\r\n            var dataFields = this.getAreaFields(\"data\").filter(f => false !== f.visible);\r\n            var data = this.getData();\r\n            return !dataFields.length || !data.values.length\r\n        },\r\n        _update: function(deferred) {\r\n            var that = this;\r\n            var descriptions = that._descriptions;\r\n            var loadedData = that._data;\r\n            var dataFields = descriptions.values;\r\n            var expressionsUsed = areExpressionsUsed(dataFields);\r\n            when(formatHeaders(descriptions, loadedData), updateCache(loadedData.rows), updateCache(loadedData.columns)).done((function() {\r\n                if (expressionsUsed) {\r\n                    that._sort(descriptions, loadedData, expressionsUsed);\r\n                    !that.isEmpty() && applyDisplaySummaryMode(descriptions, loadedData)\r\n                }\r\n                that._sort(descriptions, loadedData);\r\n                !that.isEmpty() && isRunningTotalUsed(dataFields) && applyRunningTotal(descriptions, loadedData);\r\n                that._data = loadedData;\r\n                false !== deferred && when(deferred).done((function() {\r\n                    that._isFieldsModified = false;\r\n                    that._eventsStrategy.fireEvent(\"changed\");\r\n                    if (isDefined(that._data.grandTotalRowIndex)) {\r\n                        loadedData.grandTotalRowIndex = that._data.grandTotalRowIndex\r\n                    }\r\n                    if (isDefined(that._data.grandTotalColumnIndex)) {\r\n                        loadedData.grandTotalColumnIndex = that._data.grandTotalColumnIndex\r\n                    }\r\n                }));\r\n                deferred && deferred.resolve(that._data)\r\n            }));\r\n            return deferred\r\n        },\r\n        store: function() {\r\n            return this._store\r\n        },\r\n        collapseHeaderItem: function(area, path) {\r\n            var headerItems = \"column\" === area ? this._data.columns : this._data.rows;\r\n            var headerItem = findHeaderItem(headerItems, path);\r\n            var field = this.getAreaFields(area)[path.length - 1];\r\n            if (headerItem && headerItem.children) {\r\n                this._eventsStrategy.fireEvent(\"expandValueChanging\", [{\r\n                    area: area,\r\n                    path: path,\r\n                    expanded: false\r\n                }]);\r\n                if (field) {\r\n                    field.expanded = false\r\n                }\r\n                headerItem.collapsedChildren = headerItem.children;\r\n                delete headerItem.children;\r\n                this._update();\r\n                if (this.paginate()) {\r\n                    this.load()\r\n                }\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        collapseAll: function(id) {\r\n            var dataChanged = false;\r\n            var field = this.field(id) || {};\r\n            var areaOffsets = [this.getAreaFields(field.area).indexOf(field)];\r\n            field.expanded = false;\r\n            if (field && field.levels) {\r\n                areaOffsets = [];\r\n                field.levels.forEach(f => {\r\n                    areaOffsets.push(this.getAreaFields(field.area).indexOf(f));\r\n                    f.expanded = false\r\n                })\r\n            }\r\n            foreachTree(this._data[field.area + \"s\"], (function(items) {\r\n                var item = items[0];\r\n                var path = createPath(items);\r\n                if (item && item.children && -1 !== areaOffsets.indexOf(path.length - 1)) {\r\n                    item.collapsedChildren = item.children;\r\n                    delete item.children;\r\n                    dataChanged = true\r\n                }\r\n            }), true);\r\n            dataChanged && this._update()\r\n        },\r\n        expandAll: function(id) {\r\n            var field = this.field(id);\r\n            if (field && field.area) {\r\n                field.expanded = true;\r\n                if (field && field.levels) {\r\n                    field.levels.forEach(f => {\r\n                        f.expanded = true\r\n                    })\r\n                }\r\n                this.load()\r\n            }\r\n        },\r\n        expandHeaderItem: function(area, path) {\r\n            var headerItems = \"column\" === area ? this._data.columns : this._data.rows;\r\n            var headerItem = findHeaderItem(headerItems, path);\r\n            if (headerItem && !headerItem.children) {\r\n                var hasCache = !!headerItem.collapsedChildren;\r\n                var options = {\r\n                    area: area,\r\n                    path: path,\r\n                    expanded: true,\r\n                    needExpandData: !hasCache\r\n                };\r\n                this._eventsStrategy.fireEvent(\"expandValueChanging\", [options]);\r\n                if (hasCache) {\r\n                    headerItem.children = headerItem.collapsedChildren;\r\n                    delete headerItem.collapsedChildren;\r\n                    this._update()\r\n                } else if (this.store()) {\r\n                    this.load(options)\r\n                }\r\n                return hasCache\r\n            }\r\n            return false\r\n        },\r\n        mergePartialDataSource: function(dataSource, deferred) {\r\n            var that = this;\r\n            var loadedData = that._data;\r\n            var newRowItemIndexesToCurrent;\r\n            var newColumnItemIndexesToCurrent;\r\n            if (dataSource && dataSource.values) {\r\n                dataSource.rows = dataSource.rows || [];\r\n                dataSource.columns = dataSource.columns || [];\r\n                newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalColumnIndex);\r\n                newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex);\r\n                when(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done((function(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\r\n                    if (newRowItemIndexesToCurrent.length || newColumnItemIndexesToCurrent.length) {\r\n                        updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent)\r\n                    }\r\n                    that._update(deferred)\r\n                }))\r\n            }\r\n        },\r\n        applyPartialDataSource: function(area, path, dataSource, deferred, oppositePath) {\r\n            var that = this;\r\n            var loadedData = that._data;\r\n            var headerItems = \"column\" === area ? loadedData.columns : loadedData.rows;\r\n            var headerItem;\r\n            var oppositeHeaderItems = \"column\" === area ? loadedData.rows : loadedData.columns;\r\n            var oppositeHeaderItem;\r\n            var newRowItemIndexesToCurrent;\r\n            var newColumnItemIndexesToCurrent;\r\n            if (dataSource && dataSource.values) {\r\n                dataSource.rows = dataSource.rows || [];\r\n                dataSource.columns = dataSource.columns || [];\r\n                headerItem = findHeaderItem(headerItems, path);\r\n                oppositeHeaderItem = oppositePath && findHeaderItem(oppositeHeaderItems, oppositePath);\r\n                if (headerItem) {\r\n                    if (\"column\" === area) {\r\n                        newColumnItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.columns, loadedData.grandTotalColumnIndex);\r\n                        if (oppositeHeaderItem) {\r\n                            newRowItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.rows, loadedData.grandTotalRowIndex)\r\n                        } else {\r\n                            newRowItemIndexesToCurrent = updateHeaderItems(loadedData.rows, dataSource.rows, loadedData.grandTotalRowIndex)\r\n                        }\r\n                    } else {\r\n                        newRowItemIndexesToCurrent = updateHeaderItemChildren(headerItems, headerItem, dataSource.rows, loadedData.grandTotalRowIndex);\r\n                        if (oppositeHeaderItem) {\r\n                            newColumnItemIndexesToCurrent = updateHeaderItemChildren(oppositeHeaderItems, oppositeHeaderItem, dataSource.columns, loadedData.grandTotalColumnIndex)\r\n                        } else {\r\n                            newColumnItemIndexesToCurrent = updateHeaderItems(loadedData.columns, dataSource.columns, loadedData.grandTotalColumnIndex)\r\n                        }\r\n                    }\r\n                    when(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent).done((function(newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent) {\r\n                        if (\"row\" === area && newRowItemIndexesToCurrent.length || \"column\" === area && newColumnItemIndexesToCurrent.length) {\r\n                            updateDataSourceCells(loadedData, dataSource.values, newRowItemIndexesToCurrent, newColumnItemIndexesToCurrent)\r\n                        }\r\n                        that._update(deferred)\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        on(eventName, eventHandler) {\r\n            this._eventsStrategy.on(eventName, eventHandler);\r\n            return this\r\n        },\r\n        off(eventName, eventHandler) {\r\n            this._eventsStrategy.off(eventName, eventHandler);\r\n            return this\r\n        },\r\n        dispose: function() {\r\n            var delayedLoadTask = this._delayedLoadTask;\r\n            this._eventsStrategy.dispose();\r\n            if (delayedLoadTask) {\r\n                delayedLoadTask.abort()\r\n            }\r\n            this._isDisposed = true\r\n        },\r\n        isDisposed: function() {\r\n            return !!this._isDisposed\r\n        }\r\n    }\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
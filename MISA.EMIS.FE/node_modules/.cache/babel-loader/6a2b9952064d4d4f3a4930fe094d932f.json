{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/translators/range.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined, isDate, isFunction } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nvar _isDefined = isDefined;\nvar _isDate = isDate;\nvar _isFunction = isFunction;\nimport { unique } from \"../core/utils\";\nvar minSelector = \"min\";\nvar maxSelector = \"max\";\nvar minVisibleSelector = \"minVisible\";\nvar maxVisibleSelector = \"maxVisible\";\nvar baseSelector = \"base\";\nvar axisTypeSelector = \"axisType\";\n\nfunction otherLessThan(thisValue, otherValue) {\n  return otherValue < thisValue;\n}\n\nfunction otherGreaterThan(thisValue, otherValue) {\n  return otherValue > thisValue;\n}\n\nfunction compareAndReplace(thisValue, otherValue, setValue, compare) {\n  var otherValueDefined = _isDefined(otherValue);\n\n  if (_isDefined(thisValue)) {\n    if (otherValueDefined && compare(thisValue, otherValue)) {\n      setValue(otherValue);\n    }\n  } else if (otherValueDefined) {\n    setValue(otherValue);\n  }\n}\n\nexport var Range = function (range) {\n  range && extend(this, range);\n};\nvar _Range = Range;\n_Range.prototype = {\n  constructor: _Range,\n  addRange: function (otherRange) {\n    var that = this;\n    var categories = that.categories;\n    var otherCategories = otherRange.categories;\n    var isDiscrete = \"discrete\" === that[axisTypeSelector];\n\n    var compareAndReplaceByField = function (field, compare) {\n      compareAndReplace(that[field], otherRange[field], function (value) {\n        that[field] = value;\n      }, compare);\n    };\n\n    var controlValuesByVisibleBounds = function (valueField, visibleValueField, compare) {\n      compareAndReplace(that[valueField], that[visibleValueField], function (value) {\n        _isDefined(that[valueField]) && (that[valueField] = value);\n      }, compare);\n    };\n\n    var checkField = function (field) {\n      that[field] = that[field] || otherRange[field];\n    };\n\n    checkField(\"invert\");\n    checkField(\"containsConstantLine\");\n    checkField(axisTypeSelector);\n    checkField(\"dataType\");\n    checkField(\"isSpacedMargin\");\n\n    if (\"logarithmic\" === that[axisTypeSelector]) {\n      checkField(baseSelector);\n    } else {\n      that[baseSelector] = void 0;\n    }\n\n    compareAndReplaceByField(minSelector, otherLessThan);\n    compareAndReplaceByField(maxSelector, otherGreaterThan);\n\n    if (isDiscrete) {\n      checkField(minVisibleSelector);\n      checkField(maxVisibleSelector);\n    } else {\n      compareAndReplaceByField(minVisibleSelector, otherLessThan);\n      compareAndReplaceByField(maxVisibleSelector, otherGreaterThan);\n    }\n\n    compareAndReplaceByField(\"interval\", otherLessThan);\n\n    if (!isDiscrete) {\n      controlValuesByVisibleBounds(minSelector, minVisibleSelector, otherLessThan);\n      controlValuesByVisibleBounds(minSelector, maxVisibleSelector, otherLessThan);\n      controlValuesByVisibleBounds(maxSelector, maxVisibleSelector, otherGreaterThan);\n      controlValuesByVisibleBounds(maxSelector, minVisibleSelector, otherGreaterThan);\n    }\n\n    if (void 0 === categories) {\n      that.categories = otherCategories;\n    } else {\n      that.categories = otherCategories ? unique(categories.concat(otherCategories)) : categories;\n    }\n\n    if (\"logarithmic\" === that[axisTypeSelector]) {\n      checkField(\"allowNegatives\");\n      compareAndReplaceByField(\"linearThreshold\", otherLessThan);\n    }\n\n    return that;\n  },\n  isEmpty: function () {\n    return (!_isDefined(this[minSelector]) || !_isDefined(this[maxSelector])) && (!this.categories || 0 === this.categories.length);\n  },\n  correctValueZeroLevel: function () {\n    var that = this;\n\n    if (_isDate(that[maxSelector]) || _isDate(that[minSelector])) {\n      return that;\n    }\n\n    function setZeroLevel(min, max) {\n      that[min] < 0 && that[max] < 0 && (that[max] = 0);\n      that[min] > 0 && that[max] > 0 && (that[min] = 0);\n    }\n\n    setZeroLevel(minSelector, maxSelector);\n    setZeroLevel(minVisibleSelector, maxVisibleSelector);\n    return that;\n  },\n\n  sortCategories(sort) {\n    if (false === sort || !this.categories) {\n      return;\n    }\n\n    if (Array.isArray(sort)) {\n      var sortValues = sort.map(item => item.valueOf());\n      var filteredSeriesCategories = this.categories.filter(item => -1 === sortValues.indexOf(item.valueOf()));\n      this.categories = sort.concat(filteredSeriesCategories);\n    } else {\n      var notAFunction = !_isFunction(sort);\n\n      if (notAFunction && \"string\" !== this.dataType) {\n        sort = (a, b) => a.valueOf() - b.valueOf();\n      } else if (notAFunction) {\n        sort = false;\n      }\n\n      sort && this.categories.sort(sort);\n    }\n  }\n\n};","map":{"version":3,"names":["isDefined","isDate","isFunction","extend","_isDefined","_isDate","_isFunction","unique","minSelector","maxSelector","minVisibleSelector","maxVisibleSelector","baseSelector","axisTypeSelector","otherLessThan","thisValue","otherValue","otherGreaterThan","compareAndReplace","setValue","compare","otherValueDefined","Range","range","_Range","prototype","constructor","addRange","otherRange","that","categories","otherCategories","isDiscrete","compareAndReplaceByField","field","value","controlValuesByVisibleBounds","valueField","visibleValueField","checkField","concat","isEmpty","length","correctValueZeroLevel","setZeroLevel","min","max","sortCategories","sort","Array","isArray","sortValues","map","item","valueOf","filteredSeriesCategories","filter","indexOf","notAFunction","dataType","a","b"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/translators/range.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/translators/range.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined,\r\n    isDate,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar _isDefined = isDefined;\r\nvar _isDate = isDate;\r\nvar _isFunction = isFunction;\r\nimport {\r\n    unique\r\n} from \"../core/utils\";\r\nvar minSelector = \"min\";\r\nvar maxSelector = \"max\";\r\nvar minVisibleSelector = \"minVisible\";\r\nvar maxVisibleSelector = \"maxVisible\";\r\nvar baseSelector = \"base\";\r\nvar axisTypeSelector = \"axisType\";\r\n\r\nfunction otherLessThan(thisValue, otherValue) {\r\n    return otherValue < thisValue\r\n}\r\n\r\nfunction otherGreaterThan(thisValue, otherValue) {\r\n    return otherValue > thisValue\r\n}\r\n\r\nfunction compareAndReplace(thisValue, otherValue, setValue, compare) {\r\n    var otherValueDefined = _isDefined(otherValue);\r\n    if (_isDefined(thisValue)) {\r\n        if (otherValueDefined && compare(thisValue, otherValue)) {\r\n            setValue(otherValue)\r\n        }\r\n    } else if (otherValueDefined) {\r\n        setValue(otherValue)\r\n    }\r\n}\r\nexport var Range = function(range) {\r\n    range && extend(this, range)\r\n};\r\nvar _Range = Range;\r\n_Range.prototype = {\r\n    constructor: _Range,\r\n    addRange: function(otherRange) {\r\n        var that = this;\r\n        var categories = that.categories;\r\n        var otherCategories = otherRange.categories;\r\n        var isDiscrete = \"discrete\" === that[axisTypeSelector];\r\n        var compareAndReplaceByField = function(field, compare) {\r\n            compareAndReplace(that[field], otherRange[field], (function(value) {\r\n                that[field] = value\r\n            }), compare)\r\n        };\r\n        var controlValuesByVisibleBounds = function(valueField, visibleValueField, compare) {\r\n            compareAndReplace(that[valueField], that[visibleValueField], (function(value) {\r\n                _isDefined(that[valueField]) && (that[valueField] = value)\r\n            }), compare)\r\n        };\r\n        var checkField = function(field) {\r\n            that[field] = that[field] || otherRange[field]\r\n        };\r\n        checkField(\"invert\");\r\n        checkField(\"containsConstantLine\");\r\n        checkField(axisTypeSelector);\r\n        checkField(\"dataType\");\r\n        checkField(\"isSpacedMargin\");\r\n        if (\"logarithmic\" === that[axisTypeSelector]) {\r\n            checkField(baseSelector)\r\n        } else {\r\n            that[baseSelector] = void 0\r\n        }\r\n        compareAndReplaceByField(minSelector, otherLessThan);\r\n        compareAndReplaceByField(maxSelector, otherGreaterThan);\r\n        if (isDiscrete) {\r\n            checkField(minVisibleSelector);\r\n            checkField(maxVisibleSelector)\r\n        } else {\r\n            compareAndReplaceByField(minVisibleSelector, otherLessThan);\r\n            compareAndReplaceByField(maxVisibleSelector, otherGreaterThan)\r\n        }\r\n        compareAndReplaceByField(\"interval\", otherLessThan);\r\n        if (!isDiscrete) {\r\n            controlValuesByVisibleBounds(minSelector, minVisibleSelector, otherLessThan);\r\n            controlValuesByVisibleBounds(minSelector, maxVisibleSelector, otherLessThan);\r\n            controlValuesByVisibleBounds(maxSelector, maxVisibleSelector, otherGreaterThan);\r\n            controlValuesByVisibleBounds(maxSelector, minVisibleSelector, otherGreaterThan)\r\n        }\r\n        if (void 0 === categories) {\r\n            that.categories = otherCategories\r\n        } else {\r\n            that.categories = otherCategories ? unique(categories.concat(otherCategories)) : categories\r\n        }\r\n        if (\"logarithmic\" === that[axisTypeSelector]) {\r\n            checkField(\"allowNegatives\");\r\n            compareAndReplaceByField(\"linearThreshold\", otherLessThan)\r\n        }\r\n        return that\r\n    },\r\n    isEmpty: function() {\r\n        return (!_isDefined(this[minSelector]) || !_isDefined(this[maxSelector])) && (!this.categories || 0 === this.categories.length)\r\n    },\r\n    correctValueZeroLevel: function() {\r\n        var that = this;\r\n        if (_isDate(that[maxSelector]) || _isDate(that[minSelector])) {\r\n            return that\r\n        }\r\n\r\n        function setZeroLevel(min, max) {\r\n            that[min] < 0 && that[max] < 0 && (that[max] = 0);\r\n            that[min] > 0 && that[max] > 0 && (that[min] = 0)\r\n        }\r\n        setZeroLevel(minSelector, maxSelector);\r\n        setZeroLevel(minVisibleSelector, maxVisibleSelector);\r\n        return that\r\n    },\r\n    sortCategories(sort) {\r\n        if (false === sort || !this.categories) {\r\n            return\r\n        }\r\n        if (Array.isArray(sort)) {\r\n            var sortValues = sort.map(item => item.valueOf());\r\n            var filteredSeriesCategories = this.categories.filter(item => -1 === sortValues.indexOf(item.valueOf()));\r\n            this.categories = sort.concat(filteredSeriesCategories)\r\n        } else {\r\n            var notAFunction = !_isFunction(sort);\r\n            if (notAFunction && \"string\" !== this.dataType) {\r\n                sort = (a, b) => a.valueOf() - b.valueOf()\r\n            } else if (notAFunction) {\r\n                sort = false\r\n            }\r\n            sort && this.categories.sort(sort)\r\n        }\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SADJ,EAEIC,MAFJ,EAGIC,UAHJ,QAIO,uBAJP;AAKA,SACIC,MADJ,QAEO,yBAFP;AAGA,IAAIC,UAAU,GAAGJ,SAAjB;AACA,IAAIK,OAAO,GAAGJ,MAAd;AACA,IAAIK,WAAW,GAAGJ,UAAlB;AACA,SACIK,MADJ,QAEO,eAFP;AAGA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,kBAAkB,GAAG,YAAzB;AACA,IAAIC,kBAAkB,GAAG,YAAzB;AACA,IAAIC,YAAY,GAAG,MAAnB;AACA,IAAIC,gBAAgB,GAAG,UAAvB;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,UAAlC,EAA8C;EAC1C,OAAOA,UAAU,GAAGD,SAApB;AACH;;AAED,SAASE,gBAAT,CAA0BF,SAA1B,EAAqCC,UAArC,EAAiD;EAC7C,OAAOA,UAAU,GAAGD,SAApB;AACH;;AAED,SAASG,iBAAT,CAA2BH,SAA3B,EAAsCC,UAAtC,EAAkDG,QAAlD,EAA4DC,OAA5D,EAAqE;EACjE,IAAIC,iBAAiB,GAAGjB,UAAU,CAACY,UAAD,CAAlC;;EACA,IAAIZ,UAAU,CAACW,SAAD,CAAd,EAA2B;IACvB,IAAIM,iBAAiB,IAAID,OAAO,CAACL,SAAD,EAAYC,UAAZ,CAAhC,EAAyD;MACrDG,QAAQ,CAACH,UAAD,CAAR;IACH;EACJ,CAJD,MAIO,IAAIK,iBAAJ,EAAuB;IAC1BF,QAAQ,CAACH,UAAD,CAAR;EACH;AACJ;;AACD,OAAO,IAAIM,KAAK,GAAG,UAASC,KAAT,EAAgB;EAC/BA,KAAK,IAAIpB,MAAM,CAAC,IAAD,EAAOoB,KAAP,CAAf;AACH,CAFM;AAGP,IAAIC,MAAM,GAAGF,KAAb;AACAE,MAAM,CAACC,SAAP,GAAmB;EACfC,WAAW,EAAEF,MADE;EAEfG,QAAQ,EAAE,UAASC,UAAT,EAAqB;IAC3B,IAAIC,IAAI,GAAG,IAAX;IACA,IAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;IACA,IAAIC,eAAe,GAAGH,UAAU,CAACE,UAAjC;IACA,IAAIE,UAAU,GAAG,eAAeH,IAAI,CAAChB,gBAAD,CAApC;;IACA,IAAIoB,wBAAwB,GAAG,UAASC,KAAT,EAAgBd,OAAhB,EAAyB;MACpDF,iBAAiB,CAACW,IAAI,CAACK,KAAD,CAAL,EAAcN,UAAU,CAACM,KAAD,CAAxB,EAAkC,UAASC,KAAT,EAAgB;QAC/DN,IAAI,CAACK,KAAD,CAAJ,GAAcC,KAAd;MACH,CAFgB,EAEbf,OAFa,CAAjB;IAGH,CAJD;;IAKA,IAAIgB,4BAA4B,GAAG,UAASC,UAAT,EAAqBC,iBAArB,EAAwClB,OAAxC,EAAiD;MAChFF,iBAAiB,CAACW,IAAI,CAACQ,UAAD,CAAL,EAAmBR,IAAI,CAACS,iBAAD,CAAvB,EAA6C,UAASH,KAAT,EAAgB;QAC1E/B,UAAU,CAACyB,IAAI,CAACQ,UAAD,CAAL,CAAV,KAAiCR,IAAI,CAACQ,UAAD,CAAJ,GAAmBF,KAApD;MACH,CAFgB,EAEbf,OAFa,CAAjB;IAGH,CAJD;;IAKA,IAAImB,UAAU,GAAG,UAASL,KAAT,EAAgB;MAC7BL,IAAI,CAACK,KAAD,CAAJ,GAAcL,IAAI,CAACK,KAAD,CAAJ,IAAeN,UAAU,CAACM,KAAD,CAAvC;IACH,CAFD;;IAGAK,UAAU,CAAC,QAAD,CAAV;IACAA,UAAU,CAAC,sBAAD,CAAV;IACAA,UAAU,CAAC1B,gBAAD,CAAV;IACA0B,UAAU,CAAC,UAAD,CAAV;IACAA,UAAU,CAAC,gBAAD,CAAV;;IACA,IAAI,kBAAkBV,IAAI,CAAChB,gBAAD,CAA1B,EAA8C;MAC1C0B,UAAU,CAAC3B,YAAD,CAAV;IACH,CAFD,MAEO;MACHiB,IAAI,CAACjB,YAAD,CAAJ,GAAqB,KAAK,CAA1B;IACH;;IACDqB,wBAAwB,CAACzB,WAAD,EAAcM,aAAd,CAAxB;IACAmB,wBAAwB,CAACxB,WAAD,EAAcQ,gBAAd,CAAxB;;IACA,IAAIe,UAAJ,EAAgB;MACZO,UAAU,CAAC7B,kBAAD,CAAV;MACA6B,UAAU,CAAC5B,kBAAD,CAAV;IACH,CAHD,MAGO;MACHsB,wBAAwB,CAACvB,kBAAD,EAAqBI,aAArB,CAAxB;MACAmB,wBAAwB,CAACtB,kBAAD,EAAqBM,gBAArB,CAAxB;IACH;;IACDgB,wBAAwB,CAAC,UAAD,EAAanB,aAAb,CAAxB;;IACA,IAAI,CAACkB,UAAL,EAAiB;MACbI,4BAA4B,CAAC5B,WAAD,EAAcE,kBAAd,EAAkCI,aAAlC,CAA5B;MACAsB,4BAA4B,CAAC5B,WAAD,EAAcG,kBAAd,EAAkCG,aAAlC,CAA5B;MACAsB,4BAA4B,CAAC3B,WAAD,EAAcE,kBAAd,EAAkCM,gBAAlC,CAA5B;MACAmB,4BAA4B,CAAC3B,WAAD,EAAcC,kBAAd,EAAkCO,gBAAlC,CAA5B;IACH;;IACD,IAAI,KAAK,CAAL,KAAWa,UAAf,EAA2B;MACvBD,IAAI,CAACC,UAAL,GAAkBC,eAAlB;IACH,CAFD,MAEO;MACHF,IAAI,CAACC,UAAL,GAAkBC,eAAe,GAAGxB,MAAM,CAACuB,UAAU,CAACU,MAAX,CAAkBT,eAAlB,CAAD,CAAT,GAAgDD,UAAjF;IACH;;IACD,IAAI,kBAAkBD,IAAI,CAAChB,gBAAD,CAA1B,EAA8C;MAC1C0B,UAAU,CAAC,gBAAD,CAAV;MACAN,wBAAwB,CAAC,iBAAD,EAAoBnB,aAApB,CAAxB;IACH;;IACD,OAAOe,IAAP;EACH,CAxDc;EAyDfY,OAAO,EAAE,YAAW;IAChB,OAAO,CAAC,CAACrC,UAAU,CAAC,KAAKI,WAAL,CAAD,CAAX,IAAkC,CAACJ,UAAU,CAAC,KAAKK,WAAL,CAAD,CAA9C,MAAuE,CAAC,KAAKqB,UAAN,IAAoB,MAAM,KAAKA,UAAL,CAAgBY,MAAjH,CAAP;EACH,CA3Dc;EA4DfC,qBAAqB,EAAE,YAAW;IAC9B,IAAId,IAAI,GAAG,IAAX;;IACA,IAAIxB,OAAO,CAACwB,IAAI,CAACpB,WAAD,CAAL,CAAP,IAA8BJ,OAAO,CAACwB,IAAI,CAACrB,WAAD,CAAL,CAAzC,EAA8D;MAC1D,OAAOqB,IAAP;IACH;;IAED,SAASe,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;MAC5BjB,IAAI,CAACgB,GAAD,CAAJ,GAAY,CAAZ,IAAiBhB,IAAI,CAACiB,GAAD,CAAJ,GAAY,CAA7B,KAAmCjB,IAAI,CAACiB,GAAD,CAAJ,GAAY,CAA/C;MACAjB,IAAI,CAACgB,GAAD,CAAJ,GAAY,CAAZ,IAAiBhB,IAAI,CAACiB,GAAD,CAAJ,GAAY,CAA7B,KAAmCjB,IAAI,CAACgB,GAAD,CAAJ,GAAY,CAA/C;IACH;;IACDD,YAAY,CAACpC,WAAD,EAAcC,WAAd,CAAZ;IACAmC,YAAY,CAAClC,kBAAD,EAAqBC,kBAArB,CAAZ;IACA,OAAOkB,IAAP;EACH,CAzEc;;EA0EfkB,cAAc,CAACC,IAAD,EAAO;IACjB,IAAI,UAAUA,IAAV,IAAkB,CAAC,KAAKlB,UAA5B,EAAwC;MACpC;IACH;;IACD,IAAImB,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;MACrB,IAAIG,UAAU,GAAGH,IAAI,CAACI,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACC,OAAL,EAAjB,CAAjB;MACA,IAAIC,wBAAwB,GAAG,KAAKzB,UAAL,CAAgB0B,MAAhB,CAAuBH,IAAI,IAAI,CAAC,CAAD,KAAOF,UAAU,CAACM,OAAX,CAAmBJ,IAAI,CAACC,OAAL,EAAnB,CAAtC,CAA/B;MACA,KAAKxB,UAAL,GAAkBkB,IAAI,CAACR,MAAL,CAAYe,wBAAZ,CAAlB;IACH,CAJD,MAIO;MACH,IAAIG,YAAY,GAAG,CAACpD,WAAW,CAAC0C,IAAD,CAA/B;;MACA,IAAIU,YAAY,IAAI,aAAa,KAAKC,QAAtC,EAAgD;QAC5CX,IAAI,GAAG,CAACY,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACN,OAAF,KAAcO,CAAC,CAACP,OAAF,EAA/B;MACH,CAFD,MAEO,IAAII,YAAJ,EAAkB;QACrBV,IAAI,GAAG,KAAP;MACH;;MACDA,IAAI,IAAI,KAAKlB,UAAL,CAAgBkB,IAAhB,CAAqBA,IAArB,CAAR;IACH;EACJ;;AA3Fc,CAAnB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import IterResult from './iterresult';\nimport dateutil from './dateutil';\nimport { isArray } from './helpers';\n\nvar Cache =\n/** @class */\nfunction () {\n  function Cache() {\n    this.all = false;\n    this.before = [];\n    this.after = [];\n    this.between = [];\n  }\n  /**\n   * @param {String} what - all/before/after/between\n   * @param {Array,Date} value - an array of dates, one date, or null\n   * @param {Object?} args - _iter arguments\n   */\n\n\n  Cache.prototype._cacheAdd = function (what, value, args) {\n    if (value) {\n      value = value instanceof Date ? dateutil.clone(value) : dateutil.cloneDates(value);\n    }\n\n    if (what === 'all') {\n      this.all = value;\n    } else {\n      args._value = value;\n      this[what].push(args);\n    }\n  };\n  /**\n   * @return false - not in the cache\n   *         null  - cached, but zero occurrences (before/after)\n   *         Date  - cached (before/after)\n   *         []    - cached, but zero occurrences (all/between)\n   *         [Date1, DateN] - cached (all/between)\n   */\n\n\n  Cache.prototype._cacheGet = function (what, args) {\n    var cached = false;\n    var argsKeys = args ? Object.keys(args) : [];\n\n    var findCacheDiff = function (item) {\n      for (var i = 0; i < argsKeys.length; i++) {\n        var key = argsKeys[i];\n\n        if (String(args[key]) !== String(item[key])) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    var cachedObject = this[what];\n\n    if (what === 'all') {\n      cached = this.all;\n    } else if (isArray(cachedObject)) {\n      // Let's see whether we've already called the\n      // 'what' method with the same 'args'\n      for (var i = 0; i < cachedObject.length; i++) {\n        var item = cachedObject[i];\n        if (argsKeys.length && findCacheDiff(item)) continue;\n        cached = item._value;\n        break;\n      }\n    }\n\n    if (!cached && this.all) {\n      // Not in the cache, but we already know all the occurrences,\n      // so we can find the correct dates from the cached ones.\n      var iterResult = new IterResult(what, args);\n\n      for (var i = 0; i < this.all.length; i++) {\n        if (!iterResult.accept(this.all[i])) break;\n      }\n\n      cached = iterResult.getValue();\n\n      this._cacheAdd(what, cached, args);\n    }\n\n    return isArray(cached) ? dateutil.cloneDates(cached) : cached instanceof Date ? dateutil.clone(cached) : cached;\n  };\n\n  return Cache;\n}();\n\nexport { Cache };","map":{"version":3,"mappings":"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","names":["IterResult","dateutil","isArray","Cache","what","value","args","Date","clone","cloneDates","all","_value","push","cached","argsKeys","Object","keys","findCacheDiff","item","i","length","key","String","cachedObject","iterResult","accept","getValue","_cacheAdd"],"sourceRoot":"","sources":["../../../src/cache.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
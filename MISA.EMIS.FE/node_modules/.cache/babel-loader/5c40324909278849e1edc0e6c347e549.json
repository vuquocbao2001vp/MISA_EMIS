{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/timezones/utils.timezones_data.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport query from \"../../../data/query\";\nimport errors from \"../../../core/errors\";\nimport tzData from \"./timezones_data\";\nimport { sign } from \"../../../core/utils/math\";\n\nvar getConvertedUntils = value => value.split(\"|\").map(until => {\n  if (\"Infinity\" === until) {\n    return null;\n  }\n\n  return 1e3 * parseInt(until, 36);\n});\n\nvar parseTimezone = timeZoneConfig => {\n  var offsets = timeZoneConfig.offsets;\n  var offsetIndices = timeZoneConfig.offsetIndices;\n  var untils = timeZoneConfig.untils;\n  var offsetList = offsets.split(\"|\").map(value => parseInt(value));\n  var offsetIndexList = offsetIndices.split(\"\").map(value => parseInt(value));\n  var dateList = getConvertedUntils(untils).map((accumulator = 0, value => accumulator += value));\n  var accumulator;\n  return {\n    offsetList: offsetList,\n    offsetIndexList: offsetIndexList,\n    dateList: dateList\n  };\n};\n\nclass TimeZoneCache {\n  constructor() {\n    this.map = new Map();\n  }\n\n  tryGet(id) {\n    if (!this.map.get(id)) {\n      var config = timeZoneDataUtils.getTimezoneById(id);\n\n      if (!config) {\n        return false;\n      }\n\n      var timeZoneInfo = parseTimezone(config);\n      this.map.set(id, timeZoneInfo);\n    }\n\n    return this.map.get(id);\n  }\n\n}\n\nvar tzCache = new TimeZoneCache();\nvar timeZoneDataUtils = {\n  _tzCache: tzCache,\n  _timeZones: tzData.zones,\n  getDisplayedTimeZones: function (timestamp) {\n    var timeZones = this._timeZones.map(timezone => {\n      var timeZoneInfo = parseTimezone(timezone);\n      var offset = this.getUtcOffset(timeZoneInfo, timestamp);\n      var title = \"(GMT \".concat(this.formatOffset(offset), \") \").concat(this.formatId(timezone.id));\n      return {\n        offset: offset,\n        title: title,\n        id: timezone.id\n      };\n    });\n\n    return query(timeZones).sortBy(\"offset\").toArray();\n  },\n  formatOffset: function (offset) {\n    var hours = Math.floor(offset);\n    var minutesInDecimal = offset - hours;\n    var signString = sign(offset) >= 0 ? \"+\" : \"-\";\n    var hoursString = \"0\".concat(Math.abs(hours)).slice(-2);\n    var minutesString = minutesInDecimal > 0 ? \":\".concat(60 * minutesInDecimal) : \":00\";\n    return signString + hoursString + minutesString;\n  },\n  formatId: function (id) {\n    return id.split(\"/\").join(\" - \").split(\"_\").join(\" \");\n  },\n  getTimezoneById: function (id) {\n    if (!id) {\n      return;\n    }\n\n    var tzList = this._timeZones;\n\n    for (var i = 0; i < tzList.length; i++) {\n      var currentId = tzList[i].id;\n\n      if (currentId === id) {\n        return tzList[i];\n      }\n    }\n\n    errors.log(\"W0009\", id);\n    return;\n  },\n  getTimeZoneOffsetById: function (id, timestamp) {\n    var timeZoneInfo = tzCache.tryGet(id);\n    return timeZoneInfo ? this.getUtcOffset(timeZoneInfo, timestamp) : void 0;\n  },\n  getTimeZoneDeclarationTuple: function (id, year) {\n    var timeZoneInfo = tzCache.tryGet(id);\n    return timeZoneInfo ? this.getTimeZoneDeclarationTupleCore(timeZoneInfo, year) : [];\n  },\n  getTimeZoneDeclarationTupleCore: function (timeZoneInfo, year) {\n    var offsetList = timeZoneInfo.offsetList;\n    var offsetIndexList = timeZoneInfo.offsetIndexList;\n    var dateList = timeZoneInfo.dateList;\n    var tupleResult = [];\n\n    for (var i = 0; i < dateList.length; i++) {\n      var currentDate = dateList[i];\n      var currentYear = new Date(currentDate).getFullYear();\n\n      if (currentYear === year) {\n        var offset = offsetList[offsetIndexList[i + 1]];\n        tupleResult.push({\n          date: currentDate,\n          offset: -offset / 60\n        });\n      }\n\n      if (currentYear > year) {\n        break;\n      }\n    }\n\n    return tupleResult;\n  },\n  getUtcOffset: function (timeZoneInfo, dateTimeStamp) {\n    var offsetList = timeZoneInfo.offsetList;\n    var offsetIndexList = timeZoneInfo.offsetIndexList;\n    var dateList = timeZoneInfo.dateList;\n    var lastIntervalStartIndex = dateList.length - 1 - 1;\n    var index = lastIntervalStartIndex;\n\n    while (index >= 0 && dateTimeStamp < dateList[index]) {\n      index--;\n    }\n\n    var offset = offsetList[offsetIndexList[index + 1]];\n    return -offset / 60 || offset;\n  }\n};\nexport default timeZoneDataUtils;","map":{"version":3,"names":["query","errors","tzData","sign","getConvertedUntils","value","split","map","until","parseInt","parseTimezone","timeZoneConfig","offsets","offsetIndices","untils","offsetList","offsetIndexList","dateList","accumulator","TimeZoneCache","constructor","Map","tryGet","id","get","config","timeZoneDataUtils","getTimezoneById","timeZoneInfo","set","tzCache","_tzCache","_timeZones","zones","getDisplayedTimeZones","timestamp","timeZones","timezone","offset","getUtcOffset","title","concat","formatOffset","formatId","sortBy","toArray","hours","Math","floor","minutesInDecimal","signString","hoursString","abs","slice","minutesString","join","tzList","i","length","currentId","log","getTimeZoneOffsetById","getTimeZoneDeclarationTuple","year","getTimeZoneDeclarationTupleCore","tupleResult","currentDate","currentYear","Date","getFullYear","push","date","dateTimeStamp","lastIntervalStartIndex","index"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/scheduler/timezones/utils.timezones_data.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/timezones/utils.timezones_data.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport query from \"../../../data/query\";\r\nimport errors from \"../../../core/errors\";\r\nimport tzData from \"./timezones_data\";\r\nimport {\r\n    sign\r\n} from \"../../../core/utils/math\";\r\nvar getConvertedUntils = value => value.split(\"|\").map(until => {\r\n    if (\"Infinity\" === until) {\r\n        return null\r\n    }\r\n    return 1e3 * parseInt(until, 36)\r\n});\r\nvar parseTimezone = timeZoneConfig => {\r\n    var offsets = timeZoneConfig.offsets;\r\n    var offsetIndices = timeZoneConfig.offsetIndices;\r\n    var untils = timeZoneConfig.untils;\r\n    var offsetList = offsets.split(\"|\").map(value => parseInt(value));\r\n    var offsetIndexList = offsetIndices.split(\"\").map(value => parseInt(value));\r\n    var dateList = getConvertedUntils(untils).map((accumulator = 0, value => accumulator += value));\r\n    var accumulator;\r\n    return {\r\n        offsetList: offsetList,\r\n        offsetIndexList: offsetIndexList,\r\n        dateList: dateList\r\n    }\r\n};\r\nclass TimeZoneCache {\r\n    constructor() {\r\n        this.map = new Map\r\n    }\r\n    tryGet(id) {\r\n        if (!this.map.get(id)) {\r\n            var config = timeZoneDataUtils.getTimezoneById(id);\r\n            if (!config) {\r\n                return false\r\n            }\r\n            var timeZoneInfo = parseTimezone(config);\r\n            this.map.set(id, timeZoneInfo)\r\n        }\r\n        return this.map.get(id)\r\n    }\r\n}\r\nvar tzCache = new TimeZoneCache;\r\nvar timeZoneDataUtils = {\r\n    _tzCache: tzCache,\r\n    _timeZones: tzData.zones,\r\n    getDisplayedTimeZones: function(timestamp) {\r\n        var timeZones = this._timeZones.map(timezone => {\r\n            var timeZoneInfo = parseTimezone(timezone);\r\n            var offset = this.getUtcOffset(timeZoneInfo, timestamp);\r\n            var title = \"(GMT \".concat(this.formatOffset(offset), \") \").concat(this.formatId(timezone.id));\r\n            return {\r\n                offset: offset,\r\n                title: title,\r\n                id: timezone.id\r\n            }\r\n        });\r\n        return query(timeZones).sortBy(\"offset\").toArray()\r\n    },\r\n    formatOffset: function(offset) {\r\n        var hours = Math.floor(offset);\r\n        var minutesInDecimal = offset - hours;\r\n        var signString = sign(offset) >= 0 ? \"+\" : \"-\";\r\n        var hoursString = \"0\".concat(Math.abs(hours)).slice(-2);\r\n        var minutesString = minutesInDecimal > 0 ? \":\".concat(60 * minutesInDecimal) : \":00\";\r\n        return signString + hoursString + minutesString\r\n    },\r\n    formatId: function(id) {\r\n        return id.split(\"/\").join(\" - \").split(\"_\").join(\" \")\r\n    },\r\n    getTimezoneById: function(id) {\r\n        if (!id) {\r\n            return\r\n        }\r\n        var tzList = this._timeZones;\r\n        for (var i = 0; i < tzList.length; i++) {\r\n            var currentId = tzList[i].id;\r\n            if (currentId === id) {\r\n                return tzList[i]\r\n            }\r\n        }\r\n        errors.log(\"W0009\", id);\r\n        return\r\n    },\r\n    getTimeZoneOffsetById: function(id, timestamp) {\r\n        var timeZoneInfo = tzCache.tryGet(id);\r\n        return timeZoneInfo ? this.getUtcOffset(timeZoneInfo, timestamp) : void 0\r\n    },\r\n    getTimeZoneDeclarationTuple: function(id, year) {\r\n        var timeZoneInfo = tzCache.tryGet(id);\r\n        return timeZoneInfo ? this.getTimeZoneDeclarationTupleCore(timeZoneInfo, year) : []\r\n    },\r\n    getTimeZoneDeclarationTupleCore: function(timeZoneInfo, year) {\r\n        var offsetList = timeZoneInfo.offsetList;\r\n        var offsetIndexList = timeZoneInfo.offsetIndexList;\r\n        var dateList = timeZoneInfo.dateList;\r\n        var tupleResult = [];\r\n        for (var i = 0; i < dateList.length; i++) {\r\n            var currentDate = dateList[i];\r\n            var currentYear = new Date(currentDate).getFullYear();\r\n            if (currentYear === year) {\r\n                var offset = offsetList[offsetIndexList[i + 1]];\r\n                tupleResult.push({\r\n                    date: currentDate,\r\n                    offset: -offset / 60\r\n                })\r\n            }\r\n            if (currentYear > year) {\r\n                break\r\n            }\r\n        }\r\n        return tupleResult\r\n    },\r\n    getUtcOffset: function(timeZoneInfo, dateTimeStamp) {\r\n        var offsetList = timeZoneInfo.offsetList;\r\n        var offsetIndexList = timeZoneInfo.offsetIndexList;\r\n        var dateList = timeZoneInfo.dateList;\r\n        var lastIntervalStartIndex = dateList.length - 1 - 1;\r\n        var index = lastIntervalStartIndex;\r\n        while (index >= 0 && dateTimeStamp < dateList[index]) {\r\n            index--\r\n        }\r\n        var offset = offsetList[offsetIndexList[index + 1]];\r\n        return -offset / 60 || offset\r\n    }\r\n};\r\nexport default timeZoneDataUtils;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SACIC,IADJ,QAEO,0BAFP;;AAGA,IAAIC,kBAAkB,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqBC,KAAK,IAAI;EAC5D,IAAI,eAAeA,KAAnB,EAA0B;IACtB,OAAO,IAAP;EACH;;EACD,OAAO,MAAMC,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAArB;AACH,CALiC,CAAlC;;AAMA,IAAIE,aAAa,GAAGC,cAAc,IAAI;EAClC,IAAIC,OAAO,GAAGD,cAAc,CAACC,OAA7B;EACA,IAAIC,aAAa,GAAGF,cAAc,CAACE,aAAnC;EACA,IAAIC,MAAM,GAAGH,cAAc,CAACG,MAA5B;EACA,IAAIC,UAAU,GAAGH,OAAO,CAACN,KAAR,CAAc,GAAd,EAAmBC,GAAnB,CAAuBF,KAAK,IAAII,QAAQ,CAACJ,KAAD,CAAxC,CAAjB;EACA,IAAIW,eAAe,GAAGH,aAAa,CAACP,KAAd,CAAoB,EAApB,EAAwBC,GAAxB,CAA4BF,KAAK,IAAII,QAAQ,CAACJ,KAAD,CAA7C,CAAtB;EACA,IAAIY,QAAQ,GAAGb,kBAAkB,CAACU,MAAD,CAAlB,CAA2BP,GAA3B,EAAgCW,WAAW,GAAG,CAAd,EAAiBb,KAAK,IAAIa,WAAW,IAAIb,KAAzE,EAAf;EACA,IAAIa,WAAJ;EACA,OAAO;IACHH,UAAU,EAAEA,UADT;IAEHC,eAAe,EAAEA,eAFd;IAGHC,QAAQ,EAAEA;EAHP,CAAP;AAKH,CAbD;;AAcA,MAAME,aAAN,CAAoB;EAChBC,WAAW,GAAG;IACV,KAAKb,GAAL,GAAW,IAAIc,GAAJ,EAAX;EACH;;EACDC,MAAM,CAACC,EAAD,EAAK;IACP,IAAI,CAAC,KAAKhB,GAAL,CAASiB,GAAT,CAAaD,EAAb,CAAL,EAAuB;MACnB,IAAIE,MAAM,GAAGC,iBAAiB,CAACC,eAAlB,CAAkCJ,EAAlC,CAAb;;MACA,IAAI,CAACE,MAAL,EAAa;QACT,OAAO,KAAP;MACH;;MACD,IAAIG,YAAY,GAAGlB,aAAa,CAACe,MAAD,CAAhC;MACA,KAAKlB,GAAL,CAASsB,GAAT,CAAaN,EAAb,EAAiBK,YAAjB;IACH;;IACD,OAAO,KAAKrB,GAAL,CAASiB,GAAT,CAAaD,EAAb,CAAP;EACH;;AAde;;AAgBpB,IAAIO,OAAO,GAAG,IAAIX,aAAJ,EAAd;AACA,IAAIO,iBAAiB,GAAG;EACpBK,QAAQ,EAAED,OADU;EAEpBE,UAAU,EAAE9B,MAAM,CAAC+B,KAFC;EAGpBC,qBAAqB,EAAE,UAASC,SAAT,EAAoB;IACvC,IAAIC,SAAS,GAAG,KAAKJ,UAAL,CAAgBzB,GAAhB,CAAoB8B,QAAQ,IAAI;MAC5C,IAAIT,YAAY,GAAGlB,aAAa,CAAC2B,QAAD,CAAhC;MACA,IAAIC,MAAM,GAAG,KAAKC,YAAL,CAAkBX,YAAlB,EAAgCO,SAAhC,CAAb;MACA,IAAIK,KAAK,GAAG,QAAQC,MAAR,CAAe,KAAKC,YAAL,CAAkBJ,MAAlB,CAAf,EAA0C,IAA1C,EAAgDG,MAAhD,CAAuD,KAAKE,QAAL,CAAcN,QAAQ,CAACd,EAAvB,CAAvD,CAAZ;MACA,OAAO;QACHe,MAAM,EAAEA,MADL;QAEHE,KAAK,EAAEA,KAFJ;QAGHjB,EAAE,EAAEc,QAAQ,CAACd;MAHV,CAAP;IAKH,CATe,CAAhB;;IAUA,OAAOvB,KAAK,CAACoC,SAAD,CAAL,CAAiBQ,MAAjB,CAAwB,QAAxB,EAAkCC,OAAlC,EAAP;EACH,CAfmB;EAgBpBH,YAAY,EAAE,UAASJ,MAAT,EAAiB;IAC3B,IAAIQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWV,MAAX,CAAZ;IACA,IAAIW,gBAAgB,GAAGX,MAAM,GAAGQ,KAAhC;IACA,IAAII,UAAU,GAAG/C,IAAI,CAACmC,MAAD,CAAJ,IAAgB,CAAhB,GAAoB,GAApB,GAA0B,GAA3C;IACA,IAAIa,WAAW,GAAG,IAAIV,MAAJ,CAAWM,IAAI,CAACK,GAAL,CAASN,KAAT,CAAX,EAA4BO,KAA5B,CAAkC,CAAC,CAAnC,CAAlB;IACA,IAAIC,aAAa,GAAGL,gBAAgB,GAAG,CAAnB,GAAuB,IAAIR,MAAJ,CAAW,KAAKQ,gBAAhB,CAAvB,GAA2D,KAA/E;IACA,OAAOC,UAAU,GAAGC,WAAb,GAA2BG,aAAlC;EACH,CAvBmB;EAwBpBX,QAAQ,EAAE,UAASpB,EAAT,EAAa;IACnB,OAAOA,EAAE,CAACjB,KAAH,CAAS,GAAT,EAAciD,IAAd,CAAmB,KAAnB,EAA0BjD,KAA1B,CAAgC,GAAhC,EAAqCiD,IAArC,CAA0C,GAA1C,CAAP;EACH,CA1BmB;EA2BpB5B,eAAe,EAAE,UAASJ,EAAT,EAAa;IAC1B,IAAI,CAACA,EAAL,EAAS;MACL;IACH;;IACD,IAAIiC,MAAM,GAAG,KAAKxB,UAAlB;;IACA,KAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;MACpC,IAAIE,SAAS,GAAGH,MAAM,CAACC,CAAD,CAAN,CAAUlC,EAA1B;;MACA,IAAIoC,SAAS,KAAKpC,EAAlB,EAAsB;QAClB,OAAOiC,MAAM,CAACC,CAAD,CAAb;MACH;IACJ;;IACDxD,MAAM,CAAC2D,GAAP,CAAW,OAAX,EAAoBrC,EAApB;IACA;EACH,CAxCmB;EAyCpBsC,qBAAqB,EAAE,UAAStC,EAAT,EAAaY,SAAb,EAAwB;IAC3C,IAAIP,YAAY,GAAGE,OAAO,CAACR,MAAR,CAAeC,EAAf,CAAnB;IACA,OAAOK,YAAY,GAAG,KAAKW,YAAL,CAAkBX,YAAlB,EAAgCO,SAAhC,CAAH,GAAgD,KAAK,CAAxE;EACH,CA5CmB;EA6CpB2B,2BAA2B,EAAE,UAASvC,EAAT,EAAawC,IAAb,EAAmB;IAC5C,IAAInC,YAAY,GAAGE,OAAO,CAACR,MAAR,CAAeC,EAAf,CAAnB;IACA,OAAOK,YAAY,GAAG,KAAKoC,+BAAL,CAAqCpC,YAArC,EAAmDmC,IAAnD,CAAH,GAA8D,EAAjF;EACH,CAhDmB;EAiDpBC,+BAA+B,EAAE,UAASpC,YAAT,EAAuBmC,IAAvB,EAA6B;IAC1D,IAAIhD,UAAU,GAAGa,YAAY,CAACb,UAA9B;IACA,IAAIC,eAAe,GAAGY,YAAY,CAACZ,eAAnC;IACA,IAAIC,QAAQ,GAAGW,YAAY,CAACX,QAA5B;IACA,IAAIgD,WAAW,GAAG,EAAlB;;IACA,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,QAAQ,CAACyC,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;MACtC,IAAIS,WAAW,GAAGjD,QAAQ,CAACwC,CAAD,CAA1B;MACA,IAAIU,WAAW,GAAG,IAAIC,IAAJ,CAASF,WAAT,EAAsBG,WAAtB,EAAlB;;MACA,IAAIF,WAAW,KAAKJ,IAApB,EAA0B;QACtB,IAAIzB,MAAM,GAAGvB,UAAU,CAACC,eAAe,CAACyC,CAAC,GAAG,CAAL,CAAhB,CAAvB;QACAQ,WAAW,CAACK,IAAZ,CAAiB;UACbC,IAAI,EAAEL,WADO;UAEb5B,MAAM,EAAE,CAACA,MAAD,GAAU;QAFL,CAAjB;MAIH;;MACD,IAAI6B,WAAW,GAAGJ,IAAlB,EAAwB;QACpB;MACH;IACJ;;IACD,OAAOE,WAAP;EACH,CArEmB;EAsEpB1B,YAAY,EAAE,UAASX,YAAT,EAAuB4C,aAAvB,EAAsC;IAChD,IAAIzD,UAAU,GAAGa,YAAY,CAACb,UAA9B;IACA,IAAIC,eAAe,GAAGY,YAAY,CAACZ,eAAnC;IACA,IAAIC,QAAQ,GAAGW,YAAY,CAACX,QAA5B;IACA,IAAIwD,sBAAsB,GAAGxD,QAAQ,CAACyC,MAAT,GAAkB,CAAlB,GAAsB,CAAnD;IACA,IAAIgB,KAAK,GAAGD,sBAAZ;;IACA,OAAOC,KAAK,IAAI,CAAT,IAAcF,aAAa,GAAGvD,QAAQ,CAACyD,KAAD,CAA7C,EAAsD;MAClDA,KAAK;IACR;;IACD,IAAIpC,MAAM,GAAGvB,UAAU,CAACC,eAAe,CAAC0D,KAAK,GAAG,CAAT,CAAhB,CAAvB;IACA,OAAO,CAACpC,MAAD,GAAU,EAAV,IAAgBA,MAAvB;EACH;AAjFmB,CAAxB;AAmFA,eAAeZ,iBAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/file_uploader.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOffset, getWidth } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport Guid from \"../core/guid\";\nimport { getWindow } from \"../core/utils/window\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport registerComponent from \"../core/component_registrator\";\nimport Callbacks from \"../core/utils/callbacks\";\nimport { isDefined, isFunction, isNumeric } from \"../core/utils/type\";\nimport { each } from \"../core/utils/iterator\";\nimport { extend } from \"../core/utils/extend\";\nimport { Deferred, fromPromise } from \"../core/utils/deferred\";\nimport ajax from \"../core/utils/ajax\";\nimport Editor from \"./editor/editor\";\nimport Button from \"./button\";\nimport ProgressBar from \"./progress_bar\";\nimport devices from \"../core/devices\";\nimport { addNamespace, isTouchEvent } from \"../events/utils/index\";\nimport { name as clickEventName } from \"../events/click\";\nimport messageLocalization from \"../localization/message\";\nimport { isMaterial } from \"./themes\";\nimport domAdapter from \"../core/dom_adapter\";\nvar window = getWindow();\nvar FILEUPLOADER_CLASS = \"dx-fileuploader\";\nvar FILEUPLOADER_EMPTY_CLASS = \"dx-fileuploader-empty\";\nvar FILEUPLOADER_SHOW_FILE_LIST_CLASS = \"dx-fileuploader-show-file-list\";\nvar FILEUPLOADER_DRAGOVER_CLASS = \"dx-fileuploader-dragover\";\nvar FILEUPLOADER_WRAPPER_CLASS = \"dx-fileuploader-wrapper\";\nvar FILEUPLOADER_CONTAINER_CLASS = \"dx-fileuploader-container\";\nvar FILEUPLOADER_CONTENT_CLASS = \"dx-fileuploader-content\";\nvar FILEUPLOADER_INPUT_WRAPPER_CLASS = \"dx-fileuploader-input-wrapper\";\nvar FILEUPLOADER_INPUT_CONTAINER_CLASS = \"dx-fileuploader-input-container\";\nvar FILEUPLOADER_INPUT_LABEL_CLASS = \"dx-fileuploader-input-label\";\nvar FILEUPLOADER_INPUT_CLASS = \"dx-fileuploader-input\";\nvar FILEUPLOADER_FILES_CONTAINER_CLASS = \"dx-fileuploader-files-container\";\nvar FILEUPLOADER_FILE_CONTAINER_CLASS = \"dx-fileuploader-file-container\";\nvar FILEUPLOADER_FILE_INFO_CLASS = \"dx-fileuploader-file-info\";\nvar FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS = \"dx-fileuploader-file-status-message\";\nvar FILEUPLOADER_FILE_CLASS = \"dx-fileuploader-file\";\nvar FILEUPLOADER_FILE_NAME_CLASS = \"dx-fileuploader-file-name\";\nvar FILEUPLOADER_FILE_SIZE_CLASS = \"dx-fileuploader-file-size\";\nvar FILEUPLOADER_BUTTON_CLASS = \"dx-fileuploader-button\";\nvar FILEUPLOADER_BUTTON_CONTAINER_CLASS = \"dx-fileuploader-button-container\";\nvar FILEUPLOADER_CANCEL_BUTTON_CLASS = \"dx-fileuploader-cancel-button\";\nvar FILEUPLOADER_UPLOAD_BUTTON_CLASS = \"dx-fileuploader-upload-button\";\nvar FILEUPLOADER_INVALID_CLASS = \"dx-fileuploader-invalid\";\nvar FILEUPLOADER_AFTER_LOAD_DELAY = 400;\nvar FILEUPLOADER_CHUNK_META_DATA_NAME = \"chunkMetadata\";\n\nvar renderFileUploaderInput = () => $(\"<input>\").attr(\"type\", \"file\");\n\nvar isFormDataSupported = () => !!window.FormData;\n\nclass FileUploader extends Editor {\n  _supportedKeys() {\n    var click = e => {\n      e.preventDefault();\n\n      var $selectButton = this._selectButton.$element();\n\n      eventsEngine.trigger($selectButton, clickEventName);\n    };\n\n    return extend(super._supportedKeys(), {\n      space: click,\n      enter: click\n    });\n  }\n\n  _setOptionsByReference() {\n    super._setOptionsByReference();\n\n    extend(this._optionsByReference, {\n      value: true\n    });\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      chunkSize: 0,\n      value: [],\n      selectButtonText: messageLocalization.format(\"dxFileUploader-selectFile\"),\n      uploadButtonText: messageLocalization.format(\"dxFileUploader-upload\"),\n      labelText: messageLocalization.format(\"dxFileUploader-dropFile\"),\n      name: \"files[]\",\n      multiple: false,\n      accept: \"\",\n      uploadUrl: \"/\",\n      allowCanceling: true,\n      showFileList: true,\n      progress: 0,\n      dialogTrigger: void 0,\n      dropZone: void 0,\n      readyToUploadMessage: messageLocalization.format(\"dxFileUploader-readyToUpload\"),\n      uploadedMessage: messageLocalization.format(\"dxFileUploader-uploaded\"),\n      uploadFailedMessage: messageLocalization.format(\"dxFileUploader-uploadFailedMessage\"),\n      uploadAbortedMessage: messageLocalization.format(\"dxFileUploader-uploadAbortedMessage\"),\n      uploadMode: \"instantly\",\n      uploadMethod: \"POST\",\n      uploadHeaders: {},\n      uploadCustomData: {},\n      onBeforeSend: null,\n      onUploadStarted: null,\n      onUploaded: null,\n      onFilesUploaded: null,\n      onProgress: null,\n      onUploadError: null,\n      onUploadAborted: null,\n      onDropZoneEnter: null,\n      onDropZoneLeave: null,\n      allowedFileExtensions: [],\n      maxFileSize: 0,\n      minFileSize: 0,\n      inputAttr: {},\n      invalidFileExtensionMessage: messageLocalization.format(\"dxFileUploader-invalidFileExtension\"),\n      invalidMaxFileSizeMessage: messageLocalization.format(\"dxFileUploader-invalidMaxFileSize\"),\n      invalidMinFileSizeMessage: messageLocalization.format(\"dxFileUploader-invalidMinFileSize\"),\n      extendSelection: true,\n      validationMessageMode: \"always\",\n      uploadFile: null,\n      uploadChunk: null,\n      abortUpload: null,\n      validationMessageOffset: {\n        h: 0,\n        v: 0\n      },\n      hoverStateEnabled: true,\n      useNativeInputClick: false,\n      useDragOver: true,\n      nativeDropSupported: true,\n      _uploadButtonType: \"normal\"\n    });\n  }\n\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\n      options: {\n        focusStateEnabled: true\n      }\n    }, {\n      device: [{\n        platform: \"android\"\n      }],\n      options: {\n        validationMessageOffset: {\n          v: 0\n        }\n      }\n    }, {\n      device: () => \"desktop\" !== devices.real().deviceType,\n      options: {\n        useDragOver: false\n      }\n    }, {\n      device: () => !isFormDataSupported(),\n      options: {\n        uploadMode: \"useForm\"\n      }\n    }, {\n      device: () => \"desktop\" !== devices.real().deviceType,\n      options: {\n        nativeDropSupported: false\n      }\n    }, {\n      device: () => isMaterial(),\n      options: {\n        _uploadButtonType: \"default\"\n      }\n    }]);\n  }\n\n  _initOptions(options) {\n    var isLabelTextDefined = (\"labelText\" in options);\n\n    super._initOptions(options);\n\n    if (!isLabelTextDefined && !this._shouldDragOverBeRendered()) {\n      this.option(\"labelText\", \"\");\n    }\n  }\n\n  _init() {\n    super._init();\n\n    this._initFileInput();\n\n    this._initLabel();\n\n    this._setUploadStrategy();\n\n    this._createFiles();\n\n    this._createBeforeSendAction();\n\n    this._createUploadStartedAction();\n\n    this._createUploadedAction();\n\n    this._createFilesUploadedAction();\n\n    this._createProgressAction();\n\n    this._createUploadErrorAction();\n\n    this._createUploadAbortedAction();\n\n    this._createDropZoneEnterAction();\n\n    this._createDropZoneLeaveAction();\n  }\n\n  _setUploadStrategy() {\n    var strategy = null;\n\n    if (this.option(\"chunkSize\") > 0) {\n      var uploadChunk = this.option(\"uploadChunk\");\n      strategy = uploadChunk && isFunction(uploadChunk) ? new CustomChunksFileUploadStrategy(this) : new DefaultChunksFileUploadStrategy(this);\n    } else {\n      var uploadFile = this.option(\"uploadFile\");\n      strategy = uploadFile && isFunction(uploadFile) ? new CustomWholeFileUploadStrategy(this) : new DefaultWholeFileUploadStrategy(this);\n    }\n\n    this._uploadStrategy = strategy;\n  }\n\n  _initFileInput() {\n    this._isCustomClickEvent = false;\n\n    if (!this._$fileInput) {\n      this._$fileInput = renderFileUploaderInput();\n      eventsEngine.on(this._$fileInput, \"change\", this._inputChangeHandler.bind(this));\n      eventsEngine.on(this._$fileInput, \"click\", e => {\n        e.stopPropagation();\n\n        this._resetInputValue();\n\n        return this.option(\"useNativeInputClick\") || this._isCustomClickEvent;\n      });\n    }\n\n    this._$fileInput.prop({\n      multiple: this.option(\"multiple\"),\n      accept: this.option(\"accept\"),\n      tabIndex: -1\n    });\n  }\n\n  _inputChangeHandler() {\n    if (this._doPreventInputChange) {\n      return;\n    }\n\n    var fileName = this._$fileInput.val().replace(/^.*\\\\/, \"\");\n\n    var files = this._$fileInput.prop(\"files\");\n\n    if (files && !files.length && \"useForm\" !== this.option(\"uploadMode\")) {\n      return;\n    }\n\n    var value = files ? this._getFiles(files) : [{\n      name: fileName\n    }];\n\n    this._changeValue(value);\n\n    if (\"instantly\" === this.option(\"uploadMode\")) {\n      this._uploadFiles();\n    }\n  }\n\n  _shouldFileListBeExtended() {\n    return \"useForm\" !== this.option(\"uploadMode\") && this.option(\"extendSelection\") && this.option(\"multiple\");\n  }\n\n  _changeValue(value) {\n    var files = this._shouldFileListBeExtended() ? this.option(\"value\").slice() : [];\n    this.option(\"value\", files.concat(value));\n  }\n\n  _getFiles(fileList) {\n    var values = [];\n    each(fileList, (_, value) => values.push(value));\n    return values;\n  }\n\n  _getFile(fileData) {\n    var targetFileValue = isNumeric(fileData) ? this.option(\"value\")[fileData] : fileData;\n    return this._files.filter(file => file.value === targetFileValue)[0];\n  }\n\n  _initLabel() {\n    if (!this._$inputLabel) {\n      this._$inputLabel = $(\"<div>\");\n    }\n\n    this._updateInputLabelText();\n  }\n\n  _updateInputLabelText() {\n    var correctedValue = this._isInteractionDisabled() ? \"\" : this.option(\"labelText\");\n\n    this._$inputLabel.text(correctedValue);\n  }\n\n  _focusTarget() {\n    return this.$element().find(\".\" + FILEUPLOADER_BUTTON_CLASS);\n  }\n\n  _getSubmitElement() {\n    return this._$fileInput;\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    this.$element().addClass(FILEUPLOADER_CLASS);\n\n    this._renderWrapper();\n\n    this._renderInputWrapper();\n\n    this._renderSelectButton();\n\n    this._renderInputContainer();\n\n    this._renderUploadButton();\n\n    this._preventRecreatingFiles = true;\n    this._activeDropZone = null;\n  }\n\n  _render() {\n    this._preventRecreatingFiles = false;\n\n    this._attachDragEventHandlers(this._$inputWrapper);\n\n    this._attachDragEventHandlers(this.option(\"dropZone\"));\n\n    this._renderFiles();\n\n    super._render();\n  }\n\n  _createFileProgressBar(file) {\n    file.progressBar = this._createProgressBar(file.value.size);\n    file.progressBar.$element().appendTo(file.$file);\n\n    this._initStatusMessage(file);\n\n    this._ensureCancelButtonInitialized(file);\n  }\n\n  _setStatusMessage(file, message) {\n    setTimeout(() => {\n      if (this.option(\"showFileList\")) {\n        if (file.$statusMessage) {\n          file.$statusMessage.text(message);\n          file.$statusMessage.css(\"display\", \"\");\n          file.progressBar.$element().remove();\n        }\n      }\n    }, FILEUPLOADER_AFTER_LOAD_DELAY);\n  }\n\n  _getUploadAbortedStatusMessage() {\n    return \"instantly\" === this.option(\"uploadMode\") ? this.option(\"uploadAbortedMessage\") : this.option(\"readyToUploadMessage\");\n  }\n\n  _createFiles() {\n    var value = this.option(\"value\");\n\n    if (this._files && (0 === value.length || !this._shouldFileListBeExtended())) {\n      this._preventFilesUploading(this._files);\n\n      this._files = null;\n    }\n\n    if (!this._files) {\n      this._files = [];\n    }\n\n    each(value.slice(this._files.length), (_, value) => {\n      var file = this._createFile(value);\n\n      this._validateFile(file);\n\n      this._files.push(file);\n    });\n  }\n\n  _preventFilesUploading(files) {\n    files.forEach(file => this._uploadStrategy.abortUpload(file));\n  }\n\n  _validateFile(file) {\n    file.isValidFileExtension = this._validateFileExtension(file);\n    file.isValidMinSize = this._validateMinFileSize(file);\n    file.isValidMaxSize = this._validateMaxFileSize(file);\n  }\n\n  _validateFileExtension(file) {\n    var allowedExtensions = this.option(\"allowedFileExtensions\");\n    var accept = this.option(\"accept\");\n\n    var allowedTypes = this._getAllowedFileTypes(accept);\n\n    var fileExtension = file.value.name.substring(file.value.name.lastIndexOf(\".\")).toLowerCase();\n\n    if (0 !== accept.length && !this._isFileTypeAllowed(file.value, allowedTypes)) {\n      return false;\n    }\n\n    if (0 === allowedExtensions.length) {\n      return true;\n    }\n\n    for (var i = 0; i < allowedExtensions.length; i++) {\n      if (fileExtension === allowedExtensions[i].toLowerCase()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _validateMaxFileSize(file) {\n    var fileSize = file.value.size;\n    var maxFileSize = this.option(\"maxFileSize\");\n    return maxFileSize > 0 ? fileSize <= maxFileSize : true;\n  }\n\n  _validateMinFileSize(file) {\n    var fileSize = file.value.size;\n    var minFileSize = this.option(\"minFileSize\");\n    return minFileSize > 0 ? fileSize >= minFileSize : true;\n  }\n\n  _createBeforeSendAction() {\n    this._beforeSendAction = this._createActionByOption(\"onBeforeSend\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _createUploadStartedAction() {\n    this._uploadStartedAction = this._createActionByOption(\"onUploadStarted\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _createUploadedAction() {\n    this._uploadedAction = this._createActionByOption(\"onUploaded\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _createFilesUploadedAction() {\n    this._filesUploadedAction = this._createActionByOption(\"onFilesUploaded\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _createProgressAction() {\n    this._progressAction = this._createActionByOption(\"onProgress\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _createUploadAbortedAction() {\n    this._uploadAbortedAction = this._createActionByOption(\"onUploadAborted\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _createUploadErrorAction() {\n    this._uploadErrorAction = this._createActionByOption(\"onUploadError\", {\n      excludeValidators: [\"readOnly\"]\n    });\n  }\n\n  _createDropZoneEnterAction() {\n    this._dropZoneEnterAction = this._createActionByOption(\"onDropZoneEnter\");\n  }\n\n  _createDropZoneLeaveAction() {\n    this._dropZoneLeaveAction = this._createActionByOption(\"onDropZoneLeave\");\n  }\n\n  _createFile(value) {\n    return {\n      value: value,\n      loadedSize: 0,\n      onProgress: Callbacks(),\n      onAbort: Callbacks(),\n      onLoad: Callbacks(),\n      onError: Callbacks(),\n      onLoadStart: Callbacks(),\n      isValidFileExtension: true,\n      isValidMaxSize: true,\n      isValidMinSize: true,\n\n      isValid() {\n        return this.isValidFileExtension && this.isValidMaxSize && this.isValidMinSize;\n      },\n\n      isInitialized: false\n    };\n  }\n\n  _resetFileState(file) {\n    file.isAborted = false;\n    file.uploadStarted = false;\n    file.isStartLoad = false;\n    file.loadedSize = 0;\n    file.chunksData = void 0;\n    file.request = void 0;\n  }\n\n  _renderFiles() {\n    var _this$_validationMess;\n\n    var value = this.option(\"value\");\n\n    if (!this._$filesContainer) {\n      this._$filesContainer = $(\"<div>\").addClass(FILEUPLOADER_FILES_CONTAINER_CLASS).appendTo(this._$content);\n    } else if (!this._shouldFileListBeExtended() || 0 === value.length) {\n      this._$filesContainer.empty();\n    }\n\n    var showFileList = this.option(\"showFileList\");\n\n    if (showFileList) {\n      each(this._files, (_, file) => {\n        if (!file.$file) {\n          this._renderFile(file);\n        }\n      });\n    }\n\n    this.$element().toggleClass(FILEUPLOADER_SHOW_FILE_LIST_CLASS, showFileList);\n\n    this._toggleFileUploaderEmptyClassName();\n\n    this._updateFileNameMaxWidth();\n\n    null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess ? void 0 : _this$_validationMess.repaint();\n  }\n\n  _renderFile(file) {\n    var value = file.value;\n    var $fileContainer = $(\"<div>\").addClass(FILEUPLOADER_FILE_CONTAINER_CLASS).appendTo(this._$filesContainer);\n\n    this._renderFileButtons(file, $fileContainer);\n\n    file.$file = $(\"<div>\").addClass(FILEUPLOADER_FILE_CLASS).appendTo($fileContainer);\n    var $fileInfo = $(\"<div>\").addClass(FILEUPLOADER_FILE_INFO_CLASS).appendTo(file.$file);\n    file.$statusMessage = $(\"<div>\").addClass(FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS).appendTo(file.$file);\n    $(\"<div>\").addClass(FILEUPLOADER_FILE_NAME_CLASS).text(value.name).appendTo($fileInfo);\n\n    if (isDefined(value.size)) {\n      $(\"<div>\").addClass(FILEUPLOADER_FILE_SIZE_CLASS).text(this._getFileSize(value.size)).appendTo($fileInfo);\n    }\n\n    if (file.isValid()) {\n      file.$statusMessage.text(this.option(\"readyToUploadMessage\"));\n    } else {\n      if (!file.isValidFileExtension) {\n        file.$statusMessage.append(this._createValidationElement(\"invalidFileExtensionMessage\"));\n      }\n\n      if (!file.isValidMaxSize) {\n        file.$statusMessage.append(this._createValidationElement(\"invalidMaxFileSizeMessage\"));\n      }\n\n      if (!file.isValidMinSize) {\n        file.$statusMessage.append(this._createValidationElement(\"invalidMinFileSizeMessage\"));\n      }\n\n      $fileContainer.addClass(FILEUPLOADER_INVALID_CLASS);\n    }\n  }\n\n  _createValidationElement(key) {\n    return $(\"<span>\").text(this.option(key));\n  }\n\n  _updateFileNameMaxWidth() {\n    var cancelButtonsCount = this.option(\"allowCanceling\") && \"useForm\" !== this.option(\"uploadMode\") ? 1 : 0;\n    var uploadButtonsCount = \"useButtons\" === this.option(\"uploadMode\") ? 1 : 0;\n    var filesContainerWidth = getWidth(this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_CONTAINER_CLASS).first()) || getWidth(this._$filesContainer);\n\n    var $buttonContainer = this._$filesContainer.find(\".\" + FILEUPLOADER_BUTTON_CONTAINER_CLASS).eq(0);\n\n    var buttonsWidth = getWidth($buttonContainer) * (cancelButtonsCount + uploadButtonsCount);\n\n    var $fileSize = this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_SIZE_CLASS).eq(0);\n\n    var prevFileSize = $fileSize.text();\n    $fileSize.text(\"1000 Mb\");\n    var fileSizeWidth = getWidth($fileSize);\n    $fileSize.text(prevFileSize);\n\n    this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_NAME_CLASS).css(\"maxWidth\", filesContainerWidth - buttonsWidth - fileSizeWidth);\n  }\n\n  _renderFileButtons(file, $container) {\n    var $cancelButton = this._getCancelButton(file);\n\n    $cancelButton && $container.append($cancelButton);\n\n    var $uploadButton = this._getUploadButton(file);\n\n    $uploadButton && $container.append($uploadButton);\n  }\n\n  _getCancelButton(file) {\n    if (\"useForm\" === this.option(\"uploadMode\")) {\n      return null;\n    }\n\n    file.cancelButton = this._createComponent($(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS + \" \" + FILEUPLOADER_CANCEL_BUTTON_CLASS), Button, {\n      onClick: () => this._removeFile(file),\n      icon: \"close\",\n      visible: this.option(\"allowCanceling\"),\n      disabled: this.option(\"readOnly\"),\n      integrationOptions: {},\n      hoverStateEnabled: this.option(\"hoverStateEnabled\")\n    });\n    return $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CONTAINER_CLASS).append(file.cancelButton.$element());\n  }\n\n  _getUploadButton(file) {\n    if (!file.isValid() || \"useButtons\" !== this.option(\"uploadMode\")) {\n      return null;\n    }\n\n    file.uploadButton = this._createComponent($(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS + \" \" + FILEUPLOADER_UPLOAD_BUTTON_CLASS), Button, {\n      onClick: () => this._uploadFile(file),\n      icon: \"upload\",\n      hoverStateEnabled: this.option(\"hoverStateEnabled\")\n    });\n    file.onLoadStart.add(() => file.uploadButton.option({\n      visible: false,\n      disabled: true\n    }));\n    file.onAbort.add(() => file.uploadButton.option({\n      visible: true,\n      disabled: false\n    }));\n    return $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CONTAINER_CLASS).append(file.uploadButton.$element());\n  }\n\n  _removeFile(file) {\n    var _file$$file;\n\n    null === (_file$$file = file.$file) || void 0 === _file$$file ? void 0 : _file$$file.parent().remove();\n\n    this._files.splice(this._files.indexOf(file), 1);\n\n    var value = this.option(\"value\").slice();\n    value.splice(value.indexOf(file.value), 1);\n    this._preventRecreatingFiles = true;\n    this.option(\"value\", value);\n    this._preventRecreatingFiles = false;\n\n    this._toggleFileUploaderEmptyClassName();\n\n    this._resetInputValue(true);\n  }\n\n  removeFile(fileData) {\n    if (\"useForm\" === this.option(\"uploadMode\") || !isDefined(fileData)) {\n      return;\n    }\n\n    var file = this._getFile(fileData);\n\n    if (file) {\n      if (file.uploadStarted) {\n        this._preventFilesUploading([file]);\n      }\n\n      this._removeFile(file);\n    }\n  }\n\n  _toggleFileUploaderEmptyClassName() {\n    this.$element().toggleClass(FILEUPLOADER_EMPTY_CLASS, !this._files.length || this._hasInvalidFile(this._files));\n  }\n\n  _hasInvalidFile(files) {\n    for (var i = 0; i < files.length; i++) {\n      if (!files[i].isValid()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _getFileSize(size) {\n    var i = 0;\n    var labels = [messageLocalization.format(\"dxFileUploader-bytes\"), messageLocalization.format(\"dxFileUploader-kb\"), messageLocalization.format(\"dxFileUploader-Mb\"), messageLocalization.format(\"dxFileUploader-Gb\")];\n    var count = labels.length - 1;\n\n    while (i < count && size >= 1024) {\n      size /= 1024;\n      i++;\n    }\n\n    return Math.round(size) + \" \" + labels[i];\n  }\n\n  _renderSelectButton() {\n    var $button = $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS).appendTo(this._$inputWrapper);\n    this._selectButton = this._createComponent($button, Button, {\n      text: this.option(\"selectButtonText\"),\n      focusStateEnabled: false,\n      integrationOptions: {},\n      disabled: this.option(\"readOnly\"),\n      hoverStateEnabled: this.option(\"hoverStateEnabled\")\n    });\n    this._selectFileDialogHandler = this._selectButtonClickHandler.bind(this);\n\n    if (\"desktop\" === devices.real().deviceType) {\n      this._selectButton.option(\"onClick\", this._selectFileDialogHandler);\n    } else {\n      this._attachSelectFileDialogHandler(this._selectButton.$element());\n    }\n\n    this._attachSelectFileDialogHandler(this.option(\"dialogTrigger\"));\n  }\n\n  _selectButtonClickHandler() {\n    if (this.option(\"useNativeInputClick\")) {\n      return;\n    }\n\n    if (this._isInteractionDisabled()) {\n      return false;\n    }\n\n    this._isCustomClickEvent = true;\n    eventsEngine.trigger(this._$fileInput, \"click\");\n    this._isCustomClickEvent = false;\n  }\n\n  _attachSelectFileDialogHandler(target) {\n    if (!isDefined(target)) {\n      return;\n    }\n\n    this._detachSelectFileDialogHandler(target);\n\n    eventsEngine.on($(target), \"click\", this._selectFileDialogHandler);\n  }\n\n  _detachSelectFileDialogHandler(target) {\n    if (!isDefined(target)) {\n      return;\n    }\n\n    eventsEngine.off($(target), \"click\", this._selectFileDialogHandler);\n  }\n\n  _renderUploadButton() {\n    if (\"useButtons\" !== this.option(\"uploadMode\")) {\n      return;\n    }\n\n    var $uploadButton = $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS).addClass(FILEUPLOADER_UPLOAD_BUTTON_CLASS).appendTo(this._$content);\n    this._uploadButton = this._createComponent($uploadButton, Button, {\n      text: this.option(\"uploadButtonText\"),\n      onClick: this._uploadButtonClickHandler.bind(this),\n      type: this.option(\"_uploadButtonType\"),\n      integrationOptions: {},\n      hoverStateEnabled: this.option(\"hoverStateEnabled\")\n    });\n  }\n\n  _uploadButtonClickHandler() {\n    this._uploadFiles();\n  }\n\n  _shouldDragOverBeRendered() {\n    return !this.option(\"readOnly\") && (\"useForm\" !== this.option(\"uploadMode\") || this.option(\"nativeDropSupported\"));\n  }\n\n  _isInteractionDisabled() {\n    return this.option(\"readOnly\") || this.option(\"disabled\");\n  }\n\n  _renderInputContainer() {\n    this._$inputContainer = $(\"<div>\").addClass(FILEUPLOADER_INPUT_CONTAINER_CLASS).appendTo(this._$inputWrapper);\n\n    this._$fileInput.addClass(FILEUPLOADER_INPUT_CLASS);\n\n    this._renderInput();\n\n    var labelId = \"dx-fileuploader-input-label-\".concat(new Guid());\n\n    this._$inputLabel.attr(\"id\", labelId).addClass(FILEUPLOADER_INPUT_LABEL_CLASS).appendTo(this._$inputContainer);\n\n    this.setAria(\"labelledby\", labelId, this._$fileInput);\n  }\n\n  _renderInput() {\n    if (this.option(\"useNativeInputClick\")) {\n      this._selectButton.option(\"template\", this._selectButtonInputTemplate.bind(this));\n    } else {\n      this._$fileInput.appendTo(this._$inputContainer);\n\n      this._selectButton.option(\"template\", \"content\");\n    }\n\n    this._applyInputAttributes(this.option(\"inputAttr\"));\n  }\n\n  _selectButtonInputTemplate(data, content) {\n    var $content = $(content);\n    var $text = $(\"<span>\").addClass(\"dx-button-text\").text(data.text);\n    $content.append($text).append(this._$fileInput);\n    return $content;\n  }\n\n  _renderInputWrapper() {\n    this._$inputWrapper = $(\"<div>\").addClass(FILEUPLOADER_INPUT_WRAPPER_CLASS).appendTo(this._$content);\n  }\n\n  _detachDragEventHandlers(target) {\n    if (!isDefined(target)) {\n      return;\n    }\n\n    eventsEngine.off($(target), addNamespace(\"\", this.NAME));\n  }\n\n  _attachDragEventHandlers(target) {\n    var isCustomTarget = target !== this._$inputWrapper;\n\n    if (!isDefined(target) || !this._shouldDragOverBeRendered()) {\n      return;\n    }\n\n    this._detachDragEventHandlers(target);\n\n    target = $(target);\n    eventsEngine.on(target, addNamespace(\"dragenter\", this.NAME), this._dragEnterHandler.bind(this, isCustomTarget));\n    eventsEngine.on(target, addNamespace(\"dragover\", this.NAME), this._dragOverHandler.bind(this, isCustomTarget));\n    eventsEngine.on(target, addNamespace(\"dragleave\", this.NAME), this._dragLeaveHandler.bind(this, isCustomTarget));\n    eventsEngine.on(target, addNamespace(\"drop\", this.NAME), this._dropHandler.bind(this, isCustomTarget));\n  }\n\n  _applyInputAttributes(customAttributes) {\n    this._$fileInput.attr(customAttributes);\n  }\n\n  _useInputForDrop() {\n    return this.option(\"nativeDropSupported\") && \"useForm\" === this.option(\"uploadMode\");\n  }\n\n  _getDropZoneElement(isCustomTarget, e) {\n    var targetList = isCustomTarget ? Array.from($(this.option(\"dropZone\"))) : [this._$inputWrapper];\n    targetList = targetList.map(element => $(element).get(0));\n    return targetList[targetList.indexOf(e.currentTarget)];\n  }\n\n  _dragEnterHandler(isCustomTarget, e) {\n    if (this.option(\"disabled\")) {\n      return false;\n    }\n\n    if (!this._useInputForDrop()) {\n      e.preventDefault();\n    }\n\n    var dropZoneElement = this._getDropZoneElement(isCustomTarget, e);\n\n    if (isDefined(dropZoneElement) && null === this._activeDropZone && this.isMouseOverElement(e, dropZoneElement, false)) {\n      this._activeDropZone = dropZoneElement;\n\n      this._tryToggleDropZoneActive(true, isCustomTarget, e);\n    }\n  }\n\n  _dragOverHandler(isCustomTarget, e) {\n    if (!this._useInputForDrop()) {\n      e.preventDefault();\n    }\n\n    e.originalEvent.dataTransfer.dropEffect = \"copy\";\n\n    if (!isCustomTarget) {\n      var dropZoneElement = this._getDropZoneElement(false, e);\n\n      if (null === this._activeDropZone && this.isMouseOverElement(e, dropZoneElement, false)) {\n        this._dragEnterHandler(false, e);\n      }\n\n      if (null !== this._activeDropZone && this._shouldRaiseDragLeave(e, false)) {\n        this._dragLeaveHandler(false, e);\n      }\n    }\n  }\n\n  _dragLeaveHandler(isCustomTarget, e) {\n    if (!this._useInputForDrop()) {\n      e.preventDefault();\n    }\n\n    if (null === this._activeDropZone) {\n      return;\n    }\n\n    if (this._shouldRaiseDragLeave(e, isCustomTarget)) {\n      this._tryToggleDropZoneActive(false, isCustomTarget, e);\n\n      this._activeDropZone = null;\n    }\n  }\n\n  _shouldRaiseDragLeave(e, isCustomTarget) {\n    return !this.isMouseOverElement(e, this._activeDropZone, !isCustomTarget);\n  }\n\n  _tryToggleDropZoneActive(active, isCustom, event) {\n    var classAction = active ? \"addClass\" : \"removeClass\";\n    var mouseAction = active ? \"_dropZoneEnterAction\" : \"_dropZoneLeaveAction\";\n    this[mouseAction]({\n      event: event,\n      dropZoneElement: this._activeDropZone\n    });\n\n    if (!isCustom) {\n      this.$element()[classAction](FILEUPLOADER_DRAGOVER_CLASS);\n    }\n  }\n\n  _dropHandler(isCustomTarget, e) {\n    this._activeDropZone = null;\n\n    if (!isCustomTarget) {\n      this.$element().removeClass(FILEUPLOADER_DRAGOVER_CLASS);\n    }\n\n    if (this._useInputForDrop() || isCustomTarget && this._isInteractionDisabled()) {\n      return;\n    }\n\n    e.preventDefault();\n    var fileList = e.originalEvent.dataTransfer.files;\n\n    var files = this._getFiles(fileList);\n\n    if (!this.option(\"multiple\") && files.length > 1) {\n      return;\n    }\n\n    this._changeValue(files);\n\n    if (\"instantly\" === this.option(\"uploadMode\")) {\n      this._uploadFiles();\n    }\n  }\n\n  _handleAllFilesUploaded() {\n    var areAllFilesLoaded = this._files.every(file => !file.isValid() || file._isError || file._isLoaded || file.isAborted);\n\n    if (areAllFilesLoaded) {\n      this._filesUploadedAction();\n    }\n  }\n\n  _getAllowedFileTypes(acceptSting) {\n    if (!acceptSting.length) {\n      return [];\n    }\n\n    return acceptSting.split(\",\").map(item => item.trim());\n  }\n\n  _isFileTypeAllowed(file, allowedTypes) {\n    for (var i = 0, n = allowedTypes.length; i < n; i++) {\n      var allowedType = allowedTypes[i];\n\n      if (\".\" === allowedType[0]) {\n        allowedType = allowedType.replace(\".\", \"\\\\.\");\n\n        if (file.name.match(new RegExp(allowedType + \"$\", \"i\"))) {\n          return true;\n        }\n      } else {\n        allowedType = allowedType.replace(new RegExp(\"\\\\*\", \"g\"), \"\");\n\n        if (file.type.match(new RegExp(allowedType, \"i\"))) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  _renderWrapper() {\n    var $wrapper = $(\"<div>\").addClass(FILEUPLOADER_WRAPPER_CLASS).appendTo(this.$element());\n    var $container = $(\"<div>\").addClass(FILEUPLOADER_CONTAINER_CLASS).appendTo($wrapper);\n    this._$content = $(\"<div>\").addClass(FILEUPLOADER_CONTENT_CLASS).appendTo($container);\n  }\n\n  _clean() {\n    this._$fileInput.detach();\n\n    delete this._$filesContainer;\n\n    this._detachSelectFileDialogHandler(this.option(\"dialogTrigger\"));\n\n    this._detachDragEventHandlers(this.option(\"dropZone\"));\n\n    if (this._files) {\n      this._files.forEach(file => {\n        file.$file = null;\n        file.$statusMessage = null;\n      });\n    }\n\n    super._clean();\n  }\n\n  abortUpload(fileData) {\n    if (\"useForm\" === this.option(\"uploadMode\")) {\n      return;\n    }\n\n    if (isDefined(fileData)) {\n      var file = this._getFile(fileData);\n\n      if (file) {\n        this._preventFilesUploading([file]);\n      }\n    } else {\n      this._preventFilesUploading(this._files);\n    }\n  }\n\n  upload(fileData) {\n    if (\"useForm\" === this.option(\"uploadMode\")) {\n      return;\n    }\n\n    if (isDefined(fileData)) {\n      var file = this._getFile(fileData);\n\n      if (file && isFormDataSupported()) {\n        this._uploadFile(file);\n      }\n    } else {\n      this._uploadFiles();\n    }\n  }\n\n  _uploadFiles() {\n    if (isFormDataSupported()) {\n      each(this._files, (_, file) => this._uploadFile(file));\n    }\n  }\n\n  _uploadFile(file) {\n    this._uploadStrategy.upload(file);\n  }\n\n  _updateProgressBar(file, loadedFileData) {\n    file.progressBar && file.progressBar.option({\n      value: loadedFileData.loaded,\n      showStatus: true\n    });\n\n    this._progressAction({\n      file: file.value,\n      segmentSize: loadedFileData.currentSegmentSize,\n      bytesLoaded: loadedFileData.loaded,\n      bytesTotal: loadedFileData.total,\n      event: loadedFileData.event,\n      request: file.request\n    });\n  }\n\n  _updateTotalProgress(totalFilesSize, totalLoadedFilesSize) {\n    var progress = totalFilesSize ? this._getProgressValue(totalLoadedFilesSize / totalFilesSize) : 0;\n    this.option(\"progress\", progress);\n\n    this._setLoadedSize(totalLoadedFilesSize);\n  }\n\n  _getProgressValue(ratio) {\n    return Math.floor(100 * ratio);\n  }\n\n  _initStatusMessage(file) {\n    file.$statusMessage.css(\"display\", \"none\");\n  }\n\n  _ensureCancelButtonInitialized(file) {\n    if (file.isInitialized) {\n      return;\n    }\n\n    file.cancelButton.option(\"onClick\", () => {\n      this._preventFilesUploading([file]);\n\n      this._removeFile(file);\n    });\n\n    var hideCancelButton = () => {\n      setTimeout(() => {\n        file.cancelButton.option({\n          visible: false\n        });\n      }, FILEUPLOADER_AFTER_LOAD_DELAY);\n    };\n\n    file.onLoad.add(hideCancelButton);\n    file.onError.add(hideCancelButton);\n  }\n\n  _createProgressBar(fileSize) {\n    return this._createComponent($(\"<div>\"), ProgressBar, {\n      value: void 0,\n      min: 0,\n      max: fileSize,\n      statusFormat: ratio => this._getProgressValue(ratio) + \"%\",\n      showStatus: false,\n      statusPosition: \"right\"\n    });\n  }\n\n  _getTotalFilesSize() {\n    if (!this._totalFilesSize) {\n      this._totalFilesSize = 0;\n      each(this._files, (_, file) => {\n        this._totalFilesSize += file.value.size;\n      });\n    }\n\n    return this._totalFilesSize;\n  }\n\n  _getTotalLoadedFilesSize() {\n    if (!this._totalLoadedFilesSize) {\n      this._totalLoadedFilesSize = 0;\n      each(this._files, (_, file) => {\n        this._totalLoadedFilesSize += file.loadedSize;\n      });\n    }\n\n    return this._totalLoadedFilesSize;\n  }\n\n  _setLoadedSize(value) {\n    this._totalLoadedFilesSize = value;\n  }\n\n  _recalculateProgress() {\n    this._totalFilesSize = 0;\n    this._totalLoadedFilesSize = 0;\n\n    this._updateTotalProgress(this._getTotalFilesSize(), this._getTotalLoadedFilesSize());\n  }\n\n  isMouseOverElement(mouseEvent, element, correctPseudoElements) {\n    if (!element) {\n      return false;\n    }\n\n    var beforeHeight = correctPseudoElements ? parseFloat(window.getComputedStyle(element, \":before\").height) : 0;\n    var afterHeight = correctPseudoElements ? parseFloat(window.getComputedStyle(element, \":after\").height) : 0;\n    var x = getOffset(element).left;\n    var y = getOffset(element).top + beforeHeight;\n    var w = element.offsetWidth;\n    var h = element.offsetHeight - beforeHeight - afterHeight;\n\n    var eventX = this._getEventX(mouseEvent);\n\n    var eventY = this._getEventY(mouseEvent);\n\n    return eventX >= x && eventX < x + w && eventY >= y && eventY < y + h;\n  }\n\n  _getEventX(e) {\n    return isTouchEvent(e) ? this._getTouchEventX(e) : e.clientX + this._getDocumentScrollLeft();\n  }\n\n  _getEventY(e) {\n    return isTouchEvent(e) ? this._getTouchEventY(e) : e.clientY + this._getDocumentScrollTop();\n  }\n\n  _getTouchEventX(e) {\n    var touchPoint = null;\n\n    if (e.changedTouches.length > 0) {\n      touchPoint = e.changedTouches;\n    } else if (e.targetTouches.length > 0) {\n      touchPoint = e.targetTouches;\n    }\n\n    return touchPoint ? touchPoint[0].pageX : 0;\n  }\n\n  _getTouchEventY(e) {\n    var touchPoint = null;\n\n    if (e.changedTouches.length > 0) {\n      touchPoint = e.changedTouches;\n    } else if (e.targetTouches.length > 0) {\n      touchPoint = e.targetTouches;\n    }\n\n    return touchPoint ? touchPoint[0].pageY : 0;\n  }\n\n  _getDocumentScrollTop() {\n    var document = domAdapter.getDocument();\n    return document.documentElement.scrollTop || document.body.scrollTop;\n  }\n\n  _getDocumentScrollLeft() {\n    var document = domAdapter.getDocument();\n    return document.documentElement.scrollLeft || document.body.scrollLeft;\n  }\n\n  _updateReadOnlyState() {\n    var readOnly = this.option(\"readOnly\");\n\n    this._selectButton.option(\"disabled\", readOnly);\n\n    this._files.forEach(file => {\n      var _file$cancelButton;\n\n      return null === (_file$cancelButton = file.cancelButton) || void 0 === _file$cancelButton ? void 0 : _file$cancelButton.option(\"disabled\", readOnly);\n    });\n\n    this._updateInputLabelText();\n\n    this._attachDragEventHandlers(this._$inputWrapper);\n  }\n\n  _updateHoverState() {\n    var _this$_selectButton, _this$_uploadButton;\n\n    var value = this.option(\"hoverStateEnabled\");\n    null === (_this$_selectButton = this._selectButton) || void 0 === _this$_selectButton ? void 0 : _this$_selectButton.option(\"hoverStateEnabled\", value);\n    null === (_this$_uploadButton = this._uploadButton) || void 0 === _this$_uploadButton ? void 0 : _this$_uploadButton.option(\"hoverStateEnabled\", value);\n\n    this._files.forEach(file => {\n      var _file$uploadButton, _file$cancelButton2;\n\n      null === (_file$uploadButton = file.uploadButton) || void 0 === _file$uploadButton ? void 0 : _file$uploadButton.option(\"hoverStateEnabled\", value);\n      null === (_file$cancelButton2 = file.cancelButton) || void 0 === _file$cancelButton2 ? void 0 : _file$cancelButton2.option(\"hoverStateEnabled\", value);\n    });\n  }\n\n  _optionChanged(args) {\n    var {\n      name: name,\n      value: value,\n      previousValue: previousValue\n    } = args;\n\n    switch (name) {\n      case \"height\":\n      case \"width\":\n        this._updateFileNameMaxWidth();\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"value\":\n        !value.length && this._$fileInput.val(\"\");\n\n        if (!this._preventRecreatingFiles) {\n          this._createFiles();\n\n          this._renderFiles();\n        }\n\n        this._recalculateProgress();\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"name\":\n        this._initFileInput();\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"accept\":\n        this._initFileInput();\n\n        break;\n\n      case \"multiple\":\n        this._initFileInput();\n\n        if (!args.value) {\n          this.reset();\n        }\n\n        break;\n\n      case \"readOnly\":\n        this._updateReadOnlyState();\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"disabled\":\n        this._updateInputLabelText();\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"selectButtonText\":\n        this._selectButton.option(\"text\", value);\n\n        break;\n\n      case \"uploadButtonText\":\n        this._uploadButton && this._uploadButton.option(\"text\", value);\n        break;\n\n      case \"_uploadButtonType\":\n        this._uploadButton && this._uploadButton.option(\"type\", value);\n        break;\n\n      case \"dialogTrigger\":\n        this._detachSelectFileDialogHandler(previousValue);\n\n        this._attachSelectFileDialogHandler(value);\n\n        break;\n\n      case \"dropZone\":\n        this._detachDragEventHandlers(previousValue);\n\n        this._attachDragEventHandlers(value);\n\n        break;\n\n      case \"maxFileSize\":\n      case \"minFileSize\":\n      case \"allowedFileExtensions\":\n      case \"invalidFileExtensionMessage\":\n      case \"invalidMaxFileSizeMessage\":\n      case \"invalidMinFileSizeMessage\":\n      case \"readyToUploadMessage\":\n      case \"uploadedMessage\":\n      case \"uploadFailedMessage\":\n      case \"uploadAbortedMessage\":\n        this._invalidate();\n\n        break;\n\n      case \"labelText\":\n        this._updateInputLabelText();\n\n        break;\n\n      case \"showFileList\":\n        if (!this._preventRecreatingFiles) {\n          this._renderFiles();\n        }\n\n        break;\n\n      case \"uploadFile\":\n      case \"uploadChunk\":\n      case \"chunkSize\":\n        this._setUploadStrategy();\n\n        break;\n\n      case \"abortUpload\":\n      case \"uploadUrl\":\n      case \"progress\":\n      case \"uploadMethod\":\n      case \"uploadHeaders\":\n      case \"uploadCustomData\":\n      case \"extendSelection\":\n        break;\n\n      case \"hoverStateEnabled\":\n        this._updateHoverState();\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"allowCanceling\":\n      case \"uploadMode\":\n        this.reset();\n\n        this._invalidate();\n\n        break;\n\n      case \"onBeforeSend\":\n        this._createBeforeSendAction();\n\n        break;\n\n      case \"onUploadStarted\":\n        this._createUploadStartedAction();\n\n        break;\n\n      case \"onUploaded\":\n        this._createUploadedAction();\n\n        break;\n\n      case \"onFilesUploaded\":\n        this._createFilesUploadedAction();\n\n        break;\n\n      case \"onProgress\":\n        this._createProgressAction();\n\n        break;\n\n      case \"onUploadError\":\n        this._createUploadErrorAction();\n\n        break;\n\n      case \"onUploadAborted\":\n        this._createUploadAbortedAction();\n\n        break;\n\n      case \"onDropZoneEnter\":\n        this._createDropZoneEnterAction();\n\n        break;\n\n      case \"onDropZoneLeave\":\n        this._createDropZoneLeaveAction();\n\n        break;\n\n      case \"useNativeInputClick\":\n        this._renderInput();\n\n        break;\n\n      case \"useDragOver\":\n        this._attachDragEventHandlers(this._$inputWrapper);\n\n        break;\n\n      case \"nativeDropSupported\":\n        this._invalidate();\n\n        break;\n\n      case \"inputAttr\":\n        this._applyInputAttributes(this.option(name));\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _resetInputValue(force) {\n    if (\"useForm\" === this.option(\"uploadMode\") && !force) {\n      return;\n    }\n\n    this._doPreventInputChange = true;\n\n    this._$fileInput.val(\"\");\n\n    this._doPreventInputChange = false;\n  }\n\n  reset() {\n    this.option(\"value\", []);\n  }\n\n}\n\nclass FileBlobReader {\n  constructor(file, chunkSize) {\n    this.file = file;\n    this.chunkSize = chunkSize;\n    this.index = 0;\n  }\n\n  read() {\n    if (!this.file) {\n      return null;\n    }\n\n    var result = this.createBlobResult(this.file, this.index, this.chunkSize);\n\n    if (result.isCompleted) {\n      this.file = null;\n    }\n\n    this.index++;\n    return result;\n  }\n\n  createBlobResult(file, index, chunkSize) {\n    var currentPosition = index * chunkSize;\n    return {\n      blob: this.sliceFile(file, currentPosition, chunkSize),\n      index: index,\n      isCompleted: currentPosition + chunkSize >= file.size\n    };\n  }\n\n  sliceFile(file, startPos, length) {\n    if (file.slice) {\n      return file.slice(startPos, startPos + length);\n    }\n\n    if (file.webkitSlice) {\n      return file.webkitSlice(startPos, startPos + length);\n    }\n\n    return null;\n  }\n\n}\n\nclass FileUploadStrategyBase {\n  constructor(fileUploader) {\n    this.fileUploader = fileUploader;\n  }\n\n  upload(file) {\n    if (file.isInitialized && file.isAborted) {\n      this.fileUploader._resetFileState(file);\n    }\n\n    if (file.isValid() && !file.uploadStarted) {\n      this._prepareFileBeforeUpload(file);\n\n      this._uploadCore(file);\n    }\n  }\n\n  abortUpload(file) {\n    if (file._isError || file._isLoaded || file.isAborted || !file.uploadStarted) {\n      return;\n    }\n\n    file.isAborted = true;\n    file.request && file.request.abort();\n\n    if (this._isCustomCallback(\"abortUpload\")) {\n      var abortUpload = this.fileUploader.option(\"abortUpload\");\n\n      var arg = this._createUploadArgument(file);\n\n      var deferred = null;\n\n      try {\n        var result = abortUpload(file.value, arg);\n        deferred = fromPromise(result);\n      } catch (error) {\n        deferred = new Deferred().reject(error).promise();\n      }\n\n      deferred.done(() => file.onAbort.fire()).fail(error => this._handleFileError(file, error));\n    }\n  }\n\n  _beforeSend(xhr, file) {\n    var arg = this._createUploadArgument(file);\n\n    this.fileUploader._beforeSendAction({\n      request: xhr,\n      file: file.value,\n      uploadInfo: arg\n    });\n\n    file.request = xhr;\n  }\n\n  _createUploadArgument(file) {}\n\n  _uploadCore(file) {}\n\n  _isCustomCallback(name) {\n    var callback = this.fileUploader.option(name);\n    return callback && isFunction(callback);\n  }\n\n  _handleProgress(file, e) {\n    if (file._isError) {\n      return;\n    }\n\n    file._isProgressStarted = true;\n\n    this._handleProgressCore(file, e);\n  }\n\n  _handleProgressCore(file, e) {}\n\n  _handleFileError(file, error) {\n    file._isError = true;\n    file.onError.fire(error);\n  }\n\n  _prepareFileBeforeUpload(file) {\n    if (file.$file) {\n      var _file$progressBar;\n\n      null === (_file$progressBar = file.progressBar) || void 0 === _file$progressBar ? void 0 : _file$progressBar.dispose();\n\n      this.fileUploader._createFileProgressBar(file);\n    }\n\n    if (file.isInitialized) {\n      return;\n    }\n\n    file.onLoadStart.add(this._onUploadStarted.bind(this, file));\n    file.onLoad.add(this._onLoadedHandler.bind(this, file));\n    file.onError.add(this._onErrorHandler.bind(this, file));\n    file.onAbort.add(this._onAbortHandler.bind(this, file));\n    file.onProgress.add(this._onProgressHandler.bind(this, file));\n    file.isInitialized = true;\n  }\n\n  _shouldHandleError(file, e) {\n    return (this._isStatusError(e.status) || !file._isProgressStarted) && !file.isAborted;\n  }\n\n  _isStatusError(status) {\n    return 400 <= status && status < 500 || 500 <= status && status < 600;\n  }\n\n  _onUploadStarted(file, e) {\n    file.uploadStarted = true;\n\n    this.fileUploader._uploadStartedAction({\n      file: file.value,\n      event: e,\n      request: file.request\n    });\n  }\n\n  _onAbortHandler(file, e) {\n    var args = {\n      file: file.value,\n      event: e,\n      request: file.request,\n      message: this.fileUploader._getUploadAbortedStatusMessage()\n    };\n\n    this.fileUploader._uploadAbortedAction(args);\n\n    this.fileUploader._setStatusMessage(file, args.message);\n\n    this.fileUploader._handleAllFilesUploaded();\n  }\n\n  _onErrorHandler(file, error) {\n    var args = {\n      file: file.value,\n      event: void 0,\n      request: file.request,\n      error: error,\n      message: this.fileUploader.option(\"uploadFailedMessage\")\n    };\n\n    this.fileUploader._uploadErrorAction(args);\n\n    this.fileUploader._setStatusMessage(file, args.message);\n\n    this.fileUploader._handleAllFilesUploaded();\n  }\n\n  _onLoadedHandler(file, e) {\n    var args = {\n      file: file.value,\n      event: e,\n      request: file.request,\n      message: this.fileUploader.option(\"uploadedMessage\")\n    };\n    file._isLoaded = true;\n\n    this.fileUploader._uploadedAction(args);\n\n    this.fileUploader._setStatusMessage(file, args.message);\n\n    this.fileUploader._handleAllFilesUploaded();\n  }\n\n  _onProgressHandler(file, e) {\n    if (file) {\n      var totalFilesSize = this.fileUploader._getTotalFilesSize();\n\n      var totalLoadedFilesSize = this.fileUploader._getTotalLoadedFilesSize();\n\n      var loadedSize = Math.min(e.loaded, file.value.size);\n      var segmentSize = loadedSize - file.loadedSize;\n      file.loadedSize = loadedSize;\n\n      this.fileUploader._updateTotalProgress(totalFilesSize, totalLoadedFilesSize + segmentSize);\n\n      this.fileUploader._updateProgressBar(file, this._getLoadedData(loadedSize, e.total, segmentSize, e));\n    }\n  }\n\n  _getLoadedData(loaded, total, currentSegmentSize, event) {\n    return {\n      loaded: loaded,\n      total: total,\n      currentSegmentSize: currentSegmentSize\n    };\n  }\n\n  _extendFormData(formData) {\n    var formDataEntries = this.fileUploader.option(\"uploadCustomData\");\n\n    for (var entryName in formDataEntries) {\n      if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\n        formData.append(entryName, formDataEntries[entryName]);\n      }\n    }\n  }\n\n}\n\nclass ChunksFileUploadStrategyBase extends FileUploadStrategyBase {\n  constructor(fileUploader) {\n    super(fileUploader);\n    this.chunkSize = this.fileUploader.option(\"chunkSize\");\n  }\n\n  _uploadCore(file) {\n    var realFile = file.value;\n    var chunksData = {\n      name: realFile.name,\n      loadedBytes: 0,\n      type: realFile.type,\n      blobReader: new FileBlobReader(realFile, this.chunkSize),\n      guid: new Guid(),\n      fileSize: realFile.size,\n      count: Math.ceil(realFile.size / this.chunkSize),\n      customData: {}\n    };\n    file.chunksData = chunksData;\n\n    this._sendChunk(file, chunksData);\n  }\n\n  _sendChunk(file, chunksData) {\n    var chunk = chunksData.blobReader.read();\n    chunksData.currentChunk = chunk;\n\n    if (chunk) {\n      this._sendChunkCore(file, chunksData, chunk).done(() => {\n        if (file.isAborted) {\n          return;\n        }\n\n        chunksData.loadedBytes += chunk.blob.size;\n        file.onProgress.fire({\n          loaded: chunksData.loadedBytes,\n          total: file.value.size\n        });\n\n        if (chunk.isCompleted) {\n          file.onLoad.fire();\n        }\n\n        setTimeout(() => this._sendChunk(file, chunksData));\n      }).fail(error => {\n        if (this._shouldHandleError(file, error)) {\n          this._handleFileError(file, error);\n        }\n      });\n    }\n  }\n\n  _sendChunkCore(file, chunksData, chunk) {}\n\n  _tryRaiseStartLoad(file) {\n    if (!file.isStartLoad) {\n      file.isStartLoad = true;\n      file.onLoadStart.fire();\n    }\n  }\n\n  _getEvent(e) {\n    return null;\n  }\n\n  _createUploadArgument(file) {\n    return this._createChunksInfo(file.chunksData);\n  }\n\n  _createChunksInfo(chunksData) {\n    return {\n      bytesUploaded: chunksData.loadedBytes,\n      chunkCount: chunksData.count,\n      customData: chunksData.customData,\n      chunkBlob: chunksData.currentChunk.blob,\n      chunkIndex: chunksData.currentChunk.index\n    };\n  }\n\n}\n\nclass DefaultChunksFileUploadStrategy extends ChunksFileUploadStrategyBase {\n  _sendChunkCore(file, chunksData, chunk) {\n    return ajax.sendRequest({\n      url: this.fileUploader.option(\"uploadUrl\"),\n      method: this.fileUploader.option(\"uploadMethod\"),\n      headers: this.fileUploader.option(\"uploadHeaders\"),\n      beforeSend: xhr => this._beforeSend(xhr, file),\n      upload: {\n        onprogress: e => this._handleProgress(file, e),\n        onloadstart: () => this._tryRaiseStartLoad(file),\n        onabort: () => file.onAbort.fire()\n      },\n      data: this._createFormData({\n        fileName: chunksData.name,\n        blobName: this.fileUploader.option(\"name\"),\n        blob: chunk.blob,\n        index: chunk.index,\n        count: chunksData.count,\n        type: chunksData.type,\n        guid: chunksData.guid,\n        size: chunksData.fileSize\n      })\n    });\n  }\n\n  _createFormData(options) {\n    var formData = new window.FormData();\n    formData.append(options.blobName, options.blob);\n    formData.append(FILEUPLOADER_CHUNK_META_DATA_NAME, JSON.stringify({\n      FileName: options.fileName,\n      Index: options.index,\n      TotalCount: options.count,\n      FileSize: options.size,\n      FileType: options.type,\n      FileGuid: options.guid\n    }));\n\n    this._extendFormData(formData);\n\n    return formData;\n  }\n\n}\n\nclass CustomChunksFileUploadStrategy extends ChunksFileUploadStrategyBase {\n  _sendChunkCore(file, chunksData) {\n    this._tryRaiseStartLoad(file);\n\n    var chunksInfo = this._createChunksInfo(chunksData);\n\n    var uploadChunk = this.fileUploader.option(\"uploadChunk\");\n\n    try {\n      var result = uploadChunk(file.value, chunksInfo);\n      return fromPromise(result);\n    } catch (error) {\n      return new Deferred().reject(error).promise();\n    }\n  }\n\n  _shouldHandleError(file, error) {\n    return true;\n  }\n\n}\n\nclass WholeFileUploadStrategyBase extends FileUploadStrategyBase {\n  _uploadCore(file) {\n    file.loadedSize = 0;\n\n    this._uploadFile(file).done(() => {\n      if (!file.isAborted) {\n        file.onLoad.fire();\n      }\n    }).fail(error => {\n      if (this._shouldHandleError(file, error)) {\n        this._handleFileError(file, error);\n      }\n    });\n  }\n\n  _uploadFile(file) {}\n\n  _handleProgressCore(file, e) {\n    file.onProgress.fire(e);\n  }\n\n  _getLoadedData(loaded, total, segmentSize, event) {\n    var result = super._getLoadedData(loaded, total, segmentSize, event);\n\n    result.event = event;\n    return result;\n  }\n\n}\n\nclass DefaultWholeFileUploadStrategy extends WholeFileUploadStrategyBase {\n  _uploadFile(file) {\n    return ajax.sendRequest({\n      url: this.fileUploader.option(\"uploadUrl\"),\n      method: this.fileUploader.option(\"uploadMethod\"),\n      headers: this.fileUploader.option(\"uploadHeaders\"),\n      beforeSend: xhr => this._beforeSend(xhr, file),\n      upload: {\n        onprogress: e => this._handleProgress(file, e),\n        onloadstart: () => file.onLoadStart.fire(),\n        onabort: () => file.onAbort.fire()\n      },\n      data: this._createFormData(this.fileUploader.option(\"name\"), file.value)\n    });\n  }\n\n  _createFormData(fieldName, fieldValue) {\n    var formData = new window.FormData();\n    formData.append(fieldName, fieldValue, fieldValue.name);\n\n    this._extendFormData(formData);\n\n    return formData;\n  }\n\n}\n\nclass CustomWholeFileUploadStrategy extends WholeFileUploadStrategyBase {\n  _uploadFile(file) {\n    file.onLoadStart.fire();\n    var uploadFile = this.fileUploader.option(\"uploadFile\");\n\n    try {\n      var result = uploadFile(file.value, loadedBytes => {\n        var arg = {\n          loaded: loadedBytes,\n          total: file.value.size\n        };\n\n        this._handleProgress(file, arg);\n      });\n      return fromPromise(result);\n    } catch (error) {\n      return new Deferred().reject(error).promise();\n    }\n  }\n\n  _shouldHandleError(file, e) {\n    return true;\n  }\n\n}\n\nregisterComponent(\"dxFileUploader\", FileUploader);\nexport default FileUploader;","map":{"version":3,"names":["getOffset","getWidth","$","Guid","getWindow","eventsEngine","registerComponent","Callbacks","isDefined","isFunction","isNumeric","each","extend","Deferred","fromPromise","ajax","Editor","Button","ProgressBar","devices","addNamespace","isTouchEvent","name","clickEventName","messageLocalization","isMaterial","domAdapter","window","FILEUPLOADER_CLASS","FILEUPLOADER_EMPTY_CLASS","FILEUPLOADER_SHOW_FILE_LIST_CLASS","FILEUPLOADER_DRAGOVER_CLASS","FILEUPLOADER_WRAPPER_CLASS","FILEUPLOADER_CONTAINER_CLASS","FILEUPLOADER_CONTENT_CLASS","FILEUPLOADER_INPUT_WRAPPER_CLASS","FILEUPLOADER_INPUT_CONTAINER_CLASS","FILEUPLOADER_INPUT_LABEL_CLASS","FILEUPLOADER_INPUT_CLASS","FILEUPLOADER_FILES_CONTAINER_CLASS","FILEUPLOADER_FILE_CONTAINER_CLASS","FILEUPLOADER_FILE_INFO_CLASS","FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS","FILEUPLOADER_FILE_CLASS","FILEUPLOADER_FILE_NAME_CLASS","FILEUPLOADER_FILE_SIZE_CLASS","FILEUPLOADER_BUTTON_CLASS","FILEUPLOADER_BUTTON_CONTAINER_CLASS","FILEUPLOADER_CANCEL_BUTTON_CLASS","FILEUPLOADER_UPLOAD_BUTTON_CLASS","FILEUPLOADER_INVALID_CLASS","FILEUPLOADER_AFTER_LOAD_DELAY","FILEUPLOADER_CHUNK_META_DATA_NAME","renderFileUploaderInput","attr","isFormDataSupported","FormData","FileUploader","_supportedKeys","click","e","preventDefault","$selectButton","_selectButton","$element","trigger","space","enter","_setOptionsByReference","_optionsByReference","value","_getDefaultOptions","chunkSize","selectButtonText","format","uploadButtonText","labelText","multiple","accept","uploadUrl","allowCanceling","showFileList","progress","dialogTrigger","dropZone","readyToUploadMessage","uploadedMessage","uploadFailedMessage","uploadAbortedMessage","uploadMode","uploadMethod","uploadHeaders","uploadCustomData","onBeforeSend","onUploadStarted","onUploaded","onFilesUploaded","onProgress","onUploadError","onUploadAborted","onDropZoneEnter","onDropZoneLeave","allowedFileExtensions","maxFileSize","minFileSize","inputAttr","invalidFileExtensionMessage","invalidMaxFileSizeMessage","invalidMinFileSizeMessage","extendSelection","validationMessageMode","uploadFile","uploadChunk","abortUpload","validationMessageOffset","h","v","hoverStateEnabled","useNativeInputClick","useDragOver","nativeDropSupported","_uploadButtonType","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","focusStateEnabled","platform","_initOptions","isLabelTextDefined","_shouldDragOverBeRendered","option","_init","_initFileInput","_initLabel","_setUploadStrategy","_createFiles","_createBeforeSendAction","_createUploadStartedAction","_createUploadedAction","_createFilesUploadedAction","_createProgressAction","_createUploadErrorAction","_createUploadAbortedAction","_createDropZoneEnterAction","_createDropZoneLeaveAction","strategy","CustomChunksFileUploadStrategy","DefaultChunksFileUploadStrategy","CustomWholeFileUploadStrategy","DefaultWholeFileUploadStrategy","_uploadStrategy","_isCustomClickEvent","_$fileInput","on","_inputChangeHandler","bind","stopPropagation","_resetInputValue","prop","tabIndex","_doPreventInputChange","fileName","val","replace","files","length","_getFiles","_changeValue","_uploadFiles","_shouldFileListBeExtended","slice","fileList","values","_","push","_getFile","fileData","targetFileValue","_files","filter","file","_$inputLabel","_updateInputLabelText","correctedValue","_isInteractionDisabled","text","_focusTarget","find","_getSubmitElement","_initMarkup","addClass","_renderWrapper","_renderInputWrapper","_renderSelectButton","_renderInputContainer","_renderUploadButton","_preventRecreatingFiles","_activeDropZone","_render","_attachDragEventHandlers","_$inputWrapper","_renderFiles","_createFileProgressBar","progressBar","_createProgressBar","size","appendTo","$file","_initStatusMessage","_ensureCancelButtonInitialized","_setStatusMessage","message","setTimeout","$statusMessage","css","remove","_getUploadAbortedStatusMessage","_preventFilesUploading","_createFile","_validateFile","forEach","isValidFileExtension","_validateFileExtension","isValidMinSize","_validateMinFileSize","isValidMaxSize","_validateMaxFileSize","allowedExtensions","allowedTypes","_getAllowedFileTypes","fileExtension","substring","lastIndexOf","toLowerCase","_isFileTypeAllowed","i","fileSize","_beforeSendAction","_createActionByOption","excludeValidators","_uploadStartedAction","_uploadedAction","_filesUploadedAction","_progressAction","_uploadAbortedAction","_uploadErrorAction","_dropZoneEnterAction","_dropZoneLeaveAction","loadedSize","onAbort","onLoad","onError","onLoadStart","isValid","isInitialized","_resetFileState","isAborted","uploadStarted","isStartLoad","chunksData","request","_this$_validationMess","_$filesContainer","_$content","empty","_renderFile","toggleClass","_toggleFileUploaderEmptyClassName","_updateFileNameMaxWidth","_validationMessage","repaint","$fileContainer","_renderFileButtons","$fileInfo","_getFileSize","append","_createValidationElement","key","cancelButtonsCount","uploadButtonsCount","filesContainerWidth","first","$buttonContainer","eq","buttonsWidth","$fileSize","prevFileSize","fileSizeWidth","$container","$cancelButton","_getCancelButton","$uploadButton","_getUploadButton","cancelButton","_createComponent","onClick","_removeFile","icon","visible","disabled","integrationOptions","uploadButton","_uploadFile","add","_file$$file","parent","splice","indexOf","removeFile","_hasInvalidFile","labels","count","Math","round","$button","_selectFileDialogHandler","_selectButtonClickHandler","_attachSelectFileDialogHandler","target","_detachSelectFileDialogHandler","off","_uploadButton","_uploadButtonClickHandler","type","_$inputContainer","_renderInput","labelId","setAria","_selectButtonInputTemplate","_applyInputAttributes","data","content","$content","$text","_detachDragEventHandlers","NAME","isCustomTarget","_dragEnterHandler","_dragOverHandler","_dragLeaveHandler","_dropHandler","customAttributes","_useInputForDrop","_getDropZoneElement","targetList","Array","from","map","element","get","currentTarget","dropZoneElement","isMouseOverElement","_tryToggleDropZoneActive","originalEvent","dataTransfer","dropEffect","_shouldRaiseDragLeave","active","isCustom","event","classAction","mouseAction","removeClass","_handleAllFilesUploaded","areAllFilesLoaded","every","_isError","_isLoaded","acceptSting","split","item","trim","n","allowedType","match","RegExp","$wrapper","_clean","detach","upload","_updateProgressBar","loadedFileData","loaded","showStatus","segmentSize","currentSegmentSize","bytesLoaded","bytesTotal","total","_updateTotalProgress","totalFilesSize","totalLoadedFilesSize","_getProgressValue","_setLoadedSize","ratio","floor","hideCancelButton","min","max","statusFormat","statusPosition","_getTotalFilesSize","_totalFilesSize","_getTotalLoadedFilesSize","_totalLoadedFilesSize","_recalculateProgress","mouseEvent","correctPseudoElements","beforeHeight","parseFloat","getComputedStyle","height","afterHeight","x","left","y","top","w","offsetWidth","offsetHeight","eventX","_getEventX","eventY","_getEventY","_getTouchEventX","clientX","_getDocumentScrollLeft","_getTouchEventY","clientY","_getDocumentScrollTop","touchPoint","changedTouches","targetTouches","pageX","pageY","document","getDocument","documentElement","scrollTop","body","scrollLeft","_updateReadOnlyState","readOnly","_file$cancelButton","_updateHoverState","_this$_selectButton","_this$_uploadButton","_file$uploadButton","_file$cancelButton2","_optionChanged","args","previousValue","reset","_invalidate","force","FileBlobReader","constructor","index","read","result","createBlobResult","isCompleted","currentPosition","blob","sliceFile","startPos","webkitSlice","FileUploadStrategyBase","fileUploader","_prepareFileBeforeUpload","_uploadCore","abort","_isCustomCallback","arg","_createUploadArgument","deferred","error","reject","promise","done","fire","fail","_handleFileError","_beforeSend","xhr","uploadInfo","callback","_handleProgress","_isProgressStarted","_handleProgressCore","_file$progressBar","dispose","_onUploadStarted","_onLoadedHandler","_onErrorHandler","_onAbortHandler","_onProgressHandler","_shouldHandleError","_isStatusError","status","_getLoadedData","_extendFormData","formData","formDataEntries","entryName","Object","prototype","hasOwnProperty","call","ChunksFileUploadStrategyBase","realFile","loadedBytes","blobReader","guid","ceil","customData","_sendChunk","chunk","currentChunk","_sendChunkCore","_tryRaiseStartLoad","_getEvent","_createChunksInfo","bytesUploaded","chunkCount","chunkBlob","chunkIndex","sendRequest","url","method","headers","beforeSend","onprogress","onloadstart","onabort","_createFormData","blobName","JSON","stringify","FileName","Index","TotalCount","FileSize","FileType","FileGuid","chunksInfo","WholeFileUploadStrategyBase","fieldName","fieldValue"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/file_uploader.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/file_uploader.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOffset,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport Callbacks from \"../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isFunction,\r\n    isNumeric\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    Deferred,\r\n    fromPromise\r\n} from \"../core/utils/deferred\";\r\nimport ajax from \"../core/utils/ajax\";\r\nimport Editor from \"./editor/editor\";\r\nimport Button from \"./button\";\r\nimport ProgressBar from \"./progress_bar\";\r\nimport devices from \"../core/devices\";\r\nimport {\r\n    addNamespace,\r\n    isTouchEvent\r\n} from \"../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../events/click\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport {\r\n    isMaterial\r\n} from \"./themes\";\r\nimport domAdapter from \"../core/dom_adapter\";\r\nvar window = getWindow();\r\nvar FILEUPLOADER_CLASS = \"dx-fileuploader\";\r\nvar FILEUPLOADER_EMPTY_CLASS = \"dx-fileuploader-empty\";\r\nvar FILEUPLOADER_SHOW_FILE_LIST_CLASS = \"dx-fileuploader-show-file-list\";\r\nvar FILEUPLOADER_DRAGOVER_CLASS = \"dx-fileuploader-dragover\";\r\nvar FILEUPLOADER_WRAPPER_CLASS = \"dx-fileuploader-wrapper\";\r\nvar FILEUPLOADER_CONTAINER_CLASS = \"dx-fileuploader-container\";\r\nvar FILEUPLOADER_CONTENT_CLASS = \"dx-fileuploader-content\";\r\nvar FILEUPLOADER_INPUT_WRAPPER_CLASS = \"dx-fileuploader-input-wrapper\";\r\nvar FILEUPLOADER_INPUT_CONTAINER_CLASS = \"dx-fileuploader-input-container\";\r\nvar FILEUPLOADER_INPUT_LABEL_CLASS = \"dx-fileuploader-input-label\";\r\nvar FILEUPLOADER_INPUT_CLASS = \"dx-fileuploader-input\";\r\nvar FILEUPLOADER_FILES_CONTAINER_CLASS = \"dx-fileuploader-files-container\";\r\nvar FILEUPLOADER_FILE_CONTAINER_CLASS = \"dx-fileuploader-file-container\";\r\nvar FILEUPLOADER_FILE_INFO_CLASS = \"dx-fileuploader-file-info\";\r\nvar FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS = \"dx-fileuploader-file-status-message\";\r\nvar FILEUPLOADER_FILE_CLASS = \"dx-fileuploader-file\";\r\nvar FILEUPLOADER_FILE_NAME_CLASS = \"dx-fileuploader-file-name\";\r\nvar FILEUPLOADER_FILE_SIZE_CLASS = \"dx-fileuploader-file-size\";\r\nvar FILEUPLOADER_BUTTON_CLASS = \"dx-fileuploader-button\";\r\nvar FILEUPLOADER_BUTTON_CONTAINER_CLASS = \"dx-fileuploader-button-container\";\r\nvar FILEUPLOADER_CANCEL_BUTTON_CLASS = \"dx-fileuploader-cancel-button\";\r\nvar FILEUPLOADER_UPLOAD_BUTTON_CLASS = \"dx-fileuploader-upload-button\";\r\nvar FILEUPLOADER_INVALID_CLASS = \"dx-fileuploader-invalid\";\r\nvar FILEUPLOADER_AFTER_LOAD_DELAY = 400;\r\nvar FILEUPLOADER_CHUNK_META_DATA_NAME = \"chunkMetadata\";\r\nvar renderFileUploaderInput = () => $(\"<input>\").attr(\"type\", \"file\");\r\nvar isFormDataSupported = () => !!window.FormData;\r\nclass FileUploader extends Editor {\r\n    _supportedKeys() {\r\n        var click = e => {\r\n            e.preventDefault();\r\n            var $selectButton = this._selectButton.$element();\r\n            eventsEngine.trigger($selectButton, clickEventName)\r\n        };\r\n        return extend(super._supportedKeys(), {\r\n            space: click,\r\n            enter: click\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            value: true\r\n        })\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            chunkSize: 0,\r\n            value: [],\r\n            selectButtonText: messageLocalization.format(\"dxFileUploader-selectFile\"),\r\n            uploadButtonText: messageLocalization.format(\"dxFileUploader-upload\"),\r\n            labelText: messageLocalization.format(\"dxFileUploader-dropFile\"),\r\n            name: \"files[]\",\r\n            multiple: false,\r\n            accept: \"\",\r\n            uploadUrl: \"/\",\r\n            allowCanceling: true,\r\n            showFileList: true,\r\n            progress: 0,\r\n            dialogTrigger: void 0,\r\n            dropZone: void 0,\r\n            readyToUploadMessage: messageLocalization.format(\"dxFileUploader-readyToUpload\"),\r\n            uploadedMessage: messageLocalization.format(\"dxFileUploader-uploaded\"),\r\n            uploadFailedMessage: messageLocalization.format(\"dxFileUploader-uploadFailedMessage\"),\r\n            uploadAbortedMessage: messageLocalization.format(\"dxFileUploader-uploadAbortedMessage\"),\r\n            uploadMode: \"instantly\",\r\n            uploadMethod: \"POST\",\r\n            uploadHeaders: {},\r\n            uploadCustomData: {},\r\n            onBeforeSend: null,\r\n            onUploadStarted: null,\r\n            onUploaded: null,\r\n            onFilesUploaded: null,\r\n            onProgress: null,\r\n            onUploadError: null,\r\n            onUploadAborted: null,\r\n            onDropZoneEnter: null,\r\n            onDropZoneLeave: null,\r\n            allowedFileExtensions: [],\r\n            maxFileSize: 0,\r\n            minFileSize: 0,\r\n            inputAttr: {},\r\n            invalidFileExtensionMessage: messageLocalization.format(\"dxFileUploader-invalidFileExtension\"),\r\n            invalidMaxFileSizeMessage: messageLocalization.format(\"dxFileUploader-invalidMaxFileSize\"),\r\n            invalidMinFileSizeMessage: messageLocalization.format(\"dxFileUploader-invalidMinFileSize\"),\r\n            extendSelection: true,\r\n            validationMessageMode: \"always\",\r\n            uploadFile: null,\r\n            uploadChunk: null,\r\n            abortUpload: null,\r\n            validationMessageOffset: {\r\n                h: 0,\r\n                v: 0\r\n            },\r\n            hoverStateEnabled: true,\r\n            useNativeInputClick: false,\r\n            useDragOver: true,\r\n            nativeDropSupported: true,\r\n            _uploadButtonType: \"normal\"\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: [{\r\n                platform: \"android\"\r\n            }],\r\n            options: {\r\n                validationMessageOffset: {\r\n                    v: 0\r\n                }\r\n            }\r\n        }, {\r\n            device: () => \"desktop\" !== devices.real().deviceType,\r\n            options: {\r\n                useDragOver: false\r\n            }\r\n        }, {\r\n            device: () => !isFormDataSupported(),\r\n            options: {\r\n                uploadMode: \"useForm\"\r\n            }\r\n        }, {\r\n            device: () => \"desktop\" !== devices.real().deviceType,\r\n            options: {\r\n                nativeDropSupported: false\r\n            }\r\n        }, {\r\n            device: () => isMaterial(),\r\n            options: {\r\n                _uploadButtonType: \"default\"\r\n            }\r\n        }])\r\n    }\r\n    _initOptions(options) {\r\n        var isLabelTextDefined = \"labelText\" in options;\r\n        super._initOptions(options);\r\n        if (!isLabelTextDefined && !this._shouldDragOverBeRendered()) {\r\n            this.option(\"labelText\", \"\")\r\n        }\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._initFileInput();\r\n        this._initLabel();\r\n        this._setUploadStrategy();\r\n        this._createFiles();\r\n        this._createBeforeSendAction();\r\n        this._createUploadStartedAction();\r\n        this._createUploadedAction();\r\n        this._createFilesUploadedAction();\r\n        this._createProgressAction();\r\n        this._createUploadErrorAction();\r\n        this._createUploadAbortedAction();\r\n        this._createDropZoneEnterAction();\r\n        this._createDropZoneLeaveAction()\r\n    }\r\n    _setUploadStrategy() {\r\n        var strategy = null;\r\n        if (this.option(\"chunkSize\") > 0) {\r\n            var uploadChunk = this.option(\"uploadChunk\");\r\n            strategy = uploadChunk && isFunction(uploadChunk) ? new CustomChunksFileUploadStrategy(this) : new DefaultChunksFileUploadStrategy(this)\r\n        } else {\r\n            var uploadFile = this.option(\"uploadFile\");\r\n            strategy = uploadFile && isFunction(uploadFile) ? new CustomWholeFileUploadStrategy(this) : new DefaultWholeFileUploadStrategy(this)\r\n        }\r\n        this._uploadStrategy = strategy\r\n    }\r\n    _initFileInput() {\r\n        this._isCustomClickEvent = false;\r\n        if (!this._$fileInput) {\r\n            this._$fileInput = renderFileUploaderInput();\r\n            eventsEngine.on(this._$fileInput, \"change\", this._inputChangeHandler.bind(this));\r\n            eventsEngine.on(this._$fileInput, \"click\", e => {\r\n                e.stopPropagation();\r\n                this._resetInputValue();\r\n                return this.option(\"useNativeInputClick\") || this._isCustomClickEvent\r\n            })\r\n        }\r\n        this._$fileInput.prop({\r\n            multiple: this.option(\"multiple\"),\r\n            accept: this.option(\"accept\"),\r\n            tabIndex: -1\r\n        })\r\n    }\r\n    _inputChangeHandler() {\r\n        if (this._doPreventInputChange) {\r\n            return\r\n        }\r\n        var fileName = this._$fileInput.val().replace(/^.*\\\\/, \"\");\r\n        var files = this._$fileInput.prop(\"files\");\r\n        if (files && !files.length && \"useForm\" !== this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        var value = files ? this._getFiles(files) : [{\r\n            name: fileName\r\n        }];\r\n        this._changeValue(value);\r\n        if (\"instantly\" === this.option(\"uploadMode\")) {\r\n            this._uploadFiles()\r\n        }\r\n    }\r\n    _shouldFileListBeExtended() {\r\n        return \"useForm\" !== this.option(\"uploadMode\") && this.option(\"extendSelection\") && this.option(\"multiple\")\r\n    }\r\n    _changeValue(value) {\r\n        var files = this._shouldFileListBeExtended() ? this.option(\"value\").slice() : [];\r\n        this.option(\"value\", files.concat(value))\r\n    }\r\n    _getFiles(fileList) {\r\n        var values = [];\r\n        each(fileList, (_, value) => values.push(value));\r\n        return values\r\n    }\r\n    _getFile(fileData) {\r\n        var targetFileValue = isNumeric(fileData) ? this.option(\"value\")[fileData] : fileData;\r\n        return this._files.filter(file => file.value === targetFileValue)[0]\r\n    }\r\n    _initLabel() {\r\n        if (!this._$inputLabel) {\r\n            this._$inputLabel = $(\"<div>\")\r\n        }\r\n        this._updateInputLabelText()\r\n    }\r\n    _updateInputLabelText() {\r\n        var correctedValue = this._isInteractionDisabled() ? \"\" : this.option(\"labelText\");\r\n        this._$inputLabel.text(correctedValue)\r\n    }\r\n    _focusTarget() {\r\n        return this.$element().find(\".\" + FILEUPLOADER_BUTTON_CLASS)\r\n    }\r\n    _getSubmitElement() {\r\n        return this._$fileInput\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this.$element().addClass(FILEUPLOADER_CLASS);\r\n        this._renderWrapper();\r\n        this._renderInputWrapper();\r\n        this._renderSelectButton();\r\n        this._renderInputContainer();\r\n        this._renderUploadButton();\r\n        this._preventRecreatingFiles = true;\r\n        this._activeDropZone = null\r\n    }\r\n    _render() {\r\n        this._preventRecreatingFiles = false;\r\n        this._attachDragEventHandlers(this._$inputWrapper);\r\n        this._attachDragEventHandlers(this.option(\"dropZone\"));\r\n        this._renderFiles();\r\n        super._render()\r\n    }\r\n    _createFileProgressBar(file) {\r\n        file.progressBar = this._createProgressBar(file.value.size);\r\n        file.progressBar.$element().appendTo(file.$file);\r\n        this._initStatusMessage(file);\r\n        this._ensureCancelButtonInitialized(file)\r\n    }\r\n    _setStatusMessage(file, message) {\r\n        setTimeout(() => {\r\n            if (this.option(\"showFileList\")) {\r\n                if (file.$statusMessage) {\r\n                    file.$statusMessage.text(message);\r\n                    file.$statusMessage.css(\"display\", \"\");\r\n                    file.progressBar.$element().remove()\r\n                }\r\n            }\r\n        }, FILEUPLOADER_AFTER_LOAD_DELAY)\r\n    }\r\n    _getUploadAbortedStatusMessage() {\r\n        return \"instantly\" === this.option(\"uploadMode\") ? this.option(\"uploadAbortedMessage\") : this.option(\"readyToUploadMessage\")\r\n    }\r\n    _createFiles() {\r\n        var value = this.option(\"value\");\r\n        if (this._files && (0 === value.length || !this._shouldFileListBeExtended())) {\r\n            this._preventFilesUploading(this._files);\r\n            this._files = null\r\n        }\r\n        if (!this._files) {\r\n            this._files = []\r\n        }\r\n        each(value.slice(this._files.length), (_, value) => {\r\n            var file = this._createFile(value);\r\n            this._validateFile(file);\r\n            this._files.push(file)\r\n        })\r\n    }\r\n    _preventFilesUploading(files) {\r\n        files.forEach(file => this._uploadStrategy.abortUpload(file))\r\n    }\r\n    _validateFile(file) {\r\n        file.isValidFileExtension = this._validateFileExtension(file);\r\n        file.isValidMinSize = this._validateMinFileSize(file);\r\n        file.isValidMaxSize = this._validateMaxFileSize(file)\r\n    }\r\n    _validateFileExtension(file) {\r\n        var allowedExtensions = this.option(\"allowedFileExtensions\");\r\n        var accept = this.option(\"accept\");\r\n        var allowedTypes = this._getAllowedFileTypes(accept);\r\n        var fileExtension = file.value.name.substring(file.value.name.lastIndexOf(\".\")).toLowerCase();\r\n        if (0 !== accept.length && !this._isFileTypeAllowed(file.value, allowedTypes)) {\r\n            return false\r\n        }\r\n        if (0 === allowedExtensions.length) {\r\n            return true\r\n        }\r\n        for (var i = 0; i < allowedExtensions.length; i++) {\r\n            if (fileExtension === allowedExtensions[i].toLowerCase()) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _validateMaxFileSize(file) {\r\n        var fileSize = file.value.size;\r\n        var maxFileSize = this.option(\"maxFileSize\");\r\n        return maxFileSize > 0 ? fileSize <= maxFileSize : true\r\n    }\r\n    _validateMinFileSize(file) {\r\n        var fileSize = file.value.size;\r\n        var minFileSize = this.option(\"minFileSize\");\r\n        return minFileSize > 0 ? fileSize >= minFileSize : true\r\n    }\r\n    _createBeforeSendAction() {\r\n        this._beforeSendAction = this._createActionByOption(\"onBeforeSend\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadStartedAction() {\r\n        this._uploadStartedAction = this._createActionByOption(\"onUploadStarted\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadedAction() {\r\n        this._uploadedAction = this._createActionByOption(\"onUploaded\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createFilesUploadedAction() {\r\n        this._filesUploadedAction = this._createActionByOption(\"onFilesUploaded\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createProgressAction() {\r\n        this._progressAction = this._createActionByOption(\"onProgress\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadAbortedAction() {\r\n        this._uploadAbortedAction = this._createActionByOption(\"onUploadAborted\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadErrorAction() {\r\n        this._uploadErrorAction = this._createActionByOption(\"onUploadError\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createDropZoneEnterAction() {\r\n        this._dropZoneEnterAction = this._createActionByOption(\"onDropZoneEnter\")\r\n    }\r\n    _createDropZoneLeaveAction() {\r\n        this._dropZoneLeaveAction = this._createActionByOption(\"onDropZoneLeave\")\r\n    }\r\n    _createFile(value) {\r\n        return {\r\n            value: value,\r\n            loadedSize: 0,\r\n            onProgress: Callbacks(),\r\n            onAbort: Callbacks(),\r\n            onLoad: Callbacks(),\r\n            onError: Callbacks(),\r\n            onLoadStart: Callbacks(),\r\n            isValidFileExtension: true,\r\n            isValidMaxSize: true,\r\n            isValidMinSize: true,\r\n            isValid() {\r\n                return this.isValidFileExtension && this.isValidMaxSize && this.isValidMinSize\r\n            },\r\n            isInitialized: false\r\n        }\r\n    }\r\n    _resetFileState(file) {\r\n        file.isAborted = false;\r\n        file.uploadStarted = false;\r\n        file.isStartLoad = false;\r\n        file.loadedSize = 0;\r\n        file.chunksData = void 0;\r\n        file.request = void 0\r\n    }\r\n    _renderFiles() {\r\n        var _this$_validationMess;\r\n        var value = this.option(\"value\");\r\n        if (!this._$filesContainer) {\r\n            this._$filesContainer = $(\"<div>\").addClass(FILEUPLOADER_FILES_CONTAINER_CLASS).appendTo(this._$content)\r\n        } else if (!this._shouldFileListBeExtended() || 0 === value.length) {\r\n            this._$filesContainer.empty()\r\n        }\r\n        var showFileList = this.option(\"showFileList\");\r\n        if (showFileList) {\r\n            each(this._files, (_, file) => {\r\n                if (!file.$file) {\r\n                    this._renderFile(file)\r\n                }\r\n            })\r\n        }\r\n        this.$element().toggleClass(FILEUPLOADER_SHOW_FILE_LIST_CLASS, showFileList);\r\n        this._toggleFileUploaderEmptyClassName();\r\n        this._updateFileNameMaxWidth();\r\n        null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess ? void 0 : _this$_validationMess.repaint()\r\n    }\r\n    _renderFile(file) {\r\n        var value = file.value;\r\n        var $fileContainer = $(\"<div>\").addClass(FILEUPLOADER_FILE_CONTAINER_CLASS).appendTo(this._$filesContainer);\r\n        this._renderFileButtons(file, $fileContainer);\r\n        file.$file = $(\"<div>\").addClass(FILEUPLOADER_FILE_CLASS).appendTo($fileContainer);\r\n        var $fileInfo = $(\"<div>\").addClass(FILEUPLOADER_FILE_INFO_CLASS).appendTo(file.$file);\r\n        file.$statusMessage = $(\"<div>\").addClass(FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS).appendTo(file.$file);\r\n        $(\"<div>\").addClass(FILEUPLOADER_FILE_NAME_CLASS).text(value.name).appendTo($fileInfo);\r\n        if (isDefined(value.size)) {\r\n            $(\"<div>\").addClass(FILEUPLOADER_FILE_SIZE_CLASS).text(this._getFileSize(value.size)).appendTo($fileInfo)\r\n        }\r\n        if (file.isValid()) {\r\n            file.$statusMessage.text(this.option(\"readyToUploadMessage\"))\r\n        } else {\r\n            if (!file.isValidFileExtension) {\r\n                file.$statusMessage.append(this._createValidationElement(\"invalidFileExtensionMessage\"))\r\n            }\r\n            if (!file.isValidMaxSize) {\r\n                file.$statusMessage.append(this._createValidationElement(\"invalidMaxFileSizeMessage\"))\r\n            }\r\n            if (!file.isValidMinSize) {\r\n                file.$statusMessage.append(this._createValidationElement(\"invalidMinFileSizeMessage\"))\r\n            }\r\n            $fileContainer.addClass(FILEUPLOADER_INVALID_CLASS)\r\n        }\r\n    }\r\n    _createValidationElement(key) {\r\n        return $(\"<span>\").text(this.option(key))\r\n    }\r\n    _updateFileNameMaxWidth() {\r\n        var cancelButtonsCount = this.option(\"allowCanceling\") && \"useForm\" !== this.option(\"uploadMode\") ? 1 : 0;\r\n        var uploadButtonsCount = \"useButtons\" === this.option(\"uploadMode\") ? 1 : 0;\r\n        var filesContainerWidth = getWidth(this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_CONTAINER_CLASS).first()) || getWidth(this._$filesContainer);\r\n        var $buttonContainer = this._$filesContainer.find(\".\" + FILEUPLOADER_BUTTON_CONTAINER_CLASS).eq(0);\r\n        var buttonsWidth = getWidth($buttonContainer) * (cancelButtonsCount + uploadButtonsCount);\r\n        var $fileSize = this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_SIZE_CLASS).eq(0);\r\n        var prevFileSize = $fileSize.text();\r\n        $fileSize.text(\"1000 Mb\");\r\n        var fileSizeWidth = getWidth($fileSize);\r\n        $fileSize.text(prevFileSize);\r\n        this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_NAME_CLASS).css(\"maxWidth\", filesContainerWidth - buttonsWidth - fileSizeWidth)\r\n    }\r\n    _renderFileButtons(file, $container) {\r\n        var $cancelButton = this._getCancelButton(file);\r\n        $cancelButton && $container.append($cancelButton);\r\n        var $uploadButton = this._getUploadButton(file);\r\n        $uploadButton && $container.append($uploadButton)\r\n    }\r\n    _getCancelButton(file) {\r\n        if (\"useForm\" === this.option(\"uploadMode\")) {\r\n            return null\r\n        }\r\n        file.cancelButton = this._createComponent($(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS + \" \" + FILEUPLOADER_CANCEL_BUTTON_CLASS), Button, {\r\n            onClick: () => this._removeFile(file),\r\n            icon: \"close\",\r\n            visible: this.option(\"allowCanceling\"),\r\n            disabled: this.option(\"readOnly\"),\r\n            integrationOptions: {},\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        });\r\n        return $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CONTAINER_CLASS).append(file.cancelButton.$element())\r\n    }\r\n    _getUploadButton(file) {\r\n        if (!file.isValid() || \"useButtons\" !== this.option(\"uploadMode\")) {\r\n            return null\r\n        }\r\n        file.uploadButton = this._createComponent($(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS + \" \" + FILEUPLOADER_UPLOAD_BUTTON_CLASS), Button, {\r\n            onClick: () => this._uploadFile(file),\r\n            icon: \"upload\",\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        });\r\n        file.onLoadStart.add(() => file.uploadButton.option({\r\n            visible: false,\r\n            disabled: true\r\n        }));\r\n        file.onAbort.add(() => file.uploadButton.option({\r\n            visible: true,\r\n            disabled: false\r\n        }));\r\n        return $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CONTAINER_CLASS).append(file.uploadButton.$element())\r\n    }\r\n    _removeFile(file) {\r\n        var _file$$file;\r\n        null === (_file$$file = file.$file) || void 0 === _file$$file ? void 0 : _file$$file.parent().remove();\r\n        this._files.splice(this._files.indexOf(file), 1);\r\n        var value = this.option(\"value\").slice();\r\n        value.splice(value.indexOf(file.value), 1);\r\n        this._preventRecreatingFiles = true;\r\n        this.option(\"value\", value);\r\n        this._preventRecreatingFiles = false;\r\n        this._toggleFileUploaderEmptyClassName();\r\n        this._resetInputValue(true)\r\n    }\r\n    removeFile(fileData) {\r\n        if (\"useForm\" === this.option(\"uploadMode\") || !isDefined(fileData)) {\r\n            return\r\n        }\r\n        var file = this._getFile(fileData);\r\n        if (file) {\r\n            if (file.uploadStarted) {\r\n                this._preventFilesUploading([file])\r\n            }\r\n            this._removeFile(file)\r\n        }\r\n    }\r\n    _toggleFileUploaderEmptyClassName() {\r\n        this.$element().toggleClass(FILEUPLOADER_EMPTY_CLASS, !this._files.length || this._hasInvalidFile(this._files))\r\n    }\r\n    _hasInvalidFile(files) {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i].isValid()) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _getFileSize(size) {\r\n        var i = 0;\r\n        var labels = [messageLocalization.format(\"dxFileUploader-bytes\"), messageLocalization.format(\"dxFileUploader-kb\"), messageLocalization.format(\"dxFileUploader-Mb\"), messageLocalization.format(\"dxFileUploader-Gb\")];\r\n        var count = labels.length - 1;\r\n        while (i < count && size >= 1024) {\r\n            size /= 1024;\r\n            i++\r\n        }\r\n        return Math.round(size) + \" \" + labels[i]\r\n    }\r\n    _renderSelectButton() {\r\n        var $button = $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS).appendTo(this._$inputWrapper);\r\n        this._selectButton = this._createComponent($button, Button, {\r\n            text: this.option(\"selectButtonText\"),\r\n            focusStateEnabled: false,\r\n            integrationOptions: {},\r\n            disabled: this.option(\"readOnly\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        });\r\n        this._selectFileDialogHandler = this._selectButtonClickHandler.bind(this);\r\n        if (\"desktop\" === devices.real().deviceType) {\r\n            this._selectButton.option(\"onClick\", this._selectFileDialogHandler)\r\n        } else {\r\n            this._attachSelectFileDialogHandler(this._selectButton.$element())\r\n        }\r\n        this._attachSelectFileDialogHandler(this.option(\"dialogTrigger\"))\r\n    }\r\n    _selectButtonClickHandler() {\r\n        if (this.option(\"useNativeInputClick\")) {\r\n            return\r\n        }\r\n        if (this._isInteractionDisabled()) {\r\n            return false\r\n        }\r\n        this._isCustomClickEvent = true;\r\n        eventsEngine.trigger(this._$fileInput, \"click\");\r\n        this._isCustomClickEvent = false\r\n    }\r\n    _attachSelectFileDialogHandler(target) {\r\n        if (!isDefined(target)) {\r\n            return\r\n        }\r\n        this._detachSelectFileDialogHandler(target);\r\n        eventsEngine.on($(target), \"click\", this._selectFileDialogHandler)\r\n    }\r\n    _detachSelectFileDialogHandler(target) {\r\n        if (!isDefined(target)) {\r\n            return\r\n        }\r\n        eventsEngine.off($(target), \"click\", this._selectFileDialogHandler)\r\n    }\r\n    _renderUploadButton() {\r\n        if (\"useButtons\" !== this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        var $uploadButton = $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS).addClass(FILEUPLOADER_UPLOAD_BUTTON_CLASS).appendTo(this._$content);\r\n        this._uploadButton = this._createComponent($uploadButton, Button, {\r\n            text: this.option(\"uploadButtonText\"),\r\n            onClick: this._uploadButtonClickHandler.bind(this),\r\n            type: this.option(\"_uploadButtonType\"),\r\n            integrationOptions: {},\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        })\r\n    }\r\n    _uploadButtonClickHandler() {\r\n        this._uploadFiles()\r\n    }\r\n    _shouldDragOverBeRendered() {\r\n        return !this.option(\"readOnly\") && (\"useForm\" !== this.option(\"uploadMode\") || this.option(\"nativeDropSupported\"))\r\n    }\r\n    _isInteractionDisabled() {\r\n        return this.option(\"readOnly\") || this.option(\"disabled\")\r\n    }\r\n    _renderInputContainer() {\r\n        this._$inputContainer = $(\"<div>\").addClass(FILEUPLOADER_INPUT_CONTAINER_CLASS).appendTo(this._$inputWrapper);\r\n        this._$fileInput.addClass(FILEUPLOADER_INPUT_CLASS);\r\n        this._renderInput();\r\n        var labelId = \"dx-fileuploader-input-label-\".concat(new Guid);\r\n        this._$inputLabel.attr(\"id\", labelId).addClass(FILEUPLOADER_INPUT_LABEL_CLASS).appendTo(this._$inputContainer);\r\n        this.setAria(\"labelledby\", labelId, this._$fileInput)\r\n    }\r\n    _renderInput() {\r\n        if (this.option(\"useNativeInputClick\")) {\r\n            this._selectButton.option(\"template\", this._selectButtonInputTemplate.bind(this))\r\n        } else {\r\n            this._$fileInput.appendTo(this._$inputContainer);\r\n            this._selectButton.option(\"template\", \"content\")\r\n        }\r\n        this._applyInputAttributes(this.option(\"inputAttr\"))\r\n    }\r\n    _selectButtonInputTemplate(data, content) {\r\n        var $content = $(content);\r\n        var $text = $(\"<span>\").addClass(\"dx-button-text\").text(data.text);\r\n        $content.append($text).append(this._$fileInput);\r\n        return $content\r\n    }\r\n    _renderInputWrapper() {\r\n        this._$inputWrapper = $(\"<div>\").addClass(FILEUPLOADER_INPUT_WRAPPER_CLASS).appendTo(this._$content)\r\n    }\r\n    _detachDragEventHandlers(target) {\r\n        if (!isDefined(target)) {\r\n            return\r\n        }\r\n        eventsEngine.off($(target), addNamespace(\"\", this.NAME))\r\n    }\r\n    _attachDragEventHandlers(target) {\r\n        var isCustomTarget = target !== this._$inputWrapper;\r\n        if (!isDefined(target) || !this._shouldDragOverBeRendered()) {\r\n            return\r\n        }\r\n        this._detachDragEventHandlers(target);\r\n        target = $(target);\r\n        eventsEngine.on(target, addNamespace(\"dragenter\", this.NAME), this._dragEnterHandler.bind(this, isCustomTarget));\r\n        eventsEngine.on(target, addNamespace(\"dragover\", this.NAME), this._dragOverHandler.bind(this, isCustomTarget));\r\n        eventsEngine.on(target, addNamespace(\"dragleave\", this.NAME), this._dragLeaveHandler.bind(this, isCustomTarget));\r\n        eventsEngine.on(target, addNamespace(\"drop\", this.NAME), this._dropHandler.bind(this, isCustomTarget))\r\n    }\r\n    _applyInputAttributes(customAttributes) {\r\n        this._$fileInput.attr(customAttributes)\r\n    }\r\n    _useInputForDrop() {\r\n        return this.option(\"nativeDropSupported\") && \"useForm\" === this.option(\"uploadMode\")\r\n    }\r\n    _getDropZoneElement(isCustomTarget, e) {\r\n        var targetList = isCustomTarget ? Array.from($(this.option(\"dropZone\"))) : [this._$inputWrapper];\r\n        targetList = targetList.map(element => $(element).get(0));\r\n        return targetList[targetList.indexOf(e.currentTarget)]\r\n    }\r\n    _dragEnterHandler(isCustomTarget, e) {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (!this._useInputForDrop()) {\r\n            e.preventDefault()\r\n        }\r\n        var dropZoneElement = this._getDropZoneElement(isCustomTarget, e);\r\n        if (isDefined(dropZoneElement) && null === this._activeDropZone && this.isMouseOverElement(e, dropZoneElement, false)) {\r\n            this._activeDropZone = dropZoneElement;\r\n            this._tryToggleDropZoneActive(true, isCustomTarget, e)\r\n        }\r\n    }\r\n    _dragOverHandler(isCustomTarget, e) {\r\n        if (!this._useInputForDrop()) {\r\n            e.preventDefault()\r\n        }\r\n        e.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n        if (!isCustomTarget) {\r\n            var dropZoneElement = this._getDropZoneElement(false, e);\r\n            if (null === this._activeDropZone && this.isMouseOverElement(e, dropZoneElement, false)) {\r\n                this._dragEnterHandler(false, e)\r\n            }\r\n            if (null !== this._activeDropZone && this._shouldRaiseDragLeave(e, false)) {\r\n                this._dragLeaveHandler(false, e)\r\n            }\r\n        }\r\n    }\r\n    _dragLeaveHandler(isCustomTarget, e) {\r\n        if (!this._useInputForDrop()) {\r\n            e.preventDefault()\r\n        }\r\n        if (null === this._activeDropZone) {\r\n            return\r\n        }\r\n        if (this._shouldRaiseDragLeave(e, isCustomTarget)) {\r\n            this._tryToggleDropZoneActive(false, isCustomTarget, e);\r\n            this._activeDropZone = null\r\n        }\r\n    }\r\n    _shouldRaiseDragLeave(e, isCustomTarget) {\r\n        return !this.isMouseOverElement(e, this._activeDropZone, !isCustomTarget)\r\n    }\r\n    _tryToggleDropZoneActive(active, isCustom, event) {\r\n        var classAction = active ? \"addClass\" : \"removeClass\";\r\n        var mouseAction = active ? \"_dropZoneEnterAction\" : \"_dropZoneLeaveAction\";\r\n        this[mouseAction]({\r\n            event: event,\r\n            dropZoneElement: this._activeDropZone\r\n        });\r\n        if (!isCustom) {\r\n            this.$element()[classAction](FILEUPLOADER_DRAGOVER_CLASS)\r\n        }\r\n    }\r\n    _dropHandler(isCustomTarget, e) {\r\n        this._activeDropZone = null;\r\n        if (!isCustomTarget) {\r\n            this.$element().removeClass(FILEUPLOADER_DRAGOVER_CLASS)\r\n        }\r\n        if (this._useInputForDrop() || isCustomTarget && this._isInteractionDisabled()) {\r\n            return\r\n        }\r\n        e.preventDefault();\r\n        var fileList = e.originalEvent.dataTransfer.files;\r\n        var files = this._getFiles(fileList);\r\n        if (!this.option(\"multiple\") && files.length > 1) {\r\n            return\r\n        }\r\n        this._changeValue(files);\r\n        if (\"instantly\" === this.option(\"uploadMode\")) {\r\n            this._uploadFiles()\r\n        }\r\n    }\r\n    _handleAllFilesUploaded() {\r\n        var areAllFilesLoaded = this._files.every(file => !file.isValid() || file._isError || file._isLoaded || file.isAborted);\r\n        if (areAllFilesLoaded) {\r\n            this._filesUploadedAction()\r\n        }\r\n    }\r\n    _getAllowedFileTypes(acceptSting) {\r\n        if (!acceptSting.length) {\r\n            return []\r\n        }\r\n        return acceptSting.split(\",\").map(item => item.trim())\r\n    }\r\n    _isFileTypeAllowed(file, allowedTypes) {\r\n        for (var i = 0, n = allowedTypes.length; i < n; i++) {\r\n            var allowedType = allowedTypes[i];\r\n            if (\".\" === allowedType[0]) {\r\n                allowedType = allowedType.replace(\".\", \"\\\\.\");\r\n                if (file.name.match(new RegExp(allowedType + \"$\", \"i\"))) {\r\n                    return true\r\n                }\r\n            } else {\r\n                allowedType = allowedType.replace(new RegExp(\"\\\\*\", \"g\"), \"\");\r\n                if (file.type.match(new RegExp(allowedType, \"i\"))) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _renderWrapper() {\r\n        var $wrapper = $(\"<div>\").addClass(FILEUPLOADER_WRAPPER_CLASS).appendTo(this.$element());\r\n        var $container = $(\"<div>\").addClass(FILEUPLOADER_CONTAINER_CLASS).appendTo($wrapper);\r\n        this._$content = $(\"<div>\").addClass(FILEUPLOADER_CONTENT_CLASS).appendTo($container)\r\n    }\r\n    _clean() {\r\n        this._$fileInput.detach();\r\n        delete this._$filesContainer;\r\n        this._detachSelectFileDialogHandler(this.option(\"dialogTrigger\"));\r\n        this._detachDragEventHandlers(this.option(\"dropZone\"));\r\n        if (this._files) {\r\n            this._files.forEach(file => {\r\n                file.$file = null;\r\n                file.$statusMessage = null\r\n            })\r\n        }\r\n        super._clean()\r\n    }\r\n    abortUpload(fileData) {\r\n        if (\"useForm\" === this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        if (isDefined(fileData)) {\r\n            var file = this._getFile(fileData);\r\n            if (file) {\r\n                this._preventFilesUploading([file])\r\n            }\r\n        } else {\r\n            this._preventFilesUploading(this._files)\r\n        }\r\n    }\r\n    upload(fileData) {\r\n        if (\"useForm\" === this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        if (isDefined(fileData)) {\r\n            var file = this._getFile(fileData);\r\n            if (file && isFormDataSupported()) {\r\n                this._uploadFile(file)\r\n            }\r\n        } else {\r\n            this._uploadFiles()\r\n        }\r\n    }\r\n    _uploadFiles() {\r\n        if (isFormDataSupported()) {\r\n            each(this._files, (_, file) => this._uploadFile(file))\r\n        }\r\n    }\r\n    _uploadFile(file) {\r\n        this._uploadStrategy.upload(file)\r\n    }\r\n    _updateProgressBar(file, loadedFileData) {\r\n        file.progressBar && file.progressBar.option({\r\n            value: loadedFileData.loaded,\r\n            showStatus: true\r\n        });\r\n        this._progressAction({\r\n            file: file.value,\r\n            segmentSize: loadedFileData.currentSegmentSize,\r\n            bytesLoaded: loadedFileData.loaded,\r\n            bytesTotal: loadedFileData.total,\r\n            event: loadedFileData.event,\r\n            request: file.request\r\n        })\r\n    }\r\n    _updateTotalProgress(totalFilesSize, totalLoadedFilesSize) {\r\n        var progress = totalFilesSize ? this._getProgressValue(totalLoadedFilesSize / totalFilesSize) : 0;\r\n        this.option(\"progress\", progress);\r\n        this._setLoadedSize(totalLoadedFilesSize)\r\n    }\r\n    _getProgressValue(ratio) {\r\n        return Math.floor(100 * ratio)\r\n    }\r\n    _initStatusMessage(file) {\r\n        file.$statusMessage.css(\"display\", \"none\")\r\n    }\r\n    _ensureCancelButtonInitialized(file) {\r\n        if (file.isInitialized) {\r\n            return\r\n        }\r\n        file.cancelButton.option(\"onClick\", () => {\r\n            this._preventFilesUploading([file]);\r\n            this._removeFile(file)\r\n        });\r\n        var hideCancelButton = () => {\r\n            setTimeout(() => {\r\n                file.cancelButton.option({\r\n                    visible: false\r\n                })\r\n            }, FILEUPLOADER_AFTER_LOAD_DELAY)\r\n        };\r\n        file.onLoad.add(hideCancelButton);\r\n        file.onError.add(hideCancelButton)\r\n    }\r\n    _createProgressBar(fileSize) {\r\n        return this._createComponent($(\"<div>\"), ProgressBar, {\r\n            value: void 0,\r\n            min: 0,\r\n            max: fileSize,\r\n            statusFormat: ratio => this._getProgressValue(ratio) + \"%\",\r\n            showStatus: false,\r\n            statusPosition: \"right\"\r\n        })\r\n    }\r\n    _getTotalFilesSize() {\r\n        if (!this._totalFilesSize) {\r\n            this._totalFilesSize = 0;\r\n            each(this._files, (_, file) => {\r\n                this._totalFilesSize += file.value.size\r\n            })\r\n        }\r\n        return this._totalFilesSize\r\n    }\r\n    _getTotalLoadedFilesSize() {\r\n        if (!this._totalLoadedFilesSize) {\r\n            this._totalLoadedFilesSize = 0;\r\n            each(this._files, (_, file) => {\r\n                this._totalLoadedFilesSize += file.loadedSize\r\n            })\r\n        }\r\n        return this._totalLoadedFilesSize\r\n    }\r\n    _setLoadedSize(value) {\r\n        this._totalLoadedFilesSize = value\r\n    }\r\n    _recalculateProgress() {\r\n        this._totalFilesSize = 0;\r\n        this._totalLoadedFilesSize = 0;\r\n        this._updateTotalProgress(this._getTotalFilesSize(), this._getTotalLoadedFilesSize())\r\n    }\r\n    isMouseOverElement(mouseEvent, element, correctPseudoElements) {\r\n        if (!element) {\r\n            return false\r\n        }\r\n        var beforeHeight = correctPseudoElements ? parseFloat(window.getComputedStyle(element, \":before\").height) : 0;\r\n        var afterHeight = correctPseudoElements ? parseFloat(window.getComputedStyle(element, \":after\").height) : 0;\r\n        var x = getOffset(element).left;\r\n        var y = getOffset(element).top + beforeHeight;\r\n        var w = element.offsetWidth;\r\n        var h = element.offsetHeight - beforeHeight - afterHeight;\r\n        var eventX = this._getEventX(mouseEvent);\r\n        var eventY = this._getEventY(mouseEvent);\r\n        return eventX >= x && eventX < x + w && eventY >= y && eventY < y + h\r\n    }\r\n    _getEventX(e) {\r\n        return isTouchEvent(e) ? this._getTouchEventX(e) : e.clientX + this._getDocumentScrollLeft()\r\n    }\r\n    _getEventY(e) {\r\n        return isTouchEvent(e) ? this._getTouchEventY(e) : e.clientY + this._getDocumentScrollTop()\r\n    }\r\n    _getTouchEventX(e) {\r\n        var touchPoint = null;\r\n        if (e.changedTouches.length > 0) {\r\n            touchPoint = e.changedTouches\r\n        } else if (e.targetTouches.length > 0) {\r\n            touchPoint = e.targetTouches\r\n        }\r\n        return touchPoint ? touchPoint[0].pageX : 0\r\n    }\r\n    _getTouchEventY(e) {\r\n        var touchPoint = null;\r\n        if (e.changedTouches.length > 0) {\r\n            touchPoint = e.changedTouches\r\n        } else if (e.targetTouches.length > 0) {\r\n            touchPoint = e.targetTouches\r\n        }\r\n        return touchPoint ? touchPoint[0].pageY : 0\r\n    }\r\n    _getDocumentScrollTop() {\r\n        var document = domAdapter.getDocument();\r\n        return document.documentElement.scrollTop || document.body.scrollTop\r\n    }\r\n    _getDocumentScrollLeft() {\r\n        var document = domAdapter.getDocument();\r\n        return document.documentElement.scrollLeft || document.body.scrollLeft\r\n    }\r\n    _updateReadOnlyState() {\r\n        var readOnly = this.option(\"readOnly\");\r\n        this._selectButton.option(\"disabled\", readOnly);\r\n        this._files.forEach(file => {\r\n            var _file$cancelButton;\r\n            return null === (_file$cancelButton = file.cancelButton) || void 0 === _file$cancelButton ? void 0 : _file$cancelButton.option(\"disabled\", readOnly)\r\n        });\r\n        this._updateInputLabelText();\r\n        this._attachDragEventHandlers(this._$inputWrapper)\r\n    }\r\n    _updateHoverState() {\r\n        var _this$_selectButton, _this$_uploadButton;\r\n        var value = this.option(\"hoverStateEnabled\");\r\n        null === (_this$_selectButton = this._selectButton) || void 0 === _this$_selectButton ? void 0 : _this$_selectButton.option(\"hoverStateEnabled\", value);\r\n        null === (_this$_uploadButton = this._uploadButton) || void 0 === _this$_uploadButton ? void 0 : _this$_uploadButton.option(\"hoverStateEnabled\", value);\r\n        this._files.forEach(file => {\r\n            var _file$uploadButton, _file$cancelButton2;\r\n            null === (_file$uploadButton = file.uploadButton) || void 0 === _file$uploadButton ? void 0 : _file$uploadButton.option(\"hoverStateEnabled\", value);\r\n            null === (_file$cancelButton2 = file.cancelButton) || void 0 === _file$cancelButton2 ? void 0 : _file$cancelButton2.option(\"hoverStateEnabled\", value)\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var {\r\n            name: name,\r\n            value: value,\r\n            previousValue: previousValue\r\n        } = args;\r\n        switch (name) {\r\n            case \"height\":\r\n            case \"width\":\r\n                this._updateFileNameMaxWidth();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"value\":\r\n                !value.length && this._$fileInput.val(\"\");\r\n                if (!this._preventRecreatingFiles) {\r\n                    this._createFiles();\r\n                    this._renderFiles()\r\n                }\r\n                this._recalculateProgress();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"name\":\r\n                this._initFileInput();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"accept\":\r\n                this._initFileInput();\r\n                break;\r\n            case \"multiple\":\r\n                this._initFileInput();\r\n                if (!args.value) {\r\n                    this.reset()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                this._updateReadOnlyState();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"disabled\":\r\n                this._updateInputLabelText();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"selectButtonText\":\r\n                this._selectButton.option(\"text\", value);\r\n                break;\r\n            case \"uploadButtonText\":\r\n                this._uploadButton && this._uploadButton.option(\"text\", value);\r\n                break;\r\n            case \"_uploadButtonType\":\r\n                this._uploadButton && this._uploadButton.option(\"type\", value);\r\n                break;\r\n            case \"dialogTrigger\":\r\n                this._detachSelectFileDialogHandler(previousValue);\r\n                this._attachSelectFileDialogHandler(value);\r\n                break;\r\n            case \"dropZone\":\r\n                this._detachDragEventHandlers(previousValue);\r\n                this._attachDragEventHandlers(value);\r\n                break;\r\n            case \"maxFileSize\":\r\n            case \"minFileSize\":\r\n            case \"allowedFileExtensions\":\r\n            case \"invalidFileExtensionMessage\":\r\n            case \"invalidMaxFileSizeMessage\":\r\n            case \"invalidMinFileSizeMessage\":\r\n            case \"readyToUploadMessage\":\r\n            case \"uploadedMessage\":\r\n            case \"uploadFailedMessage\":\r\n            case \"uploadAbortedMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"labelText\":\r\n                this._updateInputLabelText();\r\n                break;\r\n            case \"showFileList\":\r\n                if (!this._preventRecreatingFiles) {\r\n                    this._renderFiles()\r\n                }\r\n                break;\r\n            case \"uploadFile\":\r\n            case \"uploadChunk\":\r\n            case \"chunkSize\":\r\n                this._setUploadStrategy();\r\n                break;\r\n            case \"abortUpload\":\r\n            case \"uploadUrl\":\r\n            case \"progress\":\r\n            case \"uploadMethod\":\r\n            case \"uploadHeaders\":\r\n            case \"uploadCustomData\":\r\n            case \"extendSelection\":\r\n                break;\r\n            case \"hoverStateEnabled\":\r\n                this._updateHoverState();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"allowCanceling\":\r\n            case \"uploadMode\":\r\n                this.reset();\r\n                this._invalidate();\r\n                break;\r\n            case \"onBeforeSend\":\r\n                this._createBeforeSendAction();\r\n                break;\r\n            case \"onUploadStarted\":\r\n                this._createUploadStartedAction();\r\n                break;\r\n            case \"onUploaded\":\r\n                this._createUploadedAction();\r\n                break;\r\n            case \"onFilesUploaded\":\r\n                this._createFilesUploadedAction();\r\n                break;\r\n            case \"onProgress\":\r\n                this._createProgressAction();\r\n                break;\r\n            case \"onUploadError\":\r\n                this._createUploadErrorAction();\r\n                break;\r\n            case \"onUploadAborted\":\r\n                this._createUploadAbortedAction();\r\n                break;\r\n            case \"onDropZoneEnter\":\r\n                this._createDropZoneEnterAction();\r\n                break;\r\n            case \"onDropZoneLeave\":\r\n                this._createDropZoneLeaveAction();\r\n                break;\r\n            case \"useNativeInputClick\":\r\n                this._renderInput();\r\n                break;\r\n            case \"useDragOver\":\r\n                this._attachDragEventHandlers(this._$inputWrapper);\r\n                break;\r\n            case \"nativeDropSupported\":\r\n                this._invalidate();\r\n                break;\r\n            case \"inputAttr\":\r\n                this._applyInputAttributes(this.option(name));\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _resetInputValue(force) {\r\n        if (\"useForm\" === this.option(\"uploadMode\") && !force) {\r\n            return\r\n        }\r\n        this._doPreventInputChange = true;\r\n        this._$fileInput.val(\"\");\r\n        this._doPreventInputChange = false\r\n    }\r\n    reset() {\r\n        this.option(\"value\", [])\r\n    }\r\n}\r\nclass FileBlobReader {\r\n    constructor(file, chunkSize) {\r\n        this.file = file;\r\n        this.chunkSize = chunkSize;\r\n        this.index = 0\r\n    }\r\n    read() {\r\n        if (!this.file) {\r\n            return null\r\n        }\r\n        var result = this.createBlobResult(this.file, this.index, this.chunkSize);\r\n        if (result.isCompleted) {\r\n            this.file = null\r\n        }\r\n        this.index++;\r\n        return result\r\n    }\r\n    createBlobResult(file, index, chunkSize) {\r\n        var currentPosition = index * chunkSize;\r\n        return {\r\n            blob: this.sliceFile(file, currentPosition, chunkSize),\r\n            index: index,\r\n            isCompleted: currentPosition + chunkSize >= file.size\r\n        }\r\n    }\r\n    sliceFile(file, startPos, length) {\r\n        if (file.slice) {\r\n            return file.slice(startPos, startPos + length)\r\n        }\r\n        if (file.webkitSlice) {\r\n            return file.webkitSlice(startPos, startPos + length)\r\n        }\r\n        return null\r\n    }\r\n}\r\nclass FileUploadStrategyBase {\r\n    constructor(fileUploader) {\r\n        this.fileUploader = fileUploader\r\n    }\r\n    upload(file) {\r\n        if (file.isInitialized && file.isAborted) {\r\n            this.fileUploader._resetFileState(file)\r\n        }\r\n        if (file.isValid() && !file.uploadStarted) {\r\n            this._prepareFileBeforeUpload(file);\r\n            this._uploadCore(file)\r\n        }\r\n    }\r\n    abortUpload(file) {\r\n        if (file._isError || file._isLoaded || file.isAborted || !file.uploadStarted) {\r\n            return\r\n        }\r\n        file.isAborted = true;\r\n        file.request && file.request.abort();\r\n        if (this._isCustomCallback(\"abortUpload\")) {\r\n            var abortUpload = this.fileUploader.option(\"abortUpload\");\r\n            var arg = this._createUploadArgument(file);\r\n            var deferred = null;\r\n            try {\r\n                var result = abortUpload(file.value, arg);\r\n                deferred = fromPromise(result)\r\n            } catch (error) {\r\n                deferred = (new Deferred).reject(error).promise()\r\n            }\r\n            deferred.done(() => file.onAbort.fire()).fail(error => this._handleFileError(file, error))\r\n        }\r\n    }\r\n    _beforeSend(xhr, file) {\r\n        var arg = this._createUploadArgument(file);\r\n        this.fileUploader._beforeSendAction({\r\n            request: xhr,\r\n            file: file.value,\r\n            uploadInfo: arg\r\n        });\r\n        file.request = xhr\r\n    }\r\n    _createUploadArgument(file) {}\r\n    _uploadCore(file) {}\r\n    _isCustomCallback(name) {\r\n        var callback = this.fileUploader.option(name);\r\n        return callback && isFunction(callback)\r\n    }\r\n    _handleProgress(file, e) {\r\n        if (file._isError) {\r\n            return\r\n        }\r\n        file._isProgressStarted = true;\r\n        this._handleProgressCore(file, e)\r\n    }\r\n    _handleProgressCore(file, e) {}\r\n    _handleFileError(file, error) {\r\n        file._isError = true;\r\n        file.onError.fire(error)\r\n    }\r\n    _prepareFileBeforeUpload(file) {\r\n        if (file.$file) {\r\n            var _file$progressBar;\r\n            null === (_file$progressBar = file.progressBar) || void 0 === _file$progressBar ? void 0 : _file$progressBar.dispose();\r\n            this.fileUploader._createFileProgressBar(file)\r\n        }\r\n        if (file.isInitialized) {\r\n            return\r\n        }\r\n        file.onLoadStart.add(this._onUploadStarted.bind(this, file));\r\n        file.onLoad.add(this._onLoadedHandler.bind(this, file));\r\n        file.onError.add(this._onErrorHandler.bind(this, file));\r\n        file.onAbort.add(this._onAbortHandler.bind(this, file));\r\n        file.onProgress.add(this._onProgressHandler.bind(this, file));\r\n        file.isInitialized = true\r\n    }\r\n    _shouldHandleError(file, e) {\r\n        return (this._isStatusError(e.status) || !file._isProgressStarted) && !file.isAborted\r\n    }\r\n    _isStatusError(status) {\r\n        return 400 <= status && status < 500 || 500 <= status && status < 600\r\n    }\r\n    _onUploadStarted(file, e) {\r\n        file.uploadStarted = true;\r\n        this.fileUploader._uploadStartedAction({\r\n            file: file.value,\r\n            event: e,\r\n            request: file.request\r\n        })\r\n    }\r\n    _onAbortHandler(file, e) {\r\n        var args = {\r\n            file: file.value,\r\n            event: e,\r\n            request: file.request,\r\n            message: this.fileUploader._getUploadAbortedStatusMessage()\r\n        };\r\n        this.fileUploader._uploadAbortedAction(args);\r\n        this.fileUploader._setStatusMessage(file, args.message);\r\n        this.fileUploader._handleAllFilesUploaded()\r\n    }\r\n    _onErrorHandler(file, error) {\r\n        var args = {\r\n            file: file.value,\r\n            event: void 0,\r\n            request: file.request,\r\n            error: error,\r\n            message: this.fileUploader.option(\"uploadFailedMessage\")\r\n        };\r\n        this.fileUploader._uploadErrorAction(args);\r\n        this.fileUploader._setStatusMessage(file, args.message);\r\n        this.fileUploader._handleAllFilesUploaded()\r\n    }\r\n    _onLoadedHandler(file, e) {\r\n        var args = {\r\n            file: file.value,\r\n            event: e,\r\n            request: file.request,\r\n            message: this.fileUploader.option(\"uploadedMessage\")\r\n        };\r\n        file._isLoaded = true;\r\n        this.fileUploader._uploadedAction(args);\r\n        this.fileUploader._setStatusMessage(file, args.message);\r\n        this.fileUploader._handleAllFilesUploaded()\r\n    }\r\n    _onProgressHandler(file, e) {\r\n        if (file) {\r\n            var totalFilesSize = this.fileUploader._getTotalFilesSize();\r\n            var totalLoadedFilesSize = this.fileUploader._getTotalLoadedFilesSize();\r\n            var loadedSize = Math.min(e.loaded, file.value.size);\r\n            var segmentSize = loadedSize - file.loadedSize;\r\n            file.loadedSize = loadedSize;\r\n            this.fileUploader._updateTotalProgress(totalFilesSize, totalLoadedFilesSize + segmentSize);\r\n            this.fileUploader._updateProgressBar(file, this._getLoadedData(loadedSize, e.total, segmentSize, e))\r\n        }\r\n    }\r\n    _getLoadedData(loaded, total, currentSegmentSize, event) {\r\n        return {\r\n            loaded: loaded,\r\n            total: total,\r\n            currentSegmentSize: currentSegmentSize\r\n        }\r\n    }\r\n    _extendFormData(formData) {\r\n        var formDataEntries = this.fileUploader.option(\"uploadCustomData\");\r\n        for (var entryName in formDataEntries) {\r\n            if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\r\n                formData.append(entryName, formDataEntries[entryName])\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ChunksFileUploadStrategyBase extends FileUploadStrategyBase {\r\n    constructor(fileUploader) {\r\n        super(fileUploader);\r\n        this.chunkSize = this.fileUploader.option(\"chunkSize\")\r\n    }\r\n    _uploadCore(file) {\r\n        var realFile = file.value;\r\n        var chunksData = {\r\n            name: realFile.name,\r\n            loadedBytes: 0,\r\n            type: realFile.type,\r\n            blobReader: new FileBlobReader(realFile, this.chunkSize),\r\n            guid: new Guid,\r\n            fileSize: realFile.size,\r\n            count: Math.ceil(realFile.size / this.chunkSize),\r\n            customData: {}\r\n        };\r\n        file.chunksData = chunksData;\r\n        this._sendChunk(file, chunksData)\r\n    }\r\n    _sendChunk(file, chunksData) {\r\n        var chunk = chunksData.blobReader.read();\r\n        chunksData.currentChunk = chunk;\r\n        if (chunk) {\r\n            this._sendChunkCore(file, chunksData, chunk).done(() => {\r\n                if (file.isAborted) {\r\n                    return\r\n                }\r\n                chunksData.loadedBytes += chunk.blob.size;\r\n                file.onProgress.fire({\r\n                    loaded: chunksData.loadedBytes,\r\n                    total: file.value.size\r\n                });\r\n                if (chunk.isCompleted) {\r\n                    file.onLoad.fire()\r\n                }\r\n                setTimeout(() => this._sendChunk(file, chunksData))\r\n            }).fail(error => {\r\n                if (this._shouldHandleError(file, error)) {\r\n                    this._handleFileError(file, error)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    _sendChunkCore(file, chunksData, chunk) {}\r\n    _tryRaiseStartLoad(file) {\r\n        if (!file.isStartLoad) {\r\n            file.isStartLoad = true;\r\n            file.onLoadStart.fire()\r\n        }\r\n    }\r\n    _getEvent(e) {\r\n        return null\r\n    }\r\n    _createUploadArgument(file) {\r\n        return this._createChunksInfo(file.chunksData)\r\n    }\r\n    _createChunksInfo(chunksData) {\r\n        return {\r\n            bytesUploaded: chunksData.loadedBytes,\r\n            chunkCount: chunksData.count,\r\n            customData: chunksData.customData,\r\n            chunkBlob: chunksData.currentChunk.blob,\r\n            chunkIndex: chunksData.currentChunk.index\r\n        }\r\n    }\r\n}\r\nclass DefaultChunksFileUploadStrategy extends ChunksFileUploadStrategyBase {\r\n    _sendChunkCore(file, chunksData, chunk) {\r\n        return ajax.sendRequest({\r\n            url: this.fileUploader.option(\"uploadUrl\"),\r\n            method: this.fileUploader.option(\"uploadMethod\"),\r\n            headers: this.fileUploader.option(\"uploadHeaders\"),\r\n            beforeSend: xhr => this._beforeSend(xhr, file),\r\n            upload: {\r\n                onprogress: e => this._handleProgress(file, e),\r\n                onloadstart: () => this._tryRaiseStartLoad(file),\r\n                onabort: () => file.onAbort.fire()\r\n            },\r\n            data: this._createFormData({\r\n                fileName: chunksData.name,\r\n                blobName: this.fileUploader.option(\"name\"),\r\n                blob: chunk.blob,\r\n                index: chunk.index,\r\n                count: chunksData.count,\r\n                type: chunksData.type,\r\n                guid: chunksData.guid,\r\n                size: chunksData.fileSize\r\n            })\r\n        })\r\n    }\r\n    _createFormData(options) {\r\n        var formData = new window.FormData;\r\n        formData.append(options.blobName, options.blob);\r\n        formData.append(FILEUPLOADER_CHUNK_META_DATA_NAME, JSON.stringify({\r\n            FileName: options.fileName,\r\n            Index: options.index,\r\n            TotalCount: options.count,\r\n            FileSize: options.size,\r\n            FileType: options.type,\r\n            FileGuid: options.guid\r\n        }));\r\n        this._extendFormData(formData);\r\n        return formData\r\n    }\r\n}\r\nclass CustomChunksFileUploadStrategy extends ChunksFileUploadStrategyBase {\r\n    _sendChunkCore(file, chunksData) {\r\n        this._tryRaiseStartLoad(file);\r\n        var chunksInfo = this._createChunksInfo(chunksData);\r\n        var uploadChunk = this.fileUploader.option(\"uploadChunk\");\r\n        try {\r\n            var result = uploadChunk(file.value, chunksInfo);\r\n            return fromPromise(result)\r\n        } catch (error) {\r\n            return (new Deferred).reject(error).promise()\r\n        }\r\n    }\r\n    _shouldHandleError(file, error) {\r\n        return true\r\n    }\r\n}\r\nclass WholeFileUploadStrategyBase extends FileUploadStrategyBase {\r\n    _uploadCore(file) {\r\n        file.loadedSize = 0;\r\n        this._uploadFile(file).done(() => {\r\n            if (!file.isAborted) {\r\n                file.onLoad.fire()\r\n            }\r\n        }).fail(error => {\r\n            if (this._shouldHandleError(file, error)) {\r\n                this._handleFileError(file, error)\r\n            }\r\n        })\r\n    }\r\n    _uploadFile(file) {}\r\n    _handleProgressCore(file, e) {\r\n        file.onProgress.fire(e)\r\n    }\r\n    _getLoadedData(loaded, total, segmentSize, event) {\r\n        var result = super._getLoadedData(loaded, total, segmentSize, event);\r\n        result.event = event;\r\n        return result\r\n    }\r\n}\r\nclass DefaultWholeFileUploadStrategy extends WholeFileUploadStrategyBase {\r\n    _uploadFile(file) {\r\n        return ajax.sendRequest({\r\n            url: this.fileUploader.option(\"uploadUrl\"),\r\n            method: this.fileUploader.option(\"uploadMethod\"),\r\n            headers: this.fileUploader.option(\"uploadHeaders\"),\r\n            beforeSend: xhr => this._beforeSend(xhr, file),\r\n            upload: {\r\n                onprogress: e => this._handleProgress(file, e),\r\n                onloadstart: () => file.onLoadStart.fire(),\r\n                onabort: () => file.onAbort.fire()\r\n            },\r\n            data: this._createFormData(this.fileUploader.option(\"name\"), file.value)\r\n        })\r\n    }\r\n    _createFormData(fieldName, fieldValue) {\r\n        var formData = new window.FormData;\r\n        formData.append(fieldName, fieldValue, fieldValue.name);\r\n        this._extendFormData(formData);\r\n        return formData\r\n    }\r\n}\r\nclass CustomWholeFileUploadStrategy extends WholeFileUploadStrategyBase {\r\n    _uploadFile(file) {\r\n        file.onLoadStart.fire();\r\n        var uploadFile = this.fileUploader.option(\"uploadFile\");\r\n        try {\r\n            var result = uploadFile(file.value, loadedBytes => {\r\n                var arg = {\r\n                    loaded: loadedBytes,\r\n                    total: file.value.size\r\n                };\r\n                this._handleProgress(file, arg)\r\n            });\r\n            return fromPromise(result)\r\n        } catch (error) {\r\n            return (new Deferred).reject(error).promise()\r\n        }\r\n    }\r\n    _shouldHandleError(file, e) {\r\n        return true\r\n    }\r\n}\r\nregisterComponent(\"dxFileUploader\", FileUploader);\r\nexport default FileUploader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
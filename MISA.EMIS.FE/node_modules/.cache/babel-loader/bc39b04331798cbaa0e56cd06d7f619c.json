{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterHeight, getHeight, getWidth, getOuterWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport core from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport { isDefined, isEmptyObject } from \"../../core/utils/type\";\nimport { focused } from \"../widget/selectors\";\nimport { addNamespace, createEvent, isCommandKeyPressed } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { noop } from \"../../core/utils/common\";\nimport * as accessibility from \"../shared/accessibility\";\nimport browser from \"../../core/utils/browser\";\nimport { keyboard } from \"../../events/short\";\nimport devices from \"../../core/devices\";\nvar ROWS_VIEW_CLASS = \"rowsview\";\nvar EDIT_FORM_CLASS = \"edit-form\";\nvar GROUP_FOOTER_CLASS = \"group-footer\";\nvar ROW_CLASS = \"dx-row\";\nvar DATA_ROW_CLASS = \"dx-data-row\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar HEADER_ROW_CLASS = \"dx-header-row\";\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\nvar FAST_EDITING_DELETE_KEY = \"delete\";\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\nvar EDIT_MODE_ROW = \"row\";\nvar EDIT_MODE_FORM = \"form\";\nvar EDIT_MODE_BATCH = \"batch\";\nvar EDIT_MODE_CELL = \"cell\";\nvar FOCUS_TYPE_ROW = \"row\";\nvar FOCUS_TYPE_CELL = \"cell\";\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\nvar FUNCTIONAL_KEYS = [\"shift\", \"control\", \"alt\"];\n\nfunction isGroupRow($row) {\n  return $row && $row.hasClass(GROUP_ROW_CLASS);\n}\n\nfunction isDetailRow($row) {\n  return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS);\n}\n\nfunction isDataRow($row) {\n  return $row && !isGroupRow($row) && !isDetailRow($row);\n}\n\nfunction isNotFocusedRow($row) {\n  return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS);\n}\n\nfunction isCellElement($element) {\n  return $element.length && \"TD\" === $element[0].tagName;\n}\n\nfunction isEditorCell(that, $cell) {\n  return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS);\n}\n\nfunction isElementDefined($element) {\n  return isDefined($element) && $element.length > 0;\n}\n\nfunction isMobile() {\n  return \"desktop\" !== devices.current().deviceType;\n}\n\nfunction isCellInHeaderRow($cell) {\n  return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length;\n}\n\nfunction isFixedColumnIndexOffsetRequired(that, column) {\n  var rtlEnabled = that.option(\"rtlEnabled\");\n  var result = false;\n\n  if (rtlEnabled) {\n    result = !(\"right\" === column.fixedPosition || isDefined(column.command) && !isDefined(column.fixedPosition));\n  } else {\n    result = !(!isDefined(column.fixedPosition) || \"left\" === column.fixedPosition);\n  }\n\n  return result;\n}\n\nfunction shouldPreventScroll(that) {\n  var keyboardController = that.getController(\"keyboardNavigation\");\n  return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false;\n}\n\nvar KeyboardNavigationController = core.ViewController.inherit({\n  init: function () {\n    this._dataController = this.getController(\"data\");\n    this._selectionController = this.getController(\"selection\");\n    this._editingController = this.getController(\"editing\");\n    this._headerPanel = this.getView(\"headerPanel\");\n    this._columnsController = this.getController(\"columns\");\n    this._editorFactory = this.getController(\"editorFactory\");\n\n    if (this.isKeyboardEnabled()) {\n      accessibility.subscribeVisibilityChange();\n      this._updateFocusTimeout = null;\n      this._fastEditingStarted = false;\n      this._focusedCellPosition = {};\n      this._canceledCellPosition = null;\n\n      this._editorFactory.focused.add($element => {\n        this.setupFocusedView();\n\n        if (this._isNeedScroll) {\n          if ($element.is(\":visible\") && this._focusedView && this._focusedView.getScrollable) {\n            this._focusedView._scrollToElement($element);\n\n            this._isNeedScroll = false;\n          }\n        }\n      });\n\n      this._initViewHandlers();\n\n      this._initDocumentHandlers();\n\n      this.createAction(\"onKeyDown\");\n    }\n  },\n  _initViewHandlers: function () {\n    var rowsView = this.getView(\"rowsView\");\n\n    var rowsViewFocusHandler = event => {\n      var $element = $(event.target);\n      var isRelatedTargetInRowsView = $(event.relatedTarget).closest(rowsView.element()).length;\n      var isCommandButton = $element.hasClass(\"dx-link\");\n\n      if (isCommandButton && !isRelatedTargetInRowsView && this._isEventInCurrentGrid(event)) {\n        var $focusedCell = this._getFocusedCell();\n\n        $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\n\n        if (!$element.closest($focusedCell).length) {\n          event.preventDefault();\n          eventsEngine.trigger($focusedCell, \"focus\");\n        }\n      }\n    };\n\n    rowsView.renderCompleted.add(e => {\n      var $rowsView = rowsView.element();\n      var isFullUpdate = !e || \"refresh\" === e.changeType;\n      var isFocusedViewCorrect = this._focusedView && this._focusedView.name === rowsView.name;\n      var needUpdateFocus = false;\n      var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\n      var $focusedElement = $(\":focus\");\n      var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length;\n      eventsEngine.off($rowsView, \"focusin\", rowsViewFocusHandler);\n      eventsEngine.on($rowsView, \"focusin\", rowsViewFocusHandler);\n\n      this._initPointerEventHandler();\n\n      this._initKeyDownHandler();\n\n      this._setRowsViewAttributes();\n\n      if (isFocusedViewCorrect && isFocusedElementCorrect) {\n        needUpdateFocus = this._isNeedFocus ? !isAppend : this._isHiddenFocus && isFullUpdate && !(null !== e && void 0 !== e && e.virtualColumnsScrolling);\n        needUpdateFocus && this._updateFocus(true);\n      }\n    });\n  },\n  _initDocumentHandlers: function () {\n    var document = domAdapter.getDocument();\n    this._documentClickHandler = this.createAction(e => {\n      var $target = $(e.event.target);\n      var isCurrentRowsViewClick = this._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(this.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\n      var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\n      var columnsResizerController = this.getController(\"columnsResizer\");\n      var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\n\n      if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\n        var targetInsideFocusedView = this._focusedView ? $target.parents().filter(this._focusedView.element()).length > 0 : false;\n        !targetInsideFocusedView && this._resetFocusedCell(true);\n\n        this._resetFocusedView();\n      }\n    });\n    eventsEngine.on(document, addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\n  },\n  _setRowsViewAttributes: function () {\n    var $rowsView = this._getRowsViewElement();\n\n    var isGridEmpty = !this._dataController.getVisibleRows().length;\n\n    if (isGridEmpty) {\n      this._applyTabIndexToElement($rowsView);\n    }\n  },\n  _initPointerEventHandler: function () {\n    var pointerEventName = !isMobile() ? pointerEvents.down : clickEventName;\n    var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\n\n    var $rowsView = this._getRowsViewElement();\n\n    if (!isDefined(this._pointerEventAction)) {\n      this._pointerEventAction = this.createAction(this._pointerEventHandler);\n    }\n\n    eventsEngine.off($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\n    eventsEngine.on($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction);\n  },\n  _initKeyDownHandler: function () {\n    var $rowsView = this._getRowsViewElement();\n\n    keyboard.off(this._keyDownListener);\n    this._keyDownListener = keyboard.on($rowsView, null, e => this._keyDownHandler(e));\n  },\n  dispose: function () {\n    this.callBase();\n\n    this._resetFocusedView();\n\n    keyboard.off(this._keyDownListener);\n    eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\n    clearTimeout(this._updateFocusTimeout);\n    accessibility.unsubscribeVisibilityChange();\n  },\n  optionChanged: function (args) {\n    switch (args.name) {\n      case \"keyboardNavigation\":\n      case \"useLegacyKeyboardNavigation\":\n        args.handled = true;\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  isRowFocusType: function () {\n    return this.focusType === FOCUS_TYPE_ROW;\n  },\n  isCellFocusType: function () {\n    return this.focusType === FOCUS_TYPE_CELL;\n  },\n  setRowFocusType: function () {\n    if (this.option(\"focusedRowEnabled\")) {\n      this.focusType = FOCUS_TYPE_ROW;\n    }\n  },\n  setCellFocusType: function () {\n    this.focusType = FOCUS_TYPE_CELL;\n  },\n  _keyDownHandler: function (e) {\n    var needStopPropagation = true;\n    this._isNeedFocus = true;\n    this._isNeedScroll = true;\n\n    var isHandled = this._processOnKeyDown(e);\n\n    var isEditing = this._editingController.isEditing();\n\n    var originalEvent = e.originalEvent;\n\n    if (originalEvent.isDefaultPrevented()) {\n      this._isNeedFocus = false;\n      this._isNeedScroll = false;\n      return;\n    }\n\n    FUNCTIONAL_KEYS.indexOf(e.keyName) < 0 && this._updateFocusedCellPositionByTarget(originalEvent.target);\n\n    if (!isHandled) {\n      switch (e.keyName) {\n        case \"leftArrow\":\n        case \"rightArrow\":\n          this._leftRightKeysHandler(e, isEditing);\n\n          isHandled = true;\n          break;\n\n        case \"upArrow\":\n        case \"downArrow\":\n          if (e.ctrl) {\n            accessibility.selectView(\"rowsView\", this, originalEvent);\n          } else {\n            this._upDownKeysHandler(e, isEditing);\n          }\n\n          isHandled = true;\n          break;\n\n        case \"pageUp\":\n        case \"pageDown\":\n          this._pageUpDownKeyHandler(e);\n\n          isHandled = true;\n          break;\n\n        case \"space\":\n          isHandled = this._spaceKeyHandler(e, isEditing);\n          break;\n\n        case \"A\":\n          if (isCommandKeyPressed(e.originalEvent)) {\n            this._ctrlAKeyHandler(e, isEditing);\n\n            isHandled = true;\n          } else {\n            isHandled = this._beginFastEditing(e.originalEvent);\n          }\n\n          break;\n\n        case \"tab\":\n          this._tabKeyHandler(e, isEditing);\n\n          isHandled = true;\n          break;\n\n        case \"enter\":\n          this._enterKeyHandler(e, isEditing);\n\n          isHandled = true;\n          break;\n\n        case \"escape\":\n          this._escapeKeyHandler(e, isEditing);\n\n          isHandled = true;\n          break;\n\n        case \"F\":\n          if (isCommandKeyPressed(e.originalEvent)) {\n            this._ctrlFKeyHandler(e);\n\n            isHandled = true;\n          } else {\n            isHandled = this._beginFastEditing(e.originalEvent);\n          }\n\n          break;\n\n        case \"F2\":\n          this._f2KeyHandler();\n\n          isHandled = true;\n          break;\n\n        case \"del\":\n        case \"backspace\":\n          if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\n            isHandled = this._beginFastEditing(originalEvent, true);\n          }\n\n      }\n\n      if (!isHandled && !this._beginFastEditing(originalEvent)) {\n        this._isNeedFocus = false;\n        this._isNeedScroll = false;\n        needStopPropagation = false;\n      }\n\n      if (needStopPropagation) {\n        originalEvent.stopPropagation();\n      }\n    }\n  },\n  _processOnKeyDown: function (eventArgs) {\n    var originalEvent = eventArgs.originalEvent;\n    var args = {\n      handled: false,\n      event: originalEvent\n    };\n    this.executeAction(\"onKeyDown\", args);\n    eventArgs.ctrl = originalEvent.ctrlKey;\n    eventArgs.alt = originalEvent.altKey;\n    eventArgs.shift = originalEvent.shiftKey;\n    return !!args.handled;\n  },\n  _closeEditCell: function () {\n    setTimeout(() => {\n      this._editingController.closeEditCell();\n    });\n  },\n  _leftRightKeysHandler: function (eventArgs, isEditing) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $event = eventArgs.originalEvent;\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\n\n    var isEditingNavigationMode = this._isFastEditingStarted();\n\n    var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\n\n    if (allowNavigate) {\n      this.setCellFocusType();\n      isEditingNavigationMode && this._closeEditCell();\n\n      if (this._isVirtualColumnRender()) {\n        this._processVirtualHorizontalPosition(directionCode);\n      }\n\n      var $cell = this._getNextCell(directionCode);\n\n      if (isElementDefined($cell)) {\n        this._arrowKeysHandlerFocusCell($event, $cell, directionCode);\n      }\n\n      $event && $event.preventDefault();\n    }\n  },\n  _upDownKeysHandler: function (eventArgs, isEditing) {\n    var _this$_editingControl, _this$_editingControl2;\n\n    var rowIndex = this._focusedCellPosition.rowIndex;\n    var visibleRowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\n\n    var $event = eventArgs.originalEvent;\n    var isUpArrow = \"upArrow\" === eventArgs.keyName;\n\n    var dataSource = this._dataController.dataSource();\n\n    var isRowEditingInCurrentRow = null === (_this$_editingControl = this._editingController) || void 0 === _this$_editingControl ? void 0 : null === (_this$_editingControl2 = _this$_editingControl.isEditRowByIndex) || void 0 === _this$_editingControl2 ? void 0 : _this$_editingControl2.call(_this$_editingControl, visibleRowIndex);\n\n    var isEditingNavigationMode = this._isFastEditingStarted();\n\n    var allowNavigate = (!isRowEditingInCurrentRow || !isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\n\n    if (allowNavigate) {\n      isEditingNavigationMode && this._closeEditCell();\n\n      if (!this._navigateNextCell($event, eventArgs.keyName)) {\n        if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\n          var rowHeight = getOuterHeight($row);\n          rowIndex = this._focusedCellPosition.rowIndex - 1;\n\n          this._scrollBy(0, -rowHeight, rowIndex, $event);\n        }\n      }\n\n      $event && $event.preventDefault();\n    }\n  },\n  _pageUpDownKeyHandler: function (eventArgs) {\n    var pageIndex = this._dataController.pageIndex();\n\n    var pageCount = this._dataController.pageCount();\n\n    var pagingEnabled = this.option(\"paging.enabled\");\n    var isPageUp = \"pageUp\" === eventArgs.keyName;\n    var pageStep = isPageUp ? -1 : 1;\n    var scrollable = this.getView(\"rowsView\").getScrollable();\n\n    if (pagingEnabled && !this._isVirtualScrolling()) {\n      if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\n        this._dataController.pageIndex(pageIndex + pageStep);\n\n        eventArgs.originalEvent.preventDefault();\n      }\n    } else if (scrollable && getHeight(scrollable.container()) < getHeight(scrollable.$content())) {\n      this._scrollBy(0, getHeight(scrollable.container()) * pageStep);\n\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _spaceKeyHandler: function (eventArgs, isEditing) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $target = $(eventArgs.originalEvent && eventArgs.originalEvent.target);\n\n    if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\n      var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\n      var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\n\n      if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\n        this._selectionController.startSelectionWithCheckboxes();\n      }\n\n      if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\n        this._selectionController.changeItemSelection(rowIndex, {\n          shift: eventArgs.shift,\n          control: eventArgs.ctrl\n        });\n\n        eventArgs.originalEvent.preventDefault();\n        return true;\n      }\n\n      return false;\n    } else {\n      return this._beginFastEditing(eventArgs.originalEvent);\n    }\n  },\n  _ctrlAKeyHandler: function (eventArgs, isEditing) {\n    if (!isEditing && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\n      this._selectionController.selectAll();\n\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _tabKeyHandler: function (eventArgs, isEditing) {\n    var editingOptions = this.option(\"editing\");\n    var direction = eventArgs.shift ? \"previous\" : \"next\";\n    var isCellPositionDefined = isDefined(this._focusedCellPosition) && !isEmptyObject(this._focusedCellPosition);\n\n    var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\n\n    var eventTarget = eventArgs.originalEvent.target;\n\n    var focusedViewElement = this._focusedView && this._focusedView.element();\n\n    if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\n      return;\n    }\n\n    $(focusedViewElement).addClass(FOCUS_STATE_CLASS);\n\n    if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\n      if ($(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\n        this._resetFocusedCell();\n      }\n\n      if (this._isVirtualColumnRender()) {\n        this._processVirtualHorizontalPosition(direction);\n      }\n\n      if (isEditing) {\n        if (!this._editingCellTabHandler(eventArgs, direction)) {\n          return;\n        }\n      } else if (this._targetCellTabHandler(eventArgs, direction)) {\n        isOriginalHandlerRequired = true;\n      }\n    }\n\n    if (isOriginalHandlerRequired) {\n      this._editorFactory.loseFocus();\n\n      if (this._editingController.isEditing() && !this._isRowEditMode()) {\n        this._resetFocusedCell(true);\n\n        this._resetFocusedView();\n\n        this._closeEditCell();\n      }\n    } else {\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _getMaxHorizontalOffset: function () {\n    var scrollable = this.component.getScrollable();\n    var rowsView = this.getView(\"rowsView\");\n    var offset = scrollable ? scrollable.scrollWidth() - getWidth(rowsView.element()) : 0;\n    return offset;\n  },\n  _isColumnRendered: function (columnIndex) {\n    var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\n\n    var renderedVisibleColumns = this._columnsController.getVisibleColumns();\n\n    var column = allVisibleColumns[columnIndex];\n    var result = false;\n\n    if (column) {\n      result = renderedVisibleColumns.indexOf(column) >= 0;\n    }\n\n    return result;\n  },\n  _isFixedColumn: function (columnIndex) {\n    var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\n\n    var column = allVisibleColumns[columnIndex];\n    return !!column && !!column.fixed;\n  },\n  _isColumnVirtual: function (columnIndex) {\n    var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\n\n    var visibleColumns = this._columnsController.getVisibleColumns();\n\n    var column = visibleColumns[localColumnIndex];\n    return !!column && \"virtual\" === column.command;\n  },\n  _processVirtualHorizontalPosition: function (direction) {\n    var scrollable = this.component.getScrollable();\n    var columnIndex = this.getColumnIndex();\n    var nextColumnIndex;\n    var horizontalScrollPosition = 0;\n    var needToScroll = false;\n\n    switch (direction) {\n      case \"next\":\n      case \"nextInRow\":\n        var columnsCount = this._getVisibleColumnCount();\n\n        nextColumnIndex = columnIndex + 1;\n        horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\n\n        if (\"next\" === direction) {\n          needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        } else {\n          needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        }\n\n        break;\n\n      case \"previous\":\n      case \"previousInRow\":\n        nextColumnIndex = columnIndex - 1;\n        horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\n\n        if (\"previous\" === direction) {\n          var columnIndexOffset = this._columnsController.getColumnIndexOffset();\n\n          var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\n          needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        } else {\n          needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        }\n\n    }\n\n    if (needToScroll) {\n      scrollable.scrollTo({\n        left: horizontalScrollPosition\n      });\n    } else if (isDefined(nextColumnIndex) && isDefined(direction) && this._isColumnVirtual(nextColumnIndex)) {\n      horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\n      0 !== horizontalScrollPosition && scrollable.scrollBy({\n        left: horizontalScrollPosition,\n        top: 0\n      });\n    }\n  },\n  _getHorizontalScrollPositionOffset: function (direction) {\n    var positionOffset = 0;\n\n    var $currentCell = this._getCell(this._focusedCellPosition);\n\n    var currentCellWidth = $currentCell && getOuterWidth($currentCell);\n\n    if (currentCellWidth > 0) {\n      var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\n      positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1;\n    }\n\n    return positionOffset;\n  },\n  _editingCellTabHandler: function (eventArgs, direction) {\n    var eventTarget = eventArgs.originalEvent.target;\n\n    var $cell = this._getCellElementFromTarget(eventTarget);\n\n    var isEditingAllowed;\n    var $event = eventArgs.originalEvent;\n\n    var elementType = this._getElementType(eventTarget);\n\n    if ($cell.is(COMMAND_CELL_SELECTOR)) {\n      return !this._targetCellTabHandler(eventArgs, direction);\n    }\n\n    this._updateFocusedCellPosition($cell);\n\n    var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\n\n    $cell = nextCellInfo.$cell;\n\n    if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\n      return false;\n    }\n\n    var columnsController = this._columnsController;\n    var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\n    var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\n    var column = columnsController.getVisibleColumns(null, true)[columnIndex];\n    var $row = $cell.parent();\n\n    var rowIndex = this._getRowIndex($row);\n\n    var row = this._dataController.items()[rowIndex];\n\n    var editingController = this._editingController;\n\n    if (column && column.allowEditing) {\n      var _isDataRow = !row || \"data\" === row.rowType;\n\n      isEditingAllowed = editingController.allowUpdating({\n        row: row\n      }) ? _isDataRow : row && row.isNewRow;\n    }\n\n    if (!isEditingAllowed) {\n      this._closeEditCell();\n    }\n\n    if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\n      if (!this._isRowEditMode() && isEditingAllowed) {\n        this._editFocusedCell();\n      } else {\n        this._focusInteractiveElement($cell, eventArgs.shift);\n      }\n    }\n\n    return true;\n  },\n  _targetCellTabHandler: function (eventArgs, direction) {\n    var $event = eventArgs.originalEvent;\n    var eventTarget = $event.target;\n\n    var $cell = this._getCellElementFromTarget(eventTarget);\n\n    var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\n\n    var isOriginalHandlerRequired = false;\n    var elementType;\n\n    if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\n      isOriginalHandlerRequired = true;\n    } else {\n      if (void 0 === this._focusedCellPosition.rowIndex && $(eventTarget).hasClass(ROW_CLASS)) {\n        this._updateFocusedCellPosition($cell);\n      }\n\n      elementType = this._getElementType(eventTarget);\n\n      if (this.isRowFocusType()) {\n        this.setCellFocusType();\n\n        if (\"row\" === elementType && isDataRow($(eventTarget))) {\n          eventTarget = this.getFirstValidCellInRow($(eventTarget));\n          elementType = this._getElementType(eventTarget);\n        }\n      }\n\n      var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\n\n      $cell = nextCellInfo.$cell;\n\n      if (!$cell) {\n        return false;\n      }\n\n      $cell = this._checkNewLineTransition($event, $cell);\n\n      if (!$cell) {\n        return false;\n      }\n\n      this._focusCell($cell, !nextCellInfo.isHighlighted);\n\n      if (!isEditorCell(this, $cell)) {\n        this._focusInteractiveElement($cell, eventArgs.shift);\n      }\n    }\n\n    return isOriginalHandlerRequired;\n  },\n  _getNextCellByTabKey: function ($event, direction, elementType) {\n    var $cell = this._getNextCell(direction, elementType);\n\n    var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\n\n    if (!args || args.cancel) {\n      return {};\n    }\n\n    if (args.$newCellElement) {\n      $cell = args.$newCellElement;\n    }\n\n    return {\n      $cell: $cell,\n      isHighlighted: args.isHighlighted\n    };\n  },\n  _checkNewLineTransition: function ($event, $cell) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $row = $cell.parent();\n\n    if (rowIndex !== this._getRowIndex($row)) {\n      var cellPosition = this._getCellPosition($cell);\n\n      var args = this._fireFocusedRowChanging($event, $row);\n\n      if (args.cancel) {\n        return;\n      }\n\n      if (args.rowIndexChanged) {\n        this.setFocusedColumnIndex(cellPosition.columnIndex);\n        $cell = this._getFocusedCell();\n      }\n    }\n\n    return $cell;\n  },\n  _enterKeyHandler: function (eventArgs, isEditing) {\n    var $cell = this._getFocusedCell();\n\n    var rowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\n      var key = this._dataController.getKeyByRowIndex(rowIndex);\n\n      var item = this._dataController.items()[rowIndex];\n\n      if (void 0 !== key && item && item.data && !item.data.isContinuation) {\n        this._dataController.changeRowExpand(key);\n      }\n    } else {\n      this._processEnterKeyForDataCell(eventArgs, isEditing);\n    }\n  },\n  _processEnterKeyForDataCell: function (eventArgs, isEditing) {\n    var direction = this._getEnterKeyDirection(eventArgs);\n\n    var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\n\n    if (isEditing || !allowEditingOnEnterKey && direction) {\n      this._handleEnterKeyEditingCell(eventArgs.originalEvent);\n\n      if (\"next\" === direction || \"previous\" === direction) {\n        this._targetCellTabHandler(eventArgs, direction);\n      } else if (\"upArrow\" === direction || \"downArrow\" === direction) {\n        this._navigateNextCell(eventArgs.originalEvent, direction);\n      }\n    } else if (allowEditingOnEnterKey) {\n      this._startEditing(eventArgs);\n    }\n  },\n  _getEnterKeyDirection: function (eventArgs) {\n    var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\n    var isShift = eventArgs.shift;\n\n    if (\"column\" === enterKeyDirection) {\n      return isShift ? \"upArrow\" : \"downArrow\";\n    }\n\n    if (\"row\" === enterKeyDirection) {\n      return isShift ? \"previous\" : \"next\";\n    }\n  },\n  _handleEnterKeyEditingCell: function (event) {\n    var target = event.target;\n\n    var $cell = this._getCellElementFromTarget(target);\n\n    var isRowEditMode = this._isRowEditMode();\n\n    this._updateFocusedCellPosition($cell);\n\n    if (isRowEditMode) {\n      this._focusEditFormCell($cell);\n\n      setTimeout(this._editingController.saveEditData.bind(this._editingController));\n    } else {\n      eventsEngine.trigger($(target), \"change\");\n\n      this._closeEditCell();\n\n      event.preventDefault();\n    }\n  },\n  _escapeKeyHandler: function (eventArgs, isEditing) {\n    var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\n\n    if (isEditing) {\n      this._updateFocusedCellPosition($cell);\n\n      if (!this._isRowEditMode()) {\n        if (\"cell\" === this._editingController.getEditMode()) {\n          this._editingController.cancelEditData();\n        } else {\n          this._closeEditCell();\n        }\n      } else {\n        this._focusEditFormCell($cell);\n\n        this._editingController.cancelEditData();\n\n        if (0 === this._dataController.items().length) {\n          this._resetFocusedCell();\n\n          this._editorFactory.loseFocus();\n        }\n      }\n\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _ctrlFKeyHandler: function (eventArgs) {\n    if (this.option(\"searchPanel.visible\")) {\n      var searchTextEditor = this._headerPanel.getSearchTextEditor();\n\n      if (searchTextEditor) {\n        searchTextEditor.focus();\n        eventArgs.originalEvent.preventDefault();\n      }\n    }\n  },\n  _f2KeyHandler: function () {\n    var isEditing = this._editingController.isEditing();\n\n    var rowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    if (!isEditing && isDataRow($row)) {\n      this._startEditing();\n    }\n  },\n  _navigateNextCell: function ($event, keyCode) {\n    var $cell = this._getNextCell(keyCode);\n\n    var directionCode = this._getDirectionCodeByKey(keyCode);\n\n    var isCellValid = $cell && this._isCellValid($cell);\n\n    var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\n    return result;\n  },\n  _arrowKeysHandlerFocusCell: function ($event, $nextCell, direction) {\n    var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\n\n    var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\n\n    $nextCell = args.$newCellElement;\n\n    if (!args.cancel && this._isCellValid($nextCell)) {\n      this._focus($nextCell, !args.isHighlighted);\n\n      return true;\n    }\n\n    return false;\n  },\n  _beginFastEditing: function (originalEvent, isDeleting) {\n    if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\n      return false;\n    }\n\n    if (isDeleting) {\n      this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY);\n    } else {\n      var key = originalEvent.key;\n      var keyCode = originalEvent.keyCode || originalEvent.which;\n      var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\n\n      if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\n        this._startEditing(originalEvent, fastEditingKey);\n      }\n    }\n\n    return true;\n  },\n  _pointerEventHandler: function (e) {\n    var event = e.event || e;\n    var $target = $(event.currentTarget);\n    var rowsView = this.getView(\"rowsView\");\n    var focusedViewElement = rowsView && rowsView.element();\n    var $parent = $target.parent();\n    var isInteractiveElement = $(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\n    var isRevertButton = !!$(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\n    var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\n\n    if (!this._isEventInCurrentGrid(event)) {\n      return;\n    }\n\n    if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\n      $target = this._isInsideEditForm($target) ? $(event.target) : $target;\n\n      this._focusView();\n\n      $(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\n\n      if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\n        this._updateFocusedCellPosition($target);\n\n        this._applyTabIndexToElement(this._focusedView.element());\n\n        this._focusedView.focus();\n      } else if (!this._isMasterDetailCell($target)) {\n        this._clickTargetCellHandler(event, $target);\n      } else {\n        this._updateFocusedCellPosition($target);\n      }\n    } else if ($target.is(\"td\")) {\n      this._resetFocusedCell();\n    }\n  },\n  _clickTargetCellHandler: function (event, $cell) {\n    var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\n\n    var column = this._columnsController.getVisibleColumns()[columnIndex];\n\n    var isCellEditMode = this._isCellEditMode();\n\n    this.setCellFocusType();\n\n    var args = this._fireFocusChangingEvents(event, $cell, true);\n\n    $cell = args.$newCellElement;\n\n    if (!args.cancel) {\n      if (args.resetFocusedRow) {\n        this.getController(\"focus\")._resetFocusedRow();\n\n        return;\n      }\n\n      if (args.rowIndexChanged) {\n        $cell = this._getFocusedCell();\n      }\n\n      if (!args.isHighlighted && !isCellEditMode) {\n        this.setRowFocusType();\n      }\n\n      this._updateFocusedCellPosition($cell);\n\n      if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\n        this._isNeedFocus = false;\n        this._isHiddenFocus = false;\n      } else {\n        var $target = event && $(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\n        var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\n        var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\n        var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\n\n        this._focus($cell, isDisabled, skipFocusEvent);\n      }\n    } else {\n      this.setRowFocusType();\n      this.setFocusedRowIndex(args.prevRowIndex);\n      $cell = this._getFocusedCell();\n\n      if (this._editingController.isEditing() && isCellEditMode) {\n        this._closeEditCell();\n      }\n    }\n  },\n  _allowRowUpdating: function () {\n    var rowIndex = this.getVisibleRowIndex();\n\n    var row = this._dataController.items()[rowIndex];\n\n    return this._editingController.allowUpdating({\n      row: row\n    }, \"click\");\n  },\n  focus: function (element) {\n    var activeElementSelector;\n    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\n    var isHighlighted = isCellElement($(element));\n\n    if (!element) {\n      activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\n\n      if (!focusedRowEnabled) {\n        activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\";\n      }\n\n      element = this.component.$element().find(activeElementSelector).first();\n    }\n\n    element && this._focusElement($(element), isHighlighted);\n  },\n  getFocusedView: function () {\n    return this._focusedView;\n  },\n  setupFocusedView: function () {\n    if (this.isKeyboardEnabled() && !isDefined(this._focusedView)) {\n      this._focusView();\n    }\n  },\n  _focusElement: function ($element, isHighlighted) {\n    var rowsViewElement = $(this._getRowsViewElement());\n    var $focusedView = $element.closest(rowsViewElement);\n    var isRowFocusType = this.isRowFocusType();\n    var args = {};\n\n    if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\n      return;\n    }\n\n    this._focusView();\n\n    this._isNeedFocus = true;\n    this._isNeedScroll = true;\n\n    if (isCellElement($element) || isGroupRow($element)) {\n      this.setCellFocusType();\n      args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\n      $element = args.$newCellElement;\n\n      if (isRowFocusType && !args.isHighlighted) {\n        this.setRowFocusType();\n      }\n    }\n\n    if (!args.cancel) {\n      this._focus($element, !args.isHighlighted);\n\n      this._focusInteractiveElement($element);\n    }\n  },\n  _getFocusedViewByElement: function ($element) {\n    var view = this.getFocusedView();\n    var $view = view && $(view.element());\n    return $element && 0 !== $element.closest($view).length;\n  },\n  _focusView: function () {\n    this._focusedView = this.getView(\"rowsView\");\n  },\n  _resetFocusedView: function () {\n    this.setRowFocusType();\n    this._focusedView = null;\n  },\n  _focusInteractiveElement: function ($cell, isLast) {\n    if (!$cell) {\n      return;\n    }\n\n    var $focusedElement = this._getInteractiveElement($cell, isLast);\n\n    gridCoreUtils.focusAndSelectElement(this, $focusedElement);\n  },\n  _focus: function ($cell, disableFocus, skipFocusEvent) {\n    var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\n\n    if ($row && isNotFocusedRow($row)) {\n      return;\n    }\n\n    var focusedView = this._focusedView;\n    var $focusViewElement = focusedView && focusedView.element();\n    var $focusElement;\n    this._isHiddenFocus = disableFocus;\n    var isRowFocus = isGroupRow($row) || this.isRowFocusType();\n\n    if (isRowFocus) {\n      $focusElement = $row;\n\n      if (focusedView) {\n        this.setFocusedRowIndex(this._getRowIndex($row));\n      }\n    } else if (isCellElement($cell)) {\n      $focusElement = $cell;\n\n      this._updateFocusedCellPosition($cell);\n    }\n\n    if ($focusElement) {\n      if ($focusViewElement) {\n        $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\n      }\n\n      eventsEngine.one($focusElement, \"blur\", e => {\n        if (e.relatedTarget) {\n          $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS);\n        }\n      });\n\n      if (!skipFocusEvent) {\n        this._applyTabIndexToElement($focusElement);\n\n        eventsEngine.trigger($focusElement, \"focus\");\n      }\n\n      if (disableFocus) {\n        $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\n\n        if (isRowFocus) {\n          $cell.addClass(CELL_FOCUS_DISABLED_CLASS);\n        }\n      } else {\n        this._editorFactory.focus($focusElement);\n      }\n    }\n  },\n  _updateFocus: function (isRenderView) {\n    this._updateFocusTimeout = setTimeout(() => {\n      var editingController = this._editingController;\n      var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\n      var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\n\n      if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\n        editingController._focusEditingCell();\n\n        return;\n      }\n\n      var $cell = this._getFocusedCell();\n\n      var isEditing = editingController.isEditing();\n\n      if ($cell && !(this._isMasterDetailCell($cell) && !this._isRowEditMode())) {\n        if (this._hasSkipRow($cell.parent())) {\n          var direction = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\n          $cell = this._getNextCell(direction);\n        }\n\n        if (isElementDefined($cell)) {\n          if ($cell.is(\"td\") || $cell.hasClass(this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\n            var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\n            var $focusedElementInsideCell = $cell.find(\":focus\");\n            var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\n\n            if ((isRenderView || !isCommandCell) && this._editorFactory.focus()) {\n              if (isCommandCell && isFocusedElementDefined) {\n                gridCoreUtils.focusAndSelectElement(this, $focusedElementInsideCell);\n                return;\n              }\n\n              !isFocusedElementDefined && this._focus($cell);\n            } else if (!isFocusedElementDefined && (this._isNeedFocus || this._isHiddenFocus)) {\n              this._focus($cell, this._isHiddenFocus);\n            }\n\n            if (isEditing) {\n              this._focusInteractiveElement.bind(this)($cell);\n            }\n          } else {\n            eventsEngine.trigger($cell, \"focus\");\n          }\n        }\n      }\n    });\n  },\n  _getFocusedCell: function () {\n    return $(this._getCell(this._focusedCellPosition));\n  },\n  _updateFocusedCellPositionByTarget: function (target) {\n    var _this$_focusedCellPos;\n\n    var elementType = this._getElementType(target);\n\n    if (\"row\" === elementType && isDefined(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\n      var $row = $(target);\n      this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row));\n    } else {\n      this._updateFocusedCellPosition(this._getCellElementFromTarget(target));\n    }\n  },\n  _updateFocusedCellPosition: function ($cell, direction) {\n    var position = this._getCellPosition($cell, direction);\n\n    if (position) {\n      if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\n        this.setFocusedCellPosition(position.rowIndex, position.columnIndex);\n      }\n    }\n\n    return position;\n  },\n  _getFocusedColumnIndexOffset: function (columnIndex) {\n    var offset = 0;\n\n    var column = this._columnsController.getVisibleColumns()[columnIndex];\n\n    if (column && column.fixed) {\n      offset = this._getFixedColumnIndexOffset(column);\n    } else if (columnIndex >= 0) {\n      offset = this._columnsController.getColumnIndexOffset();\n    }\n\n    return offset;\n  },\n  _getFixedColumnIndexOffset: function (column) {\n    var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\n    return offset;\n  },\n  _getCellPosition: function ($cell, direction) {\n    var columnIndex;\n    var $row = isElementDefined($cell) && $cell.closest(\"tr\");\n    var rowsView = this.getView(\"rowsView\");\n\n    if (isElementDefined($row)) {\n      var rowIndex = this._getRowIndex($row);\n\n      columnIndex = rowsView.getCellIndex($cell, rowIndex);\n      columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\n\n      if (direction) {\n        columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\n        columnIndex = this._applyColumnIndexBoundaries(columnIndex);\n      }\n\n      return {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      };\n    }\n  },\n  _focusCell: function ($cell, isDisabled) {\n    if (this._isCellValid($cell)) {\n      this._focus($cell, isDisabled);\n\n      return true;\n    }\n  },\n  _focusEditFormCell: function ($cell) {\n    if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\n      this._editorFactory.focus($cell, true);\n    }\n  },\n  _resetFocusedCell: function (preventScroll) {\n    var _this$_focusedView;\n\n    var $cell = this._getFocusedCell();\n\n    isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\n    this._isNeedFocus = false;\n    this._isNeedScroll = false;\n    this._focusedCellPosition = {};\n    clearTimeout(this._updateFocusTimeout);\n    null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState({\n      preventScroll: preventScroll\n    });\n  },\n  restoreFocusableElement: function (rowIndex, $event) {\n    var args;\n    var $rowElement;\n    var isUpArrow = isDefined(rowIndex);\n    var rowsView = this.getView(\"rowsView\");\n    var $rowsViewElement = rowsView.element();\n    var columnIndex = this._focusedCellPosition.columnIndex;\n\n    var rowIndexOffset = this._dataController.getRowIndexOffset();\n\n    rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\n\n    if (!isUpArrow) {\n      this._editorFactory.loseFocus();\n\n      this._applyTabIndexToElement($rowsViewElement);\n\n      eventsEngine.trigger($rowsViewElement, \"focus\");\n    } else {\n      $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\n      args = this._fireFocusedRowChanging($event, $rowElement);\n\n      if (!args.cancel && args.rowIndexChanged) {\n        rowIndex = args.newRowIndex;\n      }\n    }\n\n    if (!isUpArrow || !args.cancel) {\n      this.setFocusedCellPosition(rowIndex, columnIndex);\n    }\n\n    isUpArrow && this._updateFocus();\n  },\n  _getNewPositionByCode: function (cellPosition, elementType, code) {\n    var columnIndex = cellPosition.columnIndex;\n    var rowIndex = cellPosition.rowIndex;\n    var visibleColumnsCount;\n\n    if (void 0 === cellPosition.rowIndex && \"next\" === code) {\n      return {\n        columnIndex: 0,\n        rowIndex: 0\n      };\n    }\n\n    switch (code) {\n      case \"nextInRow\":\n      case \"next\":\n        visibleColumnsCount = this._getVisibleColumnCount();\n\n        if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        })) {\n          columnIndex++;\n        } else if (!this._isLastRow(rowIndex) && \"next\" === code) {\n          columnIndex = 0;\n          rowIndex++;\n        }\n\n        break;\n\n      case \"previousInRow\":\n      case \"previous\":\n        if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        })) {\n          columnIndex--;\n        } else if (rowIndex > 0 && \"previous\" === code) {\n          rowIndex--;\n          visibleColumnsCount = this._getVisibleColumnCount();\n          columnIndex = visibleColumnsCount - 1;\n        }\n\n        break;\n\n      case \"upArrow\":\n        rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\n        break;\n\n      case \"downArrow\":\n        rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex;\n    }\n\n    return {\n      columnIndex: columnIndex,\n      rowIndex: rowIndex\n    };\n  },\n  setFocusedCellPosition: function (rowIndex, columnIndex) {\n    this.setFocusedRowIndex(rowIndex);\n    this.setFocusedColumnIndex(columnIndex);\n  },\n  setFocusedRowIndex: function (rowIndex) {\n    if (!this._focusedCellPosition) {\n      this._focusedCellPosition = {};\n    }\n\n    this._focusedCellPosition.rowIndex = rowIndex;\n  },\n  setFocusedColumnIndex: function (columnIndex) {\n    if (!this._focusedCellPosition) {\n      this._focusedCellPosition = {};\n    }\n\n    this._focusedCellPosition.columnIndex = columnIndex;\n  },\n  getRowIndex: function () {\n    return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1;\n  },\n  getColumnIndex: function () {\n    return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1;\n  },\n  getVisibleRowIndex: function () {\n    var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\n\n    if (!isDefined(rowIndex) || rowIndex < 0) {\n      return -1;\n    }\n\n    return rowIndex - this._dataController.getRowIndexOffset();\n  },\n  getVisibleColumnIndex: function () {\n    var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\n\n    if (!isDefined(columnIndex)) {\n      return -1;\n    }\n\n    return columnIndex - this._columnsController.getColumnIndexOffset();\n  },\n  _applyColumnIndexBoundaries: function (columnIndex) {\n    var visibleColumnsCount = this._getVisibleColumnCount();\n\n    if (columnIndex < 0) {\n      columnIndex = 0;\n    } else if (columnIndex >= visibleColumnsCount) {\n      columnIndex = visibleColumnsCount - 1;\n    }\n\n    return columnIndex;\n  },\n  _isCellByPositionValid: function (cellPosition) {\n    var $cell = $(this._getCell(cellPosition));\n    return this._isCellValid($cell);\n  },\n  _isLastRow: function (rowIndex) {\n    var dataController = this._dataController;\n\n    if (this._isVirtualRowRender()) {\n      return rowIndex >= dataController.getMaxRowIndex();\n    }\n\n    return rowIndex === dataController.items().length - 1;\n  },\n  _isFirstValidCell: function (cellPosition) {\n    var isFirstValidCell = false;\n\n    if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\n      isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition);\n    }\n\n    return isFirstValidCell;\n  },\n  _hasValidCellBeforePosition: function (cellPosition) {\n    var columnIndex = cellPosition.columnIndex;\n    var hasValidCells = false;\n\n    while (columnIndex > 0 && !hasValidCells) {\n      var checkingPosition = {\n        columnIndex: --columnIndex,\n        rowIndex: cellPosition.rowIndex\n      };\n      hasValidCells = this._isCellByPositionValid(checkingPosition);\n    }\n\n    return hasValidCells;\n  },\n  _hasValidCellAfterPosition: function (cellPosition) {\n    var columnIndex = cellPosition.columnIndex;\n    var hasValidCells = false;\n\n    var visibleColumnCount = this._getVisibleColumnCount();\n\n    while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\n      var checkingPosition = {\n        columnIndex: ++columnIndex,\n        rowIndex: cellPosition.rowIndex\n      };\n      hasValidCells = this._isCellByPositionValid(checkingPosition);\n    }\n\n    return hasValidCells;\n  },\n  _isLastValidCell: function (cellPosition) {\n    var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\n    var rowIndex = cellPosition.rowIndex;\n    var checkingPosition = {\n      columnIndex: nextColumnIndex,\n      rowIndex: rowIndex\n    };\n\n    var visibleRows = this._dataController.getVisibleRows();\n\n    var row = visibleRows && visibleRows[rowIndex];\n\n    var isLastRow = this._isLastRow(rowIndex);\n\n    if (!isLastRow) {\n      return false;\n    }\n\n    if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\n      return true;\n    }\n\n    if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\n      return true;\n    }\n\n    if (this._isCellByPositionValid(checkingPosition)) {\n      return false;\n    }\n\n    return this._isLastValidCell(checkingPosition);\n  },\n  _isCellValid: function ($cell, isClick) {\n    if (isElementDefined($cell)) {\n      var rowsView = this.getView(\"rowsView\");\n      var $row = $cell.parent();\n      var columnsController = this._columnsController;\n      var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\n      var column = columnsController.getVisibleColumns(null, true)[columnIndex];\n\n      var visibleColumnCount = this._getVisibleColumnCount();\n\n      var editingController = this._editingController;\n      var isMasterDetailRow = isDetailRow($row);\n      var isShowWhenGrouped = column && column.showWhenGrouped;\n      var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\n\n      if (this._isMasterDetailCell($cell)) {\n        return true;\n      }\n\n      if (visibleColumnCount > columnIndex && (!isMasterDetailRow && column && (!isDefined(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1)) {\n        var rowItems = this._dataController.items();\n\n        var visibleRowIndex = rowsView.getRowIndex($row);\n        var row = rowItems[visibleRowIndex];\n        var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\n        var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\n        var isEditing = isRowEditingInCurrentRow || isCellEditing;\n\n        if (column.command) {\n          if (this._isLegacyNavigation()) {\n            return !isEditing && \"expand\" === column.command;\n          }\n\n          if (isCellEditing) {\n            return false;\n          }\n\n          if (isRowEditingInCurrentRow) {\n            return \"select\" !== column.command;\n          }\n\n          return !isEditing;\n        }\n\n        if (isCellEditing && row && \"data\" !== row.rowType) {\n          return false;\n        }\n\n        return !isEditing || column.allowEditing || isClick;\n      }\n    }\n  },\n  getFirstValidCellInRow: function ($row, columnIndex) {\n    var $cells = $row.find(\"> td\");\n    var $cell;\n    var $result;\n    columnIndex = columnIndex || 0;\n\n    for (var i = columnIndex; i < $cells.length; ++i) {\n      $cell = $cells.eq(i);\n\n      if (this._isCellValid($cell)) {\n        $result = $cell;\n        break;\n      }\n    }\n\n    return $result;\n  },\n  _getNextCell: function (keyCode, elementType, cellPosition) {\n    var focusedCellPosition = cellPosition || this._focusedCellPosition;\n    var isRowFocusType = this.isRowFocusType();\n    var includeCommandCells = isRowFocusType || [\"next\", \"previous\"].includes(keyCode);\n    var $cell;\n    var $row;\n\n    if (this._focusedView && focusedCellPosition) {\n      var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\n\n      $cell = $(this._getCell(newFocusedCellPosition));\n      var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\n\n      if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\n        if (isRowFocusType) {\n          $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex);\n        } else {\n          $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition);\n        }\n      }\n\n      $row = isElementDefined($cell) && $cell.parent();\n\n      if (this._hasSkipRow($row)) {\n        var rowIndex = this._getRowIndex($row);\n\n        if (!this._isLastRow(rowIndex)) {\n          $cell = this._getNextCell(keyCode, \"row\", {\n            columnIndex: focusedCellPosition.columnIndex,\n            rowIndex: rowIndex\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return isElementDefined($cell) ? $cell : null;\n    }\n\n    return null;\n  },\n  _startEditing: function (eventArgs, fastEditingKey) {\n    var focusedCellPosition = this._focusedCellPosition;\n    var visibleRowIndex = this.getVisibleRowIndex();\n    var visibleColumnIndex = this.getVisibleColumnIndex();\n\n    var row = this._dataController.items()[visibleRowIndex];\n\n    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\n\n    if (this._isAllowEditing(row, column)) {\n      if (this._isRowEditMode()) {\n        this._editingController.editRow(visibleRowIndex);\n      } else if (focusedCellPosition) {\n        this._startEditCell(eventArgs, fastEditingKey);\n      }\n    }\n  },\n  _isAllowEditing: function (row, column) {\n    return this._editingController.allowUpdating({\n      row: row\n    }) && column && column.allowEditing;\n  },\n  _editFocusedCell: function () {\n    var rowIndex = this.getVisibleRowIndex();\n    var colIndex = this.getVisibleColumnIndex();\n    return this._editingController.editCell(rowIndex, colIndex);\n  },\n  _startEditCell: function (eventArgs, fastEditingKey) {\n    this._fastEditingStarted = isDefined(fastEditingKey);\n\n    var editResult = this._editFocusedCell();\n\n    if (this._isFastEditingStarted()) {\n      if (true === editResult) {\n        this._editingCellHandler(eventArgs, fastEditingKey);\n      } else if (editResult && editResult.done) {\n        var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\n        editResult.done(() => this._editingCellHandler(eventArgs, editorValue));\n      }\n    }\n  },\n  _editingCellHandler: function (eventArgs, editorValue) {\n    var _$input$get$select, _$input$get;\n\n    var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\n\n    var keyDownEvent = createEvent(eventArgs, {\n      type: \"keydown\",\n      target: $input.get(0)\n    });\n    var keyPressEvent = createEvent(eventArgs, {\n      type: \"keypress\",\n      target: $input.get(0)\n    });\n    var inputEvent = createEvent(eventArgs, {\n      type: \"input\",\n      target: $input.get(0)\n    });\n    null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\n    eventsEngine.trigger($input, keyDownEvent);\n\n    if (!keyDownEvent.isDefaultPrevented()) {\n      eventsEngine.trigger($input, keyPressEvent);\n\n      if (!keyPressEvent.isDefaultPrevented()) {\n        var timeout = browser.mozilla ? 25 : 0;\n        setTimeout(() => {\n          $input.val(editorValue);\n          var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\n          eventsEngine.off($widgetContainer, \"focusout\");\n          eventsEngine.one($widgetContainer, \"focusout\", function () {\n            eventsEngine.trigger($input, \"change\");\n          });\n          eventsEngine.trigger($input, inputEvent);\n        }, timeout);\n      }\n    }\n  },\n  _fireFocusChangingEvents: function ($event, $cell, fireRowEvent, isHighlighted) {\n    var args = {};\n    var cellPosition = this._getCellPosition($cell) || {};\n\n    if (this.isCellFocusType()) {\n      args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\n\n      if (!args.cancel) {\n        cellPosition.columnIndex = args.newColumnIndex;\n        cellPosition.rowIndex = args.newRowIndex;\n        isHighlighted = args.isHighlighted;\n        $cell = $(this._getCell(cellPosition));\n      }\n    }\n\n    if (!args.cancel && fireRowEvent && $cell) {\n      args = this._fireFocusedRowChanging($event, $cell.parent());\n\n      if (!args.cancel) {\n        cellPosition.rowIndex = args.newRowIndex;\n        args.isHighlighted = isHighlighted;\n      }\n    }\n\n    args.$newCellElement = $(this._getCell(cellPosition));\n\n    if (!args.$newCellElement.length) {\n      args.$newCellElement = $cell;\n    }\n\n    return args;\n  },\n  _fireFocusedCellChanging: function ($event, $cellElement, isHighlighted) {\n    var prevCellIndex = this.option(\"focusedColumnIndex\");\n    var prevRowIndex = this.option(\"focusedRowIndex\");\n\n    var cellPosition = this._getCellPosition($cellElement);\n\n    var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\n    var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\n    var args = {\n      cellElement: $cellElement,\n      prevColumnIndex: prevCellIndex,\n      prevRowIndex: prevRowIndex,\n      newColumnIndex: columnIndex,\n      newRowIndex: rowIndex,\n      rows: this._dataController.getVisibleRows(),\n      columns: this._columnsController.getVisibleColumns(),\n      event: $event,\n      isHighlighted: isHighlighted || false,\n      cancel: false\n    };\n    this._canceledCellPosition = null;\n    this.executeAction(\"onFocusedCellChanging\", args);\n\n    if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\n      args.$newCellElement = $(this._getCell({\n        columnIndex: args.newColumnIndex,\n        rowIndex: args.newRowIndex\n      }));\n    }\n\n    if (args.cancel) {\n      this._canceledCellPosition = {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      };\n    }\n\n    return args;\n  },\n  _fireFocusedCellChanged: function ($cellElement, prevCellIndex, prevRowIndex) {\n    var dataController = this._dataController;\n    var columnIndex = this.getView(\"rowsView\").getCellIndex($cellElement);\n\n    var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\n\n    var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\n\n    var isEditingCell = this._editingController.isEditCell(localRowIndex, columnIndex);\n\n    var row = dataController.items()[localRowIndex];\n\n    if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\n      this.executeAction(\"onFocusedCellChanged\", {\n        cellElement: $cellElement,\n        columnIndex: columnIndex,\n        rowIndex: rowIndex,\n        row: row,\n        column: this._columnsController.getVisibleColumns()[columnIndex]\n      });\n    }\n  },\n  _fireFocusedRowChanging: function (eventArgs, $newFocusedRow) {\n    var newRowIndex = this._getRowIndex($newFocusedRow);\n\n    var dataController = this._dataController;\n    var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\n    var loadingOperationTypes = dataController.loadingOperationTypes();\n    var args = {\n      rowElement: $newFocusedRow,\n      prevRowIndex: prevFocusedRowIndex,\n      newRowIndex: newRowIndex,\n      event: eventArgs,\n      rows: dataController.getVisibleRows(),\n      cancel: false\n    };\n\n    if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\n      args.cancel = true;\n      return args;\n    }\n\n    if (this.option(\"focusedRowEnabled\")) {\n      this.executeAction(\"onFocusedRowChanging\", args);\n\n      if (!args.cancel && args.newRowIndex !== newRowIndex) {\n        args.resetFocusedRow = args.newRowIndex < 0;\n\n        if (!args.resetFocusedRow) {\n          this.setFocusedRowIndex(args.newRowIndex);\n        }\n\n        args.rowIndexChanged = true;\n      }\n    }\n\n    return args;\n  },\n  _fireFocusedRowChanged: function ($rowElement) {\n    var row;\n    var focusedRowKey = this.option(\"focusedRowKey\");\n    var focusController = this.getController(\"focus\");\n    var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\n\n    if (this.option(\"focusedRowEnabled\")) {\n      if (focusedRowIndex >= 0) {\n        var dataController = this._dataController;\n        row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()];\n      }\n\n      this.executeAction(\"onFocusedRowChanged\", {\n        rowElement: $rowElement,\n        rowIndex: focusedRowIndex,\n        row: row\n      });\n    }\n  },\n  _isEventInCurrentGrid: function (event) {\n    return gridCoreUtils.isElementInCurrentGrid(this, $(event.target));\n  },\n  _isRowEditMode: function () {\n    var editMode = this._editingController.getEditMode();\n\n    return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM;\n  },\n  _isCellEditMode: function () {\n    var editMode = this._editingController.getEditMode();\n\n    return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH;\n  },\n  _isFastEditingAllowed: function () {\n    return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\");\n  },\n  _getInteractiveElement: function ($cell, isLast) {\n    var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\n    return isLast ? $focusedElement.last() : $focusedElement.first();\n  },\n  _applyTabIndexToElement: function ($element) {\n    var tabIndex = this.option(\"tabIndex\") || 0;\n    $element.attr(\"tabindex\", isDefined(tabIndex) ? tabIndex : 0);\n  },\n  _getCell: function (cellPosition) {\n    if (this._focusedView && cellPosition) {\n      var rowIndexOffset = this._dataController.getRowIndexOffset();\n\n      var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\n\n      var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\n      var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\n      var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\n      return this._focusedView.getCell({\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      });\n    }\n  },\n  _getRowIndex: function ($row) {\n    var rowsView = this.getView(\"rowsView\");\n    var rowIndex = rowsView.getRowIndex($row);\n\n    if (rowIndex >= 0) {\n      rowIndex += this._dataController.getRowIndexOffset();\n    }\n\n    return rowIndex;\n  },\n  _hasSkipRow: function ($row) {\n    var row = $row && $row.get(0);\n    return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)));\n  },\n  _allowEditingOnEnterKey: function () {\n    return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\");\n  },\n  _isLegacyNavigation: function () {\n    return this.option(\"useLegacyKeyboardNavigation\");\n  },\n  _getDirectionCodeByKey: function (key) {\n    var directionCode;\n\n    switch (key) {\n      case \"upArrow\":\n        directionCode = \"prevRow\";\n        break;\n\n      case \"downArrow\":\n        directionCode = \"nextRow\";\n        break;\n\n      case \"leftArrow\":\n        directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\n        break;\n\n      case \"rightArrow\":\n        directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\";\n    }\n\n    return directionCode;\n  },\n  _isVirtualScrolling: function () {\n    var scrollingMode = this.option(\"scrolling.mode\");\n    return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\n  },\n  _isVirtualRowRender: function () {\n    return this._isVirtualScrolling() || gridCoreUtils.isVirtualRowRendering(this);\n  },\n  _isVirtualColumnRender: function () {\n    return \"virtual\" === this.option(\"scrolling.columnRenderingMode\");\n  },\n  _scrollBy: function (left, top, rowIndex, $event) {\n    var that = this;\n    var scrollable = this.getView(\"rowsView\").getScrollable();\n\n    if (that._focusedCellPosition) {\n      scrollable.on(\"scroll\", function scrollHandler() {\n        scrollable.off(\"scroll\", scrollHandler);\n        setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event));\n      });\n    }\n\n    return scrollable.scrollBy({\n      left: left,\n      top: top\n    });\n  },\n  _isInsideEditForm: function (element) {\n    var $editForm = $(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS));\n    return $editForm.length && this.elementIsInsideGrid($editForm);\n  },\n  _isMasterDetailCell: function (element) {\n    var $masterDetailCell = $(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\n    return $masterDetailCell.length && this.elementIsInsideGrid($masterDetailCell);\n  },\n  _processNextCellInMasterDetail: function ($nextCell) {\n    if (!this._isInsideEditForm($nextCell) && $nextCell) {\n      this._applyTabIndexToElement($nextCell);\n    }\n  },\n  _handleTabKeyOnMasterDetailCell: function (target, direction) {\n    if (this._isMasterDetailCell(target)) {\n      this._updateFocusedCellPosition($(target), direction);\n\n      var $nextCell = this._getNextCell(direction, \"row\");\n\n      this._processNextCellInMasterDetail($nextCell);\n\n      return true;\n    }\n\n    return false;\n  },\n  _getElementType: function (target) {\n    return $(target).is(\"tr\") ? \"row\" : \"cell\";\n  },\n  _isFastEditingStarted: function () {\n    return this._isFastEditingAllowed() && this._fastEditingStarted;\n  },\n  _getVisibleColumnCount: function () {\n    return this._columnsController.getVisibleColumns(null, true).length;\n  },\n  _isCellInRow: function (cellPosition, includeCommandCells) {\n    var columnIndex = cellPosition.columnIndex;\n\n    var visibleColumnsCount = this._getVisibleColumnCount();\n\n    return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1;\n  },\n  _getCellElementFromTarget: function (target) {\n    var elementType = this._getElementType(target);\n\n    var $targetElement = $(target);\n    var $cell;\n\n    if (\"cell\" === elementType) {\n      $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"));\n    } else {\n      $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first();\n    }\n\n    return $cell;\n  },\n  _getRowsViewElement: function () {\n    var rowsView = this.getView(\"rowsView\");\n    return rowsView && rowsView.element();\n  },\n  isKeyboardEnabled: function () {\n    return this.option(\"keyboardNavigation.enabled\");\n  },\n  _processCanceledEditCellPosition: function (rowIndex, columnIndex) {\n    if (this._canceledCellPosition) {\n      var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\n      this._canceledCellPosition = null;\n      return isCanceled;\n    }\n  },\n  updateFocusedRowIndex: function () {\n    var dataController = this._dataController;\n    var visibleRowIndex = this.getVisibleRowIndex();\n    var visibleItems = dataController.items();\n    var lastVisibleIndex = visibleItems.length ? visibleItems.length - 1 : -1;\n    var rowIndexOffset = dataController.getRowIndexOffset();\n    lastVisibleIndex >= 0 && visibleRowIndex > lastVisibleIndex && this.setFocusedRowIndex(lastVisibleIndex + rowIndexOffset);\n  }\n});\nexport var keyboardNavigationModule = {\n  defaultOptions: function () {\n    return {\n      useLegacyKeyboardNavigation: false,\n      keyboardNavigation: {\n        enabled: true,\n        enterKeyAction: \"startEdit\",\n        enterKeyDirection: \"none\",\n        editOnKeyPress: false\n      }\n    };\n  },\n  controllers: {\n    keyboardNavigation: KeyboardNavigationController\n  },\n  extenders: {\n    views: {\n      rowsView: {\n        _rowClick: function (e) {\n          var editRowIndex = this.getController(\"editing\").getEditRowIndex();\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          if (editRowIndex === e.rowIndex) {\n            keyboardController.setCellFocusType();\n          }\n\n          var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\n\n          if (needTriggerPointerEventHandler) {\n            this._triggerPointerDownEventHandler(e);\n          }\n\n          this.callBase.apply(this, arguments);\n        },\n        _triggerPointerDownEventHandler: function (e) {\n          var originalEvent = e.event.originalEvent;\n\n          if (originalEvent) {\n            var keyboardController = this.getController(\"keyboardNavigation\");\n            var $cell = $(originalEvent.target);\n            var columnIndex = this.getCellIndex($cell);\n            var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\n            var row = this.getController(\"data\").items()[e.rowIndex];\n\n            if (keyboardController._isAllowEditing(row, column)) {\n              var eventArgs = createEvent(originalEvent, {\n                currentTarget: originalEvent.target\n              });\n\n              keyboardController._pointerEventHandler(eventArgs);\n            }\n          }\n        },\n        renderFocusState: function (params) {\n          var {\n            preventScroll: preventScroll,\n            pageSizeChanged: pageSizeChanged\n          } = null !== params && void 0 !== params ? params : {};\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var $rowsViewElement = this.element();\n\n          if ($rowsViewElement && !focused($rowsViewElement)) {\n            $rowsViewElement.attr(\"tabindex\", null);\n          }\n\n          pageSizeChanged && keyboardController.updateFocusedRowIndex();\n          var rowIndex = keyboardController.getVisibleRowIndex();\n\n          if (!isDefined(rowIndex) || rowIndex < 0) {\n            rowIndex = 0;\n          }\n\n          var cellElements = this.getCellElements(rowIndex);\n\n          if (keyboardController.isKeyboardEnabled() && cellElements.length) {\n            this.updateFocusElementTabIndex(cellElements, preventScroll);\n          }\n        },\n        updateFocusElementTabIndex: function (cellElements) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var $row = cellElements.eq(0).parent();\n\n          if (isGroupRow($row)) {\n            keyboardController._applyTabIndexToElement($row);\n          } else {\n            var columnIndex = keyboardController.getColumnIndex();\n\n            if (!isDefined(columnIndex) || columnIndex < 0) {\n              columnIndex = 0;\n            }\n\n            this._updateFocusedCellTabIndex(cellElements, columnIndex);\n          }\n        },\n        _updateFocusedCellTabIndex: function (cellElements, columnIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var cellElementsLength = cellElements ? cellElements.length : -1;\n\n          var updateCellTabIndex = function ($cell) {\n            var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\n\n            var isValidCell = keyboardController._isCellValid($cell);\n\n            if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\n              keyboardController._applyTabIndexToElement($cell);\n\n              keyboardController.setCellFocusType();\n              return true;\n            }\n          };\n\n          var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\n\n          if ($cell.length) {\n            updateCellTabIndex($cell);\n          } else {\n            if (cellElementsLength <= columnIndex) {\n              columnIndex = cellElementsLength - 1;\n            }\n\n            for (var i = columnIndex; i < cellElementsLength; ++i) {\n              if (updateCellTabIndex($(cellElements[i]))) {\n                break;\n              }\n            }\n          }\n        },\n        renderDelayedTemplates: function (change) {\n          this.callBase.apply(this, arguments);\n\n          this._renderFocusByChange(change);\n        },\n\n        _renderFocusByChange(change) {\n          var {\n            operationTypes: operationTypes,\n            repaintChangesOnly: repaintChangesOnly\n          } = null !== change && void 0 !== change ? change : {};\n          var {\n            fullReload: fullReload,\n            pageSize: pageSize\n          } = null !== operationTypes && void 0 !== operationTypes ? operationTypes : {};\n\n          if (!change || !repaintChangesOnly || fullReload || pageSize) {\n            var preventScroll = shouldPreventScroll(this);\n            this.renderFocusState({\n              preventScroll: preventScroll,\n              pageSizeChanged: pageSize\n            });\n          }\n        },\n\n        _renderCore: function (change) {\n          this.callBase.apply(this, arguments);\n\n          this._renderFocusByChange(change);\n        },\n        _editCellPrepared: function ($cell) {\n          var editorInstance = this._getEditorInstance($cell);\n\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\n\n          if (editorInstance && isEditingNavigationMode) {\n            this._handleEditingNavigationMode(editorInstance);\n          }\n\n          this.callBase.apply(this, arguments);\n        },\n        _handleEditingNavigationMode: function (editorInstance) {\n          [\"downArrow\", \"upArrow\"].forEach(function (keyName) {\n            var originalKeyHandler = editorInstance._supportedKeys()[keyName];\n\n            editorInstance.registerKeyHandler(keyName, e => {\n              var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\n\n              if (isDropDownOpened) {\n                return originalKeyHandler && originalKeyHandler.call(editorInstance, e);\n              }\n            });\n          });\n          editorInstance.registerKeyHandler(\"leftArrow\", noop);\n          editorInstance.registerKeyHandler(\"rightArrow\", noop);\n          var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\n\n          if (isDateBoxWithMask) {\n            editorInstance.registerKeyHandler(\"enter\", noop);\n          }\n        },\n        _getEditorInstance: function ($cell) {\n          var $editor = $cell.find(\".dx-texteditor\").eq(0);\n          return gridCoreUtils.getWidgetInstance($editor);\n        }\n      }\n    },\n    controllers: {\n      editing: {\n        editCell: function (rowIndex, columnIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\n            return false;\n          }\n\n          var isCellEditing = this.callBase(rowIndex, columnIndex);\n\n          if (isCellEditing) {\n            keyboardController.setupFocusedView();\n          }\n\n          return isCellEditing;\n        },\n        editRow: function (rowIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\n\n          var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\n\n          if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\n            keyboardController._resetFocusedCell();\n          }\n\n          this.callBase(rowIndex);\n        },\n        addRow: function (parentKey) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          keyboardController.setupFocusedView();\n          keyboardController.setCellFocusType();\n          return this.callBase.apply(this, arguments);\n        },\n        getFocusedCellInRow: function (rowIndex) {\n          var keyboardNavigationController = this.getController(\"keyboardNavigation\");\n          var $cell = this.callBase(rowIndex);\n\n          if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\n            var $focusedCell = keyboardNavigationController._getFocusedCell();\n\n            if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\n              $cell = $focusedCell;\n            }\n          }\n\n          return $cell;\n        },\n        _processCanceledEditingCell: function () {\n          this.closeEditCell().done(() => {\n            var keyboardNavigation = this.getController(\"keyboardNavigation\");\n\n            keyboardNavigation._updateFocus();\n          });\n        },\n        init: function () {\n          this.callBase();\n          this._keyboardNavigationController = this.getController(\"keyboardNavigation\");\n        },\n        closeEditCell: function () {\n          var keyboardNavigation = this._keyboardNavigationController;\n          keyboardNavigation._fastEditingStarted = false;\n          var result = this.callBase.apply(this, arguments);\n\n          keyboardNavigation._updateFocus();\n\n          return result;\n        },\n        _delayedInputFocus: function () {\n          this._keyboardNavigationController._isNeedScroll = true;\n          this.callBase.apply(this, arguments);\n        },\n        _isEditingStart: function () {\n          var keyboardNavigation = this.getController(\"keyboardNavigation\");\n          var cancel = this.callBase.apply(this, arguments);\n\n          if (cancel && !keyboardNavigation._isNeedFocus) {\n            var $cell = keyboardNavigation._getFocusedCell();\n\n            keyboardNavigation._focus($cell, true);\n          }\n\n          return cancel;\n        }\n      },\n      data: {\n        _correctRowIndices: function (getRowIndexCorrection) {\n          var that = this;\n          var keyboardNavigationController = that.getController(\"keyboardNavigation\");\n          var editorFactory = that.getController(\"editorFactory\");\n          var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\n          that.callBase.apply(that, arguments);\n\n          if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\n            var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\n\n            if (focusedRowIndexCorrection) {\n              focusedCellPosition.rowIndex += focusedRowIndexCorrection;\n              editorFactory.refocus();\n            }\n          }\n        },\n        getMaxRowIndex: function () {\n          var result = this.items().length - 1;\n          var virtualItemsCount = this.virtualItemsCount();\n\n          if (virtualItemsCount) {\n            var rowIndexOffset = this.getRowIndexOffset();\n            result += rowIndexOffset + virtualItemsCount.end;\n          }\n\n          return result;\n        }\n      },\n      adaptiveColumns: {\n        _showHiddenCellsInView: function (_ref) {\n          var {\n            viewName: viewName,\n            $cells: $cells,\n            isCommandColumn: isCommandColumn\n          } = _ref;\n          this.callBase.apply(this, arguments);\n          viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each((_, cellElement) => {\n            var $cell = $(cellElement);\n            isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0);\n          });\n        },\n        _hideVisibleCellInView: function (_ref2) {\n          var {\n            viewName: viewName,\n            $cell: $cell,\n            isCommandColumn: isCommandColumn\n          } = _ref2;\n          this.callBase.apply(this, arguments);\n\n          if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\n            $cell.removeAttr(\"tabindex\");\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["getOuterHeight","getHeight","getWidth","getOuterWidth","$","domAdapter","eventsEngine","core","gridCoreUtils","isDefined","isEmptyObject","focused","addNamespace","createEvent","isCommandKeyPressed","pointerEvents","name","clickEventName","noop","accessibility","browser","keyboard","devices","ROWS_VIEW_CLASS","EDIT_FORM_CLASS","GROUP_FOOTER_CLASS","ROW_CLASS","DATA_ROW_CLASS","GROUP_ROW_CLASS","HEADER_ROW_CLASS","EDIT_FORM_ITEM_CLASS","MASTER_DETAIL_ROW_CLASS","FREESPACE_ROW_CLASS","VIRTUAL_ROW_CLASS","MASTER_DETAIL_CELL_CLASS","EDITOR_CELL_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","COMMAND_EXPAND_CLASS","COMMAND_SELECT_CLASS","COMMAND_EDIT_CLASS","COMMAND_CELL_SELECTOR","CELL_FOCUS_DISABLED_CLASS","DATEBOX_WIDGET_NAME","FOCUS_STATE_CLASS","WIDGET_CLASS","REVERT_BUTTON_CLASS","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","NON_FOCUSABLE_ELEMENTS_SELECTOR","concat","EDIT_MODE_ROW","EDIT_MODE_FORM","EDIT_MODE_BATCH","EDIT_MODE_CELL","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","FUNCTIONAL_KEYS","isGroupRow","$row","hasClass","isDetailRow","isDataRow","isNotFocusedRow","isCellElement","$element","length","tagName","isEditorCell","that","$cell","_isRowEditMode","isElementDefined","isMobile","current","deviceType","isCellInHeaderRow","parent","isFixedColumnIndexOffsetRequired","column","rtlEnabled","option","result","fixedPosition","command","shouldPreventScroll","keyboardController","getController","_isVirtualScrolling","getRowIndex","KeyboardNavigationController","ViewController","inherit","init","_dataController","_selectionController","_editingController","_headerPanel","getView","_columnsController","_editorFactory","isKeyboardEnabled","subscribeVisibilityChange","_updateFocusTimeout","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","add","setupFocusedView","_isNeedScroll","is","_focusedView","getScrollable","_scrollToElement","_initViewHandlers","_initDocumentHandlers","createAction","rowsView","rowsViewFocusHandler","event","target","isRelatedTargetInRowsView","relatedTarget","closest","element","isCommandButton","_isEventInCurrentGrid","$focusedCell","_getFocusedCell","getCellElements","filter","eq","preventDefault","trigger","renderCompleted","e","$rowsView","isFullUpdate","changeType","isFocusedViewCorrect","needUpdateFocus","isAppend","$focusedElement","isFocusedElementCorrect","off","on","_initPointerEventHandler","_initKeyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","virtualColumnsScrolling","_updateFocus","document","getDocument","_documentClickHandler","$target","isCurrentRowsViewClick","addWidgetPrefix","isEditorOverlay","columnsResizerController","isColumnResizing","isResizing","targetInsideFocusedView","parents","_resetFocusedCell","_resetFocusedView","down","_getRowsViewElement","isGridEmpty","getVisibleRows","_applyTabIndexToElement","pointerEventName","clickSelector","_pointerEventAction","_pointerEventHandler","_keyDownListener","_keyDownHandler","dispose","callBase","clearTimeout","unsubscribeVisibilityChange","optionChanged","args","handled","isRowFocusType","focusType","isCellFocusType","setRowFocusType","setCellFocusType","needStopPropagation","isHandled","_processOnKeyDown","isEditing","originalEvent","isDefaultPrevented","indexOf","keyName","_updateFocusedCellPositionByTarget","_leftRightKeysHandler","ctrl","selectView","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","stopPropagation","eventArgs","executeAction","ctrlKey","alt","altKey","shift","shiftKey","_closeEditCell","setTimeout","closeEditCell","rowIndex","getVisibleRowIndex","$event","getRow","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_isVirtualColumnRender","_processVirtualHorizontalPosition","_getNextCell","_arrowKeysHandlerFocusCell","_this$_editingControl","_this$_editingControl2","visibleRowIndex","isUpArrow","dataSource","isRowEditingInCurrentRow","isEditRowByIndex","call","_navigateNextCell","_isVirtualRowRender","isLoading","rowHeight","_scrollBy","pageIndex","pageCount","pagingEnabled","isPageUp","pageStep","scrollable","container","$content","mode","isFocusedRowElement","_getElementType","isFocusedSelectionCell","startSelectionWithCheckboxes","changeItemSelection","control","selectAll","editingOptions","direction","isCellPositionDefined","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","addClass","_editingCellTabHandler","_targetCellTabHandler","loseFocus","_getMaxHorizontalOffset","component","offset","scrollWidth","_isColumnRendered","columnIndex","allVisibleColumns","getVisibleColumns","renderedVisibleColumns","_isFixedColumn","fixed","_isColumnVirtual","localColumnIndex","getColumnIndexOffset","visibleColumns","getColumnIndex","nextColumnIndex","horizontalScrollPosition","needToScroll","columnsCount","_getVisibleColumnCount","columnIndexOffset","leftEdgePosition","scrollTo","left","_getHorizontalScrollPositionOffset","scrollBy","top","positionOffset","$currentCell","_getCell","currentCellWidth","rtlMultiplier","_getCellElementFromTarget","isEditingAllowed","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","columnsController","cellIndex","getCellIndex","_getRowIndex","row","items","editingController","allowEditing","_isDataRow","rowType","allowUpdating","isNewRow","_focusCell","isHighlighted","_editFocusedCell","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","get","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","cancel","$newCellElement","cellPosition","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","key","getKeyByRowIndex","item","data","isContinuation","changeRowExpand","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","enterKeyDirection","isShift","isRowEditMode","_focusEditFormCell","saveEditData","bind","getEditMode","cancelEditData","searchTextEditor","getSearchTextEditor","focus","keyCode","isCellValid","_isCellValid","$nextCell","isVerticalDirection","_fireFocusChangingEvents","_focus","isDeleting","which","fastEditingKey","String","fromCharCode","currentTarget","$parent","isInteractiveElement","isRevertButton","isExpandCommandCell","_isInsideEditForm","_focusView","removeClass","_isMasterDetailCell","_clickTargetCellHandler","isCellEditMode","_isCellEditMode","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","skipFocusEvent","not","isEditor","isDisabled","setFocusedRowIndex","prevRowIndex","activeElementSelector","focusedRowEnabled","find","first","_focusElement","getFocusedView","rowsViewElement","$focusedView","_getFocusedViewByElement","view","$view","isLast","focusAndSelectElement","disableFocus","focusedView","$focusViewElement","$focusElement","isRowFocus","removeAttr","one","isRenderView","isBatchEditMode","hasChanges","isNewRowInEditMode","_focusEditingCell","_hasSkipRow","isCommandCell","$focusedElementInsideCell","isFocusedElementDefined","_this$_focusedCellPos","position","setFocusedCellPosition","_getFocusedColumnIndexOffset","_getFixedColumnIndexOffset","_applyColumnIndexBoundaries","preventScroll","_this$_focusedView","renderFocusState","restoreFocusableElement","$rowElement","$rowsViewElement","rowIndexOffset","getRowIndexOffset","getTopVisibleItemIndex","newRowIndex","_getNewPositionByCode","code","visibleColumnsCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","getVisibleColumnIndex","_isCellByPositionValid","dataController","getMaxRowIndex","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","visibleRows","isLastRow","isClick","isMasterDetailRow","isShowWhenGrouped","showWhenGrouped","isDataCell","groupIndex","parseInt","attr","rowItems","isCellEditing","isEditRow","_isLegacyNavigation","$cells","$result","i","focusedCellPosition","includeCommandCells","includes","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","visibleColumnIndex","_isAllowEditing","editRow","_startEditCell","colIndex","editCell","editResult","_editingCellHandler","done","editorValue","_$input$get$select","_$input$get","$input","keyDownEvent","type","keyPressEvent","inputEvent","select","timeout","mozilla","val","$widgetContainer","fireRowEvent","newColumnIndex","$cellElement","prevCellIndex","cellElement","prevColumnIndex","rows","columns","_fireFocusedCellChanged","localRowIndex","Math","min","isEditingCell","isEditCell","$newFocusedRow","prevFocusedRowIndex","loadingOperationTypes","rowElement","reload","paging","_fireFocusedRowChanged","focusedRowKey","focusController","focusedRowIndex","getFocusedRowIndexByKey","isElementInCurrentGrid","editMode","last","tabIndex","getCell","style","display","scrollingMode","isVirtualRowRendering","scrollHandler","$editForm","elementIsInsideGrid","$masterDetailCell","_processNextCellInMasterDetail","$targetElement","children","_processCanceledEditCellPosition","isCanceled","updateFocusedRowIndex","visibleItems","lastVisibleIndex","keyboardNavigationModule","defaultOptions","useLegacyKeyboardNavigation","keyboardNavigation","enabled","enterKeyAction","editOnKeyPress","controllers","extenders","views","_rowClick","editRowIndex","getEditRowIndex","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","apply","arguments","params","pageSizeChanged","cellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","cellElementsLength","updateCellTabIndex","isMasterDetailCell","isValidCell","renderDelayedTemplates","change","_renderFocusByChange","operationTypes","repaintChangesOnly","fullReload","pageSize","_renderCore","_editCellPrepared","editorInstance","_getEditorInstance","_handleEditingNavigationMode","forEach","originalKeyHandler","_supportedKeys","registerKeyHandler","isDropDownOpened","_input","isDateBoxWithMask","NAME","$editor","getWidgetInstance","editing","addRow","parentKey","getFocusedCellInRow","keyboardNavigationController","_processCanceledEditingCell","_keyboardNavigationController","_delayedInputFocus","_isEditingStart","_correctRowIndices","getRowIndexCorrection","editorFactory","focusedRowIndexCorrection","refocus","virtualItemsCount","end","adaptiveColumns","_showHiddenCellsInView","_ref","viewName","isCommandColumn","each","_","_hideVisibleCellInView","_ref2"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.keyboard_navigation.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight,\r\n    getHeight,\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    addNamespace,\r\n    createEvent,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    keyboard\r\n} from \"../../events/short\";\r\nimport devices from \"../../core/devices\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\r\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\nvar FUNCTIONAL_KEYS = [\"shift\", \"control\", \"alt\"];\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return isDefined($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== devices.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || isDefined(column.command) && !isDefined(column.fixedPosition))\r\n    } else {\r\n        result = !(!isDefined(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            this._editorFactory.focused.add($element => {\r\n                this.setupFocusedView();\r\n                if (this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && this._focusedView && this._focusedView.getScrollable) {\r\n                        this._focusedView._scrollToElement($element);\r\n                        this._isNeedScroll = false\r\n                    }\r\n                }\r\n            });\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = event => {\r\n            var $element = $(event.target);\r\n            var isRelatedTargetInRowsView = $(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && this._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = this._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    eventsEngine.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(e => {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = this._focusedView && this._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = $(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length;\r\n            eventsEngine.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            eventsEngine.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            this._initPointerEventHandler();\r\n            this._initKeyDownHandler();\r\n            this._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = this._isNeedFocus ? !isAppend : this._isHiddenFocus && isFullUpdate && !(null !== e && void 0 !== e && e.virtualColumnsScrolling);\r\n                needUpdateFocus && this._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var document = domAdapter.getDocument();\r\n        this._documentClickHandler = this.createAction(e => {\r\n            var $target = $(e.event.target);\r\n            var isCurrentRowsViewClick = this._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(this.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = this.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = this._focusedView ? $target.parents().filter(this._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && this._resetFocusedCell(true);\r\n                this._resetFocusedView()\r\n            }\r\n        });\r\n        eventsEngine.on(document, addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? pointerEvents.down : clickEventName;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!isDefined(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        eventsEngine.off($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        eventsEngine.on($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = keyboard.on($rowsView, null, e => this._keyDownHandler(e))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        keyboard.off(this._keyDownListener);\r\n        eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var needStopPropagation = true;\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        var isEditing = this._editingController.isEditing();\r\n        var originalEvent = e.originalEvent;\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            this._isNeedFocus = false;\r\n            this._isNeedScroll = false;\r\n            return\r\n        }\r\n        FUNCTIONAL_KEYS.indexOf(e.keyName) < 0 && this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    isHandled = true;\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"space\":\r\n                    isHandled = this._spaceKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"A\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlAKeyHandler(e, isEditing);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"F\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlFKeyHandler(e);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    isHandled = true;\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        isHandled = this._beginFastEditing(originalEvent, true)\r\n                    }\r\n            }\r\n            if (!isHandled && !this._beginFastEditing(originalEvent)) {\r\n                this._isNeedFocus = false;\r\n                this._isNeedScroll = false;\r\n                needStopPropagation = false\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        setTimeout(() => {\r\n            this._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var _this$_editingControl, _this$_editingControl2;\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isRowEditingInCurrentRow = null === (_this$_editingControl = this._editingController) || void 0 === _this$_editingControl ? void 0 : null === (_this$_editingControl2 = _this$_editingControl.isEditRowByIndex) || void 0 === _this$_editingControl2 ? void 0 : _this$_editingControl2.call(_this$_editingControl, visibleRowIndex);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isRowEditingInCurrentRow || !isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = getOuterHeight($row);\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else if (scrollable && getHeight(scrollable.container()) < getHeight(scrollable.$content())) {\r\n            this._scrollBy(0, getHeight(scrollable.container()) * pageStep);\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = $(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        } else {\r\n            return this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = isDefined(this._focusedCellPosition) && !isEmptyObject(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }\r\n        $(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ($(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                isOriginalHandlerRequired = true\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - getWidth(rowsView.element()) : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else if (isDefined(nextColumnIndex) && isDefined(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n            horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n            0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                left: horizontalScrollPosition,\r\n                top: 0\r\n            })\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && getOuterWidth($currentCell);\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && $(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow($(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow($(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                this._navigateNextCell(eventArgs.originalEvent, direction)\r\n            }\r\n        } else if (allowEditingOnEnterKey) {\r\n            this._startEditing(eventArgs)\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            eventsEngine.trigger($(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = $(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = $(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!$(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? $(event.target) : $target;\r\n            this._focusView();\r\n            $(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else if (!this._isMasterDetailCell($target)) {\r\n                this._clickTargetCellHandler(event, $target)\r\n            } else {\r\n                this._updateFocusedCellPosition($target)\r\n            }\r\n        } else if ($target.is(\"td\")) {\r\n            this._resetFocusedCell()\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && $(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\r\n                var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\r\n                this._focus($cell, isDisabled, skipFocusEvent)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement($(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement($(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !isDefined(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = $(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && $(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        gridCoreUtils.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, skipFocusEvent) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        var isRowFocus = isGroupRow($row) || this.isRowFocusType();\r\n        if (isRowFocus) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else if (isCellElement($cell)) {\r\n            $focusElement = $cell;\r\n            this._updateFocusedCellPosition($cell)\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            eventsEngine.one($focusElement, \"blur\", e => {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!skipFocusEvent) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                eventsEngine.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                if (isRowFocus) {\r\n                    $cell.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        this._updateFocusTimeout = setTimeout(() => {\r\n            var editingController = this._editingController;\r\n            var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\r\n            var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\r\n            if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\r\n                editingController._focusEditingCell();\r\n                return\r\n            }\r\n            var $cell = this._getFocusedCell();\r\n            var isEditing = editingController.isEditing();\r\n            if ($cell && !(this._isMasterDetailCell($cell) && !this._isRowEditMode())) {\r\n                if (this._hasSkipRow($cell.parent())) {\r\n                    var direction = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = this._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if ($cell.is(\"td\") || $cell.hasClass(this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && this._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                gridCoreUtils.focusAndSelectElement(this, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && this._focus($cell)\r\n                        } else if (!isFocusedElementDefined && (this._isNeedFocus || this._isHiddenFocus)) {\r\n                            this._focus($cell, this._isHiddenFocus)\r\n                        }\r\n                        if (isEditing) {\r\n                            this._focusInteractiveElement.bind(this)($cell)\r\n                        }\r\n                    } else {\r\n                        eventsEngine.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getFocusedCell: function() {\r\n        return $(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && isDefined(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = $(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else if (columnIndex >= 0) {\r\n            offset = this._columnsController.getColumnIndexOffset()\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState({\r\n            preventScroll: preventScroll\r\n        })\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = isDefined(rowIndex);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = this._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            this._editorFactory.loseFocus();\r\n            this._applyTabIndexToElement($rowsViewElement);\r\n            eventsEngine.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = this._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            this.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && this._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                    columnIndex = 0;\r\n                    rowIndex++\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else if (rowIndex > 0 && \"previous\" === code) {\r\n                    rowIndex--;\r\n                    visibleColumnsCount = this._getVisibleColumnCount();\r\n                    columnIndex = visibleColumnsCount - 1\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!isDefined(rowIndex) || rowIndex < 0) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!isDefined(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else if (columnIndex >= visibleColumnsCount) {\r\n            columnIndex = visibleColumnsCount - 1\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = $(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        var dataController = this._dataController;\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= dataController.getMaxRowIndex()\r\n        }\r\n        return rowIndex === dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && (!isMasterDetailRow && column && (!isDefined(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1)) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (this._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || [\"next\", \"previous\"].includes(keyCode);\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = $(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else if (focusedCellPosition) {\r\n                this._startEditCell(eventArgs, fastEditingKey)\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        this._fastEditingStarted = isDefined(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else if (editResult && editResult.done) {\r\n                var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                editResult.done(() => this._editingCellHandler(eventArgs, editorValue))\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var _$input$get$select, _$input$get;\r\n        var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\r\n        var keyDownEvent = createEvent(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = createEvent(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = createEvent(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\r\n        eventsEngine.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            eventsEngine.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = browser.mozilla ? 25 : 0;\r\n                setTimeout(() => {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    eventsEngine.off($widgetContainer, \"focusout\");\r\n                    eventsEngine.one($widgetContainer, \"focusout\", (function() {\r\n                        eventsEngine.trigger($input, \"change\")\r\n                    }));\r\n                    eventsEngine.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = $(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = $(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var prevCellIndex = this.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = this.option(\"focusedRowIndex\");\r\n        var cellPosition = this._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: this._dataController.getVisibleRows(),\r\n            columns: this._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        this.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = $(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var dataController = this._dataController;\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = this._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            this.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: this._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return gridCoreUtils.isElementInCurrentGrid(this, $(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", isDefined(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || gridCoreUtils.isVirtualRowRendering(this)\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            scrollable.on(\"scroll\", (function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            }))\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        var $editForm = $(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS));\r\n        return $editForm.length && this.elementIsInsideGrid($editForm)\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = $(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        return $masterDetailCell.length && this.elementIsInsideGrid($masterDetailCell)\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition($(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return $(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = $(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    },\r\n    updateFocusedRowIndex: function() {\r\n        var dataController = this._dataController;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleItems = dataController.items();\r\n        var lastVisibleIndex = visibleItems.length ? visibleItems.length - 1 : -1;\r\n        var rowIndexOffset = dataController.getRowIndexOffset();\r\n        lastVisibleIndex >= 0 && visibleRowIndex > lastVisibleIndex && this.setFocusedRowIndex(lastVisibleIndex + rowIndexOffset)\r\n    }\r\n});\r\nexport var keyboardNavigationModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = $(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = createEvent(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(params) {\r\n                    var {\r\n                        preventScroll: preventScroll,\r\n                        pageSizeChanged: pageSizeChanged\r\n                    } = null !== params && void 0 !== params ? params : {};\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !focused($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    pageSizeChanged && keyboardController.updateFocusedRowIndex();\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!isDefined(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!isDefined(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex($(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange(change) {\r\n                    var {\r\n                        operationTypes: operationTypes,\r\n                        repaintChangesOnly: repaintChangesOnly\r\n                    } = null !== change && void 0 !== change ? change : {};\r\n                    var {\r\n                        fullReload: fullReload,\r\n                        pageSize: pageSize\r\n                    } = null !== operationTypes && void 0 !== operationTypes ? operationTypes : {};\r\n                    if (!change || !repaintChangesOnly || fullReload || pageSize) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState({\r\n                            preventScroll: preventScroll,\r\n                            pageSizeChanged: pageSize\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach((function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, e => {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    }));\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    keyboardController.setupFocusedView();\r\n                    keyboardController.setCellFocusType();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    this.closeEditCell().done(() => {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this._keyboardNavigationController;\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                },\r\n                getMaxRowIndex: function() {\r\n                    var result = this.items().length - 1;\r\n                    var virtualItemsCount = this.virtualItemsCount();\r\n                    if (virtualItemsCount) {\r\n                        var rowIndexOffset = this.getRowIndexOffset();\r\n                        result += rowIndexOffset + virtualItemsCount.end\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cells: $cells,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each((_, cellElement) => {\r\n                        var $cell = $(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cell: $cell,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref2;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
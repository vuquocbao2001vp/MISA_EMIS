{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.label.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Guid from \"../../core/guid\";\nvar TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\nvar TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\nvar TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\nvar TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\nvar LABEL_BEFORE_CLASS = \"dx-label-before\";\nvar LABEL_CLASS = \"dx-label\";\nvar LABEL_AFTER_CLASS = \"dx-label-after\";\n\nclass TextEditorLabel {\n  constructor(_ref) {\n    var {\n      $editor: $editor,\n      text: text,\n      mode: mode,\n      mark: mark,\n      containsButtonsBefore: containsButtonsBefore,\n      containerWidth: containerWidth,\n      beforeWidth: beforeWidth\n    } = _ref;\n    this._props = {\n      $editor: $editor,\n      text: text,\n      mode: mode,\n      mark: mark,\n      containsButtonsBefore: containsButtonsBefore,\n      containerWidth: containerWidth,\n      beforeWidth: beforeWidth\n    };\n    this._id = \"\".concat(TEXTEDITOR_LABEL_CLASS, \"-\").concat(new Guid());\n\n    this._render();\n\n    this._toggleMarkupVisibility();\n  }\n\n  _isVisible() {\n    return !!this._props.text && \"hidden\" !== this._props.mode;\n  }\n\n  _render() {\n    this._$before = $(\"<div>\").addClass(LABEL_BEFORE_CLASS);\n    this._$labelSpan = $(\"<span>\");\n    this._$label = $(\"<div>\").addClass(LABEL_CLASS).append(this._$labelSpan);\n    this._$after = $(\"<div>\").addClass(LABEL_AFTER_CLASS);\n    this._$root = $(\"<div>\").addClass(TEXTEDITOR_LABEL_CLASS).attr(\"id\", this._id).append(this._$before).append(this._$label).append(this._$after);\n\n    this._updateMark();\n\n    this._updateText();\n\n    this._updateBeforeWidth();\n\n    this._updateMaxWidth();\n  }\n\n  _toggleMarkupVisibility() {\n    var visible = this._isVisible();\n\n    this._updateEditorBeforeButtonsClass(visible);\n\n    this._updateEditorLabelClass(visible);\n\n    visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach();\n  }\n\n  _updateEditorLabelClass(visible) {\n    this._props.$editor.removeClass(TEXTEDITOR_WITH_FLOATING_LABEL_CLASS).removeClass(TEXTEDITOR_WITH_LABEL_CLASS);\n\n    if (visible) {\n      var labelClass = \"floating\" === this._props.mode ? TEXTEDITOR_WITH_FLOATING_LABEL_CLASS : TEXTEDITOR_WITH_LABEL_CLASS;\n\n      this._props.$editor.addClass(labelClass);\n    }\n  }\n\n  _updateEditorBeforeButtonsClass() {\n    var visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\n\n    this._props.$editor.removeClass(TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS);\n\n    if (visible) {\n      var beforeButtonsClass = this._props.containsButtonsBefore ? TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS : \"\";\n\n      this._props.$editor.addClass(beforeButtonsClass);\n    }\n  }\n\n  _updateMark() {\n    this._$labelSpan.attr(\"data-mark\", this._props.mark);\n  }\n\n  _updateText() {\n    this._$labelSpan.text(this._props.text);\n  }\n\n  _updateBeforeWidth() {\n    this._$before.css({\n      width: this._props.beforeWidth\n    });\n  }\n\n  _updateMaxWidth() {\n    this._$label.css({\n      maxWidth: this._props.containerWidth\n    });\n  }\n\n  $element() {\n    return this._$root;\n  }\n\n  isVisible() {\n    return this._isVisible();\n  }\n\n  getId() {\n    if (this._isVisible()) {\n      return this._id;\n    }\n  }\n\n  updateMode(mode) {\n    this._props.mode = mode;\n\n    this._toggleMarkupVisibility();\n  }\n\n  updateText(text) {\n    this._props.text = text;\n\n    this._updateText();\n\n    this._toggleMarkupVisibility();\n  }\n\n  updateMark(mark) {\n    this._props.mark = mark;\n\n    this._updateMark();\n  }\n\n  updateContainsButtonsBefore(containsButtonsBefore) {\n    this._props.containsButtonsBefore = containsButtonsBefore;\n\n    this._updateEditorBeforeButtonsClass();\n  }\n\n  updateBeforeWidth(beforeWidth) {\n    this._props.beforeWidth = beforeWidth;\n\n    this._updateBeforeWidth();\n  }\n\n  updateMaxWidth(containerWidth) {\n    this._props.containerWidth = containerWidth;\n\n    this._updateMaxWidth();\n  }\n\n}\n\nexport { TextEditorLabel };","map":{"version":3,"names":["$","Guid","TEXTEDITOR_LABEL_CLASS","TEXTEDITOR_WITH_LABEL_CLASS","TEXTEDITOR_WITH_FLOATING_LABEL_CLASS","TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS","LABEL_BEFORE_CLASS","LABEL_CLASS","LABEL_AFTER_CLASS","TextEditorLabel","constructor","_ref","$editor","text","mode","mark","containsButtonsBefore","containerWidth","beforeWidth","_props","_id","concat","_render","_toggleMarkupVisibility","_isVisible","_$before","addClass","_$labelSpan","_$label","append","_$after","_$root","attr","_updateMark","_updateText","_updateBeforeWidth","_updateMaxWidth","visible","_updateEditorBeforeButtonsClass","_updateEditorLabelClass","appendTo","detach","removeClass","labelClass","arguments","length","beforeButtonsClass","css","width","maxWidth","$element","isVisible","getId","updateMode","updateText","updateMark","updateContainsButtonsBefore","updateBeforeWidth","updateMaxWidth"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/text_box/ui.text_editor.label.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.label.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Guid from \"../../core/guid\";\r\nvar TEXTEDITOR_LABEL_CLASS = \"dx-texteditor-label\";\r\nvar TEXTEDITOR_WITH_LABEL_CLASS = \"dx-texteditor-with-label\";\r\nvar TEXTEDITOR_WITH_FLOATING_LABEL_CLASS = \"dx-texteditor-with-floating-label\";\r\nvar TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS = \"dx-texteditor-with-before-buttons\";\r\nvar LABEL_BEFORE_CLASS = \"dx-label-before\";\r\nvar LABEL_CLASS = \"dx-label\";\r\nvar LABEL_AFTER_CLASS = \"dx-label-after\";\r\nclass TextEditorLabel {\r\n    constructor(_ref) {\r\n        var {\r\n            $editor: $editor,\r\n            text: text,\r\n            mode: mode,\r\n            mark: mark,\r\n            containsButtonsBefore: containsButtonsBefore,\r\n            containerWidth: containerWidth,\r\n            beforeWidth: beforeWidth\r\n        } = _ref;\r\n        this._props = {\r\n            $editor: $editor,\r\n            text: text,\r\n            mode: mode,\r\n            mark: mark,\r\n            containsButtonsBefore: containsButtonsBefore,\r\n            containerWidth: containerWidth,\r\n            beforeWidth: beforeWidth\r\n        };\r\n        this._id = \"\".concat(TEXTEDITOR_LABEL_CLASS, \"-\").concat(new Guid);\r\n        this._render();\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    _isVisible() {\r\n        return !!this._props.text && \"hidden\" !== this._props.mode\r\n    }\r\n    _render() {\r\n        this._$before = $(\"<div>\").addClass(LABEL_BEFORE_CLASS);\r\n        this._$labelSpan = $(\"<span>\");\r\n        this._$label = $(\"<div>\").addClass(LABEL_CLASS).append(this._$labelSpan);\r\n        this._$after = $(\"<div>\").addClass(LABEL_AFTER_CLASS);\r\n        this._$root = $(\"<div>\").addClass(TEXTEDITOR_LABEL_CLASS).attr(\"id\", this._id).append(this._$before).append(this._$label).append(this._$after);\r\n        this._updateMark();\r\n        this._updateText();\r\n        this._updateBeforeWidth();\r\n        this._updateMaxWidth()\r\n    }\r\n    _toggleMarkupVisibility() {\r\n        var visible = this._isVisible();\r\n        this._updateEditorBeforeButtonsClass(visible);\r\n        this._updateEditorLabelClass(visible);\r\n        visible ? this._$root.appendTo(this._props.$editor) : this._$root.detach()\r\n    }\r\n    _updateEditorLabelClass(visible) {\r\n        this._props.$editor.removeClass(TEXTEDITOR_WITH_FLOATING_LABEL_CLASS).removeClass(TEXTEDITOR_WITH_LABEL_CLASS);\r\n        if (visible) {\r\n            var labelClass = \"floating\" === this._props.mode ? TEXTEDITOR_WITH_FLOATING_LABEL_CLASS : TEXTEDITOR_WITH_LABEL_CLASS;\r\n            this._props.$editor.addClass(labelClass)\r\n        }\r\n    }\r\n    _updateEditorBeforeButtonsClass() {\r\n        var visible = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._isVisible();\r\n        this._props.$editor.removeClass(TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS);\r\n        if (visible) {\r\n            var beforeButtonsClass = this._props.containsButtonsBefore ? TEXTEDITOR_WITH_BEFORE_BUTTONS_CLASS : \"\";\r\n            this._props.$editor.addClass(beforeButtonsClass)\r\n        }\r\n    }\r\n    _updateMark() {\r\n        this._$labelSpan.attr(\"data-mark\", this._props.mark)\r\n    }\r\n    _updateText() {\r\n        this._$labelSpan.text(this._props.text)\r\n    }\r\n    _updateBeforeWidth() {\r\n        this._$before.css({\r\n            width: this._props.beforeWidth\r\n        })\r\n    }\r\n    _updateMaxWidth() {\r\n        this._$label.css({\r\n            maxWidth: this._props.containerWidth\r\n        })\r\n    }\r\n    $element() {\r\n        return this._$root\r\n    }\r\n    isVisible() {\r\n        return this._isVisible()\r\n    }\r\n    getId() {\r\n        if (this._isVisible()) {\r\n            return this._id\r\n        }\r\n    }\r\n    updateMode(mode) {\r\n        this._props.mode = mode;\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    updateText(text) {\r\n        this._props.text = text;\r\n        this._updateText();\r\n        this._toggleMarkupVisibility()\r\n    }\r\n    updateMark(mark) {\r\n        this._props.mark = mark;\r\n        this._updateMark()\r\n    }\r\n    updateContainsButtonsBefore(containsButtonsBefore) {\r\n        this._props.containsButtonsBefore = containsButtonsBefore;\r\n        this._updateEditorBeforeButtonsClass()\r\n    }\r\n    updateBeforeWidth(beforeWidth) {\r\n        this._props.beforeWidth = beforeWidth;\r\n        this._updateBeforeWidth()\r\n    }\r\n    updateMaxWidth(containerWidth) {\r\n        this._props.containerWidth = containerWidth;\r\n        this._updateMaxWidth()\r\n    }\r\n}\r\nexport {\r\n    TextEditorLabel\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
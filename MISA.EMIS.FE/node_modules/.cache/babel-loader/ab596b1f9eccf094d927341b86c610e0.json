{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport ENGLISH from './i18n';\nimport RRule from '../index'; // =============================================================================\n// Parser\n// =============================================================================\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser(rules) {\n    this.done = true;\n    this.rules = rules;\n  }\n\n  Parser.prototype.start = function (text) {\n    this.text = text;\n    this.done = false;\n    return this.nextSymbol();\n  };\n\n  Parser.prototype.isDone = function () {\n    return this.done && this.symbol === null;\n  };\n\n  Parser.prototype.nextSymbol = function () {\n    var best;\n    var bestSymbol;\n    var p = this;\n    this.symbol = null;\n    this.value = null;\n\n    do {\n      if (this.done) return false;\n      var rule = void 0;\n      best = null;\n\n      for (var name_1 in this.rules) {\n        rule = this.rules[name_1];\n        var match = rule.exec(p.text);\n\n        if (match) {\n          if (best === null || match[0].length > best[0].length) {\n            best = match;\n            bestSymbol = name_1;\n          }\n        }\n      }\n\n      if (best != null) {\n        this.text = this.text.substr(best[0].length);\n        if (this.text === '') this.done = true;\n      }\n\n      if (best == null) {\n        this.done = true;\n        this.symbol = null;\n        this.value = null;\n        return;\n      } // @ts-ignore\n\n    } while (bestSymbol === 'SKIP'); // @ts-ignore\n\n\n    this.symbol = bestSymbol;\n    this.value = best;\n    return true;\n  };\n\n  Parser.prototype.accept = function (name) {\n    if (this.symbol === name) {\n      if (this.value) {\n        var v = this.value;\n        this.nextSymbol();\n        return v;\n      }\n\n      this.nextSymbol();\n      return true;\n    }\n\n    return false;\n  };\n\n  Parser.prototype.acceptNumber = function () {\n    return this.accept('number');\n  };\n\n  Parser.prototype.expect = function (name) {\n    if (this.accept(name)) return true;\n    throw new Error('expected ' + name + ' but found ' + this.symbol);\n  };\n\n  return Parser;\n}();\n\nexport default function parseText(text, language) {\n  if (language === void 0) {\n    language = ENGLISH;\n  }\n\n  var options = {};\n  var ttr = new Parser(language.tokens);\n  if (!ttr.start(text)) return null;\n  S();\n  return options;\n\n  function S() {\n    // every [n]\n    ttr.expect('every');\n    var n = ttr.acceptNumber();\n    if (n) options.interval = parseInt(n[0], 10);\n    if (ttr.isDone()) throw new Error('Unexpected end');\n\n    switch (ttr.symbol) {\n      case 'day(s)':\n        options.freq = RRule.DAILY;\n\n        if (ttr.nextSymbol()) {\n          AT();\n          F();\n        }\n\n        break;\n      // FIXME Note: every 2 weekdays != every two weeks on weekdays.\n      // DAILY on weekdays is not a valid rule\n\n      case 'weekday(s)':\n        options.freq = RRule.WEEKLY;\n        options.byweekday = [RRule.MO, RRule.TU, RRule.WE, RRule.TH, RRule.FR];\n        ttr.nextSymbol();\n        F();\n        break;\n\n      case 'week(s)':\n        options.freq = RRule.WEEKLY;\n\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n\n        break;\n\n      case 'hour(s)':\n        options.freq = RRule.HOURLY;\n\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n\n        break;\n\n      case 'minute(s)':\n        options.freq = RRule.MINUTELY;\n\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n\n        break;\n\n      case 'month(s)':\n        options.freq = RRule.MONTHLY;\n\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n\n        break;\n\n      case 'year(s)':\n        options.freq = RRule.YEARLY;\n\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n\n        break;\n\n      case 'monday':\n      case 'tuesday':\n      case 'wednesday':\n      case 'thursday':\n      case 'friday':\n      case 'saturday':\n      case 'sunday':\n        options.freq = RRule.WEEKLY;\n        var key = ttr.symbol.substr(0, 2).toUpperCase();\n        options.byweekday = [RRule[key]];\n        if (!ttr.nextSymbol()) return; // TODO check for duplicates\n\n        while (ttr.accept('comma')) {\n          if (ttr.isDone()) throw new Error('Unexpected end');\n          var wkd = decodeWKD();\n\n          if (!wkd) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + ', expected weekday');\n          } // @ts-ignore\n\n\n          options.byweekday.push(RRule[wkd]);\n          ttr.nextSymbol();\n        }\n\n        MDAYs();\n        F();\n        break;\n\n      case 'january':\n      case 'february':\n      case 'march':\n      case 'april':\n      case 'may':\n      case 'june':\n      case 'july':\n      case 'august':\n      case 'september':\n      case 'october':\n      case 'november':\n      case 'december':\n        options.freq = RRule.YEARLY;\n        options.bymonth = [decodeM()];\n        if (!ttr.nextSymbol()) return; // TODO check for duplicates\n\n        while (ttr.accept('comma')) {\n          if (ttr.isDone()) throw new Error('Unexpected end');\n          var m = decodeM();\n\n          if (!m) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + ', expected month');\n          }\n\n          options.bymonth.push(m);\n          ttr.nextSymbol();\n        }\n\n        ON();\n        F();\n        break;\n\n      default:\n        throw new Error('Unknown symbol');\n    }\n  }\n\n  function ON() {\n    var on = ttr.accept('on');\n    var the = ttr.accept('the');\n    if (!(on || the)) return;\n\n    do {\n      var nth = decodeNTH();\n      var wkd = decodeWKD();\n      var m = decodeM(); // nth <weekday> | <weekday>\n\n      if (nth) {\n        // ttr.nextSymbol()\n        if (wkd) {\n          ttr.nextSymbol();\n          if (!options.byweekday) options.byweekday = []; // @ts-ignore\n\n          options.byweekday.push(RRule[wkd].nth(nth));\n        } else {\n          if (!options.bymonthday) options.bymonthday = []; // @ts-ignore\n\n          options.bymonthday.push(nth);\n          ttr.accept('day(s)');\n        } // <weekday>\n\n      } else if (wkd) {\n        ttr.nextSymbol();\n        if (!options.byweekday) options.byweekday = []; // @ts-ignore\n\n        options.byweekday.push(RRule[wkd]);\n      } else if (ttr.symbol === 'weekday(s)') {\n        ttr.nextSymbol();\n\n        if (!options.byweekday) {\n          options.byweekday = [RRule.MO, RRule.TU, RRule.WE, RRule.TH, RRule.FR];\n        }\n      } else if (ttr.symbol === 'week(s)') {\n        ttr.nextSymbol();\n        var n = ttr.acceptNumber();\n\n        if (!n) {\n          throw new Error('Unexpected symbol ' + ttr.symbol + ', expected week number');\n        }\n\n        options.byweekno = [parseInt(n[0], 10)];\n\n        while (ttr.accept('comma')) {\n          n = ttr.acceptNumber();\n\n          if (!n) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');\n          }\n\n          options.byweekno.push(parseInt(n[0], 10));\n        }\n      } else if (m) {\n        ttr.nextSymbol();\n        if (!options.bymonth) options.bymonth = []; // @ts-ignore\n\n        options.bymonth.push(m);\n      } else {\n        return;\n      }\n    } while (ttr.accept('comma') || ttr.accept('the') || ttr.accept('on'));\n  }\n\n  function AT() {\n    var at = ttr.accept('at');\n    if (!at) return;\n\n    do {\n      var n = ttr.acceptNumber();\n\n      if (!n) {\n        throw new Error('Unexpected symbol ' + ttr.symbol + ', expected hour');\n      }\n\n      options.byhour = [parseInt(n[0], 10)];\n\n      while (ttr.accept('comma')) {\n        n = ttr.acceptNumber();\n\n        if (!n) {\n          throw new Error('Unexpected symbol ' + ttr.symbol + '; expected hour');\n        }\n\n        options.byhour.push(parseInt(n[0], 10));\n      }\n    } while (ttr.accept('comma') || ttr.accept('at'));\n  }\n\n  function decodeM() {\n    switch (ttr.symbol) {\n      case 'january':\n        return 1;\n\n      case 'february':\n        return 2;\n\n      case 'march':\n        return 3;\n\n      case 'april':\n        return 4;\n\n      case 'may':\n        return 5;\n\n      case 'june':\n        return 6;\n\n      case 'july':\n        return 7;\n\n      case 'august':\n        return 8;\n\n      case 'september':\n        return 9;\n\n      case 'october':\n        return 10;\n\n      case 'november':\n        return 11;\n\n      case 'december':\n        return 12;\n\n      default:\n        return false;\n    }\n  }\n\n  function decodeWKD() {\n    switch (ttr.symbol) {\n      case 'monday':\n      case 'tuesday':\n      case 'wednesday':\n      case 'thursday':\n      case 'friday':\n      case 'saturday':\n      case 'sunday':\n        return ttr.symbol.substr(0, 2).toUpperCase();\n\n      default:\n        return false;\n    }\n  }\n\n  function decodeNTH() {\n    switch (ttr.symbol) {\n      case 'last':\n        ttr.nextSymbol();\n        return -1;\n\n      case 'first':\n        ttr.nextSymbol();\n        return 1;\n\n      case 'second':\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -2 : 2;\n\n      case 'third':\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -3 : 3;\n\n      case 'nth':\n        var v = parseInt(ttr.value[1], 10);\n        if (v < -366 || v > 366) throw new Error('Nth out of range: ' + v);\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -v : v;\n\n      default:\n        return false;\n    }\n  }\n\n  function MDAYs() {\n    ttr.accept('on');\n    ttr.accept('the');\n    var nth = decodeNTH();\n    if (!nth) return;\n    options.bymonthday = [nth];\n    ttr.nextSymbol();\n\n    while (ttr.accept('comma')) {\n      nth = decodeNTH();\n\n      if (!nth) {\n        throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');\n      }\n\n      options.bymonthday.push(nth);\n      ttr.nextSymbol();\n    }\n  }\n\n  function F() {\n    if (ttr.symbol === 'until') {\n      var date = Date.parse(ttr.text);\n      if (!date) throw new Error('Cannot parse until date:' + ttr.text);\n      options.until = new Date(date);\n    } else if (ttr.accept('for')) {\n      options.count = parseInt(ttr.value[0], 10);\n      ttr.expect('number'); // ttr.expect('times')\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["ENGLISH","RRule","rules","Parser","text","done","nextSymbol","symbol","best","bestSymbol","p","value","rule","name_1","match","exec","length","substr","name","v","accept","Error","parseText","language","options","ttr","tokens","start","S","expect","n","acceptNumber","interval","parseInt","isDone","freq","DAILY","AT","F","WEEKLY","byweekday","MO","TU","WE","TH","FR","ON","HOURLY","MINUTELY","MONTHLY","YEARLY","key","toUpperCase","wkd","decodeWKD","push","MDAYs","bymonth","decodeM","m","on","the","nth","decodeNTH","bymonthday","byweekno","at","byhour","date","Date","parse","until","count"],"sourceRoot":"","sources":["../../../../src/nlp/parsetext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
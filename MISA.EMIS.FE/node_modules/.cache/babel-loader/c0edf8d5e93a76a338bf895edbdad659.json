{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { getPublicElement } from \"../../core/element\";\nimport { format as formatString } from \"../../core/utils/string\";\nimport { noop, deferRender, deferUpdate } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { name as clickEventName } from \"../../events/click\";\nimport localizationMessage from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\nimport { setFieldProperty, findField, mergeArraysByMaxValue } from \"./ui.pivot_grid.utils\";\nimport { DataController } from \"./ui.pivot_grid.data_controller\";\nimport { DataArea } from \"./ui.pivot_grid.data_area\";\nimport { VerticalHeadersArea, HorizontalHeadersArea } from \"./ui.pivot_grid.headers_area\";\nimport { setHeight, getHeight, getWidth, getOuterHeight } from \"../../core/utils/size\";\nimport { FieldsArea } from \"./ui.pivot_grid.fields_area\";\nimport PivotGridFieldChooser from \"./ui.pivot_grid.field_chooser\";\nimport PivotGridFieldChooserBase from \"./ui.pivot_grid.field_chooser_base\";\nimport { ExportController } from \"./ui.pivot_grid.export\";\nimport chartIntegrationMixin from \"./ui.pivot_grid.chart_integration\";\nimport Popup from \"../popup\";\nimport ContextMenu from \"../context_menu\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nvar DATA_AREA_CELL_CLASS = \"dx-area-data-cell\";\nvar ROW_AREA_CELL_CLASS = \"dx-area-row-cell\";\nvar COLUMN_AREA_CELL_CLASS = \"dx-area-column-cell\";\nvar DESCRIPTION_AREA_CELL_CLASS = \"dx-area-description-cell\";\nvar BORDERS_CLASS = \"dx-pivotgrid-border\";\nvar PIVOTGRID_CLASS = \"dx-pivotgrid\";\nvar ROW_LINES_CLASS = \"dx-row-lines\";\nvar BOTTOM_ROW_CLASS = \"dx-bottom-row\";\nvar BOTTOM_BORDER_CLASS = \"dx-bottom-border\";\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\nvar FIELDS_CLASS = \"dx-area-fields\";\nvar FIELD_CHOOSER_POPUP_CLASS = \"dx-fieldchooser-popup\";\nvar INCOMPRESSIBLE_FIELDS_CLASS = \"dx-incompressible-fields\";\nvar OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\nvar TR = \"<tr>\";\nvar TD = \"<td>\";\nvar DIV = \"<div>\";\nvar TEST_HEIGHT = 66666;\nvar FIELD_CALCULATED_OPTIONS = [\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"];\n\nfunction getArraySum(array) {\n  var sum = 0;\n  each(array, function (_, value) {\n    sum += value || 0;\n  });\n  return sum;\n}\n\nfunction adjustSizeArray(sizeArray, space) {\n  var delta = space / sizeArray.length;\n\n  for (var i = 0; i < sizeArray.length; i++) {\n    sizeArray[i] -= delta;\n  }\n}\n\nfunction unsubscribeScrollEvents(area) {\n  area.off(\"scroll\").off(\"stop\");\n}\n\nfunction subscribeToScrollEvent(area, handler) {\n  unsubscribeScrollEvents(area);\n  area.on(\"scroll\", handler).on(\"stop\", handler);\n}\n\nfunction getCommonBorderWidth(elements, direction) {\n  var borderStyleNames = \"width\" === direction ? [\"borderLeftWidth\", \"borderRightWidth\"] : [\"borderTopWidth\", \"borderBottomWidth\"];\n  var width = 0;\n  each(elements, function (_, elem) {\n    var computedStyle = window.getComputedStyle(elem.get(0));\n    borderStyleNames.forEach(function (borderStyleName) {\n      width += parseFloat(computedStyle[borderStyleName]) || 0;\n    });\n  });\n  return width;\n}\n\nfunction clickedOnFieldsArea($targetElement) {\n  return $targetElement.closest(\".\" + FIELDS_CLASS).length || $targetElement.find(\".\" + FIELDS_CLASS).length;\n}\n\nvar PivotGrid = Widget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      scrolling: {\n        timeout: 300,\n        renderingThreshold: 150,\n        minTimeout: 10,\n        mode: \"standard\",\n        useNative: \"auto\",\n        removeInvisiblePages: true,\n        virtualRowHeight: 50,\n        virtualColumnWidth: 100,\n        loadTwoPagesOnStart: true\n      },\n      encodeHtml: true,\n      dataSource: null,\n      activeStateEnabled: false,\n      fieldChooser: {\n        minWidth: 250,\n        minHeight: 250,\n        enabled: true,\n        allowSearch: false,\n        searchTimeout: 500,\n        layout: 0,\n        title: localizationMessage.format(\"dxPivotGrid-fieldChooserTitle\"),\n        width: 600,\n        height: 600,\n        applyChangesMode: \"instantly\"\n      },\n      onContextMenuPreparing: null,\n      allowSorting: false,\n      allowSortingBySummary: false,\n      allowFiltering: false,\n      allowExpandAll: false,\n      wordWrapEnabled: true,\n      fieldPanel: {\n        showColumnFields: true,\n        showFilterFields: true,\n        showDataFields: true,\n        showRowFields: true,\n        allowFieldDragging: true,\n        visible: false,\n        texts: {\n          columnFieldArea: localizationMessage.format(\"dxPivotGrid-columnFieldArea\"),\n          rowFieldArea: localizationMessage.format(\"dxPivotGrid-rowFieldArea\"),\n          filterFieldArea: localizationMessage.format(\"dxPivotGrid-filterFieldArea\"),\n          dataFieldArea: localizationMessage.format(\"dxPivotGrid-dataFieldArea\")\n        }\n      },\n      dataFieldArea: \"column\",\n      export: {\n        enabled: false,\n        fileName: \"PivotGrid\",\n        proxyUrl: void 0,\n        ignoreExcelErrors: true\n      },\n      showRowTotals: true,\n      showRowGrandTotals: true,\n      showColumnTotals: true,\n      showColumnGrandTotals: true,\n      hideEmptySummaryCells: true,\n      showTotalsPrior: \"none\",\n      rowHeaderLayout: \"standard\",\n      loadPanel: {\n        enabled: true,\n        text: localizationMessage.format(\"Loading\"),\n        width: 200,\n        height: 70,\n        showIndicator: true,\n        indicatorSrc: \"\",\n        showPane: true\n      },\n      texts: {\n        grandTotal: localizationMessage.format(\"dxPivotGrid-grandTotal\"),\n        total: localizationMessage.getFormatter(\"dxPivotGrid-total\"),\n        noData: localizationMessage.format(\"dxDataGrid-noDataText\"),\n        showFieldChooser: localizationMessage.format(\"dxPivotGrid-showFieldChooser\"),\n        expandAll: localizationMessage.format(\"dxPivotGrid-expandAll\"),\n        collapseAll: localizationMessage.format(\"dxPivotGrid-collapseAll\"),\n        sortColumnBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortColumnBySummary\"),\n        sortRowBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortRowBySummary\"),\n        removeAllSorting: localizationMessage.format(\"dxPivotGrid-removeAllSorting\"),\n        exportToExcel: localizationMessage.format(\"dxDataGrid-exportToExcel\"),\n        dataNotAvailable: localizationMessage.format(\"dxPivotGrid-dataNotAvailable\")\n      },\n      onCellClick: null,\n      onCellPrepared: null,\n      showBorders: false,\n      stateStoring: {\n        enabled: false,\n        storageKey: null,\n        type: \"localStorage\",\n        customLoad: null,\n        customSave: null,\n        savingTimeout: 2e3\n      },\n      onExpandValueChanging: null,\n      renderCellCountLimit: 2e4,\n      onExporting: null,\n      onExported: null,\n      onFileSaving: null,\n      headerFilter: {\n        width: 252,\n        height: 325,\n        allowSearch: false,\n        showRelevantValues: false,\n        searchTimeout: 500,\n        texts: {\n          emptyValue: localizationMessage.format(\"dxDataGrid-headerFilterEmptyValue\"),\n          ok: localizationMessage.format(\"dxDataGrid-headerFilterOK\"),\n          cancel: localizationMessage.format(\"dxDataGrid-headerFilterCancel\")\n        }\n      }\n    });\n  },\n  _updateCalculatedOptions: function (fields) {\n    var that = this;\n    each(fields, function (index, field) {\n      each(FIELD_CALCULATED_OPTIONS, function (_, optionName) {\n        var isCalculated = field._initProperties && optionName in field._initProperties && void 0 === field._initProperties[optionName];\n        var needUpdate = void 0 === field[optionName] || isCalculated;\n\n        if (needUpdate) {\n          setFieldProperty(field, optionName, that.option(optionName));\n        }\n      });\n    });\n  },\n  _getDataControllerOptions: function () {\n    var that = this;\n    return {\n      component: that,\n      dataSource: that.option(\"dataSource\"),\n      texts: that.option(\"texts\"),\n      showRowTotals: that.option(\"showRowTotals\"),\n      showRowGrandTotals: that.option(\"showRowGrandTotals\"),\n      showColumnTotals: that.option(\"showColumnTotals\"),\n      showTotalsPrior: that.option(\"showTotalsPrior\"),\n      showColumnGrandTotals: that.option(\"showColumnGrandTotals\"),\n      dataFieldArea: that.option(\"dataFieldArea\"),\n      rowHeaderLayout: that.option(\"rowHeaderLayout\"),\n      hideEmptySummaryCells: that.option(\"hideEmptySummaryCells\"),\n      onFieldsPrepared: function (fields) {\n        that._updateCalculatedOptions(fields);\n      }\n    };\n  },\n  _initDataController: function () {\n    var that = this;\n    that._dataController && that._dataController.dispose();\n    that._dataController = new DataController(that._getDataControllerOptions());\n\n    if (hasWindow()) {\n      that._dataController.changed.add(function () {\n        that._render();\n      });\n    }\n\n    that._dataController.scrollChanged.add(function (options) {\n      that._scrollLeft = options.left;\n      that._scrollTop = options.top;\n    });\n\n    that._dataController.loadingChanged.add(function (isLoading) {\n      that._updateLoading();\n    });\n\n    that._dataController.progressChanged.add(that._updateLoading.bind(that));\n\n    that._dataController.dataSourceChanged.add(function () {\n      that._trigger(\"onChanged\");\n    });\n\n    var expandValueChanging = that.option(\"onExpandValueChanging\");\n\n    if (expandValueChanging) {\n      that._dataController.expandValueChanging.add(function (e) {\n        expandValueChanging(e);\n      });\n    }\n  },\n  _init: function () {\n    this.callBase();\n\n    this._initDataController();\n\n    this._scrollLeft = this._scrollTop = null;\n\n    this._initActions();\n  },\n  _initActions: function () {\n    this._actions = {\n      onChanged: this._createActionByOption(\"onChanged\"),\n      onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\"),\n      onCellClick: this._createActionByOption(\"onCellClick\"),\n      onExporting: this._createActionByOption(\"onExporting\"),\n      onExported: this._createActionByOption(\"onExported\"),\n      onFileSaving: this._createActionByOption(\"onFileSaving\"),\n      onCellPrepared: this._createActionByOption(\"onCellPrepared\")\n    };\n  },\n  _trigger: function (eventName, eventArg) {\n    this._actions[eventName](eventArg);\n  },\n  _optionChanged: function (args) {\n    if (FIELD_CALCULATED_OPTIONS.indexOf(args.name) >= 0) {\n      var fields = this.getDataSource().fields();\n\n      this._updateCalculatedOptions(fields);\n    }\n\n    switch (args.name) {\n      case \"dataSource\":\n      case \"allowSorting\":\n      case \"allowFiltering\":\n      case \"allowExpandAll\":\n      case \"allowSortingBySummary\":\n      case \"scrolling\":\n      case \"stateStoring\":\n        this._initDataController();\n\n        this._fieldChooserPopup.hide();\n\n        this._renderFieldChooser();\n\n        this._invalidate();\n\n        break;\n\n      case \"texts\":\n      case \"showTotalsPrior\":\n      case \"showRowTotals\":\n      case \"showRowGrandTotals\":\n      case \"showColumnTotals\":\n      case \"showColumnGrandTotals\":\n      case \"hideEmptySummaryCells\":\n      case \"dataFieldArea\":\n        this._dataController.updateViewOptions(this._getDataControllerOptions());\n\n        break;\n\n      case \"useNativeScrolling\":\n      case \"encodeHtml\":\n      case \"renderCellCountLimit\":\n        break;\n\n      case \"rtlEnabled\":\n        this.callBase(args);\n\n        this._renderFieldChooser();\n\n        this._renderContextMenu();\n\n        hasWindow() && this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\n\n        this._invalidate();\n\n        break;\n\n      case \"export\":\n        this._renderDescriptionArea();\n\n        break;\n\n      case \"onExpandValueChanging\":\n        break;\n\n      case \"onCellClick\":\n      case \"onContextMenuPreparing\":\n      case \"onExporting\":\n      case \"onExported\":\n      case \"onFileSaving\":\n      case \"onCellPrepared\":\n        this._actions[args.name] = this._createActionByOption(args.name);\n        break;\n\n      case \"fieldChooser\":\n        this._renderFieldChooser();\n\n        this._renderDescriptionArea();\n\n        break;\n\n      case \"loadPanel\":\n        if (hasWindow()) {\n          if (\"loadPanel.enabled\" === args.fullName) {\n            clearTimeout(this._hideLoadingTimeoutID);\n\n            this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\n          } else {\n            this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\n\n            this._invalidate();\n          }\n        }\n\n        break;\n\n      case \"fieldPanel\":\n        this._renderDescriptionArea();\n\n        this._invalidate();\n\n        break;\n\n      case \"headerFilter\":\n        this._renderFieldChooser();\n\n        this._invalidate();\n\n        break;\n\n      case \"showBorders\":\n        this._tableElement().toggleClass(BORDERS_CLASS, !!args.value);\n\n        this.updateDimensions();\n        break;\n\n      case \"wordWrapEnabled\":\n        this._tableElement().toggleClass(\"dx-word-wrap\", !!args.value);\n\n        this.updateDimensions();\n        break;\n\n      case \"rowHeaderLayout\":\n        this._tableElement().find(\".\" + ROW_AREA_CELL_CLASS).toggleClass(\"dx-area-tree-view\", \"tree\" === args.value);\n\n        this._dataController.updateViewOptions(this._getDataControllerOptions());\n\n        break;\n\n      case \"height\":\n      case \"width\":\n        this._hasHeight = null;\n        this.callBase(args);\n        this.resize();\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _updateScrollPosition: function (columnsArea, rowsArea, dataArea) {\n    var scrollTop;\n    var scrollLeft;\n    var scrolled = this._scrollTop || this._scrollLeft;\n\n    if (this._scrollUpdating) {\n      return;\n    }\n\n    this._scrollUpdating = true;\n\n    if (rowsArea && !rowsArea.hasScroll() && this._hasHeight) {\n      this._scrollTop = null;\n    }\n\n    if (columnsArea && !columnsArea.hasScroll()) {\n      this._scrollLeft = null;\n    }\n\n    if (null !== this._scrollTop || null !== this._scrollLeft || scrolled || this.option(\"rtlEnabled\")) {\n      scrollTop = this._scrollTop || 0;\n      scrollLeft = this._scrollLeft || 0;\n      dataArea.scrollTo({\n        left: scrollLeft,\n        top: scrollTop\n      });\n      columnsArea.scrollTo({\n        left: scrollLeft\n      });\n      rowsArea.scrollTo({\n        top: scrollTop\n      });\n\n      this._dataController.updateWindowScrollPosition(this._scrollTop);\n    }\n\n    this._scrollUpdating = false;\n  },\n  _subscribeToEvents: function (columnsArea, rowsArea, dataArea) {\n    var that = this;\n    each([columnsArea, rowsArea, dataArea], function (_, area) {\n      subscribeToScrollEvent(area, e => function (e, area) {\n        var scrollOffset = e.scrollOffset;\n\n        var scrollable = area._getScrollable();\n\n        var leftOffset = \"vertical\" !== scrollable.option(\"direction\") ? scrollOffset.left : that._scrollLeft;\n        var topOffset = \"horizontal\" !== scrollable.option(\"direction\") && that._hasHeight ? scrollOffset.top : that._scrollTop;\n\n        if ((that._scrollLeft || 0) !== (leftOffset || 0) || (that._scrollTop || 0) !== (topOffset || 0)) {\n          that._scrollLeft = leftOffset;\n          that._scrollTop = topOffset;\n\n          that._updateScrollPosition(columnsArea, rowsArea, dataArea);\n\n          if (\"virtual\" === that.option(\"scrolling.mode\")) {\n            that._dataController.setViewportPosition(that._scrollLeft, that._scrollTop);\n          }\n        }\n      }(e, area));\n    });\n    !that._hasHeight && that._dataController.subscribeToWindowScrollEvents(dataArea.groupElement());\n  },\n  _clean: noop,\n  _needDelayResizing: function (cellsInfo) {\n    var cellsCount = cellsInfo.length * (cellsInfo.length ? cellsInfo[0].length : 0);\n    return cellsCount > this.option(\"renderCellCountLimit\");\n  },\n  _renderFieldChooser: function () {\n    var _that$option;\n\n    var that = this;\n    var container = that._pivotGridContainer;\n    var fieldChooserOptions = that.option(\"fieldChooser\") || {};\n    var toolbarItems = \"onDemand\" === fieldChooserOptions.applyChangesMode ? [{\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: localizationMessage.format(\"OK\"),\n        onClick: function (e) {\n          that._fieldChooserPopup.$content().dxPivotGridFieldChooser(\"applyChanges\");\n\n          that._fieldChooserPopup.hide();\n        }\n      }\n    }, {\n      toolbar: \"bottom\",\n      location: \"after\",\n      widget: \"dxButton\",\n      options: {\n        text: localizationMessage.format(\"Cancel\"),\n        onClick: function (e) {\n          that._fieldChooserPopup.hide();\n        }\n      }\n    }] : [];\n    var fieldChooserComponentOptions = {\n      layout: fieldChooserOptions.layout,\n      texts: fieldChooserOptions.texts || {},\n      dataSource: that.getDataSource(),\n      allowSearch: fieldChooserOptions.allowSearch,\n      searchTimeout: fieldChooserOptions.searchTimeout,\n      width: void 0,\n      height: void 0,\n      headerFilter: that.option(\"headerFilter\"),\n      encodeHtml: null !== (_that$option = that.option(\"fieldChooser.encodeHtml\")) && void 0 !== _that$option ? _that$option : that.option(\"encodeHtml\"),\n      applyChangesMode: fieldChooserOptions.applyChangesMode,\n      onContextMenuPreparing: function (e) {\n        that._trigger(\"onContextMenuPreparing\", e);\n      }\n    };\n    var popupOptions = {\n      shading: false,\n      title: fieldChooserOptions.title,\n      width: fieldChooserOptions.width,\n      height: fieldChooserOptions.height,\n      showCloseButton: true,\n      resizeEnabled: true,\n      minWidth: fieldChooserOptions.minWidth,\n      minHeight: fieldChooserOptions.minHeight,\n      toolbarItems: toolbarItems,\n      onResize: function (e) {\n        e.component.$content().dxPivotGridFieldChooser(\"updateDimensions\");\n      },\n      onShown: function (e) {\n        that._createComponent(e.component.content(), PivotGridFieldChooser, fieldChooserComponentOptions);\n      },\n      onHidden: function (e) {\n        var fieldChooser = e.component.$content().dxPivotGridFieldChooser(\"instance\");\n        fieldChooser.resetTreeView();\n        fieldChooser.cancelChanges();\n      }\n    };\n\n    if (that._fieldChooserPopup) {\n      that._fieldChooserPopup.option(popupOptions);\n\n      that._fieldChooserPopup.$content().dxPivotGridFieldChooser(fieldChooserComponentOptions);\n    } else {\n      that._fieldChooserPopup = that._createComponent($(DIV).addClass(FIELD_CHOOSER_POPUP_CLASS).appendTo(container), Popup, popupOptions);\n    }\n  },\n  _renderContextMenu: function () {\n    var that = this;\n    var $container = that._pivotGridContainer;\n\n    if (that._contextMenu) {\n      that._contextMenu.$element().remove();\n    }\n\n    that._contextMenu = that._createComponent($(DIV).appendTo($container), ContextMenu, {\n      onPositioning: function (actionArgs) {\n        var event = actionArgs.event;\n        actionArgs.cancel = true;\n\n        if (!event) {\n          return;\n        }\n\n        var targetElement = event.target.cellIndex >= 0 ? event.target : $(event.target).closest(\"td\").get(0);\n\n        if (!targetElement) {\n          return;\n        }\n\n        var args = that._createEventArgs(targetElement, event);\n\n        var items = that._getContextMenuItems(args);\n\n        if (items) {\n          actionArgs.component.option(\"items\", items);\n          actionArgs.cancel = false;\n          return;\n        }\n      },\n      onItemClick: function (params) {\n        params.itemData.onItemClick && params.itemData.onItemClick(params);\n      },\n      cssClass: PIVOTGRID_CLASS,\n      target: that.$element()\n    });\n  },\n  _getContextMenuItems: function (e) {\n    var that = this;\n    var items = [];\n    var texts = that.option(\"texts\");\n\n    if (\"row\" === e.area || \"column\" === e.area) {\n      var areaFields = e[e.area + \"Fields\"];\n      var oppositeAreaFields = e[\"column\" === e.area ? \"rowFields\" : \"columnFields\"];\n      var field = e.cell.path && areaFields[e.cell.path.length - 1];\n      var dataSource = that.getDataSource();\n\n      if (field && field.allowExpandAll && e.cell.path.length < e[e.area + \"Fields\"].length && !dataSource.paginate()) {\n        items.push({\n          beginGroup: true,\n          icon: \"none\",\n          text: texts.expandAll,\n          onItemClick: function () {\n            dataSource.expandAll(field.index);\n          }\n        });\n        items.push({\n          text: texts.collapseAll,\n          icon: \"none\",\n          onItemClick: function () {\n            dataSource.collapseAll(field.index);\n          }\n        });\n      }\n\n      if (e.cell.isLast && !dataSource.paginate()) {\n        var sortingBySummaryItemCount = 0;\n        each(oppositeAreaFields, function (index, field) {\n          if (!field.allowSortingBySummary) {\n            return;\n          }\n\n          each(e.dataFields, function (dataIndex, dataField) {\n            if (isDefined(e.cell.dataIndex) && e.cell.dataIndex !== dataIndex) {\n              return;\n            }\n\n            var showDataFieldCaption = !isDefined(e.cell.dataIndex) && e.dataFields.length > 1;\n            var textFormat = \"column\" === e.area ? texts.sortColumnBySummary : texts.sortRowBySummary;\n            var checked = findField(e.dataFields, field.sortBySummaryField) === dataIndex && (e.cell.path || []).join(\"/\") === (field.sortBySummaryPath || []).join(\"/\");\n            var text = formatString(textFormat, showDataFieldCaption ? field.caption + \" - \" + dataField.caption : field.caption);\n            items.push({\n              beginGroup: 0 === sortingBySummaryItemCount,\n              icon: checked ? \"desc\" === field.sortOrder ? \"sortdowntext\" : \"sortuptext\" : \"none\",\n              text: text,\n              onItemClick: function () {\n                dataSource.field(field.index, {\n                  sortBySummaryField: dataField.name || dataField.caption || dataField.dataField,\n                  sortBySummaryPath: e.cell.path,\n                  sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\n                });\n                dataSource.load();\n              }\n            });\n            sortingBySummaryItemCount++;\n          });\n        });\n        each(oppositeAreaFields, function (index, field) {\n          if (!field.allowSortingBySummary || !isDefined(field.sortBySummaryField)) {\n            return;\n          }\n\n          items.push({\n            beginGroup: 0 === sortingBySummaryItemCount,\n            icon: \"none\",\n            text: texts.removeAllSorting,\n            onItemClick: function () {\n              each(oppositeAreaFields, function (index, field) {\n                dataSource.field(field.index, {\n                  sortBySummaryField: void 0,\n                  sortBySummaryPath: void 0,\n                  sortOrder: void 0\n                });\n              });\n              dataSource.load();\n            }\n          });\n          return false;\n        });\n      }\n    }\n\n    if (that.option(\"fieldChooser.enabled\")) {\n      items.push({\n        beginGroup: true,\n        icon: \"columnchooser\",\n        text: texts.showFieldChooser,\n        onItemClick: function () {\n          that._fieldChooserPopup.show();\n        }\n      });\n    }\n\n    if (that.option(\"export.enabled\")) {\n      items.push({\n        beginGroup: true,\n        icon: \"xlsxfile\",\n        text: texts.exportToExcel,\n        onItemClick: function () {\n          that.exportToExcel();\n        }\n      });\n    }\n\n    e.items = items;\n\n    that._trigger(\"onContextMenuPreparing\", e);\n\n    items = e.items;\n\n    if (items && items.length) {\n      return items;\n    }\n  },\n  _createEventArgs: function (targetElement, dxEvent) {\n    var dataSource = this.getDataSource();\n    var args = {\n      rowFields: dataSource.getAreaFields(\"row\"),\n      columnFields: dataSource.getAreaFields(\"column\"),\n      dataFields: dataSource.getAreaFields(\"data\"),\n      event: dxEvent\n    };\n\n    if (clickedOnFieldsArea($(targetElement))) {\n      return extend(this._createFieldArgs(targetElement), args);\n    } else {\n      return extend(this._createCellArgs(targetElement), args);\n    }\n  },\n  _createFieldArgs: function (targetElement) {\n    var field = $(targetElement).children().data(\"field\");\n    var args = {\n      field: field\n    };\n    return isDefined(field) ? args : {};\n  },\n  _createCellArgs: function (cellElement) {\n    var $cellElement = $(cellElement);\n    var columnIndex = cellElement.cellIndex;\n    var rowIndex = cellElement.parentElement.rowIndex;\n    var $table = $cellElement.closest(\"table\");\n    var data = $table.data(\"data\");\n    var cell = data && data[rowIndex] && data[rowIndex][columnIndex];\n    var args = {\n      area: $table.data(\"area\"),\n      rowIndex: rowIndex,\n      columnIndex: columnIndex,\n      cellElement: getPublicElement($cellElement),\n      cell: cell\n    };\n    return args;\n  },\n  _handleCellClick: function (e) {\n    var that = this;\n\n    var args = that._createEventArgs(e.currentTarget, e);\n\n    var cell = args.cell;\n\n    if (!cell || !args.area && (args.rowIndex || args.columnIndex)) {\n      return;\n    }\n\n    that._trigger(\"onCellClick\", args);\n\n    cell && !args.cancel && isDefined(cell.expanded) && setTimeout(function () {\n      that._dataController[cell.expanded ? \"collapseHeaderItem\" : \"expandHeaderItem\"](args.area, cell.path);\n    });\n  },\n  _getNoDataText: function () {\n    return this.option(\"texts.noData\");\n  },\n  _renderNoDataText: gridCoreUtils.renderNoDataText,\n  _renderLoadPanel: gridCoreUtils.renderLoadPanel,\n  _updateLoading: function (progress) {\n    var that = this;\n\n    var isLoading = that._dataController.isLoading();\n\n    if (!that._loadPanel) {\n      return;\n    }\n\n    var loadPanelVisible = that._loadPanel.option(\"visible\");\n\n    if (!loadPanelVisible) {\n      that._startLoadingTime = new Date();\n    }\n\n    if (isLoading) {\n      if (progress) {\n        if (new Date() - that._startLoadingTime >= 1e3) {\n          that._loadPanel.option(\"message\", Math.floor(100 * progress) + \"%\");\n        }\n      } else {\n        that._loadPanel.option(\"message\", that.option(\"loadPanel.text\"));\n      }\n    }\n\n    clearTimeout(that._hideLoadingTimeoutID);\n\n    if (loadPanelVisible && !isLoading) {\n      that._hideLoadingTimeoutID = setTimeout(function () {\n        that._loadPanel.option(\"visible\", false);\n\n        that.$element().removeClass(OVERFLOW_HIDDEN_CLASS);\n      });\n    } else {\n      var visibilityOptions = {\n        visible: isLoading\n      };\n\n      if (isLoading) {\n        visibilityOptions.position = gridCoreUtils.calculateLoadPanelPosition(that._dataArea.groupElement());\n      }\n\n      that._loadPanel.option(visibilityOptions);\n\n      that.$element().toggleClass(OVERFLOW_HIDDEN_CLASS, !isLoading);\n    }\n  },\n  _renderDescriptionArea: function () {\n    var $element = this.$element();\n    var $descriptionCell = $element.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\n    var $toolbarContainer = $(DIV).addClass(\"dx-pivotgrid-toolbar\");\n    var fieldPanel = this.option(\"fieldPanel\");\n    var $filterHeader = $element.find(\".dx-filter-header\");\n    var $columnHeader = $element.find(\".dx-column-header\");\n    var $targetContainer;\n\n    if (fieldPanel.visible && fieldPanel.showFilterFields) {\n      $targetContainer = $filterHeader;\n    } else if (fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)) {\n      $targetContainer = $columnHeader;\n    } else {\n      $targetContainer = $descriptionCell;\n    }\n\n    $columnHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)));\n    $filterHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && fieldPanel.showFilterFields));\n    $descriptionCell.toggleClass(\"dx-pivotgrid-background\", fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields || fieldPanel.showRowFields));\n    this.$element().find(\".dx-pivotgrid-toolbar\").remove();\n    $toolbarContainer.prependTo($targetContainer);\n\n    if (this.option(\"fieldChooser.enabled\")) {\n      var $buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-field-chooser-button\");\n      var buttonOptions = {\n        icon: \"columnchooser\",\n        hint: this.option(\"texts.showFieldChooser\"),\n        onClick: () => {\n          this.getFieldChooserPopup().show();\n        }\n      };\n\n      this._createComponent($buttonElement, \"dxButton\", buttonOptions);\n    }\n\n    if (this.option(\"export.enabled\")) {\n      var _$buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-export-button\");\n\n      var _buttonOptions = {\n        icon: \"xlsxfile\",\n        hint: this.option(\"texts.exportToExcel\"),\n        onClick: () => {\n          this.exportToExcel();\n        }\n      };\n\n      this._createComponent(_$buttonElement, \"dxButton\", _buttonOptions);\n    }\n  },\n  _detectHasContainerHeight: function () {\n    var element = this.$element();\n\n    if (isDefined(this._hasHeight)) {\n      var height = this.option(\"height\") || this.$element().get(0).style.height;\n\n      if (height && this._hasHeight ^ \"auto\" !== height) {\n        this._hasHeight = null;\n      }\n    }\n\n    if (isDefined(this._hasHeight) || element.is(\":hidden\")) {\n      return;\n    }\n\n    this._pivotGridContainer.addClass(\"dx-hidden\");\n\n    var testElement = $(DIV);\n    setHeight(testElement, TEST_HEIGHT);\n    element.append(testElement);\n    this._hasHeight = getHeight(element) !== TEST_HEIGHT;\n\n    this._pivotGridContainer.removeClass(\"dx-hidden\");\n\n    testElement.remove();\n  },\n  _renderHeaders: function (rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer) {\n    var dataSource = this.getDataSource();\n    this._rowFields = this._rowFields || new FieldsArea(this, \"row\");\n\n    this._rowFields.render(rowHeaderContainer, dataSource.getAreaFields(\"row\"));\n\n    this._columnFields = this._columnFields || new FieldsArea(this, \"column\");\n\n    this._columnFields.render(columnHeaderContainer, dataSource.getAreaFields(\"column\"));\n\n    this._filterFields = this._filterFields || new FieldsArea(this, \"filter\");\n\n    this._filterFields.render(filterHeaderContainer, dataSource.getAreaFields(\"filter\"));\n\n    this._dataFields = this._dataFields || new FieldsArea(this, \"data\");\n\n    this._dataFields.render(dataHeaderContainer, dataSource.getAreaFields(\"data\"));\n\n    this.$element().dxPivotGridFieldChooserBase(\"instance\").renderSortable();\n  },\n  _createTableElement: function () {\n    var $table = $(\"<table>\").css({\n      width: \"100%\"\n    }).toggleClass(BORDERS_CLASS, !!this.option(\"showBorders\")).toggleClass(\"dx-word-wrap\", !!this.option(\"wordWrapEnabled\"));\n    eventsEngine.on($table, addNamespace(clickEventName, \"dxPivotGrid\"), \"td\", this._handleCellClick.bind(this));\n    return $table;\n  },\n  _renderDataArea: function (dataAreaElement) {\n    var dataArea = this._dataArea || new DataArea(this);\n    this._dataArea = dataArea;\n    dataArea.render(dataAreaElement, this._dataController.getCellsInfo());\n    return dataArea;\n  },\n  _renderRowsArea: function (rowsAreaElement) {\n    var rowsArea = this._rowsArea || new VerticalHeadersArea(this);\n    this._rowsArea = rowsArea;\n    rowsArea.render(rowsAreaElement, this._dataController.getRowsInfo());\n    return rowsArea;\n  },\n  _renderColumnsArea: function (columnsAreaElement) {\n    var columnsArea = this._columnsArea || new HorizontalHeadersArea(this);\n    this._columnsArea = columnsArea;\n    columnsArea.render(columnsAreaElement, this._dataController.getColumnsInfo());\n    return columnsArea;\n  },\n  _initMarkup: function () {\n    var that = this;\n    that.callBase.apply(this, arguments);\n    that.$element().addClass(PIVOTGRID_CLASS);\n  },\n  _renderContentImpl: function () {\n    var columnsAreaElement;\n    var rowsAreaElement;\n    var dataAreaElement;\n    var tableElement;\n    var isFirstDrawing = !this._pivotGridContainer;\n    var rowHeaderContainer;\n    var columnHeaderContainer;\n    var filterHeaderContainer;\n    var dataHeaderContainer;\n    tableElement = !isFirstDrawing && this._tableElement();\n\n    if (!tableElement) {\n      this.$element().addClass(ROW_LINES_CLASS).addClass(FIELDS_CONTAINER_CLASS);\n      this._pivotGridContainer = $(DIV).addClass(\"dx-pivotgrid-container\");\n\n      this._renderFieldChooser();\n\n      this._renderContextMenu();\n\n      columnsAreaElement = $(TD).addClass(COLUMN_AREA_CELL_CLASS);\n      rowsAreaElement = $(TD).addClass(ROW_AREA_CELL_CLASS);\n      dataAreaElement = $(TD).addClass(DATA_AREA_CELL_CLASS);\n      tableElement = this._createTableElement();\n      dataHeaderContainer = $(TD).addClass(\"dx-data-header\");\n      filterHeaderContainer = $(\"<td>\").attr(\"colspan\", \"2\").addClass(\"dx-filter-header\");\n      columnHeaderContainer = $(TD).addClass(\"dx-column-header\");\n      rowHeaderContainer = $(TD).addClass(DESCRIPTION_AREA_CELL_CLASS);\n      $(TR).append(filterHeaderContainer).appendTo(tableElement);\n      $(TR).append(dataHeaderContainer).append(columnHeaderContainer).appendTo(tableElement);\n      $(TR).append(rowHeaderContainer).append(columnsAreaElement).appendTo(tableElement);\n      $(TR).addClass(BOTTOM_ROW_CLASS).append(rowsAreaElement).append(dataAreaElement).appendTo(tableElement);\n\n      this._pivotGridContainer.append(tableElement);\n\n      this.$element().append(this._pivotGridContainer);\n\n      if (\"tree\" === this.option(\"rowHeaderLayout\")) {\n        rowsAreaElement.addClass(\"dx-area-tree-view\");\n      }\n    }\n\n    this.$element().addClass(OVERFLOW_HIDDEN_CLASS);\n\n    this._createComponent(this.$element(), PivotGridFieldChooserBase, {\n      dataSource: this.getDataSource(),\n      encodeHtml: this.option(\"encodeHtml\"),\n      allowFieldDragging: this.option(\"fieldPanel.allowFieldDragging\"),\n      headerFilter: this.option(\"headerFilter\"),\n      visible: this.option(\"visible\")\n    });\n\n    var dataArea = this._renderDataArea(dataAreaElement);\n\n    var rowsArea = this._renderRowsArea(rowsAreaElement);\n\n    var columnsArea = this._renderColumnsArea(columnsAreaElement);\n\n    dataArea.tableElement().prepend(columnsArea.headElement());\n\n    if (isFirstDrawing) {\n      this._renderLoadPanel(dataArea.groupElement().parent(), this.$element());\n\n      this._renderDescriptionArea();\n\n      rowsArea.renderScrollable();\n      columnsArea.renderScrollable();\n      dataArea.renderScrollable();\n    }\n\n    [dataArea, rowsArea, columnsArea].forEach(function (area) {\n      unsubscribeScrollEvents(area);\n    });\n\n    this._renderHeaders(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer);\n\n    this._update(isFirstDrawing);\n  },\n  _update: function (isFirstDrawing) {\n    var that = this;\n\n    var updateHandler = function () {\n      that.updateDimensions();\n    };\n\n    if (that._needDelayResizing(that._dataArea.getData()) && isFirstDrawing) {\n      setTimeout(updateHandler);\n    } else {\n      updateHandler();\n    }\n  },\n  _fireContentReadyAction: function () {\n    if (!this._dataController.isLoading()) {\n      this.callBase();\n    }\n  },\n  getScrollPath: function (area) {\n    if (\"column\" === area) {\n      return this._columnsArea.getScrollPath(this._scrollLeft);\n    } else {\n      return this._rowsArea.getScrollPath(this._scrollTop);\n    }\n  },\n  getDataSource: function () {\n    return this._dataController.getDataSource();\n  },\n  getFieldChooserPopup: function () {\n    return this._fieldChooserPopup;\n  },\n  hasScroll: function (area) {\n    return \"column\" === area ? this._columnsArea.hasScroll() : this._rowsArea.hasScroll();\n  },\n  _dimensionChanged: function () {\n    this.updateDimensions();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this.updateDimensions();\n    }\n  },\n  _dispose: function () {\n    var that = this;\n    clearTimeout(that._hideLoadingTimeoutID);\n    that.callBase.apply(that, arguments);\n\n    if (that._dataController) {\n      that._dataController.dispose();\n    }\n  },\n  _tableElement: function () {\n    return this.$element().find(\"table\").first();\n  },\n  addWidgetPrefix: function (className) {\n    return \"dx-pivotgrid-\" + className;\n  },\n  resize: function () {\n    this.updateDimensions();\n  },\n  isReady: function () {\n    return this.callBase() && !this._dataController.isLoading();\n  },\n  updateDimensions: function () {\n    var that = this;\n    var groupWidth;\n\n    var tableElement = that._tableElement();\n\n    var bordersWidth;\n    var totalWidth = 0;\n    var totalHeight = 0;\n    var rowsAreaWidth = 0;\n    var hasRowsScroll;\n    var hasColumnsScroll;\n    var dataAreaCell = tableElement.find(\".\" + DATA_AREA_CELL_CLASS);\n    var rowAreaCell = tableElement.find(\".\" + ROW_AREA_CELL_CLASS);\n    var columnAreaCell = tableElement.find(\".\" + COLUMN_AREA_CELL_CLASS);\n    var descriptionCell = tableElement.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\n    var filterHeaderCell = tableElement.find(\".dx-filter-header\");\n    var columnHeaderCell = tableElement.find(\".dx-column-header\");\n    var rowFieldsHeader = that._rowFields;\n    var d = new Deferred();\n\n    if (!hasWindow()) {\n      return;\n    }\n\n    var needSynchronizeFieldPanel = rowFieldsHeader.isVisible() && \"tree\" !== that.option(\"rowHeaderLayout\");\n\n    that._detectHasContainerHeight();\n\n    if (!that._dataArea.headElement().length) {\n      that._dataArea.tableElement().prepend(that._columnsArea.headElement());\n    }\n\n    if (needSynchronizeFieldPanel) {\n      that._rowsArea.updateColspans(rowFieldsHeader.getColumnsCount());\n\n      that._rowsArea.tableElement().prepend(rowFieldsHeader.headElement());\n    }\n\n    tableElement.addClass(INCOMPRESSIBLE_FIELDS_CLASS);\n\n    that._dataArea.reset();\n\n    that._rowsArea.reset();\n\n    that._columnsArea.reset();\n\n    rowFieldsHeader.reset();\n\n    var calculateHasScroll = (areaSize, totalSize) => totalSize - areaSize >= 1;\n\n    var calculateGroupHeight = (dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth) => hasRowsScroll ? dataAreaHeight : totalHeight + (hasColumnsScroll ? scrollBarWidth : 0);\n\n    deferUpdate(function () {\n      var rowHeights = that._rowsArea.getRowsHeight();\n\n      var descriptionCellHeight = getOuterHeight(descriptionCell[0], true) + (needSynchronizeFieldPanel ? rowHeights[0] : 0);\n      var filterAreaHeight = 0;\n      var dataAreaHeight = 0;\n\n      if (that._hasHeight) {\n        filterAreaHeight = getHeight(filterHeaderCell);\n        var $dataHeader = tableElement.find(\".dx-data-header\");\n        var dataHeaderHeight = getHeight($dataHeader);\n        bordersWidth = getCommonBorderWidth([columnAreaCell, dataAreaCell, tableElement, columnHeaderCell, filterHeaderCell], \"height\");\n        dataAreaHeight = getHeight(that.$element()) - filterAreaHeight - dataHeaderHeight - (Math.max(getHeight(that._dataArea.headElement()), getHeight(columnAreaCell), descriptionCellHeight) + bordersWidth);\n      }\n\n      var scrollBarWidth = that._dataArea.getScrollbarWidth();\n\n      var hasVerticalScrollbar = calculateHasScroll(dataAreaHeight, getHeight(that._dataArea.tableElement()));\n\n      that._dataArea.tableElement().css({\n        width: that._hasHeight && hasVerticalScrollbar && scrollBarWidth ? \"calc(100% - \".concat(scrollBarWidth, \"px)\") : \"100%\"\n      });\n\n      var resultWidths = that._dataArea.getColumnsWidth();\n\n      var rowsAreaHeights = needSynchronizeFieldPanel ? rowHeights.slice(1) : rowHeights;\n\n      var dataAreaHeights = that._dataArea.getRowsHeight();\n\n      var columnsAreaRowCount = that._dataController.getColumnsInfo().length;\n\n      var resultHeights = mergeArraysByMaxValue(rowsAreaHeights, dataAreaHeights.slice(columnsAreaRowCount));\n      var columnsAreaRowHeights = dataAreaHeights.slice(0, columnsAreaRowCount);\n      var columnsAreaHeight = getArraySum(columnsAreaRowHeights);\n\n      var rowsAreaColumnWidths = that._rowsArea.getColumnsWidth();\n\n      totalWidth = getWidth(that._dataArea.tableElement());\n      totalHeight = getArraySum(resultHeights);\n\n      if (!totalWidth || !totalHeight) {\n        d.resolve();\n        return;\n      }\n\n      rowsAreaWidth = getArraySum(rowsAreaColumnWidths);\n      var elementWidth = getWidth(that.$element());\n      bordersWidth = getCommonBorderWidth([rowAreaCell, dataAreaCell, tableElement], \"width\");\n      groupWidth = elementWidth - rowsAreaWidth - bordersWidth;\n      groupWidth = groupWidth > 0 ? groupWidth : totalWidth;\n      var diff = totalWidth - groupWidth;\n      var needAdjustWidthOnZoom = diff >= 0 && diff <= 2;\n\n      if (needAdjustWidthOnZoom) {\n        adjustSizeArray(resultWidths, diff);\n        totalWidth = groupWidth;\n      }\n\n      hasRowsScroll = that._hasHeight && calculateHasScroll(dataAreaHeight, totalHeight);\n      hasColumnsScroll = calculateHasScroll(groupWidth, totalWidth);\n      var groupHeight = calculateGroupHeight(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\n      deferRender(function () {\n        that._columnsArea.tableElement().append(that._dataArea.headElement());\n\n        rowFieldsHeader.tableElement().append(that._rowsArea.headElement());\n\n        if (descriptionCellHeight > columnsAreaHeight) {\n          adjustSizeArray(columnsAreaRowHeights, columnsAreaHeight - descriptionCellHeight);\n\n          that._columnsArea.setRowsHeight(columnsAreaRowHeights);\n        }\n\n        tableElement.removeClass(INCOMPRESSIBLE_FIELDS_CLASS);\n        columnHeaderCell.children().css(\"maxWidth\", groupWidth);\n\n        that._columnsArea.setGroupWidth(groupWidth);\n\n        that._columnsArea.processScrollBarSpacing(hasRowsScroll ? scrollBarWidth : 0);\n\n        that._columnsArea.setColumnsWidth(resultWidths);\n\n        that._rowsArea.setGroupHeight(that._hasHeight ? groupHeight : \"auto\");\n\n        that._rowsArea.processScrollBarSpacing(hasColumnsScroll ? scrollBarWidth : 0);\n\n        that._rowsArea.setColumnsWidth(rowsAreaColumnWidths);\n\n        that._rowsArea.setRowsHeight(resultHeights);\n\n        that._dataArea.setColumnsWidth(resultWidths);\n\n        that._dataArea.setRowsHeight(resultHeights);\n\n        that._dataArea.setGroupWidth(groupWidth);\n\n        that._dataArea.setGroupHeight(that._hasHeight ? groupHeight : \"auto\");\n\n        needSynchronizeFieldPanel && rowFieldsHeader.setColumnsWidth(rowsAreaColumnWidths);\n        dataAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\n        rowAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\n\n        if (!that._hasHeight && elementWidth !== getWidth(that.$element())) {\n          var _diff = elementWidth - getWidth(that.$element());\n\n          if (!hasColumnsScroll) {\n            adjustSizeArray(resultWidths, _diff);\n\n            that._columnsArea.setColumnsWidth(resultWidths);\n\n            that._dataArea.setColumnsWidth(resultWidths);\n          }\n\n          that._dataArea.setGroupWidth(groupWidth - _diff);\n\n          that._columnsArea.setGroupWidth(groupWidth - _diff);\n        }\n\n        if (that._hasHeight && that._filterFields.isVisible() && getHeight(filterHeaderCell) !== filterAreaHeight) {\n          var _diff2 = getHeight(filterHeaderCell) - filterAreaHeight;\n\n          if (_diff2 > 0) {\n            hasRowsScroll = calculateHasScroll(dataAreaHeight - _diff2, totalHeight);\n\n            var _groupHeight = calculateGroupHeight(dataAreaHeight - _diff2, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\n\n            that._dataArea.setGroupHeight(_groupHeight);\n\n            that._rowsArea.setGroupHeight(_groupHeight);\n          }\n        }\n\n        var scrollingOptions = that.option(\"scrolling\");\n\n        if (\"virtual\" === scrollingOptions.mode) {\n          that._setVirtualContentParams(scrollingOptions, resultWidths, resultHeights, groupWidth, groupHeight, that._hasHeight, rowsAreaWidth);\n        }\n\n        var updateScrollableResults = [];\n\n        that._dataArea.updateScrollableOptions({\n          direction: that._dataArea.getScrollableDirection(hasColumnsScroll, hasRowsScroll),\n          rtlEnabled: that.option(\"rtlEnabled\")\n        });\n\n        that._columnsArea.updateScrollableOptions({\n          rtlEnabled: that.option(\"rtlEnabled\")\n        });\n\n        each([that._columnsArea, that._rowsArea, that._dataArea], function (_, area) {\n          updateScrollableResults.push(area && area.updateScrollable());\n        });\n\n        that._updateLoading();\n\n        that._renderNoDataText(dataAreaCell);\n\n        when.apply($, updateScrollableResults).done(function () {\n          that._updateScrollPosition(that._columnsArea, that._rowsArea, that._dataArea);\n\n          that._subscribeToEvents(that._columnsArea, that._rowsArea, that._dataArea);\n\n          d.resolve();\n        });\n      });\n    });\n    return d;\n  },\n  _setVirtualContentParams: function (scrollingOptions, resultWidths, resultHeights, groupWidth, groupHeight, hasHeight, rowsAreaWidth) {\n    var virtualContentParams = this._dataController.calculateVirtualContentParams({\n      virtualRowHeight: scrollingOptions.virtualRowHeight,\n      virtualColumnWidth: scrollingOptions.virtualColumnWidth,\n      itemWidths: resultWidths,\n      itemHeights: resultHeights,\n      rowCount: resultHeights.length,\n      columnCount: resultWidths.length,\n      viewportWidth: groupWidth,\n      viewportHeight: hasHeight ? groupHeight : getOuterHeight(window)\n    });\n\n    this._dataArea.setVirtualContentParams({\n      top: virtualContentParams.contentTop,\n      left: virtualContentParams.contentLeft,\n      width: virtualContentParams.width,\n      height: virtualContentParams.height\n    });\n\n    this._rowsArea.setVirtualContentParams({\n      top: virtualContentParams.contentTop,\n      width: rowsAreaWidth,\n      height: virtualContentParams.height\n    });\n\n    this._columnsArea.setVirtualContentParams({\n      left: virtualContentParams.contentLeft,\n      width: virtualContentParams.width,\n      height: getHeight(this._columnsArea.groupElement())\n    });\n  },\n  applyPartialDataSource: function (area, path, dataSource) {\n    this._dataController.applyPartialDataSource(area, path, dataSource);\n  }\n}).inherit(ExportController).include(chartIntegrationMixin);\nregisterComponent(\"dxPivotGrid\", PivotGrid);\nexport default PivotGrid;","map":{"version":3,"names":["$","getWindow","hasWindow","window","eventsEngine","registerComponent","getPublicElement","format","formatString","noop","deferRender","deferUpdate","each","isDefined","extend","name","clickEventName","localizationMessage","Widget","addNamespace","gridCoreUtils","setFieldProperty","findField","mergeArraysByMaxValue","DataController","DataArea","VerticalHeadersArea","HorizontalHeadersArea","setHeight","getHeight","getWidth","getOuterHeight","FieldsArea","PivotGridFieldChooser","PivotGridFieldChooserBase","ExportController","chartIntegrationMixin","Popup","ContextMenu","when","Deferred","DATA_AREA_CELL_CLASS","ROW_AREA_CELL_CLASS","COLUMN_AREA_CELL_CLASS","DESCRIPTION_AREA_CELL_CLASS","BORDERS_CLASS","PIVOTGRID_CLASS","ROW_LINES_CLASS","BOTTOM_ROW_CLASS","BOTTOM_BORDER_CLASS","FIELDS_CONTAINER_CLASS","FIELDS_CLASS","FIELD_CHOOSER_POPUP_CLASS","INCOMPRESSIBLE_FIELDS_CLASS","OVERFLOW_HIDDEN_CLASS","TR","TD","DIV","TEST_HEIGHT","FIELD_CALCULATED_OPTIONS","getArraySum","array","sum","_","value","adjustSizeArray","sizeArray","space","delta","length","i","unsubscribeScrollEvents","area","off","subscribeToScrollEvent","handler","on","getCommonBorderWidth","elements","direction","borderStyleNames","width","elem","computedStyle","getComputedStyle","get","forEach","borderStyleName","parseFloat","clickedOnFieldsArea","$targetElement","closest","find","PivotGrid","inherit","_getDefaultOptions","callBase","scrolling","timeout","renderingThreshold","minTimeout","mode","useNative","removeInvisiblePages","virtualRowHeight","virtualColumnWidth","loadTwoPagesOnStart","encodeHtml","dataSource","activeStateEnabled","fieldChooser","minWidth","minHeight","enabled","allowSearch","searchTimeout","layout","title","height","applyChangesMode","onContextMenuPreparing","allowSorting","allowSortingBySummary","allowFiltering","allowExpandAll","wordWrapEnabled","fieldPanel","showColumnFields","showFilterFields","showDataFields","showRowFields","allowFieldDragging","visible","texts","columnFieldArea","rowFieldArea","filterFieldArea","dataFieldArea","export","fileName","proxyUrl","ignoreExcelErrors","showRowTotals","showRowGrandTotals","showColumnTotals","showColumnGrandTotals","hideEmptySummaryCells","showTotalsPrior","rowHeaderLayout","loadPanel","text","showIndicator","indicatorSrc","showPane","grandTotal","total","getFormatter","noData","showFieldChooser","expandAll","collapseAll","sortColumnBySummary","sortRowBySummary","removeAllSorting","exportToExcel","dataNotAvailable","onCellClick","onCellPrepared","showBorders","stateStoring","storageKey","type","customLoad","customSave","savingTimeout","onExpandValueChanging","renderCellCountLimit","onExporting","onExported","onFileSaving","headerFilter","showRelevantValues","emptyValue","ok","cancel","_updateCalculatedOptions","fields","that","index","field","optionName","isCalculated","_initProperties","needUpdate","option","_getDataControllerOptions","component","onFieldsPrepared","_initDataController","_dataController","dispose","changed","add","_render","scrollChanged","options","_scrollLeft","left","_scrollTop","top","loadingChanged","isLoading","_updateLoading","progressChanged","bind","dataSourceChanged","_trigger","expandValueChanging","e","_init","_initActions","_actions","onChanged","_createActionByOption","eventName","eventArg","_optionChanged","args","indexOf","getDataSource","_fieldChooserPopup","hide","_renderFieldChooser","_invalidate","updateViewOptions","_renderContextMenu","_renderLoadPanel","_dataArea","groupElement","$element","_renderDescriptionArea","fullName","clearTimeout","_hideLoadingTimeoutID","_tableElement","toggleClass","updateDimensions","_hasHeight","resize","_updateScrollPosition","columnsArea","rowsArea","dataArea","scrollTop","scrollLeft","scrolled","_scrollUpdating","hasScroll","scrollTo","updateWindowScrollPosition","_subscribeToEvents","scrollOffset","scrollable","_getScrollable","leftOffset","topOffset","setViewportPosition","subscribeToWindowScrollEvents","_clean","_needDelayResizing","cellsInfo","cellsCount","_that$option","container","_pivotGridContainer","fieldChooserOptions","toolbarItems","toolbar","location","widget","onClick","$content","dxPivotGridFieldChooser","fieldChooserComponentOptions","popupOptions","shading","showCloseButton","resizeEnabled","onResize","onShown","_createComponent","content","onHidden","resetTreeView","cancelChanges","addClass","appendTo","$container","_contextMenu","remove","onPositioning","actionArgs","event","targetElement","target","cellIndex","_createEventArgs","items","_getContextMenuItems","onItemClick","params","itemData","cssClass","areaFields","oppositeAreaFields","cell","path","paginate","push","beginGroup","icon","isLast","sortingBySummaryItemCount","dataFields","dataIndex","dataField","showDataFieldCaption","textFormat","checked","sortBySummaryField","join","sortBySummaryPath","caption","sortOrder","load","show","dxEvent","rowFields","getAreaFields","columnFields","_createFieldArgs","_createCellArgs","children","data","cellElement","$cellElement","columnIndex","rowIndex","parentElement","$table","_handleCellClick","currentTarget","expanded","setTimeout","_getNoDataText","_renderNoDataText","renderNoDataText","renderLoadPanel","progress","_loadPanel","loadPanelVisible","_startLoadingTime","Date","Math","floor","removeClass","visibilityOptions","position","calculateLoadPanelPosition","$descriptionCell","$toolbarContainer","$filterHeader","$columnHeader","$targetContainer","prependTo","$buttonElement","buttonOptions","hint","getFieldChooserPopup","_$buttonElement","_buttonOptions","_detectHasContainerHeight","element","style","is","testElement","append","_renderHeaders","rowHeaderContainer","columnHeaderContainer","filterHeaderContainer","dataHeaderContainer","_rowFields","render","_columnFields","_filterFields","_dataFields","dxPivotGridFieldChooserBase","renderSortable","_createTableElement","css","_renderDataArea","dataAreaElement","getCellsInfo","_renderRowsArea","rowsAreaElement","_rowsArea","getRowsInfo","_renderColumnsArea","columnsAreaElement","_columnsArea","getColumnsInfo","_initMarkup","apply","arguments","_renderContentImpl","tableElement","isFirstDrawing","attr","prepend","headElement","parent","renderScrollable","_update","updateHandler","getData","_fireContentReadyAction","getScrollPath","_dimensionChanged","_visibilityChanged","_dispose","first","addWidgetPrefix","className","isReady","groupWidth","bordersWidth","totalWidth","totalHeight","rowsAreaWidth","hasRowsScroll","hasColumnsScroll","dataAreaCell","rowAreaCell","columnAreaCell","descriptionCell","filterHeaderCell","columnHeaderCell","rowFieldsHeader","d","needSynchronizeFieldPanel","isVisible","updateColspans","getColumnsCount","reset","calculateHasScroll","areaSize","totalSize","calculateGroupHeight","dataAreaHeight","scrollBarWidth","rowHeights","getRowsHeight","descriptionCellHeight","filterAreaHeight","$dataHeader","dataHeaderHeight","max","getScrollbarWidth","hasVerticalScrollbar","concat","resultWidths","getColumnsWidth","rowsAreaHeights","slice","dataAreaHeights","columnsAreaRowCount","resultHeights","columnsAreaRowHeights","columnsAreaHeight","rowsAreaColumnWidths","resolve","elementWidth","diff","needAdjustWidthOnZoom","groupHeight","setRowsHeight","setGroupWidth","processScrollBarSpacing","setColumnsWidth","setGroupHeight","_diff","_diff2","_groupHeight","scrollingOptions","_setVirtualContentParams","updateScrollableResults","updateScrollableOptions","getScrollableDirection","rtlEnabled","updateScrollable","done","hasHeight","virtualContentParams","calculateVirtualContentParams","itemWidths","itemHeights","rowCount","columnCount","viewportWidth","viewportHeight","setVirtualContentParams","contentTop","contentLeft","applyPartialDataSource","include"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/pivot_grid/ui.pivot_grid.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/pivot_grid/ui.pivot_grid.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    format as formatString\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    noop,\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport localizationMessage from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    setFieldProperty,\r\n    findField,\r\n    mergeArraysByMaxValue\r\n} from \"./ui.pivot_grid.utils\";\r\nimport {\r\n    DataController\r\n} from \"./ui.pivot_grid.data_controller\";\r\nimport {\r\n    DataArea\r\n} from \"./ui.pivot_grid.data_area\";\r\nimport {\r\n    VerticalHeadersArea,\r\n    HorizontalHeadersArea\r\n} from \"./ui.pivot_grid.headers_area\";\r\nimport {\r\n    setHeight,\r\n    getHeight,\r\n    getWidth,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    FieldsArea\r\n} from \"./ui.pivot_grid.fields_area\";\r\nimport PivotGridFieldChooser from \"./ui.pivot_grid.field_chooser\";\r\nimport PivotGridFieldChooserBase from \"./ui.pivot_grid.field_chooser_base\";\r\nimport {\r\n    ExportController\r\n} from \"./ui.pivot_grid.export\";\r\nimport chartIntegrationMixin from \"./ui.pivot_grid.chart_integration\";\r\nimport Popup from \"../popup\";\r\nimport ContextMenu from \"../context_menu\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar DATA_AREA_CELL_CLASS = \"dx-area-data-cell\";\r\nvar ROW_AREA_CELL_CLASS = \"dx-area-row-cell\";\r\nvar COLUMN_AREA_CELL_CLASS = \"dx-area-column-cell\";\r\nvar DESCRIPTION_AREA_CELL_CLASS = \"dx-area-description-cell\";\r\nvar BORDERS_CLASS = \"dx-pivotgrid-border\";\r\nvar PIVOTGRID_CLASS = \"dx-pivotgrid\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar BOTTOM_ROW_CLASS = \"dx-bottom-row\";\r\nvar BOTTOM_BORDER_CLASS = \"dx-bottom-border\";\r\nvar FIELDS_CONTAINER_CLASS = \"dx-pivotgrid-fields-container\";\r\nvar FIELDS_CLASS = \"dx-area-fields\";\r\nvar FIELD_CHOOSER_POPUP_CLASS = \"dx-fieldchooser-popup\";\r\nvar INCOMPRESSIBLE_FIELDS_CLASS = \"dx-incompressible-fields\";\r\nvar OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\r\nvar TR = \"<tr>\";\r\nvar TD = \"<td>\";\r\nvar DIV = \"<div>\";\r\nvar TEST_HEIGHT = 66666;\r\nvar FIELD_CALCULATED_OPTIONS = [\"allowSorting\", \"allowSortingBySummary\", \"allowFiltering\", \"allowExpandAll\"];\r\n\r\nfunction getArraySum(array) {\r\n    var sum = 0;\r\n    each(array, (function(_, value) {\r\n        sum += value || 0\r\n    }));\r\n    return sum\r\n}\r\n\r\nfunction adjustSizeArray(sizeArray, space) {\r\n    var delta = space / sizeArray.length;\r\n    for (var i = 0; i < sizeArray.length; i++) {\r\n        sizeArray[i] -= delta\r\n    }\r\n}\r\n\r\nfunction unsubscribeScrollEvents(area) {\r\n    area.off(\"scroll\").off(\"stop\")\r\n}\r\n\r\nfunction subscribeToScrollEvent(area, handler) {\r\n    unsubscribeScrollEvents(area);\r\n    area.on(\"scroll\", handler).on(\"stop\", handler)\r\n}\r\n\r\nfunction getCommonBorderWidth(elements, direction) {\r\n    var borderStyleNames = \"width\" === direction ? [\"borderLeftWidth\", \"borderRightWidth\"] : [\"borderTopWidth\", \"borderBottomWidth\"];\r\n    var width = 0;\r\n    each(elements, (function(_, elem) {\r\n        var computedStyle = window.getComputedStyle(elem.get(0));\r\n        borderStyleNames.forEach((function(borderStyleName) {\r\n            width += parseFloat(computedStyle[borderStyleName]) || 0\r\n        }))\r\n    }));\r\n    return width\r\n}\r\n\r\nfunction clickedOnFieldsArea($targetElement) {\r\n    return $targetElement.closest(\".\" + FIELDS_CLASS).length || $targetElement.find(\".\" + FIELDS_CLASS).length\r\n}\r\nvar PivotGrid = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            scrolling: {\r\n                timeout: 300,\r\n                renderingThreshold: 150,\r\n                minTimeout: 10,\r\n                mode: \"standard\",\r\n                useNative: \"auto\",\r\n                removeInvisiblePages: true,\r\n                virtualRowHeight: 50,\r\n                virtualColumnWidth: 100,\r\n                loadTwoPagesOnStart: true\r\n            },\r\n            encodeHtml: true,\r\n            dataSource: null,\r\n            activeStateEnabled: false,\r\n            fieldChooser: {\r\n                minWidth: 250,\r\n                minHeight: 250,\r\n                enabled: true,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                layout: 0,\r\n                title: localizationMessage.format(\"dxPivotGrid-fieldChooserTitle\"),\r\n                width: 600,\r\n                height: 600,\r\n                applyChangesMode: \"instantly\"\r\n            },\r\n            onContextMenuPreparing: null,\r\n            allowSorting: false,\r\n            allowSortingBySummary: false,\r\n            allowFiltering: false,\r\n            allowExpandAll: false,\r\n            wordWrapEnabled: true,\r\n            fieldPanel: {\r\n                showColumnFields: true,\r\n                showFilterFields: true,\r\n                showDataFields: true,\r\n                showRowFields: true,\r\n                allowFieldDragging: true,\r\n                visible: false,\r\n                texts: {\r\n                    columnFieldArea: localizationMessage.format(\"dxPivotGrid-columnFieldArea\"),\r\n                    rowFieldArea: localizationMessage.format(\"dxPivotGrid-rowFieldArea\"),\r\n                    filterFieldArea: localizationMessage.format(\"dxPivotGrid-filterFieldArea\"),\r\n                    dataFieldArea: localizationMessage.format(\"dxPivotGrid-dataFieldArea\")\r\n                }\r\n            },\r\n            dataFieldArea: \"column\",\r\n            export: {\r\n                enabled: false,\r\n                fileName: \"PivotGrid\",\r\n                proxyUrl: void 0,\r\n                ignoreExcelErrors: true\r\n            },\r\n            showRowTotals: true,\r\n            showRowGrandTotals: true,\r\n            showColumnTotals: true,\r\n            showColumnGrandTotals: true,\r\n            hideEmptySummaryCells: true,\r\n            showTotalsPrior: \"none\",\r\n            rowHeaderLayout: \"standard\",\r\n            loadPanel: {\r\n                enabled: true,\r\n                text: localizationMessage.format(\"Loading\"),\r\n                width: 200,\r\n                height: 70,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            texts: {\r\n                grandTotal: localizationMessage.format(\"dxPivotGrid-grandTotal\"),\r\n                total: localizationMessage.getFormatter(\"dxPivotGrid-total\"),\r\n                noData: localizationMessage.format(\"dxDataGrid-noDataText\"),\r\n                showFieldChooser: localizationMessage.format(\"dxPivotGrid-showFieldChooser\"),\r\n                expandAll: localizationMessage.format(\"dxPivotGrid-expandAll\"),\r\n                collapseAll: localizationMessage.format(\"dxPivotGrid-collapseAll\"),\r\n                sortColumnBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortColumnBySummary\"),\r\n                sortRowBySummary: localizationMessage.getFormatter(\"dxPivotGrid-sortRowBySummary\"),\r\n                removeAllSorting: localizationMessage.format(\"dxPivotGrid-removeAllSorting\"),\r\n                exportToExcel: localizationMessage.format(\"dxDataGrid-exportToExcel\"),\r\n                dataNotAvailable: localizationMessage.format(\"dxPivotGrid-dataNotAvailable\")\r\n            },\r\n            onCellClick: null,\r\n            onCellPrepared: null,\r\n            showBorders: false,\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            },\r\n            onExpandValueChanging: null,\r\n            renderCellCountLimit: 2e4,\r\n            onExporting: null,\r\n            onExported: null,\r\n            onFileSaving: null,\r\n            headerFilter: {\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                showRelevantValues: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: localizationMessage.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: localizationMessage.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: localizationMessage.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _updateCalculatedOptions: function(fields) {\r\n        var that = this;\r\n        each(fields, (function(index, field) {\r\n            each(FIELD_CALCULATED_OPTIONS, (function(_, optionName) {\r\n                var isCalculated = field._initProperties && optionName in field._initProperties && void 0 === field._initProperties[optionName];\r\n                var needUpdate = void 0 === field[optionName] || isCalculated;\r\n                if (needUpdate) {\r\n                    setFieldProperty(field, optionName, that.option(optionName))\r\n                }\r\n            }))\r\n        }))\r\n    },\r\n    _getDataControllerOptions: function() {\r\n        var that = this;\r\n        return {\r\n            component: that,\r\n            dataSource: that.option(\"dataSource\"),\r\n            texts: that.option(\"texts\"),\r\n            showRowTotals: that.option(\"showRowTotals\"),\r\n            showRowGrandTotals: that.option(\"showRowGrandTotals\"),\r\n            showColumnTotals: that.option(\"showColumnTotals\"),\r\n            showTotalsPrior: that.option(\"showTotalsPrior\"),\r\n            showColumnGrandTotals: that.option(\"showColumnGrandTotals\"),\r\n            dataFieldArea: that.option(\"dataFieldArea\"),\r\n            rowHeaderLayout: that.option(\"rowHeaderLayout\"),\r\n            hideEmptySummaryCells: that.option(\"hideEmptySummaryCells\"),\r\n            onFieldsPrepared: function(fields) {\r\n                that._updateCalculatedOptions(fields)\r\n            }\r\n        }\r\n    },\r\n    _initDataController: function() {\r\n        var that = this;\r\n        that._dataController && that._dataController.dispose();\r\n        that._dataController = new DataController(that._getDataControllerOptions());\r\n        if (hasWindow()) {\r\n            that._dataController.changed.add((function() {\r\n                that._render()\r\n            }))\r\n        }\r\n        that._dataController.scrollChanged.add((function(options) {\r\n            that._scrollLeft = options.left;\r\n            that._scrollTop = options.top\r\n        }));\r\n        that._dataController.loadingChanged.add((function(isLoading) {\r\n            that._updateLoading()\r\n        }));\r\n        that._dataController.progressChanged.add(that._updateLoading.bind(that));\r\n        that._dataController.dataSourceChanged.add((function() {\r\n            that._trigger(\"onChanged\")\r\n        }));\r\n        var expandValueChanging = that.option(\"onExpandValueChanging\");\r\n        if (expandValueChanging) {\r\n            that._dataController.expandValueChanging.add((function(e) {\r\n                expandValueChanging(e)\r\n            }))\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initDataController();\r\n        this._scrollLeft = this._scrollTop = null;\r\n        this._initActions()\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {\r\n            onChanged: this._createActionByOption(\"onChanged\"),\r\n            onContextMenuPreparing: this._createActionByOption(\"onContextMenuPreparing\"),\r\n            onCellClick: this._createActionByOption(\"onCellClick\"),\r\n            onExporting: this._createActionByOption(\"onExporting\"),\r\n            onExported: this._createActionByOption(\"onExported\"),\r\n            onFileSaving: this._createActionByOption(\"onFileSaving\"),\r\n            onCellPrepared: this._createActionByOption(\"onCellPrepared\")\r\n        }\r\n    },\r\n    _trigger: function(eventName, eventArg) {\r\n        this._actions[eventName](eventArg)\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (FIELD_CALCULATED_OPTIONS.indexOf(args.name) >= 0) {\r\n            var fields = this.getDataSource().fields();\r\n            this._updateCalculatedOptions(fields)\r\n        }\r\n        switch (args.name) {\r\n            case \"dataSource\":\r\n            case \"allowSorting\":\r\n            case \"allowFiltering\":\r\n            case \"allowExpandAll\":\r\n            case \"allowSortingBySummary\":\r\n            case \"scrolling\":\r\n            case \"stateStoring\":\r\n                this._initDataController();\r\n                this._fieldChooserPopup.hide();\r\n                this._renderFieldChooser();\r\n                this._invalidate();\r\n                break;\r\n            case \"texts\":\r\n            case \"showTotalsPrior\":\r\n            case \"showRowTotals\":\r\n            case \"showRowGrandTotals\":\r\n            case \"showColumnTotals\":\r\n            case \"showColumnGrandTotals\":\r\n            case \"hideEmptySummaryCells\":\r\n            case \"dataFieldArea\":\r\n                this._dataController.updateViewOptions(this._getDataControllerOptions());\r\n                break;\r\n            case \"useNativeScrolling\":\r\n            case \"encodeHtml\":\r\n            case \"renderCellCountLimit\":\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this.callBase(args);\r\n                this._renderFieldChooser();\r\n                this._renderContextMenu();\r\n                hasWindow() && this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\r\n                this._invalidate();\r\n                break;\r\n            case \"export\":\r\n                this._renderDescriptionArea();\r\n                break;\r\n            case \"onExpandValueChanging\":\r\n                break;\r\n            case \"onCellClick\":\r\n            case \"onContextMenuPreparing\":\r\n            case \"onExporting\":\r\n            case \"onExported\":\r\n            case \"onFileSaving\":\r\n            case \"onCellPrepared\":\r\n                this._actions[args.name] = this._createActionByOption(args.name);\r\n                break;\r\n            case \"fieldChooser\":\r\n                this._renderFieldChooser();\r\n                this._renderDescriptionArea();\r\n                break;\r\n            case \"loadPanel\":\r\n                if (hasWindow()) {\r\n                    if (\"loadPanel.enabled\" === args.fullName) {\r\n                        clearTimeout(this._hideLoadingTimeoutID);\r\n                        this._renderLoadPanel(this._dataArea.groupElement(), this.$element())\r\n                    } else {\r\n                        this._renderLoadPanel(this._dataArea.groupElement(), this.$element());\r\n                        this._invalidate()\r\n                    }\r\n                }\r\n                break;\r\n            case \"fieldPanel\":\r\n                this._renderDescriptionArea();\r\n                this._invalidate();\r\n                break;\r\n            case \"headerFilter\":\r\n                this._renderFieldChooser();\r\n                this._invalidate();\r\n                break;\r\n            case \"showBorders\":\r\n                this._tableElement().toggleClass(BORDERS_CLASS, !!args.value);\r\n                this.updateDimensions();\r\n                break;\r\n            case \"wordWrapEnabled\":\r\n                this._tableElement().toggleClass(\"dx-word-wrap\", !!args.value);\r\n                this.updateDimensions();\r\n                break;\r\n            case \"rowHeaderLayout\":\r\n                this._tableElement().find(\".\" + ROW_AREA_CELL_CLASS).toggleClass(\"dx-area-tree-view\", \"tree\" === args.value);\r\n                this._dataController.updateViewOptions(this._getDataControllerOptions());\r\n                break;\r\n            case \"height\":\r\n            case \"width\":\r\n                this._hasHeight = null;\r\n                this.callBase(args);\r\n                this.resize();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _updateScrollPosition: function(columnsArea, rowsArea, dataArea) {\r\n        var scrollTop;\r\n        var scrollLeft;\r\n        var scrolled = this._scrollTop || this._scrollLeft;\r\n        if (this._scrollUpdating) {\r\n            return\r\n        }\r\n        this._scrollUpdating = true;\r\n        if (rowsArea && !rowsArea.hasScroll() && this._hasHeight) {\r\n            this._scrollTop = null\r\n        }\r\n        if (columnsArea && !columnsArea.hasScroll()) {\r\n            this._scrollLeft = null\r\n        }\r\n        if (null !== this._scrollTop || null !== this._scrollLeft || scrolled || this.option(\"rtlEnabled\")) {\r\n            scrollTop = this._scrollTop || 0;\r\n            scrollLeft = this._scrollLeft || 0;\r\n            dataArea.scrollTo({\r\n                left: scrollLeft,\r\n                top: scrollTop\r\n            });\r\n            columnsArea.scrollTo({\r\n                left: scrollLeft\r\n            });\r\n            rowsArea.scrollTo({\r\n                top: scrollTop\r\n            });\r\n            this._dataController.updateWindowScrollPosition(this._scrollTop)\r\n        }\r\n        this._scrollUpdating = false\r\n    },\r\n    _subscribeToEvents: function(columnsArea, rowsArea, dataArea) {\r\n        var that = this;\r\n        each([columnsArea, rowsArea, dataArea], (function(_, area) {\r\n            subscribeToScrollEvent(area, e => function(e, area) {\r\n                var scrollOffset = e.scrollOffset;\r\n                var scrollable = area._getScrollable();\r\n                var leftOffset = \"vertical\" !== scrollable.option(\"direction\") ? scrollOffset.left : that._scrollLeft;\r\n                var topOffset = \"horizontal\" !== scrollable.option(\"direction\") && that._hasHeight ? scrollOffset.top : that._scrollTop;\r\n                if ((that._scrollLeft || 0) !== (leftOffset || 0) || (that._scrollTop || 0) !== (topOffset || 0)) {\r\n                    that._scrollLeft = leftOffset;\r\n                    that._scrollTop = topOffset;\r\n                    that._updateScrollPosition(columnsArea, rowsArea, dataArea);\r\n                    if (\"virtual\" === that.option(\"scrolling.mode\")) {\r\n                        that._dataController.setViewportPosition(that._scrollLeft, that._scrollTop)\r\n                    }\r\n                }\r\n            }(e, area))\r\n        }));\r\n        !that._hasHeight && that._dataController.subscribeToWindowScrollEvents(dataArea.groupElement())\r\n    },\r\n    _clean: noop,\r\n    _needDelayResizing: function(cellsInfo) {\r\n        var cellsCount = cellsInfo.length * (cellsInfo.length ? cellsInfo[0].length : 0);\r\n        return cellsCount > this.option(\"renderCellCountLimit\")\r\n    },\r\n    _renderFieldChooser: function() {\r\n        var _that$option;\r\n        var that = this;\r\n        var container = that._pivotGridContainer;\r\n        var fieldChooserOptions = that.option(\"fieldChooser\") || {};\r\n        var toolbarItems = \"onDemand\" === fieldChooserOptions.applyChangesMode ? [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: localizationMessage.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    that._fieldChooserPopup.$content().dxPivotGridFieldChooser(\"applyChanges\");\r\n                    that._fieldChooserPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: localizationMessage.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._fieldChooserPopup.hide()\r\n                }\r\n            }\r\n        }] : [];\r\n        var fieldChooserComponentOptions = {\r\n            layout: fieldChooserOptions.layout,\r\n            texts: fieldChooserOptions.texts || {},\r\n            dataSource: that.getDataSource(),\r\n            allowSearch: fieldChooserOptions.allowSearch,\r\n            searchTimeout: fieldChooserOptions.searchTimeout,\r\n            width: void 0,\r\n            height: void 0,\r\n            headerFilter: that.option(\"headerFilter\"),\r\n            encodeHtml: null !== (_that$option = that.option(\"fieldChooser.encodeHtml\")) && void 0 !== _that$option ? _that$option : that.option(\"encodeHtml\"),\r\n            applyChangesMode: fieldChooserOptions.applyChangesMode,\r\n            onContextMenuPreparing: function(e) {\r\n                that._trigger(\"onContextMenuPreparing\", e)\r\n            }\r\n        };\r\n        var popupOptions = {\r\n            shading: false,\r\n            title: fieldChooserOptions.title,\r\n            width: fieldChooserOptions.width,\r\n            height: fieldChooserOptions.height,\r\n            showCloseButton: true,\r\n            resizeEnabled: true,\r\n            minWidth: fieldChooserOptions.minWidth,\r\n            minHeight: fieldChooserOptions.minHeight,\r\n            toolbarItems: toolbarItems,\r\n            onResize: function(e) {\r\n                e.component.$content().dxPivotGridFieldChooser(\"updateDimensions\")\r\n            },\r\n            onShown: function(e) {\r\n                that._createComponent(e.component.content(), PivotGridFieldChooser, fieldChooserComponentOptions)\r\n            },\r\n            onHidden: function(e) {\r\n                var fieldChooser = e.component.$content().dxPivotGridFieldChooser(\"instance\");\r\n                fieldChooser.resetTreeView();\r\n                fieldChooser.cancelChanges()\r\n            }\r\n        };\r\n        if (that._fieldChooserPopup) {\r\n            that._fieldChooserPopup.option(popupOptions);\r\n            that._fieldChooserPopup.$content().dxPivotGridFieldChooser(fieldChooserComponentOptions)\r\n        } else {\r\n            that._fieldChooserPopup = that._createComponent($(DIV).addClass(FIELD_CHOOSER_POPUP_CLASS).appendTo(container), Popup, popupOptions)\r\n        }\r\n    },\r\n    _renderContextMenu: function() {\r\n        var that = this;\r\n        var $container = that._pivotGridContainer;\r\n        if (that._contextMenu) {\r\n            that._contextMenu.$element().remove()\r\n        }\r\n        that._contextMenu = that._createComponent($(DIV).appendTo($container), ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                actionArgs.cancel = true;\r\n                if (!event) {\r\n                    return\r\n                }\r\n                var targetElement = event.target.cellIndex >= 0 ? event.target : $(event.target).closest(\"td\").get(0);\r\n                if (!targetElement) {\r\n                    return\r\n                }\r\n                var args = that._createEventArgs(targetElement, event);\r\n                var items = that._getContextMenuItems(args);\r\n                if (items) {\r\n                    actionArgs.component.option(\"items\", items);\r\n                    actionArgs.cancel = false;\r\n                    return\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: PIVOTGRID_CLASS,\r\n            target: that.$element()\r\n        })\r\n    },\r\n    _getContextMenuItems: function(e) {\r\n        var that = this;\r\n        var items = [];\r\n        var texts = that.option(\"texts\");\r\n        if (\"row\" === e.area || \"column\" === e.area) {\r\n            var areaFields = e[e.area + \"Fields\"];\r\n            var oppositeAreaFields = e[\"column\" === e.area ? \"rowFields\" : \"columnFields\"];\r\n            var field = e.cell.path && areaFields[e.cell.path.length - 1];\r\n            var dataSource = that.getDataSource();\r\n            if (field && field.allowExpandAll && e.cell.path.length < e[e.area + \"Fields\"].length && !dataSource.paginate()) {\r\n                items.push({\r\n                    beginGroup: true,\r\n                    icon: \"none\",\r\n                    text: texts.expandAll,\r\n                    onItemClick: function() {\r\n                        dataSource.expandAll(field.index)\r\n                    }\r\n                });\r\n                items.push({\r\n                    text: texts.collapseAll,\r\n                    icon: \"none\",\r\n                    onItemClick: function() {\r\n                        dataSource.collapseAll(field.index)\r\n                    }\r\n                })\r\n            }\r\n            if (e.cell.isLast && !dataSource.paginate()) {\r\n                var sortingBySummaryItemCount = 0;\r\n                each(oppositeAreaFields, (function(index, field) {\r\n                    if (!field.allowSortingBySummary) {\r\n                        return\r\n                    }\r\n                    each(e.dataFields, (function(dataIndex, dataField) {\r\n                        if (isDefined(e.cell.dataIndex) && e.cell.dataIndex !== dataIndex) {\r\n                            return\r\n                        }\r\n                        var showDataFieldCaption = !isDefined(e.cell.dataIndex) && e.dataFields.length > 1;\r\n                        var textFormat = \"column\" === e.area ? texts.sortColumnBySummary : texts.sortRowBySummary;\r\n                        var checked = findField(e.dataFields, field.sortBySummaryField) === dataIndex && (e.cell.path || []).join(\"/\") === (field.sortBySummaryPath || []).join(\"/\");\r\n                        var text = formatString(textFormat, showDataFieldCaption ? field.caption + \" - \" + dataField.caption : field.caption);\r\n                        items.push({\r\n                            beginGroup: 0 === sortingBySummaryItemCount,\r\n                            icon: checked ? \"desc\" === field.sortOrder ? \"sortdowntext\" : \"sortuptext\" : \"none\",\r\n                            text: text,\r\n                            onItemClick: function() {\r\n                                dataSource.field(field.index, {\r\n                                    sortBySummaryField: dataField.name || dataField.caption || dataField.dataField,\r\n                                    sortBySummaryPath: e.cell.path,\r\n                                    sortOrder: \"desc\" === field.sortOrder ? \"asc\" : \"desc\"\r\n                                });\r\n                                dataSource.load()\r\n                            }\r\n                        });\r\n                        sortingBySummaryItemCount++\r\n                    }))\r\n                }));\r\n                each(oppositeAreaFields, (function(index, field) {\r\n                    if (!field.allowSortingBySummary || !isDefined(field.sortBySummaryField)) {\r\n                        return\r\n                    }\r\n                    items.push({\r\n                        beginGroup: 0 === sortingBySummaryItemCount,\r\n                        icon: \"none\",\r\n                        text: texts.removeAllSorting,\r\n                        onItemClick: function() {\r\n                            each(oppositeAreaFields, (function(index, field) {\r\n                                dataSource.field(field.index, {\r\n                                    sortBySummaryField: void 0,\r\n                                    sortBySummaryPath: void 0,\r\n                                    sortOrder: void 0\r\n                                })\r\n                            }));\r\n                            dataSource.load()\r\n                        }\r\n                    });\r\n                    return false\r\n                }))\r\n            }\r\n        }\r\n        if (that.option(\"fieldChooser.enabled\")) {\r\n            items.push({\r\n                beginGroup: true,\r\n                icon: \"columnchooser\",\r\n                text: texts.showFieldChooser,\r\n                onItemClick: function() {\r\n                    that._fieldChooserPopup.show()\r\n                }\r\n            })\r\n        }\r\n        if (that.option(\"export.enabled\")) {\r\n            items.push({\r\n                beginGroup: true,\r\n                icon: \"xlsxfile\",\r\n                text: texts.exportToExcel,\r\n                onItemClick: function() {\r\n                    that.exportToExcel()\r\n                }\r\n            })\r\n        }\r\n        e.items = items;\r\n        that._trigger(\"onContextMenuPreparing\", e);\r\n        items = e.items;\r\n        if (items && items.length) {\r\n            return items\r\n        }\r\n    },\r\n    _createEventArgs: function(targetElement, dxEvent) {\r\n        var dataSource = this.getDataSource();\r\n        var args = {\r\n            rowFields: dataSource.getAreaFields(\"row\"),\r\n            columnFields: dataSource.getAreaFields(\"column\"),\r\n            dataFields: dataSource.getAreaFields(\"data\"),\r\n            event: dxEvent\r\n        };\r\n        if (clickedOnFieldsArea($(targetElement))) {\r\n            return extend(this._createFieldArgs(targetElement), args)\r\n        } else {\r\n            return extend(this._createCellArgs(targetElement), args)\r\n        }\r\n    },\r\n    _createFieldArgs: function(targetElement) {\r\n        var field = $(targetElement).children().data(\"field\");\r\n        var args = {\r\n            field: field\r\n        };\r\n        return isDefined(field) ? args : {}\r\n    },\r\n    _createCellArgs: function(cellElement) {\r\n        var $cellElement = $(cellElement);\r\n        var columnIndex = cellElement.cellIndex;\r\n        var rowIndex = cellElement.parentElement.rowIndex;\r\n        var $table = $cellElement.closest(\"table\");\r\n        var data = $table.data(\"data\");\r\n        var cell = data && data[rowIndex] && data[rowIndex][columnIndex];\r\n        var args = {\r\n            area: $table.data(\"area\"),\r\n            rowIndex: rowIndex,\r\n            columnIndex: columnIndex,\r\n            cellElement: getPublicElement($cellElement),\r\n            cell: cell\r\n        };\r\n        return args\r\n    },\r\n    _handleCellClick: function(e) {\r\n        var that = this;\r\n        var args = that._createEventArgs(e.currentTarget, e);\r\n        var cell = args.cell;\r\n        if (!cell || !args.area && (args.rowIndex || args.columnIndex)) {\r\n            return\r\n        }\r\n        that._trigger(\"onCellClick\", args);\r\n        cell && !args.cancel && isDefined(cell.expanded) && setTimeout((function() {\r\n            that._dataController[cell.expanded ? \"collapseHeaderItem\" : \"expandHeaderItem\"](args.area, cell.path)\r\n        }))\r\n    },\r\n    _getNoDataText: function() {\r\n        return this.option(\"texts.noData\")\r\n    },\r\n    _renderNoDataText: gridCoreUtils.renderNoDataText,\r\n    _renderLoadPanel: gridCoreUtils.renderLoadPanel,\r\n    _updateLoading: function(progress) {\r\n        var that = this;\r\n        var isLoading = that._dataController.isLoading();\r\n        if (!that._loadPanel) {\r\n            return\r\n        }\r\n        var loadPanelVisible = that._loadPanel.option(\"visible\");\r\n        if (!loadPanelVisible) {\r\n            that._startLoadingTime = new Date\r\n        }\r\n        if (isLoading) {\r\n            if (progress) {\r\n                if (new Date - that._startLoadingTime >= 1e3) {\r\n                    that._loadPanel.option(\"message\", Math.floor(100 * progress) + \"%\")\r\n                }\r\n            } else {\r\n                that._loadPanel.option(\"message\", that.option(\"loadPanel.text\"))\r\n            }\r\n        }\r\n        clearTimeout(that._hideLoadingTimeoutID);\r\n        if (loadPanelVisible && !isLoading) {\r\n            that._hideLoadingTimeoutID = setTimeout((function() {\r\n                that._loadPanel.option(\"visible\", false);\r\n                that.$element().removeClass(OVERFLOW_HIDDEN_CLASS)\r\n            }))\r\n        } else {\r\n            var visibilityOptions = {\r\n                visible: isLoading\r\n            };\r\n            if (isLoading) {\r\n                visibilityOptions.position = gridCoreUtils.calculateLoadPanelPosition(that._dataArea.groupElement())\r\n            }\r\n            that._loadPanel.option(visibilityOptions);\r\n            that.$element().toggleClass(OVERFLOW_HIDDEN_CLASS, !isLoading)\r\n        }\r\n    },\r\n    _renderDescriptionArea: function() {\r\n        var $element = this.$element();\r\n        var $descriptionCell = $element.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\r\n        var $toolbarContainer = $(DIV).addClass(\"dx-pivotgrid-toolbar\");\r\n        var fieldPanel = this.option(\"fieldPanel\");\r\n        var $filterHeader = $element.find(\".dx-filter-header\");\r\n        var $columnHeader = $element.find(\".dx-column-header\");\r\n        var $targetContainer;\r\n        if (fieldPanel.visible && fieldPanel.showFilterFields) {\r\n            $targetContainer = $filterHeader\r\n        } else if (fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)) {\r\n            $targetContainer = $columnHeader\r\n        } else {\r\n            $targetContainer = $descriptionCell\r\n        }\r\n        $columnHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields)));\r\n        $filterHeader.toggleClass(BOTTOM_BORDER_CLASS, !!(fieldPanel.visible && fieldPanel.showFilterFields));\r\n        $descriptionCell.toggleClass(\"dx-pivotgrid-background\", fieldPanel.visible && (fieldPanel.showDataFields || fieldPanel.showColumnFields || fieldPanel.showRowFields));\r\n        this.$element().find(\".dx-pivotgrid-toolbar\").remove();\r\n        $toolbarContainer.prependTo($targetContainer);\r\n        if (this.option(\"fieldChooser.enabled\")) {\r\n            var $buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-field-chooser-button\");\r\n            var buttonOptions = {\r\n                icon: \"columnchooser\",\r\n                hint: this.option(\"texts.showFieldChooser\"),\r\n                onClick: () => {\r\n                    this.getFieldChooserPopup().show()\r\n                }\r\n            };\r\n            this._createComponent($buttonElement, \"dxButton\", buttonOptions)\r\n        }\r\n        if (this.option(\"export.enabled\")) {\r\n            var _$buttonElement = $(DIV).appendTo($toolbarContainer).addClass(\"dx-pivotgrid-export-button\");\r\n            var _buttonOptions = {\r\n                icon: \"xlsxfile\",\r\n                hint: this.option(\"texts.exportToExcel\"),\r\n                onClick: () => {\r\n                    this.exportToExcel()\r\n                }\r\n            };\r\n            this._createComponent(_$buttonElement, \"dxButton\", _buttonOptions)\r\n        }\r\n    },\r\n    _detectHasContainerHeight: function() {\r\n        var element = this.$element();\r\n        if (isDefined(this._hasHeight)) {\r\n            var height = this.option(\"height\") || this.$element().get(0).style.height;\r\n            if (height && this._hasHeight ^ \"auto\" !== height) {\r\n                this._hasHeight = null\r\n            }\r\n        }\r\n        if (isDefined(this._hasHeight) || element.is(\":hidden\")) {\r\n            return\r\n        }\r\n        this._pivotGridContainer.addClass(\"dx-hidden\");\r\n        var testElement = $(DIV);\r\n        setHeight(testElement, TEST_HEIGHT);\r\n        element.append(testElement);\r\n        this._hasHeight = getHeight(element) !== TEST_HEIGHT;\r\n        this._pivotGridContainer.removeClass(\"dx-hidden\");\r\n        testElement.remove()\r\n    },\r\n    _renderHeaders: function(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer) {\r\n        var dataSource = this.getDataSource();\r\n        this._rowFields = this._rowFields || new FieldsArea(this, \"row\");\r\n        this._rowFields.render(rowHeaderContainer, dataSource.getAreaFields(\"row\"));\r\n        this._columnFields = this._columnFields || new FieldsArea(this, \"column\");\r\n        this._columnFields.render(columnHeaderContainer, dataSource.getAreaFields(\"column\"));\r\n        this._filterFields = this._filterFields || new FieldsArea(this, \"filter\");\r\n        this._filterFields.render(filterHeaderContainer, dataSource.getAreaFields(\"filter\"));\r\n        this._dataFields = this._dataFields || new FieldsArea(this, \"data\");\r\n        this._dataFields.render(dataHeaderContainer, dataSource.getAreaFields(\"data\"));\r\n        this.$element().dxPivotGridFieldChooserBase(\"instance\").renderSortable()\r\n    },\r\n    _createTableElement: function() {\r\n        var $table = $(\"<table>\").css({\r\n            width: \"100%\"\r\n        }).toggleClass(BORDERS_CLASS, !!this.option(\"showBorders\")).toggleClass(\"dx-word-wrap\", !!this.option(\"wordWrapEnabled\"));\r\n        eventsEngine.on($table, addNamespace(clickEventName, \"dxPivotGrid\"), \"td\", this._handleCellClick.bind(this));\r\n        return $table\r\n    },\r\n    _renderDataArea: function(dataAreaElement) {\r\n        var dataArea = this._dataArea || new DataArea(this);\r\n        this._dataArea = dataArea;\r\n        dataArea.render(dataAreaElement, this._dataController.getCellsInfo());\r\n        return dataArea\r\n    },\r\n    _renderRowsArea: function(rowsAreaElement) {\r\n        var rowsArea = this._rowsArea || new VerticalHeadersArea(this);\r\n        this._rowsArea = rowsArea;\r\n        rowsArea.render(rowsAreaElement, this._dataController.getRowsInfo());\r\n        return rowsArea\r\n    },\r\n    _renderColumnsArea: function(columnsAreaElement) {\r\n        var columnsArea = this._columnsArea || new HorizontalHeadersArea(this);\r\n        this._columnsArea = columnsArea;\r\n        columnsArea.render(columnsAreaElement, this._dataController.getColumnsInfo());\r\n        return columnsArea\r\n    },\r\n    _initMarkup: function() {\r\n        var that = this;\r\n        that.callBase.apply(this, arguments);\r\n        that.$element().addClass(PIVOTGRID_CLASS)\r\n    },\r\n    _renderContentImpl: function() {\r\n        var columnsAreaElement;\r\n        var rowsAreaElement;\r\n        var dataAreaElement;\r\n        var tableElement;\r\n        var isFirstDrawing = !this._pivotGridContainer;\r\n        var rowHeaderContainer;\r\n        var columnHeaderContainer;\r\n        var filterHeaderContainer;\r\n        var dataHeaderContainer;\r\n        tableElement = !isFirstDrawing && this._tableElement();\r\n        if (!tableElement) {\r\n            this.$element().addClass(ROW_LINES_CLASS).addClass(FIELDS_CONTAINER_CLASS);\r\n            this._pivotGridContainer = $(DIV).addClass(\"dx-pivotgrid-container\");\r\n            this._renderFieldChooser();\r\n            this._renderContextMenu();\r\n            columnsAreaElement = $(TD).addClass(COLUMN_AREA_CELL_CLASS);\r\n            rowsAreaElement = $(TD).addClass(ROW_AREA_CELL_CLASS);\r\n            dataAreaElement = $(TD).addClass(DATA_AREA_CELL_CLASS);\r\n            tableElement = this._createTableElement();\r\n            dataHeaderContainer = $(TD).addClass(\"dx-data-header\");\r\n            filterHeaderContainer = $(\"<td>\").attr(\"colspan\", \"2\").addClass(\"dx-filter-header\");\r\n            columnHeaderContainer = $(TD).addClass(\"dx-column-header\");\r\n            rowHeaderContainer = $(TD).addClass(DESCRIPTION_AREA_CELL_CLASS);\r\n            $(TR).append(filterHeaderContainer).appendTo(tableElement);\r\n            $(TR).append(dataHeaderContainer).append(columnHeaderContainer).appendTo(tableElement);\r\n            $(TR).append(rowHeaderContainer).append(columnsAreaElement).appendTo(tableElement);\r\n            $(TR).addClass(BOTTOM_ROW_CLASS).append(rowsAreaElement).append(dataAreaElement).appendTo(tableElement);\r\n            this._pivotGridContainer.append(tableElement);\r\n            this.$element().append(this._pivotGridContainer);\r\n            if (\"tree\" === this.option(\"rowHeaderLayout\")) {\r\n                rowsAreaElement.addClass(\"dx-area-tree-view\")\r\n            }\r\n        }\r\n        this.$element().addClass(OVERFLOW_HIDDEN_CLASS);\r\n        this._createComponent(this.$element(), PivotGridFieldChooserBase, {\r\n            dataSource: this.getDataSource(),\r\n            encodeHtml: this.option(\"encodeHtml\"),\r\n            allowFieldDragging: this.option(\"fieldPanel.allowFieldDragging\"),\r\n            headerFilter: this.option(\"headerFilter\"),\r\n            visible: this.option(\"visible\")\r\n        });\r\n        var dataArea = this._renderDataArea(dataAreaElement);\r\n        var rowsArea = this._renderRowsArea(rowsAreaElement);\r\n        var columnsArea = this._renderColumnsArea(columnsAreaElement);\r\n        dataArea.tableElement().prepend(columnsArea.headElement());\r\n        if (isFirstDrawing) {\r\n            this._renderLoadPanel(dataArea.groupElement().parent(), this.$element());\r\n            this._renderDescriptionArea();\r\n            rowsArea.renderScrollable();\r\n            columnsArea.renderScrollable();\r\n            dataArea.renderScrollable()\r\n        } [dataArea, rowsArea, columnsArea].forEach((function(area) {\r\n            unsubscribeScrollEvents(area)\r\n        }));\r\n        this._renderHeaders(rowHeaderContainer, columnHeaderContainer, filterHeaderContainer, dataHeaderContainer);\r\n        this._update(isFirstDrawing)\r\n    },\r\n    _update: function(isFirstDrawing) {\r\n        var that = this;\r\n        var updateHandler = function() {\r\n            that.updateDimensions()\r\n        };\r\n        if (that._needDelayResizing(that._dataArea.getData()) && isFirstDrawing) {\r\n            setTimeout(updateHandler)\r\n        } else {\r\n            updateHandler()\r\n        }\r\n    },\r\n    _fireContentReadyAction: function() {\r\n        if (!this._dataController.isLoading()) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    getScrollPath: function(area) {\r\n        if (\"column\" === area) {\r\n            return this._columnsArea.getScrollPath(this._scrollLeft)\r\n        } else {\r\n            return this._rowsArea.getScrollPath(this._scrollTop)\r\n        }\r\n    },\r\n    getDataSource: function() {\r\n        return this._dataController.getDataSource()\r\n    },\r\n    getFieldChooserPopup: function() {\r\n        return this._fieldChooserPopup\r\n    },\r\n    hasScroll: function(area) {\r\n        return \"column\" === area ? this._columnsArea.hasScroll() : this._rowsArea.hasScroll()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        var that = this;\r\n        clearTimeout(that._hideLoadingTimeoutID);\r\n        that.callBase.apply(that, arguments);\r\n        if (that._dataController) {\r\n            that._dataController.dispose()\r\n        }\r\n    },\r\n    _tableElement: function() {\r\n        return this.$element().find(\"table\").first()\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        return \"dx-pivotgrid-\" + className\r\n    },\r\n    resize: function() {\r\n        this.updateDimensions()\r\n    },\r\n    isReady: function() {\r\n        return this.callBase() && !this._dataController.isLoading()\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var groupWidth;\r\n        var tableElement = that._tableElement();\r\n        var bordersWidth;\r\n        var totalWidth = 0;\r\n        var totalHeight = 0;\r\n        var rowsAreaWidth = 0;\r\n        var hasRowsScroll;\r\n        var hasColumnsScroll;\r\n        var dataAreaCell = tableElement.find(\".\" + DATA_AREA_CELL_CLASS);\r\n        var rowAreaCell = tableElement.find(\".\" + ROW_AREA_CELL_CLASS);\r\n        var columnAreaCell = tableElement.find(\".\" + COLUMN_AREA_CELL_CLASS);\r\n        var descriptionCell = tableElement.find(\".\" + DESCRIPTION_AREA_CELL_CLASS);\r\n        var filterHeaderCell = tableElement.find(\".dx-filter-header\");\r\n        var columnHeaderCell = tableElement.find(\".dx-column-header\");\r\n        var rowFieldsHeader = that._rowFields;\r\n        var d = new Deferred;\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        var needSynchronizeFieldPanel = rowFieldsHeader.isVisible() && \"tree\" !== that.option(\"rowHeaderLayout\");\r\n        that._detectHasContainerHeight();\r\n        if (!that._dataArea.headElement().length) {\r\n            that._dataArea.tableElement().prepend(that._columnsArea.headElement())\r\n        }\r\n        if (needSynchronizeFieldPanel) {\r\n            that._rowsArea.updateColspans(rowFieldsHeader.getColumnsCount());\r\n            that._rowsArea.tableElement().prepend(rowFieldsHeader.headElement())\r\n        }\r\n        tableElement.addClass(INCOMPRESSIBLE_FIELDS_CLASS);\r\n        that._dataArea.reset();\r\n        that._rowsArea.reset();\r\n        that._columnsArea.reset();\r\n        rowFieldsHeader.reset();\r\n        var calculateHasScroll = (areaSize, totalSize) => totalSize - areaSize >= 1;\r\n        var calculateGroupHeight = (dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth) => hasRowsScroll ? dataAreaHeight : totalHeight + (hasColumnsScroll ? scrollBarWidth : 0);\r\n        deferUpdate((function() {\r\n            var rowHeights = that._rowsArea.getRowsHeight();\r\n            var descriptionCellHeight = getOuterHeight(descriptionCell[0], true) + (needSynchronizeFieldPanel ? rowHeights[0] : 0);\r\n            var filterAreaHeight = 0;\r\n            var dataAreaHeight = 0;\r\n            if (that._hasHeight) {\r\n                filterAreaHeight = getHeight(filterHeaderCell);\r\n                var $dataHeader = tableElement.find(\".dx-data-header\");\r\n                var dataHeaderHeight = getHeight($dataHeader);\r\n                bordersWidth = getCommonBorderWidth([columnAreaCell, dataAreaCell, tableElement, columnHeaderCell, filterHeaderCell], \"height\");\r\n                dataAreaHeight = getHeight(that.$element()) - filterAreaHeight - dataHeaderHeight - (Math.max(getHeight(that._dataArea.headElement()), getHeight(columnAreaCell), descriptionCellHeight) + bordersWidth)\r\n            }\r\n            var scrollBarWidth = that._dataArea.getScrollbarWidth();\r\n            var hasVerticalScrollbar = calculateHasScroll(dataAreaHeight, getHeight(that._dataArea.tableElement()));\r\n            that._dataArea.tableElement().css({\r\n                width: that._hasHeight && hasVerticalScrollbar && scrollBarWidth ? \"calc(100% - \".concat(scrollBarWidth, \"px)\") : \"100%\"\r\n            });\r\n            var resultWidths = that._dataArea.getColumnsWidth();\r\n            var rowsAreaHeights = needSynchronizeFieldPanel ? rowHeights.slice(1) : rowHeights;\r\n            var dataAreaHeights = that._dataArea.getRowsHeight();\r\n            var columnsAreaRowCount = that._dataController.getColumnsInfo().length;\r\n            var resultHeights = mergeArraysByMaxValue(rowsAreaHeights, dataAreaHeights.slice(columnsAreaRowCount));\r\n            var columnsAreaRowHeights = dataAreaHeights.slice(0, columnsAreaRowCount);\r\n            var columnsAreaHeight = getArraySum(columnsAreaRowHeights);\r\n            var rowsAreaColumnWidths = that._rowsArea.getColumnsWidth();\r\n            totalWidth = getWidth(that._dataArea.tableElement());\r\n            totalHeight = getArraySum(resultHeights);\r\n            if (!totalWidth || !totalHeight) {\r\n                d.resolve();\r\n                return\r\n            }\r\n            rowsAreaWidth = getArraySum(rowsAreaColumnWidths);\r\n            var elementWidth = getWidth(that.$element());\r\n            bordersWidth = getCommonBorderWidth([rowAreaCell, dataAreaCell, tableElement], \"width\");\r\n            groupWidth = elementWidth - rowsAreaWidth - bordersWidth;\r\n            groupWidth = groupWidth > 0 ? groupWidth : totalWidth;\r\n            var diff = totalWidth - groupWidth;\r\n            var needAdjustWidthOnZoom = diff >= 0 && diff <= 2;\r\n            if (needAdjustWidthOnZoom) {\r\n                adjustSizeArray(resultWidths, diff);\r\n                totalWidth = groupWidth\r\n            }\r\n            hasRowsScroll = that._hasHeight && calculateHasScroll(dataAreaHeight, totalHeight);\r\n            hasColumnsScroll = calculateHasScroll(groupWidth, totalWidth);\r\n            var groupHeight = calculateGroupHeight(dataAreaHeight, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\r\n            deferRender((function() {\r\n                that._columnsArea.tableElement().append(that._dataArea.headElement());\r\n                rowFieldsHeader.tableElement().append(that._rowsArea.headElement());\r\n                if (descriptionCellHeight > columnsAreaHeight) {\r\n                    adjustSizeArray(columnsAreaRowHeights, columnsAreaHeight - descriptionCellHeight);\r\n                    that._columnsArea.setRowsHeight(columnsAreaRowHeights)\r\n                }\r\n                tableElement.removeClass(INCOMPRESSIBLE_FIELDS_CLASS);\r\n                columnHeaderCell.children().css(\"maxWidth\", groupWidth);\r\n                that._columnsArea.setGroupWidth(groupWidth);\r\n                that._columnsArea.processScrollBarSpacing(hasRowsScroll ? scrollBarWidth : 0);\r\n                that._columnsArea.setColumnsWidth(resultWidths);\r\n                that._rowsArea.setGroupHeight(that._hasHeight ? groupHeight : \"auto\");\r\n                that._rowsArea.processScrollBarSpacing(hasColumnsScroll ? scrollBarWidth : 0);\r\n                that._rowsArea.setColumnsWidth(rowsAreaColumnWidths);\r\n                that._rowsArea.setRowsHeight(resultHeights);\r\n                that._dataArea.setColumnsWidth(resultWidths);\r\n                that._dataArea.setRowsHeight(resultHeights);\r\n                that._dataArea.setGroupWidth(groupWidth);\r\n                that._dataArea.setGroupHeight(that._hasHeight ? groupHeight : \"auto\");\r\n                needSynchronizeFieldPanel && rowFieldsHeader.setColumnsWidth(rowsAreaColumnWidths);\r\n                dataAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\r\n                rowAreaCell.toggleClass(BOTTOM_BORDER_CLASS, !hasRowsScroll);\r\n                if (!that._hasHeight && elementWidth !== getWidth(that.$element())) {\r\n                    var _diff = elementWidth - getWidth(that.$element());\r\n                    if (!hasColumnsScroll) {\r\n                        adjustSizeArray(resultWidths, _diff);\r\n                        that._columnsArea.setColumnsWidth(resultWidths);\r\n                        that._dataArea.setColumnsWidth(resultWidths)\r\n                    }\r\n                    that._dataArea.setGroupWidth(groupWidth - _diff);\r\n                    that._columnsArea.setGroupWidth(groupWidth - _diff)\r\n                }\r\n                if (that._hasHeight && that._filterFields.isVisible() && getHeight(filterHeaderCell) !== filterAreaHeight) {\r\n                    var _diff2 = getHeight(filterHeaderCell) - filterAreaHeight;\r\n                    if (_diff2 > 0) {\r\n                        hasRowsScroll = calculateHasScroll(dataAreaHeight - _diff2, totalHeight);\r\n                        var _groupHeight = calculateGroupHeight(dataAreaHeight - _diff2, totalHeight, hasRowsScroll, hasColumnsScroll, scrollBarWidth);\r\n                        that._dataArea.setGroupHeight(_groupHeight);\r\n                        that._rowsArea.setGroupHeight(_groupHeight)\r\n                    }\r\n                }\r\n                var scrollingOptions = that.option(\"scrolling\");\r\n                if (\"virtual\" === scrollingOptions.mode) {\r\n                    that._setVirtualContentParams(scrollingOptions, resultWidths, resultHeights, groupWidth, groupHeight, that._hasHeight, rowsAreaWidth)\r\n                }\r\n                var updateScrollableResults = [];\r\n                that._dataArea.updateScrollableOptions({\r\n                    direction: that._dataArea.getScrollableDirection(hasColumnsScroll, hasRowsScroll),\r\n                    rtlEnabled: that.option(\"rtlEnabled\")\r\n                });\r\n                that._columnsArea.updateScrollableOptions({\r\n                    rtlEnabled: that.option(\"rtlEnabled\")\r\n                });\r\n                each([that._columnsArea, that._rowsArea, that._dataArea], (function(_, area) {\r\n                    updateScrollableResults.push(area && area.updateScrollable())\r\n                }));\r\n                that._updateLoading();\r\n                that._renderNoDataText(dataAreaCell);\r\n                when.apply($, updateScrollableResults).done((function() {\r\n                    that._updateScrollPosition(that._columnsArea, that._rowsArea, that._dataArea);\r\n                    that._subscribeToEvents(that._columnsArea, that._rowsArea, that._dataArea);\r\n                    d.resolve()\r\n                }))\r\n            }))\r\n        }));\r\n        return d\r\n    },\r\n    _setVirtualContentParams: function(scrollingOptions, resultWidths, resultHeights, groupWidth, groupHeight, hasHeight, rowsAreaWidth) {\r\n        var virtualContentParams = this._dataController.calculateVirtualContentParams({\r\n            virtualRowHeight: scrollingOptions.virtualRowHeight,\r\n            virtualColumnWidth: scrollingOptions.virtualColumnWidth,\r\n            itemWidths: resultWidths,\r\n            itemHeights: resultHeights,\r\n            rowCount: resultHeights.length,\r\n            columnCount: resultWidths.length,\r\n            viewportWidth: groupWidth,\r\n            viewportHeight: hasHeight ? groupHeight : getOuterHeight(window)\r\n        });\r\n        this._dataArea.setVirtualContentParams({\r\n            top: virtualContentParams.contentTop,\r\n            left: virtualContentParams.contentLeft,\r\n            width: virtualContentParams.width,\r\n            height: virtualContentParams.height\r\n        });\r\n        this._rowsArea.setVirtualContentParams({\r\n            top: virtualContentParams.contentTop,\r\n            width: rowsAreaWidth,\r\n            height: virtualContentParams.height\r\n        });\r\n        this._columnsArea.setVirtualContentParams({\r\n            left: virtualContentParams.contentLeft,\r\n            width: virtualContentParams.width,\r\n            height: getHeight(this._columnsArea.groupElement())\r\n        })\r\n    },\r\n    applyPartialDataSource: function(area, path, dataSource) {\r\n        this._dataController.applyPartialDataSource(area, path, dataSource)\r\n    }\r\n}).inherit(ExportController).include(chartIntegrationMixin);\r\nregisterComponent(\"dxPivotGrid\", PivotGrid);\r\nexport default PivotGrid;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,qBAAd;AACA,SACIC,SADJ,EAEIC,SAFJ,QAGO,yBAHP;AAIA,IAAIC,MAAM,GAAGF,SAAS,EAAtB;AACA,OAAOG,YAAP,MAAyB,iCAAzB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SACIC,gBADJ,QAEO,oBAFP;AAGA,SACIC,MAAM,IAAIC,YADd,QAEO,yBAFP;AAGA,SACIC,IADJ,EAEIC,WAFJ,EAGIC,WAHJ,QAIO,yBAJP;AAKA,SACIC,IADJ,QAEO,2BAFP;AAGA,SACIC,SADJ,QAEO,uBAFP;AAGA,SACIC,MADJ,QAEO,yBAFP;AAGA,SACIC,IAAI,IAAIC,cADZ,QAEO,oBAFP;AAGA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACIC,YADJ,QAEO,0BAFP;AAGA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SACIC,gBADJ,EAEIC,SAFJ,EAGIC,qBAHJ,QAIO,uBAJP;AAKA,SACIC,cADJ,QAEO,iCAFP;AAGA,SACIC,QADJ,QAEO,2BAFP;AAGA,SACIC,mBADJ,EAEIC,qBAFJ,QAGO,8BAHP;AAIA,SACIC,SADJ,EAEIC,SAFJ,EAGIC,QAHJ,EAIIC,cAJJ,QAKO,uBALP;AAMA,SACIC,UADJ,QAEO,6BAFP;AAGA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,OAAOC,yBAAP,MAAsC,oCAAtC;AACA,SACIC,gBADJ,QAEO,wBAFP;AAGA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SACIC,IADJ,EAEIC,QAFJ,QAGO,2BAHP;AAIA,IAAIC,oBAAoB,GAAG,mBAA3B;AACA,IAAIC,mBAAmB,GAAG,kBAA1B;AACA,IAAIC,sBAAsB,GAAG,qBAA7B;AACA,IAAIC,2BAA2B,GAAG,0BAAlC;AACA,IAAIC,aAAa,GAAG,qBAApB;AACA,IAAIC,eAAe,GAAG,cAAtB;AACA,IAAIC,eAAe,GAAG,cAAtB;AACA,IAAIC,gBAAgB,GAAG,eAAvB;AACA,IAAIC,mBAAmB,GAAG,kBAA1B;AACA,IAAIC,sBAAsB,GAAG,+BAA7B;AACA,IAAIC,YAAY,GAAG,gBAAnB;AACA,IAAIC,yBAAyB,GAAG,uBAAhC;AACA,IAAIC,2BAA2B,GAAG,0BAAlC;AACA,IAAIC,qBAAqB,GAAG,oBAA5B;AACA,IAAIC,EAAE,GAAG,MAAT;AACA,IAAIC,EAAE,GAAG,MAAT;AACA,IAAIC,GAAG,GAAG,OAAV;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,wBAAwB,GAAG,CAAC,cAAD,EAAiB,uBAAjB,EAA0C,gBAA1C,EAA4D,gBAA5D,CAA/B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EACxB,IAAIC,GAAG,GAAG,CAAV;EACAlD,IAAI,CAACiD,KAAD,EAAS,UAASE,CAAT,EAAYC,KAAZ,EAAmB;IAC5BF,GAAG,IAAIE,KAAK,IAAI,CAAhB;EACH,CAFG,CAAJ;EAGA,OAAOF,GAAP;AACH;;AAED,SAASG,eAAT,CAAyBC,SAAzB,EAAoCC,KAApC,EAA2C;EACvC,IAAIC,KAAK,GAAGD,KAAK,GAAGD,SAAS,CAACG,MAA9B;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACG,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;IACvCJ,SAAS,CAACI,CAAD,CAAT,IAAgBF,KAAhB;EACH;AACJ;;AAED,SAASG,uBAAT,CAAiCC,IAAjC,EAAuC;EACnCA,IAAI,CAACC,GAAL,CAAS,QAAT,EAAmBA,GAAnB,CAAuB,MAAvB;AACH;;AAED,SAASC,sBAAT,CAAgCF,IAAhC,EAAsCG,OAAtC,EAA+C;EAC3CJ,uBAAuB,CAACC,IAAD,CAAvB;EACAA,IAAI,CAACI,EAAL,CAAQ,QAAR,EAAkBD,OAAlB,EAA2BC,EAA3B,CAA8B,MAA9B,EAAsCD,OAAtC;AACH;;AAED,SAASE,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmD;EAC/C,IAAIC,gBAAgB,GAAG,YAAYD,SAAZ,GAAwB,CAAC,iBAAD,EAAoB,kBAApB,CAAxB,GAAkE,CAAC,gBAAD,EAAmB,mBAAnB,CAAzF;EACA,IAAIE,KAAK,GAAG,CAAZ;EACArE,IAAI,CAACkE,QAAD,EAAY,UAASf,CAAT,EAAYmB,IAAZ,EAAkB;IAC9B,IAAIC,aAAa,GAAGhF,MAAM,CAACiF,gBAAP,CAAwBF,IAAI,CAACG,GAAL,CAAS,CAAT,CAAxB,CAApB;IACAL,gBAAgB,CAACM,OAAjB,CAA0B,UAASC,eAAT,EAA0B;MAChDN,KAAK,IAAIO,UAAU,CAACL,aAAa,CAACI,eAAD,CAAd,CAAV,IAA8C,CAAvD;IACH,CAFD;EAGH,CALG,CAAJ;EAMA,OAAON,KAAP;AACH;;AAED,SAASQ,mBAAT,CAA6BC,cAA7B,EAA6C;EACzC,OAAOA,cAAc,CAACC,OAAf,CAAuB,MAAMxC,YAA7B,EAA2CkB,MAA3C,IAAqDqB,cAAc,CAACE,IAAf,CAAoB,MAAMzC,YAA1B,EAAwCkB,MAApG;AACH;;AACD,IAAIwB,SAAS,GAAG3E,MAAM,CAAC4E,OAAP,CAAe;EAC3BC,kBAAkB,EAAE,YAAW;IAC3B,OAAOjF,MAAM,CAAC,KAAKkF,QAAL,EAAD,EAAkB;MAC3BC,SAAS,EAAE;QACPC,OAAO,EAAE,GADF;QAEPC,kBAAkB,EAAE,GAFb;QAGPC,UAAU,EAAE,EAHL;QAIPC,IAAI,EAAE,UAJC;QAKPC,SAAS,EAAE,MALJ;QAMPC,oBAAoB,EAAE,IANf;QAOPC,gBAAgB,EAAE,EAPX;QAQPC,kBAAkB,EAAE,GARb;QASPC,mBAAmB,EAAE;MATd,CADgB;MAY3BC,UAAU,EAAE,IAZe;MAa3BC,UAAU,EAAE,IAbe;MAc3BC,kBAAkB,EAAE,KAdO;MAe3BC,YAAY,EAAE;QACVC,QAAQ,EAAE,GADA;QAEVC,SAAS,EAAE,GAFD;QAGVC,OAAO,EAAE,IAHC;QAIVC,WAAW,EAAE,KAJH;QAKVC,aAAa,EAAE,GALL;QAMVC,MAAM,EAAE,CANE;QAOVC,KAAK,EAAEpG,mBAAmB,CAACV,MAApB,CAA2B,+BAA3B,CAPG;QAQV0E,KAAK,EAAE,GARG;QASVqC,MAAM,EAAE,GATE;QAUVC,gBAAgB,EAAE;MAVR,CAfa;MA2B3BC,sBAAsB,EAAE,IA3BG;MA4B3BC,YAAY,EAAE,KA5Ba;MA6B3BC,qBAAqB,EAAE,KA7BI;MA8B3BC,cAAc,EAAE,KA9BW;MA+B3BC,cAAc,EAAE,KA/BW;MAgC3BC,eAAe,EAAE,IAhCU;MAiC3BC,UAAU,EAAE;QACRC,gBAAgB,EAAE,IADV;QAERC,gBAAgB,EAAE,IAFV;QAGRC,cAAc,EAAE,IAHR;QAIRC,aAAa,EAAE,IAJP;QAKRC,kBAAkB,EAAE,IALZ;QAMRC,OAAO,EAAE,KAND;QAORC,KAAK,EAAE;UACHC,eAAe,EAAErH,mBAAmB,CAACV,MAApB,CAA2B,6BAA3B,CADd;UAEHgI,YAAY,EAAEtH,mBAAmB,CAACV,MAApB,CAA2B,0BAA3B,CAFX;UAGHiI,eAAe,EAAEvH,mBAAmB,CAACV,MAApB,CAA2B,6BAA3B,CAHd;UAIHkI,aAAa,EAAExH,mBAAmB,CAACV,MAApB,CAA2B,2BAA3B;QAJZ;MAPC,CAjCe;MA+C3BkI,aAAa,EAAE,QA/CY;MAgD3BC,MAAM,EAAE;QACJzB,OAAO,EAAE,KADL;QAEJ0B,QAAQ,EAAE,WAFN;QAGJC,QAAQ,EAAE,KAAK,CAHX;QAIJC,iBAAiB,EAAE;MAJf,CAhDmB;MAsD3BC,aAAa,EAAE,IAtDY;MAuD3BC,kBAAkB,EAAE,IAvDO;MAwD3BC,gBAAgB,EAAE,IAxDS;MAyD3BC,qBAAqB,EAAE,IAzDI;MA0D3BC,qBAAqB,EAAE,IA1DI;MA2D3BC,eAAe,EAAE,MA3DU;MA4D3BC,eAAe,EAAE,UA5DU;MA6D3BC,SAAS,EAAE;QACPpC,OAAO,EAAE,IADF;QAEPqC,IAAI,EAAErI,mBAAmB,CAACV,MAApB,CAA2B,SAA3B,CAFC;QAGP0E,KAAK,EAAE,GAHA;QAIPqC,MAAM,EAAE,EAJD;QAKPiC,aAAa,EAAE,IALR;QAMPC,YAAY,EAAE,EANP;QAOPC,QAAQ,EAAE;MAPH,CA7DgB;MAsE3BpB,KAAK,EAAE;QACHqB,UAAU,EAAEzI,mBAAmB,CAACV,MAApB,CAA2B,wBAA3B,CADT;QAEHoJ,KAAK,EAAE1I,mBAAmB,CAAC2I,YAApB,CAAiC,mBAAjC,CAFJ;QAGHC,MAAM,EAAE5I,mBAAmB,CAACV,MAApB,CAA2B,uBAA3B,CAHL;QAIHuJ,gBAAgB,EAAE7I,mBAAmB,CAACV,MAApB,CAA2B,8BAA3B,CAJf;QAKHwJ,SAAS,EAAE9I,mBAAmB,CAACV,MAApB,CAA2B,uBAA3B,CALR;QAMHyJ,WAAW,EAAE/I,mBAAmB,CAACV,MAApB,CAA2B,yBAA3B,CANV;QAOH0J,mBAAmB,EAAEhJ,mBAAmB,CAAC2I,YAApB,CAAiC,iCAAjC,CAPlB;QAQHM,gBAAgB,EAAEjJ,mBAAmB,CAAC2I,YAApB,CAAiC,8BAAjC,CARf;QASHO,gBAAgB,EAAElJ,mBAAmB,CAACV,MAApB,CAA2B,8BAA3B,CATf;QAUH6J,aAAa,EAAEnJ,mBAAmB,CAACV,MAApB,CAA2B,0BAA3B,CAVZ;QAWH8J,gBAAgB,EAAEpJ,mBAAmB,CAACV,MAApB,CAA2B,8BAA3B;MAXf,CAtEoB;MAmF3B+J,WAAW,EAAE,IAnFc;MAoF3BC,cAAc,EAAE,IApFW;MAqF3BC,WAAW,EAAE,KArFc;MAsF3BC,YAAY,EAAE;QACVxD,OAAO,EAAE,KADC;QAEVyD,UAAU,EAAE,IAFF;QAGVC,IAAI,EAAE,cAHI;QAIVC,UAAU,EAAE,IAJF;QAKVC,UAAU,EAAE,IALF;QAMVC,aAAa,EAAE;MANL,CAtFa;MA8F3BC,qBAAqB,EAAE,IA9FI;MA+F3BC,oBAAoB,EAAE,GA/FK;MAgG3BC,WAAW,EAAE,IAhGc;MAiG3BC,UAAU,EAAE,IAjGe;MAkG3BC,YAAY,EAAE,IAlGa;MAmG3BC,YAAY,EAAE;QACVnG,KAAK,EAAE,GADG;QAEVqC,MAAM,EAAE,GAFE;QAGVJ,WAAW,EAAE,KAHH;QAIVmE,kBAAkB,EAAE,KAJV;QAKVlE,aAAa,EAAE,GALL;QAMVkB,KAAK,EAAE;UACHiD,UAAU,EAAErK,mBAAmB,CAACV,MAApB,CAA2B,mCAA3B,CADT;UAEHgL,EAAE,EAAEtK,mBAAmB,CAACV,MAApB,CAA2B,2BAA3B,CAFD;UAGHiL,MAAM,EAAEvK,mBAAmB,CAACV,MAApB,CAA2B,+BAA3B;QAHL;MANG;IAnGa,CAAlB,CAAb;EAgHH,CAlH0B;EAmH3BkL,wBAAwB,EAAE,UAASC,MAAT,EAAiB;IACvC,IAAIC,IAAI,GAAG,IAAX;IACA/K,IAAI,CAAC8K,MAAD,EAAU,UAASE,KAAT,EAAgBC,KAAhB,EAAuB;MACjCjL,IAAI,CAAC+C,wBAAD,EAA4B,UAASI,CAAT,EAAY+H,UAAZ,EAAwB;QACpD,IAAIC,YAAY,GAAGF,KAAK,CAACG,eAAN,IAAyBF,UAAU,IAAID,KAAK,CAACG,eAA7C,IAAgE,KAAK,CAAL,KAAWH,KAAK,CAACG,eAAN,CAAsBF,UAAtB,CAA9F;QACA,IAAIG,UAAU,GAAG,KAAK,CAAL,KAAWJ,KAAK,CAACC,UAAD,CAAhB,IAAgCC,YAAjD;;QACA,IAAIE,UAAJ,EAAgB;UACZ5K,gBAAgB,CAACwK,KAAD,EAAQC,UAAR,EAAoBH,IAAI,CAACO,MAAL,CAAYJ,UAAZ,CAApB,CAAhB;QACH;MACJ,CANG,CAAJ;IAOH,CARG,CAAJ;EASH,CA9H0B;EA+H3BK,yBAAyB,EAAE,YAAW;IAClC,IAAIR,IAAI,GAAG,IAAX;IACA,OAAO;MACHS,SAAS,EAAET,IADR;MAEH/E,UAAU,EAAE+E,IAAI,CAACO,MAAL,CAAY,YAAZ,CAFT;MAGH7D,KAAK,EAAEsD,IAAI,CAACO,MAAL,CAAY,OAAZ,CAHJ;MAIHpD,aAAa,EAAE6C,IAAI,CAACO,MAAL,CAAY,eAAZ,CAJZ;MAKHnD,kBAAkB,EAAE4C,IAAI,CAACO,MAAL,CAAY,oBAAZ,CALjB;MAMHlD,gBAAgB,EAAE2C,IAAI,CAACO,MAAL,CAAY,kBAAZ,CANf;MAOH/C,eAAe,EAAEwC,IAAI,CAACO,MAAL,CAAY,iBAAZ,CAPd;MAQHjD,qBAAqB,EAAE0C,IAAI,CAACO,MAAL,CAAY,uBAAZ,CARpB;MASHzD,aAAa,EAAEkD,IAAI,CAACO,MAAL,CAAY,eAAZ,CATZ;MAUH9C,eAAe,EAAEuC,IAAI,CAACO,MAAL,CAAY,iBAAZ,CAVd;MAWHhD,qBAAqB,EAAEyC,IAAI,CAACO,MAAL,CAAY,uBAAZ,CAXpB;MAYHG,gBAAgB,EAAE,UAASX,MAAT,EAAiB;QAC/BC,IAAI,CAACF,wBAAL,CAA8BC,MAA9B;MACH;IAdE,CAAP;EAgBH,CAjJ0B;EAkJ3BY,mBAAmB,EAAE,YAAW;IAC5B,IAAIX,IAAI,GAAG,IAAX;IACAA,IAAI,CAACY,eAAL,IAAwBZ,IAAI,CAACY,eAAL,CAAqBC,OAArB,EAAxB;IACAb,IAAI,CAACY,eAAL,GAAuB,IAAI/K,cAAJ,CAAmBmK,IAAI,CAACQ,yBAAL,EAAnB,CAAvB;;IACA,IAAIjM,SAAS,EAAb,EAAiB;MACbyL,IAAI,CAACY,eAAL,CAAqBE,OAArB,CAA6BC,GAA7B,CAAkC,YAAW;QACzCf,IAAI,CAACgB,OAAL;MACH,CAFD;IAGH;;IACDhB,IAAI,CAACY,eAAL,CAAqBK,aAArB,CAAmCF,GAAnC,CAAwC,UAASG,OAAT,EAAkB;MACtDlB,IAAI,CAACmB,WAAL,GAAmBD,OAAO,CAACE,IAA3B;MACApB,IAAI,CAACqB,UAAL,GAAkBH,OAAO,CAACI,GAA1B;IACH,CAHD;;IAIAtB,IAAI,CAACY,eAAL,CAAqBW,cAArB,CAAoCR,GAApC,CAAyC,UAASS,SAAT,EAAoB;MACzDxB,IAAI,CAACyB,cAAL;IACH,CAFD;;IAGAzB,IAAI,CAACY,eAAL,CAAqBc,eAArB,CAAqCX,GAArC,CAAyCf,IAAI,CAACyB,cAAL,CAAoBE,IAApB,CAAyB3B,IAAzB,CAAzC;;IACAA,IAAI,CAACY,eAAL,CAAqBgB,iBAArB,CAAuCb,GAAvC,CAA4C,YAAW;MACnDf,IAAI,CAAC6B,QAAL,CAAc,WAAd;IACH,CAFD;;IAGA,IAAIC,mBAAmB,GAAG9B,IAAI,CAACO,MAAL,CAAY,uBAAZ,CAA1B;;IACA,IAAIuB,mBAAJ,EAAyB;MACrB9B,IAAI,CAACY,eAAL,CAAqBkB,mBAArB,CAAyCf,GAAzC,CAA8C,UAASgB,CAAT,EAAY;QACtDD,mBAAmB,CAACC,CAAD,CAAnB;MACH,CAFD;IAGH;EACJ,CA5K0B;EA6K3BC,KAAK,EAAE,YAAW;IACd,KAAK3H,QAAL;;IACA,KAAKsG,mBAAL;;IACA,KAAKQ,WAAL,GAAmB,KAAKE,UAAL,GAAkB,IAArC;;IACA,KAAKY,YAAL;EACH,CAlL0B;EAmL3BA,YAAY,EAAE,YAAW;IACrB,KAAKC,QAAL,GAAgB;MACZC,SAAS,EAAE,KAAKC,qBAAL,CAA2B,WAA3B,CADC;MAEZvG,sBAAsB,EAAE,KAAKuG,qBAAL,CAA2B,wBAA3B,CAFZ;MAGZzD,WAAW,EAAE,KAAKyD,qBAAL,CAA2B,aAA3B,CAHD;MAIZ9C,WAAW,EAAE,KAAK8C,qBAAL,CAA2B,aAA3B,CAJD;MAKZ7C,UAAU,EAAE,KAAK6C,qBAAL,CAA2B,YAA3B,CALA;MAMZ5C,YAAY,EAAE,KAAK4C,qBAAL,CAA2B,cAA3B,CANF;MAOZxD,cAAc,EAAE,KAAKwD,qBAAL,CAA2B,gBAA3B;IAPJ,CAAhB;EASH,CA7L0B;EA8L3BP,QAAQ,EAAE,UAASQ,SAAT,EAAoBC,QAApB,EAA8B;IACpC,KAAKJ,QAAL,CAAcG,SAAd,EAAyBC,QAAzB;EACH,CAhM0B;EAiM3BC,cAAc,EAAE,UAASC,IAAT,EAAe;IAC3B,IAAIxK,wBAAwB,CAACyK,OAAzB,CAAiCD,IAAI,CAACpN,IAAtC,KAA+C,CAAnD,EAAsD;MAClD,IAAI2K,MAAM,GAAG,KAAK2C,aAAL,GAAqB3C,MAArB,EAAb;;MACA,KAAKD,wBAAL,CAA8BC,MAA9B;IACH;;IACD,QAAQyC,IAAI,CAACpN,IAAb;MACI,KAAK,YAAL;MACA,KAAK,cAAL;MACA,KAAK,gBAAL;MACA,KAAK,gBAAL;MACA,KAAK,uBAAL;MACA,KAAK,WAAL;MACA,KAAK,cAAL;QACI,KAAKuL,mBAAL;;QACA,KAAKgC,kBAAL,CAAwBC,IAAxB;;QACA,KAAKC,mBAAL;;QACA,KAAKC,WAAL;;QACA;;MACJ,KAAK,OAAL;MACA,KAAK,iBAAL;MACA,KAAK,eAAL;MACA,KAAK,oBAAL;MACA,KAAK,kBAAL;MACA,KAAK,uBAAL;MACA,KAAK,uBAAL;MACA,KAAK,eAAL;QACI,KAAKlC,eAAL,CAAqBmC,iBAArB,CAAuC,KAAKvC,yBAAL,EAAvC;;QACA;;MACJ,KAAK,oBAAL;MACA,KAAK,YAAL;MACA,KAAK,sBAAL;QACI;;MACJ,KAAK,YAAL;QACI,KAAKnG,QAAL,CAAcmI,IAAd;;QACA,KAAKK,mBAAL;;QACA,KAAKG,kBAAL;;QACAzO,SAAS,MAAM,KAAK0O,gBAAL,CAAsB,KAAKC,SAAL,CAAeC,YAAf,EAAtB,EAAqD,KAAKC,QAAL,EAArD,CAAf;;QACA,KAAKN,WAAL;;QACA;;MACJ,KAAK,QAAL;QACI,KAAKO,sBAAL;;QACA;;MACJ,KAAK,uBAAL;QACI;;MACJ,KAAK,aAAL;MACA,KAAK,wBAAL;MACA,KAAK,aAAL;MACA,KAAK,YAAL;MACA,KAAK,cAAL;MACA,KAAK,gBAAL;QACI,KAAKnB,QAAL,CAAcM,IAAI,CAACpN,IAAnB,IAA2B,KAAKgN,qBAAL,CAA2BI,IAAI,CAACpN,IAAhC,CAA3B;QACA;;MACJ,KAAK,cAAL;QACI,KAAKyN,mBAAL;;QACA,KAAKQ,sBAAL;;QACA;;MACJ,KAAK,WAAL;QACI,IAAI9O,SAAS,EAAb,EAAiB;UACb,IAAI,wBAAwBiO,IAAI,CAACc,QAAjC,EAA2C;YACvCC,YAAY,CAAC,KAAKC,qBAAN,CAAZ;;YACA,KAAKP,gBAAL,CAAsB,KAAKC,SAAL,CAAeC,YAAf,EAAtB,EAAqD,KAAKC,QAAL,EAArD;UACH,CAHD,MAGO;YACH,KAAKH,gBAAL,CAAsB,KAAKC,SAAL,CAAeC,YAAf,EAAtB,EAAqD,KAAKC,QAAL,EAArD;;YACA,KAAKN,WAAL;UACH;QACJ;;QACD;;MACJ,KAAK,YAAL;QACI,KAAKO,sBAAL;;QACA,KAAKP,WAAL;;QACA;;MACJ,KAAK,cAAL;QACI,KAAKD,mBAAL;;QACA,KAAKC,WAAL;;QACA;;MACJ,KAAK,aAAL;QACI,KAAKW,aAAL,GAAqBC,WAArB,CAAiCxM,aAAjC,EAAgD,CAAC,CAACsL,IAAI,CAACnK,KAAvD;;QACA,KAAKsL,gBAAL;QACA;;MACJ,KAAK,iBAAL;QACI,KAAKF,aAAL,GAAqBC,WAArB,CAAiC,cAAjC,EAAiD,CAAC,CAAClB,IAAI,CAACnK,KAAxD;;QACA,KAAKsL,gBAAL;QACA;;MACJ,KAAK,iBAAL;QACI,KAAKF,aAAL,GAAqBxJ,IAArB,CAA0B,MAAMlD,mBAAhC,EAAqD2M,WAArD,CAAiE,mBAAjE,EAAsF,WAAWlB,IAAI,CAACnK,KAAtG;;QACA,KAAKuI,eAAL,CAAqBmC,iBAArB,CAAuC,KAAKvC,yBAAL,EAAvC;;QACA;;MACJ,KAAK,QAAL;MACA,KAAK,OAAL;QACI,KAAKoD,UAAL,GAAkB,IAAlB;QACA,KAAKvJ,QAAL,CAAcmI,IAAd;QACA,KAAKqB,MAAL;QACA;;MACJ;QACI,KAAKxJ,QAAL,CAAcmI,IAAd;IAzFR;EA2FH,CAjS0B;EAkS3BsB,qBAAqB,EAAE,UAASC,WAAT,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;IAC7D,IAAIC,SAAJ;IACA,IAAIC,UAAJ;IACA,IAAIC,QAAQ,GAAG,KAAK/C,UAAL,IAAmB,KAAKF,WAAvC;;IACA,IAAI,KAAKkD,eAAT,EAA0B;MACtB;IACH;;IACD,KAAKA,eAAL,GAAuB,IAAvB;;IACA,IAAIL,QAAQ,IAAI,CAACA,QAAQ,CAACM,SAAT,EAAb,IAAqC,KAAKV,UAA9C,EAA0D;MACtD,KAAKvC,UAAL,GAAkB,IAAlB;IACH;;IACD,IAAI0C,WAAW,IAAI,CAACA,WAAW,CAACO,SAAZ,EAApB,EAA6C;MACzC,KAAKnD,WAAL,GAAmB,IAAnB;IACH;;IACD,IAAI,SAAS,KAAKE,UAAd,IAA4B,SAAS,KAAKF,WAA1C,IAAyDiD,QAAzD,IAAqE,KAAK7D,MAAL,CAAY,YAAZ,CAAzE,EAAoG;MAChG2D,SAAS,GAAG,KAAK7C,UAAL,IAAmB,CAA/B;MACA8C,UAAU,GAAG,KAAKhD,WAAL,IAAoB,CAAjC;MACA8C,QAAQ,CAACM,QAAT,CAAkB;QACdnD,IAAI,EAAE+C,UADQ;QAEd7C,GAAG,EAAE4C;MAFS,CAAlB;MAIAH,WAAW,CAACQ,QAAZ,CAAqB;QACjBnD,IAAI,EAAE+C;MADW,CAArB;MAGAH,QAAQ,CAACO,QAAT,CAAkB;QACdjD,GAAG,EAAE4C;MADS,CAAlB;;MAGA,KAAKtD,eAAL,CAAqB4D,0BAArB,CAAgD,KAAKnD,UAArD;IACH;;IACD,KAAKgD,eAAL,GAAuB,KAAvB;EACH,CAhU0B;EAiU3BI,kBAAkB,EAAE,UAASV,WAAT,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;IAC1D,IAAIjE,IAAI,GAAG,IAAX;IACA/K,IAAI,CAAC,CAAC8O,WAAD,EAAcC,QAAd,EAAwBC,QAAxB,CAAD,EAAqC,UAAS7L,CAAT,EAAYS,IAAZ,EAAkB;MACvDE,sBAAsB,CAACF,IAAD,EAAOkJ,CAAC,IAAI,UAASA,CAAT,EAAYlJ,IAAZ,EAAkB;QAChD,IAAI6L,YAAY,GAAG3C,CAAC,CAAC2C,YAArB;;QACA,IAAIC,UAAU,GAAG9L,IAAI,CAAC+L,cAAL,EAAjB;;QACA,IAAIC,UAAU,GAAG,eAAeF,UAAU,CAACpE,MAAX,CAAkB,WAAlB,CAAf,GAAgDmE,YAAY,CAACtD,IAA7D,GAAoEpB,IAAI,CAACmB,WAA1F;QACA,IAAI2D,SAAS,GAAG,iBAAiBH,UAAU,CAACpE,MAAX,CAAkB,WAAlB,CAAjB,IAAmDP,IAAI,CAAC4D,UAAxD,GAAqEc,YAAY,CAACpD,GAAlF,GAAwFtB,IAAI,CAACqB,UAA7G;;QACA,IAAI,CAACrB,IAAI,CAACmB,WAAL,IAAoB,CAArB,OAA6B0D,UAAU,IAAI,CAA3C,KAAiD,CAAC7E,IAAI,CAACqB,UAAL,IAAmB,CAApB,OAA4ByD,SAAS,IAAI,CAAzC,CAArD,EAAkG;UAC9F9E,IAAI,CAACmB,WAAL,GAAmB0D,UAAnB;UACA7E,IAAI,CAACqB,UAAL,GAAkByD,SAAlB;;UACA9E,IAAI,CAAC8D,qBAAL,CAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,QAAlD;;UACA,IAAI,cAAcjE,IAAI,CAACO,MAAL,CAAY,gBAAZ,CAAlB,EAAiD;YAC7CP,IAAI,CAACY,eAAL,CAAqBmE,mBAArB,CAAyC/E,IAAI,CAACmB,WAA9C,EAA2DnB,IAAI,CAACqB,UAAhE;UACH;QACJ;MACJ,CAbiC,CAahCU,CAbgC,EAa7BlJ,IAb6B,CAAZ,CAAtB;IAcH,CAfG,CAAJ;IAgBA,CAACmH,IAAI,CAAC4D,UAAN,IAAoB5D,IAAI,CAACY,eAAL,CAAqBoE,6BAArB,CAAmDf,QAAQ,CAACd,YAAT,EAAnD,CAApB;EACH,CApV0B;EAqV3B8B,MAAM,EAAEnQ,IArVmB;EAsV3BoQ,kBAAkB,EAAE,UAASC,SAAT,EAAoB;IACpC,IAAIC,UAAU,GAAGD,SAAS,CAACzM,MAAV,IAAoByM,SAAS,CAACzM,MAAV,GAAmByM,SAAS,CAAC,CAAD,CAAT,CAAazM,MAAhC,GAAyC,CAA7D,CAAjB;IACA,OAAO0M,UAAU,GAAG,KAAK7E,MAAL,CAAY,sBAAZ,CAApB;EACH,CAzV0B;EA0V3BsC,mBAAmB,EAAE,YAAW;IAC5B,IAAIwC,YAAJ;;IACA,IAAIrF,IAAI,GAAG,IAAX;IACA,IAAIsF,SAAS,GAAGtF,IAAI,CAACuF,mBAArB;IACA,IAAIC,mBAAmB,GAAGxF,IAAI,CAACO,MAAL,CAAY,cAAZ,KAA+B,EAAzD;IACA,IAAIkF,YAAY,GAAG,eAAeD,mBAAmB,CAAC5J,gBAAnC,GAAsD,CAAC;MACtE8J,OAAO,EAAE,QAD6D;MAEtEC,QAAQ,EAAE,OAF4D;MAGtEC,MAAM,EAAE,UAH8D;MAItE1E,OAAO,EAAE;QACLvD,IAAI,EAAErI,mBAAmB,CAACV,MAApB,CAA2B,IAA3B,CADD;QAELiR,OAAO,EAAE,UAAS9D,CAAT,EAAY;UACjB/B,IAAI,CAAC2C,kBAAL,CAAwBmD,QAAxB,GAAmCC,uBAAnC,CAA2D,cAA3D;;UACA/F,IAAI,CAAC2C,kBAAL,CAAwBC,IAAxB;QACH;MALI;IAJ6D,CAAD,EAWtE;MACC8C,OAAO,EAAE,QADV;MAECC,QAAQ,EAAE,OAFX;MAGCC,MAAM,EAAE,UAHT;MAIC1E,OAAO,EAAE;QACLvD,IAAI,EAAErI,mBAAmB,CAACV,MAApB,CAA2B,QAA3B,CADD;QAELiR,OAAO,EAAE,UAAS9D,CAAT,EAAY;UACjB/B,IAAI,CAAC2C,kBAAL,CAAwBC,IAAxB;QACH;MAJI;IAJV,CAXsE,CAAtD,GAqBd,EArBL;IAsBA,IAAIoD,4BAA4B,GAAG;MAC/BvK,MAAM,EAAE+J,mBAAmB,CAAC/J,MADG;MAE/BiB,KAAK,EAAE8I,mBAAmB,CAAC9I,KAApB,IAA6B,EAFL;MAG/BzB,UAAU,EAAE+E,IAAI,CAAC0C,aAAL,EAHmB;MAI/BnH,WAAW,EAAEiK,mBAAmB,CAACjK,WAJF;MAK/BC,aAAa,EAAEgK,mBAAmB,CAAChK,aALJ;MAM/BlC,KAAK,EAAE,KAAK,CANmB;MAO/BqC,MAAM,EAAE,KAAK,CAPkB;MAQ/B8D,YAAY,EAAEO,IAAI,CAACO,MAAL,CAAY,cAAZ,CARiB;MAS/BvF,UAAU,EAAE,UAAUqK,YAAY,GAAGrF,IAAI,CAACO,MAAL,CAAY,yBAAZ,CAAzB,KAAoE,KAAK,CAAL,KAAW8E,YAA/E,GAA8FA,YAA9F,GAA6GrF,IAAI,CAACO,MAAL,CAAY,YAAZ,CAT1F;MAU/B3E,gBAAgB,EAAE4J,mBAAmB,CAAC5J,gBAVP;MAW/BC,sBAAsB,EAAE,UAASkG,CAAT,EAAY;QAChC/B,IAAI,CAAC6B,QAAL,CAAc,wBAAd,EAAwCE,CAAxC;MACH;IAb8B,CAAnC;IAeA,IAAIkE,YAAY,GAAG;MACfC,OAAO,EAAE,KADM;MAEfxK,KAAK,EAAE8J,mBAAmB,CAAC9J,KAFZ;MAGfpC,KAAK,EAAEkM,mBAAmB,CAAClM,KAHZ;MAIfqC,MAAM,EAAE6J,mBAAmB,CAAC7J,MAJb;MAKfwK,eAAe,EAAE,IALF;MAMfC,aAAa,EAAE,IANA;MAOfhL,QAAQ,EAAEoK,mBAAmB,CAACpK,QAPf;MAQfC,SAAS,EAAEmK,mBAAmB,CAACnK,SARhB;MASfoK,YAAY,EAAEA,YATC;MAUfY,QAAQ,EAAE,UAAStE,CAAT,EAAY;QAClBA,CAAC,CAACtB,SAAF,CAAYqF,QAAZ,GAAuBC,uBAAvB,CAA+C,kBAA/C;MACH,CAZc;MAafO,OAAO,EAAE,UAASvE,CAAT,EAAY;QACjB/B,IAAI,CAACuG,gBAAL,CAAsBxE,CAAC,CAACtB,SAAF,CAAY+F,OAAZ,EAAtB,EAA6ClQ,qBAA7C,EAAoE0P,4BAApE;MACH,CAfc;MAgBfS,QAAQ,EAAE,UAAS1E,CAAT,EAAY;QAClB,IAAI5G,YAAY,GAAG4G,CAAC,CAACtB,SAAF,CAAYqF,QAAZ,GAAuBC,uBAAvB,CAA+C,UAA/C,CAAnB;QACA5K,YAAY,CAACuL,aAAb;QACAvL,YAAY,CAACwL,aAAb;MACH;IApBc,CAAnB;;IAsBA,IAAI3G,IAAI,CAAC2C,kBAAT,EAA6B;MACzB3C,IAAI,CAAC2C,kBAAL,CAAwBpC,MAAxB,CAA+B0F,YAA/B;;MACAjG,IAAI,CAAC2C,kBAAL,CAAwBmD,QAAxB,GAAmCC,uBAAnC,CAA2DC,4BAA3D;IACH,CAHD,MAGO;MACHhG,IAAI,CAAC2C,kBAAL,GAA0B3C,IAAI,CAACuG,gBAAL,CAAsBlS,CAAC,CAACyD,GAAD,CAAD,CAAO8O,QAAP,CAAgBnP,yBAAhB,EAA2CoP,QAA3C,CAAoDvB,SAApD,CAAtB,EAAsF5O,KAAtF,EAA6FuP,YAA7F,CAA1B;IACH;EACJ,CAha0B;EAia3BjD,kBAAkB,EAAE,YAAW;IAC3B,IAAIhD,IAAI,GAAG,IAAX;IACA,IAAI8G,UAAU,GAAG9G,IAAI,CAACuF,mBAAtB;;IACA,IAAIvF,IAAI,CAAC+G,YAAT,EAAuB;MACnB/G,IAAI,CAAC+G,YAAL,CAAkB3D,QAAlB,GAA6B4D,MAA7B;IACH;;IACDhH,IAAI,CAAC+G,YAAL,GAAoB/G,IAAI,CAACuG,gBAAL,CAAsBlS,CAAC,CAACyD,GAAD,CAAD,CAAO+O,QAAP,CAAgBC,UAAhB,CAAtB,EAAmDnQ,WAAnD,EAAgE;MAChFsQ,aAAa,EAAE,UAASC,UAAT,EAAqB;QAChC,IAAIC,KAAK,GAAGD,UAAU,CAACC,KAAvB;QACAD,UAAU,CAACrH,MAAX,GAAoB,IAApB;;QACA,IAAI,CAACsH,KAAL,EAAY;UACR;QACH;;QACD,IAAIC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,SAAb,IAA0B,CAA1B,GAA8BH,KAAK,CAACE,MAApC,GAA6ChT,CAAC,CAAC8S,KAAK,CAACE,MAAP,CAAD,CAAgBrN,OAAhB,CAAwB,IAAxB,EAA8BN,GAA9B,CAAkC,CAAlC,CAAjE;;QACA,IAAI,CAAC0N,aAAL,EAAoB;UAChB;QACH;;QACD,IAAI5E,IAAI,GAAGxC,IAAI,CAACuH,gBAAL,CAAsBH,aAAtB,EAAqCD,KAArC,CAAX;;QACA,IAAIK,KAAK,GAAGxH,IAAI,CAACyH,oBAAL,CAA0BjF,IAA1B,CAAZ;;QACA,IAAIgF,KAAJ,EAAW;UACPN,UAAU,CAACzG,SAAX,CAAqBF,MAArB,CAA4B,OAA5B,EAAqCiH,KAArC;UACAN,UAAU,CAACrH,MAAX,GAAoB,KAApB;UACA;QACH;MACJ,CAlB+E;MAmBhF6H,WAAW,EAAE,UAASC,MAAT,EAAiB;QAC1BA,MAAM,CAACC,QAAP,CAAgBF,WAAhB,IAA+BC,MAAM,CAACC,QAAP,CAAgBF,WAAhB,CAA4BC,MAA5B,CAA/B;MACH,CArB+E;MAsBhFE,QAAQ,EAAE1Q,eAtBsE;MAuBhFkQ,MAAM,EAAErH,IAAI,CAACoD,QAAL;IAvBwE,CAAhE,CAApB;EAyBH,CAhc0B;EAic3BqE,oBAAoB,EAAE,UAAS1F,CAAT,EAAY;IAC9B,IAAI/B,IAAI,GAAG,IAAX;IACA,IAAIwH,KAAK,GAAG,EAAZ;IACA,IAAI9K,KAAK,GAAGsD,IAAI,CAACO,MAAL,CAAY,OAAZ,CAAZ;;IACA,IAAI,UAAUwB,CAAC,CAAClJ,IAAZ,IAAoB,aAAakJ,CAAC,CAAClJ,IAAvC,EAA6C;MACzC,IAAIiP,UAAU,GAAG/F,CAAC,CAACA,CAAC,CAAClJ,IAAF,GAAS,QAAV,CAAlB;MACA,IAAIkP,kBAAkB,GAAGhG,CAAC,CAAC,aAAaA,CAAC,CAAClJ,IAAf,GAAsB,WAAtB,GAAoC,cAArC,CAA1B;MACA,IAAIqH,KAAK,GAAG6B,CAAC,CAACiG,IAAF,CAAOC,IAAP,IAAeH,UAAU,CAAC/F,CAAC,CAACiG,IAAF,CAAOC,IAAP,CAAYvP,MAAZ,GAAqB,CAAtB,CAArC;MACA,IAAIuC,UAAU,GAAG+E,IAAI,CAAC0C,aAAL,EAAjB;;MACA,IAAIxC,KAAK,IAAIA,KAAK,CAACjE,cAAf,IAAiC8F,CAAC,CAACiG,IAAF,CAAOC,IAAP,CAAYvP,MAAZ,GAAqBqJ,CAAC,CAACA,CAAC,CAAClJ,IAAF,GAAS,QAAV,CAAD,CAAqBH,MAA3E,IAAqF,CAACuC,UAAU,CAACiN,QAAX,EAA1F,EAAiH;QAC7GV,KAAK,CAACW,IAAN,CAAW;UACPC,UAAU,EAAE,IADL;UAEPC,IAAI,EAAE,MAFC;UAGP1K,IAAI,EAAEjB,KAAK,CAAC0B,SAHL;UAIPsJ,WAAW,EAAE,YAAW;YACpBzM,UAAU,CAACmD,SAAX,CAAqB8B,KAAK,CAACD,KAA3B;UACH;QANM,CAAX;QAQAuH,KAAK,CAACW,IAAN,CAAW;UACPxK,IAAI,EAAEjB,KAAK,CAAC2B,WADL;UAEPgK,IAAI,EAAE,MAFC;UAGPX,WAAW,EAAE,YAAW;YACpBzM,UAAU,CAACoD,WAAX,CAAuB6B,KAAK,CAACD,KAA7B;UACH;QALM,CAAX;MAOH;;MACD,IAAI8B,CAAC,CAACiG,IAAF,CAAOM,MAAP,IAAiB,CAACrN,UAAU,CAACiN,QAAX,EAAtB,EAA6C;QACzC,IAAIK,yBAAyB,GAAG,CAAhC;QACAtT,IAAI,CAAC8S,kBAAD,EAAsB,UAAS9H,KAAT,EAAgBC,KAAhB,EAAuB;UAC7C,IAAI,CAACA,KAAK,CAACnE,qBAAX,EAAkC;YAC9B;UACH;;UACD9G,IAAI,CAAC8M,CAAC,CAACyG,UAAH,EAAgB,UAASC,SAAT,EAAoBC,SAApB,EAA+B;YAC/C,IAAIxT,SAAS,CAAC6M,CAAC,CAACiG,IAAF,CAAOS,SAAR,CAAT,IAA+B1G,CAAC,CAACiG,IAAF,CAAOS,SAAP,KAAqBA,SAAxD,EAAmE;cAC/D;YACH;;YACD,IAAIE,oBAAoB,GAAG,CAACzT,SAAS,CAAC6M,CAAC,CAACiG,IAAF,CAAOS,SAAR,CAAV,IAAgC1G,CAAC,CAACyG,UAAF,CAAa9P,MAAb,GAAsB,CAAjF;YACA,IAAIkQ,UAAU,GAAG,aAAa7G,CAAC,CAAClJ,IAAf,GAAsB6D,KAAK,CAAC4B,mBAA5B,GAAkD5B,KAAK,CAAC6B,gBAAzE;YACA,IAAIsK,OAAO,GAAGlT,SAAS,CAACoM,CAAC,CAACyG,UAAH,EAAetI,KAAK,CAAC4I,kBAArB,CAAT,KAAsDL,SAAtD,IAAmE,CAAC1G,CAAC,CAACiG,IAAF,CAAOC,IAAP,IAAe,EAAhB,EAAoBc,IAApB,CAAyB,GAAzB,MAAkC,CAAC7I,KAAK,CAAC8I,iBAAN,IAA2B,EAA5B,EAAgCD,IAAhC,CAAqC,GAArC,CAAnH;YACA,IAAIpL,IAAI,GAAG9I,YAAY,CAAC+T,UAAD,EAAaD,oBAAoB,GAAGzI,KAAK,CAAC+I,OAAN,GAAgB,KAAhB,GAAwBP,SAAS,CAACO,OAArC,GAA+C/I,KAAK,CAAC+I,OAAtF,CAAvB;YACAzB,KAAK,CAACW,IAAN,CAAW;cACPC,UAAU,EAAE,MAAMG,yBADX;cAEPF,IAAI,EAAEQ,OAAO,GAAG,WAAW3I,KAAK,CAACgJ,SAAjB,GAA6B,cAA7B,GAA8C,YAAjD,GAAgE,MAFtE;cAGPvL,IAAI,EAAEA,IAHC;cAIP+J,WAAW,EAAE,YAAW;gBACpBzM,UAAU,CAACiF,KAAX,CAAiBA,KAAK,CAACD,KAAvB,EAA8B;kBAC1B6I,kBAAkB,EAAEJ,SAAS,CAACtT,IAAV,IAAkBsT,SAAS,CAACO,OAA5B,IAAuCP,SAAS,CAACA,SAD3C;kBAE1BM,iBAAiB,EAAEjH,CAAC,CAACiG,IAAF,CAAOC,IAFA;kBAG1BiB,SAAS,EAAE,WAAWhJ,KAAK,CAACgJ,SAAjB,GAA6B,KAA7B,GAAqC;gBAHtB,CAA9B;gBAKAjO,UAAU,CAACkO,IAAX;cACH;YAXM,CAAX;YAaAZ,yBAAyB;UAC5B,CAtBG,CAAJ;QAuBH,CA3BG,CAAJ;QA4BAtT,IAAI,CAAC8S,kBAAD,EAAsB,UAAS9H,KAAT,EAAgBC,KAAhB,EAAuB;UAC7C,IAAI,CAACA,KAAK,CAACnE,qBAAP,IAAgC,CAAC7G,SAAS,CAACgL,KAAK,CAAC4I,kBAAP,CAA9C,EAA0E;YACtE;UACH;;UACDtB,KAAK,CAACW,IAAN,CAAW;YACPC,UAAU,EAAE,MAAMG,yBADX;YAEPF,IAAI,EAAE,MAFC;YAGP1K,IAAI,EAAEjB,KAAK,CAAC8B,gBAHL;YAIPkJ,WAAW,EAAE,YAAW;cACpBzS,IAAI,CAAC8S,kBAAD,EAAsB,UAAS9H,KAAT,EAAgBC,KAAhB,EAAuB;gBAC7CjF,UAAU,CAACiF,KAAX,CAAiBA,KAAK,CAACD,KAAvB,EAA8B;kBAC1B6I,kBAAkB,EAAE,KAAK,CADC;kBAE1BE,iBAAiB,EAAE,KAAK,CAFE;kBAG1BE,SAAS,EAAE,KAAK;gBAHU,CAA9B;cAKH,CANG,CAAJ;cAOAjO,UAAU,CAACkO,IAAX;YACH;UAbM,CAAX;UAeA,OAAO,KAAP;QACH,CApBG,CAAJ;MAqBH;IACJ;;IACD,IAAInJ,IAAI,CAACO,MAAL,CAAY,sBAAZ,CAAJ,EAAyC;MACrCiH,KAAK,CAACW,IAAN,CAAW;QACPC,UAAU,EAAE,IADL;QAEPC,IAAI,EAAE,eAFC;QAGP1K,IAAI,EAAEjB,KAAK,CAACyB,gBAHL;QAIPuJ,WAAW,EAAE,YAAW;UACpB1H,IAAI,CAAC2C,kBAAL,CAAwByG,IAAxB;QACH;MANM,CAAX;IAQH;;IACD,IAAIpJ,IAAI,CAACO,MAAL,CAAY,gBAAZ,CAAJ,EAAmC;MAC/BiH,KAAK,CAACW,IAAN,CAAW;QACPC,UAAU,EAAE,IADL;QAEPC,IAAI,EAAE,UAFC;QAGP1K,IAAI,EAAEjB,KAAK,CAAC+B,aAHL;QAIPiJ,WAAW,EAAE,YAAW;UACpB1H,IAAI,CAACvB,aAAL;QACH;MANM,CAAX;IAQH;;IACDsD,CAAC,CAACyF,KAAF,GAAUA,KAAV;;IACAxH,IAAI,CAAC6B,QAAL,CAAc,wBAAd,EAAwCE,CAAxC;;IACAyF,KAAK,GAAGzF,CAAC,CAACyF,KAAV;;IACA,IAAIA,KAAK,IAAIA,KAAK,CAAC9O,MAAnB,EAA2B;MACvB,OAAO8O,KAAP;IACH;EACJ,CA1iB0B;EA2iB3BD,gBAAgB,EAAE,UAASH,aAAT,EAAwBiC,OAAxB,EAAiC;IAC/C,IAAIpO,UAAU,GAAG,KAAKyH,aAAL,EAAjB;IACA,IAAIF,IAAI,GAAG;MACP8G,SAAS,EAAErO,UAAU,CAACsO,aAAX,CAAyB,KAAzB,CADJ;MAEPC,YAAY,EAAEvO,UAAU,CAACsO,aAAX,CAAyB,QAAzB,CAFP;MAGPf,UAAU,EAAEvN,UAAU,CAACsO,aAAX,CAAyB,MAAzB,CAHL;MAIPpC,KAAK,EAAEkC;IAJA,CAAX;;IAMA,IAAIvP,mBAAmB,CAACzF,CAAC,CAAC+S,aAAD,CAAF,CAAvB,EAA2C;MACvC,OAAOjS,MAAM,CAAC,KAAKsU,gBAAL,CAAsBrC,aAAtB,CAAD,EAAuC5E,IAAvC,CAAb;IACH,CAFD,MAEO;MACH,OAAOrN,MAAM,CAAC,KAAKuU,eAAL,CAAqBtC,aAArB,CAAD,EAAsC5E,IAAtC,CAAb;IACH;EACJ,CAxjB0B;EAyjB3BiH,gBAAgB,EAAE,UAASrC,aAAT,EAAwB;IACtC,IAAIlH,KAAK,GAAG7L,CAAC,CAAC+S,aAAD,CAAD,CAAiBuC,QAAjB,GAA4BC,IAA5B,CAAiC,OAAjC,CAAZ;IACA,IAAIpH,IAAI,GAAG;MACPtC,KAAK,EAAEA;IADA,CAAX;IAGA,OAAOhL,SAAS,CAACgL,KAAD,CAAT,GAAmBsC,IAAnB,GAA0B,EAAjC;EACH,CA/jB0B;EAgkB3BkH,eAAe,EAAE,UAASG,WAAT,EAAsB;IACnC,IAAIC,YAAY,GAAGzV,CAAC,CAACwV,WAAD,CAApB;IACA,IAAIE,WAAW,GAAGF,WAAW,CAACvC,SAA9B;IACA,IAAI0C,QAAQ,GAAGH,WAAW,CAACI,aAAZ,CAA0BD,QAAzC;IACA,IAAIE,MAAM,GAAGJ,YAAY,CAAC9P,OAAb,CAAqB,OAArB,CAAb;IACA,IAAI4P,IAAI,GAAGM,MAAM,CAACN,IAAP,CAAY,MAAZ,CAAX;IACA,IAAI5B,IAAI,GAAG4B,IAAI,IAAIA,IAAI,CAACI,QAAD,CAAZ,IAA0BJ,IAAI,CAACI,QAAD,CAAJ,CAAeD,WAAf,CAArC;IACA,IAAIvH,IAAI,GAAG;MACP3J,IAAI,EAAEqR,MAAM,CAACN,IAAP,CAAY,MAAZ,CADC;MAEPI,QAAQ,EAAEA,QAFH;MAGPD,WAAW,EAAEA,WAHN;MAIPF,WAAW,EAAElV,gBAAgB,CAACmV,YAAD,CAJtB;MAKP9B,IAAI,EAAEA;IALC,CAAX;IAOA,OAAOxF,IAAP;EACH,CA/kB0B;EAglB3B2H,gBAAgB,EAAE,UAASpI,CAAT,EAAY;IAC1B,IAAI/B,IAAI,GAAG,IAAX;;IACA,IAAIwC,IAAI,GAAGxC,IAAI,CAACuH,gBAAL,CAAsBxF,CAAC,CAACqI,aAAxB,EAAuCrI,CAAvC,CAAX;;IACA,IAAIiG,IAAI,GAAGxF,IAAI,CAACwF,IAAhB;;IACA,IAAI,CAACA,IAAD,IAAS,CAACxF,IAAI,CAAC3J,IAAN,KAAe2J,IAAI,CAACwH,QAAL,IAAiBxH,IAAI,CAACuH,WAArC,CAAb,EAAgE;MAC5D;IACH;;IACD/J,IAAI,CAAC6B,QAAL,CAAc,aAAd,EAA6BW,IAA7B;;IACAwF,IAAI,IAAI,CAACxF,IAAI,CAAC3C,MAAd,IAAwB3K,SAAS,CAAC8S,IAAI,CAACqC,QAAN,CAAjC,IAAoDC,UAAU,CAAE,YAAW;MACvEtK,IAAI,CAACY,eAAL,CAAqBoH,IAAI,CAACqC,QAAL,GAAgB,oBAAhB,GAAuC,kBAA5D,EAAgF7H,IAAI,CAAC3J,IAArF,EAA2FmP,IAAI,CAACC,IAAhG;IACH,CAF6D,CAA9D;EAGH,CA3lB0B;EA4lB3BsC,cAAc,EAAE,YAAW;IACvB,OAAO,KAAKhK,MAAL,CAAY,cAAZ,CAAP;EACH,CA9lB0B;EA+lB3BiK,iBAAiB,EAAE/U,aAAa,CAACgV,gBA/lBN;EAgmB3BxH,gBAAgB,EAAExN,aAAa,CAACiV,eAhmBL;EAimB3BjJ,cAAc,EAAE,UAASkJ,QAAT,EAAmB;IAC/B,IAAI3K,IAAI,GAAG,IAAX;;IACA,IAAIwB,SAAS,GAAGxB,IAAI,CAACY,eAAL,CAAqBY,SAArB,EAAhB;;IACA,IAAI,CAACxB,IAAI,CAAC4K,UAAV,EAAsB;MAClB;IACH;;IACD,IAAIC,gBAAgB,GAAG7K,IAAI,CAAC4K,UAAL,CAAgBrK,MAAhB,CAAuB,SAAvB,CAAvB;;IACA,IAAI,CAACsK,gBAAL,EAAuB;MACnB7K,IAAI,CAAC8K,iBAAL,GAAyB,IAAIC,IAAJ,EAAzB;IACH;;IACD,IAAIvJ,SAAJ,EAAe;MACX,IAAImJ,QAAJ,EAAc;QACV,IAAI,IAAII,IAAJ,KAAW/K,IAAI,CAAC8K,iBAAhB,IAAqC,GAAzC,EAA8C;UAC1C9K,IAAI,CAAC4K,UAAL,CAAgBrK,MAAhB,CAAuB,SAAvB,EAAkCyK,IAAI,CAACC,KAAL,CAAW,MAAMN,QAAjB,IAA6B,GAA/D;QACH;MACJ,CAJD,MAIO;QACH3K,IAAI,CAAC4K,UAAL,CAAgBrK,MAAhB,CAAuB,SAAvB,EAAkCP,IAAI,CAACO,MAAL,CAAY,gBAAZ,CAAlC;MACH;IACJ;;IACDgD,YAAY,CAACvD,IAAI,CAACwD,qBAAN,CAAZ;;IACA,IAAIqH,gBAAgB,IAAI,CAACrJ,SAAzB,EAAoC;MAChCxB,IAAI,CAACwD,qBAAL,GAA6B8G,UAAU,CAAE,YAAW;QAChDtK,IAAI,CAAC4K,UAAL,CAAgBrK,MAAhB,CAAuB,SAAvB,EAAkC,KAAlC;;QACAP,IAAI,CAACoD,QAAL,GAAgB8H,WAAhB,CAA4BvT,qBAA5B;MACH,CAHsC,CAAvC;IAIH,CALD,MAKO;MACH,IAAIwT,iBAAiB,GAAG;QACpB1O,OAAO,EAAE+E;MADW,CAAxB;;MAGA,IAAIA,SAAJ,EAAe;QACX2J,iBAAiB,CAACC,QAAlB,GAA6B3V,aAAa,CAAC4V,0BAAd,CAAyCrL,IAAI,CAACkD,SAAL,CAAeC,YAAf,EAAzC,CAA7B;MACH;;MACDnD,IAAI,CAAC4K,UAAL,CAAgBrK,MAAhB,CAAuB4K,iBAAvB;;MACAnL,IAAI,CAACoD,QAAL,GAAgBM,WAAhB,CAA4B/L,qBAA5B,EAAmD,CAAC6J,SAApD;IACH;EACJ,CApoB0B;EAqoB3B6B,sBAAsB,EAAE,YAAW;IAC/B,IAAID,QAAQ,GAAG,KAAKA,QAAL,EAAf;IACA,IAAIkI,gBAAgB,GAAGlI,QAAQ,CAACnJ,IAAT,CAAc,MAAMhD,2BAApB,CAAvB;IACA,IAAIsU,iBAAiB,GAAGlX,CAAC,CAACyD,GAAD,CAAD,CAAO8O,QAAP,CAAgB,sBAAhB,CAAxB;IACA,IAAIzK,UAAU,GAAG,KAAKoE,MAAL,CAAY,YAAZ,CAAjB;IACA,IAAIiL,aAAa,GAAGpI,QAAQ,CAACnJ,IAAT,CAAc,mBAAd,CAApB;IACA,IAAIwR,aAAa,GAAGrI,QAAQ,CAACnJ,IAAT,CAAc,mBAAd,CAApB;IACA,IAAIyR,gBAAJ;;IACA,IAAIvP,UAAU,CAACM,OAAX,IAAsBN,UAAU,CAACE,gBAArC,EAAuD;MACnDqP,gBAAgB,GAAGF,aAAnB;IACH,CAFD,MAEO,IAAIrP,UAAU,CAACM,OAAX,KAAuBN,UAAU,CAACG,cAAX,IAA6BH,UAAU,CAACC,gBAA/D,CAAJ,EAAsF;MACzFsP,gBAAgB,GAAGD,aAAnB;IACH,CAFM,MAEA;MACHC,gBAAgB,GAAGJ,gBAAnB;IACH;;IACDG,aAAa,CAAC/H,WAAd,CAA0BpM,mBAA1B,EAA+C,CAAC,EAAE6E,UAAU,CAACM,OAAX,KAAuBN,UAAU,CAACG,cAAX,IAA6BH,UAAU,CAACC,gBAA/D,CAAF,CAAhD;IACAoP,aAAa,CAAC9H,WAAd,CAA0BpM,mBAA1B,EAA+C,CAAC,EAAE6E,UAAU,CAACM,OAAX,IAAsBN,UAAU,CAACE,gBAAnC,CAAhD;IACAiP,gBAAgB,CAAC5H,WAAjB,CAA6B,yBAA7B,EAAwDvH,UAAU,CAACM,OAAX,KAAuBN,UAAU,CAACG,cAAX,IAA6BH,UAAU,CAACC,gBAAxC,IAA4DD,UAAU,CAACI,aAA9F,CAAxD;IACA,KAAK6G,QAAL,GAAgBnJ,IAAhB,CAAqB,uBAArB,EAA8C+M,MAA9C;IACAuE,iBAAiB,CAACI,SAAlB,CAA4BD,gBAA5B;;IACA,IAAI,KAAKnL,MAAL,CAAY,sBAAZ,CAAJ,EAAyC;MACrC,IAAIqL,cAAc,GAAGvX,CAAC,CAACyD,GAAD,CAAD,CAAO+O,QAAP,CAAgB0E,iBAAhB,EAAmC3E,QAAnC,CAA4C,mCAA5C,CAArB;MACA,IAAIiF,aAAa,GAAG;QAChBxD,IAAI,EAAE,eADU;QAEhByD,IAAI,EAAE,KAAKvL,MAAL,CAAY,wBAAZ,CAFU;QAGhBsF,OAAO,EAAE,MAAM;UACX,KAAKkG,oBAAL,GAA4B3C,IAA5B;QACH;MALe,CAApB;;MAOA,KAAK7C,gBAAL,CAAsBqF,cAAtB,EAAsC,UAAtC,EAAkDC,aAAlD;IACH;;IACD,IAAI,KAAKtL,MAAL,CAAY,gBAAZ,CAAJ,EAAmC;MAC/B,IAAIyL,eAAe,GAAG3X,CAAC,CAACyD,GAAD,CAAD,CAAO+O,QAAP,CAAgB0E,iBAAhB,EAAmC3E,QAAnC,CAA4C,4BAA5C,CAAtB;;MACA,IAAIqF,cAAc,GAAG;QACjB5D,IAAI,EAAE,UADW;QAEjByD,IAAI,EAAE,KAAKvL,MAAL,CAAY,qBAAZ,CAFW;QAGjBsF,OAAO,EAAE,MAAM;UACX,KAAKpH,aAAL;QACH;MALgB,CAArB;;MAOA,KAAK8H,gBAAL,CAAsByF,eAAtB,EAAuC,UAAvC,EAAmDC,cAAnD;IACH;EACJ,CA/qB0B;EAgrB3BC,yBAAyB,EAAE,YAAW;IAClC,IAAIC,OAAO,GAAG,KAAK/I,QAAL,EAAd;;IACA,IAAIlO,SAAS,CAAC,KAAK0O,UAAN,CAAb,EAAgC;MAC5B,IAAIjI,MAAM,GAAG,KAAK4E,MAAL,CAAY,QAAZ,KAAyB,KAAK6C,QAAL,GAAgB1J,GAAhB,CAAoB,CAApB,EAAuB0S,KAAvB,CAA6BzQ,MAAnE;;MACA,IAAIA,MAAM,IAAI,KAAKiI,UAAL,GAAkB,WAAWjI,MAA3C,EAAmD;QAC/C,KAAKiI,UAAL,GAAkB,IAAlB;MACH;IACJ;;IACD,IAAI1O,SAAS,CAAC,KAAK0O,UAAN,CAAT,IAA8BuI,OAAO,CAACE,EAAR,CAAW,SAAX,CAAlC,EAAyD;MACrD;IACH;;IACD,KAAK9G,mBAAL,CAAyBqB,QAAzB,CAAkC,WAAlC;;IACA,IAAI0F,WAAW,GAAGjY,CAAC,CAACyD,GAAD,CAAnB;IACA7B,SAAS,CAACqW,WAAD,EAAcvU,WAAd,CAAT;IACAoU,OAAO,CAACI,MAAR,CAAeD,WAAf;IACA,KAAK1I,UAAL,GAAkB1N,SAAS,CAACiW,OAAD,CAAT,KAAuBpU,WAAzC;;IACA,KAAKwN,mBAAL,CAAyB2F,WAAzB,CAAqC,WAArC;;IACAoB,WAAW,CAACtF,MAAZ;EACH,CAlsB0B;EAmsB3BwF,cAAc,EAAE,UAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,EAA2EC,mBAA3E,EAAgG;IAC5G,IAAI3R,UAAU,GAAG,KAAKyH,aAAL,EAAjB;IACA,KAAKmK,UAAL,GAAkB,KAAKA,UAAL,IAAmB,IAAIxW,UAAJ,CAAe,IAAf,EAAqB,KAArB,CAArC;;IACA,KAAKwW,UAAL,CAAgBC,MAAhB,CAAuBL,kBAAvB,EAA2CxR,UAAU,CAACsO,aAAX,CAAyB,KAAzB,CAA3C;;IACA,KAAKwD,aAAL,GAAqB,KAAKA,aAAL,IAAsB,IAAI1W,UAAJ,CAAe,IAAf,EAAqB,QAArB,CAA3C;;IACA,KAAK0W,aAAL,CAAmBD,MAAnB,CAA0BJ,qBAA1B,EAAiDzR,UAAU,CAACsO,aAAX,CAAyB,QAAzB,CAAjD;;IACA,KAAKyD,aAAL,GAAqB,KAAKA,aAAL,IAAsB,IAAI3W,UAAJ,CAAe,IAAf,EAAqB,QAArB,CAA3C;;IACA,KAAK2W,aAAL,CAAmBF,MAAnB,CAA0BH,qBAA1B,EAAiD1R,UAAU,CAACsO,aAAX,CAAyB,QAAzB,CAAjD;;IACA,KAAK0D,WAAL,GAAmB,KAAKA,WAAL,IAAoB,IAAI5W,UAAJ,CAAe,IAAf,EAAqB,MAArB,CAAvC;;IACA,KAAK4W,WAAL,CAAiBH,MAAjB,CAAwBF,mBAAxB,EAA6C3R,UAAU,CAACsO,aAAX,CAAyB,MAAzB,CAA7C;;IACA,KAAKnG,QAAL,GAAgB8J,2BAAhB,CAA4C,UAA5C,EAAwDC,cAAxD;EACH,CA9sB0B;EA+sB3BC,mBAAmB,EAAE,YAAW;IAC5B,IAAIlD,MAAM,GAAG7V,CAAC,CAAC,SAAD,CAAD,CAAagZ,GAAb,CAAiB;MAC1B/T,KAAK,EAAE;IADmB,CAAjB,EAEVoK,WAFU,CAEExM,aAFF,EAEiB,CAAC,CAAC,KAAKqJ,MAAL,CAAY,aAAZ,CAFnB,EAE+CmD,WAF/C,CAE2D,cAF3D,EAE2E,CAAC,CAAC,KAAKnD,MAAL,CAAY,iBAAZ,CAF7E,CAAb;IAGA9L,YAAY,CAACwE,EAAb,CAAgBiR,MAAhB,EAAwB1U,YAAY,CAACH,cAAD,EAAiB,aAAjB,CAApC,EAAqE,IAArE,EAA2E,KAAK8U,gBAAL,CAAsBxI,IAAtB,CAA2B,IAA3B,CAA3E;IACA,OAAOuI,MAAP;EACH,CArtB0B;EAstB3BoD,eAAe,EAAE,UAASC,eAAT,EAA0B;IACvC,IAAItJ,QAAQ,GAAG,KAAKf,SAAL,IAAkB,IAAIpN,QAAJ,CAAa,IAAb,CAAjC;IACA,KAAKoN,SAAL,GAAiBe,QAAjB;IACAA,QAAQ,CAAC6I,MAAT,CAAgBS,eAAhB,EAAiC,KAAK3M,eAAL,CAAqB4M,YAArB,EAAjC;IACA,OAAOvJ,QAAP;EACH,CA3tB0B;EA4tB3BwJ,eAAe,EAAE,UAASC,eAAT,EAA0B;IACvC,IAAI1J,QAAQ,GAAG,KAAK2J,SAAL,IAAkB,IAAI5X,mBAAJ,CAAwB,IAAxB,CAAjC;IACA,KAAK4X,SAAL,GAAiB3J,QAAjB;IACAA,QAAQ,CAAC8I,MAAT,CAAgBY,eAAhB,EAAiC,KAAK9M,eAAL,CAAqBgN,WAArB,EAAjC;IACA,OAAO5J,QAAP;EACH,CAjuB0B;EAkuB3B6J,kBAAkB,EAAE,UAASC,kBAAT,EAA6B;IAC7C,IAAI/J,WAAW,GAAG,KAAKgK,YAAL,IAAqB,IAAI/X,qBAAJ,CAA0B,IAA1B,CAAvC;IACA,KAAK+X,YAAL,GAAoBhK,WAApB;IACAA,WAAW,CAAC+I,MAAZ,CAAmBgB,kBAAnB,EAAuC,KAAKlN,eAAL,CAAqBoN,cAArB,EAAvC;IACA,OAAOjK,WAAP;EACH,CAvuB0B;EAwuB3BkK,WAAW,EAAE,YAAW;IACpB,IAAIjO,IAAI,GAAG,IAAX;IACAA,IAAI,CAAC3F,QAAL,CAAc6T,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;IACAnO,IAAI,CAACoD,QAAL,GAAgBwD,QAAhB,CAAyBzP,eAAzB;EACH,CA5uB0B;EA6uB3BiX,kBAAkB,EAAE,YAAW;IAC3B,IAAIN,kBAAJ;IACA,IAAIJ,eAAJ;IACA,IAAIH,eAAJ;IACA,IAAIc,YAAJ;IACA,IAAIC,cAAc,GAAG,CAAC,KAAK/I,mBAA3B;IACA,IAAIkH,kBAAJ;IACA,IAAIC,qBAAJ;IACA,IAAIC,qBAAJ;IACA,IAAIC,mBAAJ;IACAyB,YAAY,GAAG,CAACC,cAAD,IAAmB,KAAK7K,aAAL,EAAlC;;IACA,IAAI,CAAC4K,YAAL,EAAmB;MACf,KAAKjL,QAAL,GAAgBwD,QAAhB,CAAyBxP,eAAzB,EAA0CwP,QAA1C,CAAmDrP,sBAAnD;MACA,KAAKgO,mBAAL,GAA2BlR,CAAC,CAACyD,GAAD,CAAD,CAAO8O,QAAP,CAAgB,wBAAhB,CAA3B;;MACA,KAAK/D,mBAAL;;MACA,KAAKG,kBAAL;;MACA8K,kBAAkB,GAAGzZ,CAAC,CAACwD,EAAD,CAAD,CAAM+O,QAAN,CAAe5P,sBAAf,CAArB;MACA0W,eAAe,GAAGrZ,CAAC,CAACwD,EAAD,CAAD,CAAM+O,QAAN,CAAe7P,mBAAf,CAAlB;MACAwW,eAAe,GAAGlZ,CAAC,CAACwD,EAAD,CAAD,CAAM+O,QAAN,CAAe9P,oBAAf,CAAlB;MACAuX,YAAY,GAAG,KAAKjB,mBAAL,EAAf;MACAR,mBAAmB,GAAGvY,CAAC,CAACwD,EAAD,CAAD,CAAM+O,QAAN,CAAe,gBAAf,CAAtB;MACA+F,qBAAqB,GAAGtY,CAAC,CAAC,MAAD,CAAD,CAAUka,IAAV,CAAe,SAAf,EAA0B,GAA1B,EAA+B3H,QAA/B,CAAwC,kBAAxC,CAAxB;MACA8F,qBAAqB,GAAGrY,CAAC,CAACwD,EAAD,CAAD,CAAM+O,QAAN,CAAe,kBAAf,CAAxB;MACA6F,kBAAkB,GAAGpY,CAAC,CAACwD,EAAD,CAAD,CAAM+O,QAAN,CAAe3P,2BAAf,CAArB;MACA5C,CAAC,CAACuD,EAAD,CAAD,CAAM2U,MAAN,CAAaI,qBAAb,EAAoC9F,QAApC,CAA6CwH,YAA7C;MACAha,CAAC,CAACuD,EAAD,CAAD,CAAM2U,MAAN,CAAaK,mBAAb,EAAkCL,MAAlC,CAAyCG,qBAAzC,EAAgE7F,QAAhE,CAAyEwH,YAAzE;MACAha,CAAC,CAACuD,EAAD,CAAD,CAAM2U,MAAN,CAAaE,kBAAb,EAAiCF,MAAjC,CAAwCuB,kBAAxC,EAA4DjH,QAA5D,CAAqEwH,YAArE;MACAha,CAAC,CAACuD,EAAD,CAAD,CAAMgP,QAAN,CAAevP,gBAAf,EAAiCkV,MAAjC,CAAwCmB,eAAxC,EAAyDnB,MAAzD,CAAgEgB,eAAhE,EAAiF1G,QAAjF,CAA0FwH,YAA1F;;MACA,KAAK9I,mBAAL,CAAyBgH,MAAzB,CAAgC8B,YAAhC;;MACA,KAAKjL,QAAL,GAAgBmJ,MAAhB,CAAuB,KAAKhH,mBAA5B;;MACA,IAAI,WAAW,KAAKhF,MAAL,CAAY,iBAAZ,CAAf,EAA+C;QAC3CmN,eAAe,CAAC9G,QAAhB,CAAyB,mBAAzB;MACH;IACJ;;IACD,KAAKxD,QAAL,GAAgBwD,QAAhB,CAAyBjP,qBAAzB;;IACA,KAAK4O,gBAAL,CAAsB,KAAKnD,QAAL,EAAtB,EAAuC7M,yBAAvC,EAAkE;MAC9D0E,UAAU,EAAE,KAAKyH,aAAL,EADkD;MAE9D1H,UAAU,EAAE,KAAKuF,MAAL,CAAY,YAAZ,CAFkD;MAG9D/D,kBAAkB,EAAE,KAAK+D,MAAL,CAAY,+BAAZ,CAH0C;MAI9Dd,YAAY,EAAE,KAAKc,MAAL,CAAY,cAAZ,CAJgD;MAK9D9D,OAAO,EAAE,KAAK8D,MAAL,CAAY,SAAZ;IALqD,CAAlE;;IAOA,IAAI0D,QAAQ,GAAG,KAAKqJ,eAAL,CAAqBC,eAArB,CAAf;;IACA,IAAIvJ,QAAQ,GAAG,KAAKyJ,eAAL,CAAqBC,eAArB,CAAf;;IACA,IAAI3J,WAAW,GAAG,KAAK8J,kBAAL,CAAwBC,kBAAxB,CAAlB;;IACA7J,QAAQ,CAACoK,YAAT,GAAwBG,OAAxB,CAAgCzK,WAAW,CAAC0K,WAAZ,EAAhC;;IACA,IAAIH,cAAJ,EAAoB;MAChB,KAAKrL,gBAAL,CAAsBgB,QAAQ,CAACd,YAAT,GAAwBuL,MAAxB,EAAtB,EAAwD,KAAKtL,QAAL,EAAxD;;MACA,KAAKC,sBAAL;;MACAW,QAAQ,CAAC2K,gBAAT;MACA5K,WAAW,CAAC4K,gBAAZ;MACA1K,QAAQ,CAAC0K,gBAAT;IACH;;IAAC,CAAC1K,QAAD,EAAWD,QAAX,EAAqBD,WAArB,EAAkCpK,OAAlC,CAA2C,UAASd,IAAT,EAAe;MACxDD,uBAAuB,CAACC,IAAD,CAAvB;IACH,CAFC;;IAGF,KAAK2T,cAAL,CAAoBC,kBAApB,EAAwCC,qBAAxC,EAA+DC,qBAA/D,EAAsFC,mBAAtF;;IACA,KAAKgC,OAAL,CAAaN,cAAb;EACH,CAtyB0B;EAuyB3BM,OAAO,EAAE,UAASN,cAAT,EAAyB;IAC9B,IAAItO,IAAI,GAAG,IAAX;;IACA,IAAI6O,aAAa,GAAG,YAAW;MAC3B7O,IAAI,CAAC2D,gBAAL;IACH,CAFD;;IAGA,IAAI3D,IAAI,CAACkF,kBAAL,CAAwBlF,IAAI,CAACkD,SAAL,CAAe4L,OAAf,EAAxB,KAAqDR,cAAzD,EAAyE;MACrEhE,UAAU,CAACuE,aAAD,CAAV;IACH,CAFD,MAEO;MACHA,aAAa;IAChB;EACJ,CAjzB0B;EAkzB3BE,uBAAuB,EAAE,YAAW;IAChC,IAAI,CAAC,KAAKnO,eAAL,CAAqBY,SAArB,EAAL,EAAuC;MACnC,KAAKnH,QAAL;IACH;EACJ,CAtzB0B;EAuzB3B2U,aAAa,EAAE,UAASnW,IAAT,EAAe;IAC1B,IAAI,aAAaA,IAAjB,EAAuB;MACnB,OAAO,KAAKkV,YAAL,CAAkBiB,aAAlB,CAAgC,KAAK7N,WAArC,CAAP;IACH,CAFD,MAEO;MACH,OAAO,KAAKwM,SAAL,CAAeqB,aAAf,CAA6B,KAAK3N,UAAlC,CAAP;IACH;EACJ,CA7zB0B;EA8zB3BqB,aAAa,EAAE,YAAW;IACtB,OAAO,KAAK9B,eAAL,CAAqB8B,aAArB,EAAP;EACH,CAh0B0B;EAi0B3BqJ,oBAAoB,EAAE,YAAW;IAC7B,OAAO,KAAKpJ,kBAAZ;EACH,CAn0B0B;EAo0B3B2B,SAAS,EAAE,UAASzL,IAAT,EAAe;IACtB,OAAO,aAAaA,IAAb,GAAoB,KAAKkV,YAAL,CAAkBzJ,SAAlB,EAApB,GAAoD,KAAKqJ,SAAL,CAAerJ,SAAf,EAA3D;EACH,CAt0B0B;EAu0B3B2K,iBAAiB,EAAE,YAAW;IAC1B,KAAKtL,gBAAL;EACH,CAz0B0B;EA00B3BuL,kBAAkB,EAAE,UAASzS,OAAT,EAAkB;IAClC,IAAIA,OAAJ,EAAa;MACT,KAAKkH,gBAAL;IACH;EACJ,CA90B0B;EA+0B3BwL,QAAQ,EAAE,YAAW;IACjB,IAAInP,IAAI,GAAG,IAAX;IACAuD,YAAY,CAACvD,IAAI,CAACwD,qBAAN,CAAZ;IACAxD,IAAI,CAAC3F,QAAL,CAAc6T,KAAd,CAAoBlO,IAApB,EAA0BmO,SAA1B;;IACA,IAAInO,IAAI,CAACY,eAAT,EAA0B;MACtBZ,IAAI,CAACY,eAAL,CAAqBC,OAArB;IACH;EACJ,CAt1B0B;EAu1B3B4C,aAAa,EAAE,YAAW;IACtB,OAAO,KAAKL,QAAL,GAAgBnJ,IAAhB,CAAqB,OAArB,EAA8BmV,KAA9B,EAAP;EACH,CAz1B0B;EA01B3BC,eAAe,EAAE,UAASC,SAAT,EAAoB;IACjC,OAAO,kBAAkBA,SAAzB;EACH,CA51B0B;EA61B3BzL,MAAM,EAAE,YAAW;IACf,KAAKF,gBAAL;EACH,CA/1B0B;EAg2B3B4L,OAAO,EAAE,YAAW;IAChB,OAAO,KAAKlV,QAAL,MAAmB,CAAC,KAAKuG,eAAL,CAAqBY,SAArB,EAA3B;EACH,CAl2B0B;EAm2B3BmC,gBAAgB,EAAE,YAAW;IACzB,IAAI3D,IAAI,GAAG,IAAX;IACA,IAAIwP,UAAJ;;IACA,IAAInB,YAAY,GAAGrO,IAAI,CAACyD,aAAL,EAAnB;;IACA,IAAIgM,YAAJ;IACA,IAAIC,UAAU,GAAG,CAAjB;IACA,IAAIC,WAAW,GAAG,CAAlB;IACA,IAAIC,aAAa,GAAG,CAApB;IACA,IAAIC,aAAJ;IACA,IAAIC,gBAAJ;IACA,IAAIC,YAAY,GAAG1B,YAAY,CAACpU,IAAb,CAAkB,MAAMnD,oBAAxB,CAAnB;IACA,IAAIkZ,WAAW,GAAG3B,YAAY,CAACpU,IAAb,CAAkB,MAAMlD,mBAAxB,CAAlB;IACA,IAAIkZ,cAAc,GAAG5B,YAAY,CAACpU,IAAb,CAAkB,MAAMjD,sBAAxB,CAArB;IACA,IAAIkZ,eAAe,GAAG7B,YAAY,CAACpU,IAAb,CAAkB,MAAMhD,2BAAxB,CAAtB;IACA,IAAIkZ,gBAAgB,GAAG9B,YAAY,CAACpU,IAAb,CAAkB,mBAAlB,CAAvB;IACA,IAAImW,gBAAgB,GAAG/B,YAAY,CAACpU,IAAb,CAAkB,mBAAlB,CAAvB;IACA,IAAIoW,eAAe,GAAGrQ,IAAI,CAAC6M,UAA3B;IACA,IAAIyD,CAAC,GAAG,IAAIzZ,QAAJ,EAAR;;IACA,IAAI,CAACtC,SAAS,EAAd,EAAkB;MACd;IACH;;IACD,IAAIgc,yBAAyB,GAAGF,eAAe,CAACG,SAAhB,MAA+B,WAAWxQ,IAAI,CAACO,MAAL,CAAY,iBAAZ,CAA1E;;IACAP,IAAI,CAACkM,yBAAL;;IACA,IAAI,CAAClM,IAAI,CAACkD,SAAL,CAAeuL,WAAf,GAA6B/V,MAAlC,EAA0C;MACtCsH,IAAI,CAACkD,SAAL,CAAemL,YAAf,GAA8BG,OAA9B,CAAsCxO,IAAI,CAAC+N,YAAL,CAAkBU,WAAlB,EAAtC;IACH;;IACD,IAAI8B,yBAAJ,EAA+B;MAC3BvQ,IAAI,CAAC2N,SAAL,CAAe8C,cAAf,CAA8BJ,eAAe,CAACK,eAAhB,EAA9B;;MACA1Q,IAAI,CAAC2N,SAAL,CAAeU,YAAf,GAA8BG,OAA9B,CAAsC6B,eAAe,CAAC5B,WAAhB,EAAtC;IACH;;IACDJ,YAAY,CAACzH,QAAb,CAAsBlP,2BAAtB;;IACAsI,IAAI,CAACkD,SAAL,CAAeyN,KAAf;;IACA3Q,IAAI,CAAC2N,SAAL,CAAegD,KAAf;;IACA3Q,IAAI,CAAC+N,YAAL,CAAkB4C,KAAlB;;IACAN,eAAe,CAACM,KAAhB;;IACA,IAAIC,kBAAkB,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyBA,SAAS,GAAGD,QAAZ,IAAwB,CAA1E;;IACA,IAAIE,oBAAoB,GAAG,CAACC,cAAD,EAAiBrB,WAAjB,EAA8BE,aAA9B,EAA6CC,gBAA7C,EAA+DmB,cAA/D,KAAkFpB,aAAa,GAAGmB,cAAH,GAAoBrB,WAAW,IAAIG,gBAAgB,GAAGmB,cAAH,GAAoB,CAAxC,CAAzJ;;IACAjc,WAAW,CAAE,YAAW;MACpB,IAAIkc,UAAU,GAAGlR,IAAI,CAAC2N,SAAL,CAAewD,aAAf,EAAjB;;MACA,IAAIC,qBAAqB,GAAGhb,cAAc,CAAC8Z,eAAe,CAAC,CAAD,CAAhB,EAAqB,IAArB,CAAd,IAA4CK,yBAAyB,GAAGW,UAAU,CAAC,CAAD,CAAb,GAAmB,CAAxF,CAA5B;MACA,IAAIG,gBAAgB,GAAG,CAAvB;MACA,IAAIL,cAAc,GAAG,CAArB;;MACA,IAAIhR,IAAI,CAAC4D,UAAT,EAAqB;QACjByN,gBAAgB,GAAGnb,SAAS,CAACia,gBAAD,CAA5B;QACA,IAAImB,WAAW,GAAGjD,YAAY,CAACpU,IAAb,CAAkB,iBAAlB,CAAlB;QACA,IAAIsX,gBAAgB,GAAGrb,SAAS,CAACob,WAAD,CAAhC;QACA7B,YAAY,GAAGvW,oBAAoB,CAAC,CAAC+W,cAAD,EAAiBF,YAAjB,EAA+B1B,YAA/B,EAA6C+B,gBAA7C,EAA+DD,gBAA/D,CAAD,EAAmF,QAAnF,CAAnC;QACAa,cAAc,GAAG9a,SAAS,CAAC8J,IAAI,CAACoD,QAAL,EAAD,CAAT,GAA6BiO,gBAA7B,GAAgDE,gBAAhD,IAAoEvG,IAAI,CAACwG,GAAL,CAAStb,SAAS,CAAC8J,IAAI,CAACkD,SAAL,CAAeuL,WAAf,EAAD,CAAlB,EAAkDvY,SAAS,CAAC+Z,cAAD,CAA3D,EAA6EmB,qBAA7E,IAAsG3B,YAA1K,CAAjB;MACH;;MACD,IAAIwB,cAAc,GAAGjR,IAAI,CAACkD,SAAL,CAAeuO,iBAAf,EAArB;;MACA,IAAIC,oBAAoB,GAAGd,kBAAkB,CAACI,cAAD,EAAiB9a,SAAS,CAAC8J,IAAI,CAACkD,SAAL,CAAemL,YAAf,EAAD,CAA1B,CAA7C;;MACArO,IAAI,CAACkD,SAAL,CAAemL,YAAf,GAA8BhB,GAA9B,CAAkC;QAC9B/T,KAAK,EAAE0G,IAAI,CAAC4D,UAAL,IAAmB8N,oBAAnB,IAA2CT,cAA3C,GAA4D,eAAeU,MAAf,CAAsBV,cAAtB,EAAsC,KAAtC,CAA5D,GAA2G;MADpF,CAAlC;;MAGA,IAAIW,YAAY,GAAG5R,IAAI,CAACkD,SAAL,CAAe2O,eAAf,EAAnB;;MACA,IAAIC,eAAe,GAAGvB,yBAAyB,GAAGW,UAAU,CAACa,KAAX,CAAiB,CAAjB,CAAH,GAAyBb,UAAxE;;MACA,IAAIc,eAAe,GAAGhS,IAAI,CAACkD,SAAL,CAAeiO,aAAf,EAAtB;;MACA,IAAIc,mBAAmB,GAAGjS,IAAI,CAACY,eAAL,CAAqBoN,cAArB,GAAsCtV,MAAhE;;MACA,IAAIwZ,aAAa,GAAGtc,qBAAqB,CAACkc,eAAD,EAAkBE,eAAe,CAACD,KAAhB,CAAsBE,mBAAtB,CAAlB,CAAzC;MACA,IAAIE,qBAAqB,GAAGH,eAAe,CAACD,KAAhB,CAAsB,CAAtB,EAAyBE,mBAAzB,CAA5B;MACA,IAAIG,iBAAiB,GAAGna,WAAW,CAACka,qBAAD,CAAnC;;MACA,IAAIE,oBAAoB,GAAGrS,IAAI,CAAC2N,SAAL,CAAekE,eAAf,EAA3B;;MACAnC,UAAU,GAAGvZ,QAAQ,CAAC6J,IAAI,CAACkD,SAAL,CAAemL,YAAf,EAAD,CAArB;MACAsB,WAAW,GAAG1X,WAAW,CAACia,aAAD,CAAzB;;MACA,IAAI,CAACxC,UAAD,IAAe,CAACC,WAApB,EAAiC;QAC7BW,CAAC,CAACgC,OAAF;QACA;MACH;;MACD1C,aAAa,GAAG3X,WAAW,CAACoa,oBAAD,CAA3B;MACA,IAAIE,YAAY,GAAGpc,QAAQ,CAAC6J,IAAI,CAACoD,QAAL,EAAD,CAA3B;MACAqM,YAAY,GAAGvW,oBAAoB,CAAC,CAAC8W,WAAD,EAAcD,YAAd,EAA4B1B,YAA5B,CAAD,EAA4C,OAA5C,CAAnC;MACAmB,UAAU,GAAG+C,YAAY,GAAG3C,aAAf,GAA+BH,YAA5C;MACAD,UAAU,GAAGA,UAAU,GAAG,CAAb,GAAiBA,UAAjB,GAA8BE,UAA3C;MACA,IAAI8C,IAAI,GAAG9C,UAAU,GAAGF,UAAxB;MACA,IAAIiD,qBAAqB,GAAGD,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAjD;;MACA,IAAIC,qBAAJ,EAA2B;QACvBna,eAAe,CAACsZ,YAAD,EAAeY,IAAf,CAAf;QACA9C,UAAU,GAAGF,UAAb;MACH;;MACDK,aAAa,GAAG7P,IAAI,CAAC4D,UAAL,IAAmBgN,kBAAkB,CAACI,cAAD,EAAiBrB,WAAjB,CAArD;MACAG,gBAAgB,GAAGc,kBAAkB,CAACpB,UAAD,EAAaE,UAAb,CAArC;MACA,IAAIgD,WAAW,GAAG3B,oBAAoB,CAACC,cAAD,EAAiBrB,WAAjB,EAA8BE,aAA9B,EAA6CC,gBAA7C,EAA+DmB,cAA/D,CAAtC;MACAlc,WAAW,CAAE,YAAW;QACpBiL,IAAI,CAAC+N,YAAL,CAAkBM,YAAlB,GAAiC9B,MAAjC,CAAwCvM,IAAI,CAACkD,SAAL,CAAeuL,WAAf,EAAxC;;QACA4B,eAAe,CAAChC,YAAhB,GAA+B9B,MAA/B,CAAsCvM,IAAI,CAAC2N,SAAL,CAAec,WAAf,EAAtC;;QACA,IAAI2C,qBAAqB,GAAGgB,iBAA5B,EAA+C;UAC3C9Z,eAAe,CAAC6Z,qBAAD,EAAwBC,iBAAiB,GAAGhB,qBAA5C,CAAf;;UACApR,IAAI,CAAC+N,YAAL,CAAkB4E,aAAlB,CAAgCR,qBAAhC;QACH;;QACD9D,YAAY,CAACnD,WAAb,CAAyBxT,2BAAzB;QACA0Y,gBAAgB,CAACzG,QAAjB,GAA4B0D,GAA5B,CAAgC,UAAhC,EAA4CmC,UAA5C;;QACAxP,IAAI,CAAC+N,YAAL,CAAkB6E,aAAlB,CAAgCpD,UAAhC;;QACAxP,IAAI,CAAC+N,YAAL,CAAkB8E,uBAAlB,CAA0ChD,aAAa,GAAGoB,cAAH,GAAoB,CAA3E;;QACAjR,IAAI,CAAC+N,YAAL,CAAkB+E,eAAlB,CAAkClB,YAAlC;;QACA5R,IAAI,CAAC2N,SAAL,CAAeoF,cAAf,CAA8B/S,IAAI,CAAC4D,UAAL,GAAkB8O,WAAlB,GAAgC,MAA9D;;QACA1S,IAAI,CAAC2N,SAAL,CAAekF,uBAAf,CAAuC/C,gBAAgB,GAAGmB,cAAH,GAAoB,CAA3E;;QACAjR,IAAI,CAAC2N,SAAL,CAAemF,eAAf,CAA+BT,oBAA/B;;QACArS,IAAI,CAAC2N,SAAL,CAAegF,aAAf,CAA6BT,aAA7B;;QACAlS,IAAI,CAACkD,SAAL,CAAe4P,eAAf,CAA+BlB,YAA/B;;QACA5R,IAAI,CAACkD,SAAL,CAAeyP,aAAf,CAA6BT,aAA7B;;QACAlS,IAAI,CAACkD,SAAL,CAAe0P,aAAf,CAA6BpD,UAA7B;;QACAxP,IAAI,CAACkD,SAAL,CAAe6P,cAAf,CAA8B/S,IAAI,CAAC4D,UAAL,GAAkB8O,WAAlB,GAAgC,MAA9D;;QACAnC,yBAAyB,IAAIF,eAAe,CAACyC,eAAhB,CAAgCT,oBAAhC,CAA7B;QACAtC,YAAY,CAACrM,WAAb,CAAyBpM,mBAAzB,EAA8C,CAACuY,aAA/C;QACAG,WAAW,CAACtM,WAAZ,CAAwBpM,mBAAxB,EAA6C,CAACuY,aAA9C;;QACA,IAAI,CAAC7P,IAAI,CAAC4D,UAAN,IAAoB2O,YAAY,KAAKpc,QAAQ,CAAC6J,IAAI,CAACoD,QAAL,EAAD,CAAjD,EAAoE;UAChE,IAAI4P,KAAK,GAAGT,YAAY,GAAGpc,QAAQ,CAAC6J,IAAI,CAACoD,QAAL,EAAD,CAAnC;;UACA,IAAI,CAAC0M,gBAAL,EAAuB;YACnBxX,eAAe,CAACsZ,YAAD,EAAeoB,KAAf,CAAf;;YACAhT,IAAI,CAAC+N,YAAL,CAAkB+E,eAAlB,CAAkClB,YAAlC;;YACA5R,IAAI,CAACkD,SAAL,CAAe4P,eAAf,CAA+BlB,YAA/B;UACH;;UACD5R,IAAI,CAACkD,SAAL,CAAe0P,aAAf,CAA6BpD,UAAU,GAAGwD,KAA1C;;UACAhT,IAAI,CAAC+N,YAAL,CAAkB6E,aAAlB,CAAgCpD,UAAU,GAAGwD,KAA7C;QACH;;QACD,IAAIhT,IAAI,CAAC4D,UAAL,IAAmB5D,IAAI,CAACgN,aAAL,CAAmBwD,SAAnB,EAAnB,IAAqDta,SAAS,CAACia,gBAAD,CAAT,KAAgCkB,gBAAzF,EAA2G;UACvG,IAAI4B,MAAM,GAAG/c,SAAS,CAACia,gBAAD,CAAT,GAA8BkB,gBAA3C;;UACA,IAAI4B,MAAM,GAAG,CAAb,EAAgB;YACZpD,aAAa,GAAGe,kBAAkB,CAACI,cAAc,GAAGiC,MAAlB,EAA0BtD,WAA1B,CAAlC;;YACA,IAAIuD,YAAY,GAAGnC,oBAAoB,CAACC,cAAc,GAAGiC,MAAlB,EAA0BtD,WAA1B,EAAuCE,aAAvC,EAAsDC,gBAAtD,EAAwEmB,cAAxE,CAAvC;;YACAjR,IAAI,CAACkD,SAAL,CAAe6P,cAAf,CAA8BG,YAA9B;;YACAlT,IAAI,CAAC2N,SAAL,CAAeoF,cAAf,CAA8BG,YAA9B;UACH;QACJ;;QACD,IAAIC,gBAAgB,GAAGnT,IAAI,CAACO,MAAL,CAAY,WAAZ,CAAvB;;QACA,IAAI,cAAc4S,gBAAgB,CAACzY,IAAnC,EAAyC;UACrCsF,IAAI,CAACoT,wBAAL,CAA8BD,gBAA9B,EAAgDvB,YAAhD,EAA8DM,aAA9D,EAA6E1C,UAA7E,EAAyFkD,WAAzF,EAAsG1S,IAAI,CAAC4D,UAA3G,EAAuHgM,aAAvH;QACH;;QACD,IAAIyD,uBAAuB,GAAG,EAA9B;;QACArT,IAAI,CAACkD,SAAL,CAAeoQ,uBAAf,CAAuC;UACnCla,SAAS,EAAE4G,IAAI,CAACkD,SAAL,CAAeqQ,sBAAf,CAAsCzD,gBAAtC,EAAwDD,aAAxD,CADwB;UAEnC2D,UAAU,EAAExT,IAAI,CAACO,MAAL,CAAY,YAAZ;QAFuB,CAAvC;;QAIAP,IAAI,CAAC+N,YAAL,CAAkBuF,uBAAlB,CAA0C;UACtCE,UAAU,EAAExT,IAAI,CAACO,MAAL,CAAY,YAAZ;QAD0B,CAA1C;;QAGAtL,IAAI,CAAC,CAAC+K,IAAI,CAAC+N,YAAN,EAAoB/N,IAAI,CAAC2N,SAAzB,EAAoC3N,IAAI,CAACkD,SAAzC,CAAD,EAAuD,UAAS9K,CAAT,EAAYS,IAAZ,EAAkB;UACzEwa,uBAAuB,CAAClL,IAAxB,CAA6BtP,IAAI,IAAIA,IAAI,CAAC4a,gBAAL,EAArC;QACH,CAFG,CAAJ;;QAGAzT,IAAI,CAACyB,cAAL;;QACAzB,IAAI,CAACwK,iBAAL,CAAuBuF,YAAvB;;QACAnZ,IAAI,CAACsX,KAAL,CAAW7Z,CAAX,EAAcgf,uBAAd,EAAuCK,IAAvC,CAA6C,YAAW;UACpD1T,IAAI,CAAC8D,qBAAL,CAA2B9D,IAAI,CAAC+N,YAAhC,EAA8C/N,IAAI,CAAC2N,SAAnD,EAA8D3N,IAAI,CAACkD,SAAnE;;UACAlD,IAAI,CAACyE,kBAAL,CAAwBzE,IAAI,CAAC+N,YAA7B,EAA2C/N,IAAI,CAAC2N,SAAhD,EAA2D3N,IAAI,CAACkD,SAAhE;;UACAoN,CAAC,CAACgC,OAAF;QACH,CAJD;MAKH,CAhEU,CAAX;IAiEH,CA9GU,CAAX;IA+GA,OAAOhC,CAAP;EACH,CAx/B0B;EAy/B3B8C,wBAAwB,EAAE,UAASD,gBAAT,EAA2BvB,YAA3B,EAAyCM,aAAzC,EAAwD1C,UAAxD,EAAoEkD,WAApE,EAAiFiB,SAAjF,EAA4F/D,aAA5F,EAA2G;IACjI,IAAIgE,oBAAoB,GAAG,KAAKhT,eAAL,CAAqBiT,6BAArB,CAAmD;MAC1EhZ,gBAAgB,EAAEsY,gBAAgB,CAACtY,gBADuC;MAE1EC,kBAAkB,EAAEqY,gBAAgB,CAACrY,kBAFqC;MAG1EgZ,UAAU,EAAElC,YAH8D;MAI1EmC,WAAW,EAAE7B,aAJ6D;MAK1E8B,QAAQ,EAAE9B,aAAa,CAACxZ,MALkD;MAM1Eub,WAAW,EAAErC,YAAY,CAAClZ,MANgD;MAO1Ewb,aAAa,EAAE1E,UAP2D;MAQ1E2E,cAAc,EAAER,SAAS,GAAGjB,WAAH,GAAiBtc,cAAc,CAAC5B,MAAD;IARkB,CAAnD,CAA3B;;IAUA,KAAK0O,SAAL,CAAekR,uBAAf,CAAuC;MACnC9S,GAAG,EAAEsS,oBAAoB,CAACS,UADS;MAEnCjT,IAAI,EAAEwS,oBAAoB,CAACU,WAFQ;MAGnChb,KAAK,EAAEsa,oBAAoB,CAACta,KAHO;MAInCqC,MAAM,EAAEiY,oBAAoB,CAACjY;IAJM,CAAvC;;IAMA,KAAKgS,SAAL,CAAeyG,uBAAf,CAAuC;MACnC9S,GAAG,EAAEsS,oBAAoB,CAACS,UADS;MAEnC/a,KAAK,EAAEsW,aAF4B;MAGnCjU,MAAM,EAAEiY,oBAAoB,CAACjY;IAHM,CAAvC;;IAKA,KAAKoS,YAAL,CAAkBqG,uBAAlB,CAA0C;MACtChT,IAAI,EAAEwS,oBAAoB,CAACU,WADW;MAEtChb,KAAK,EAAEsa,oBAAoB,CAACta,KAFU;MAGtCqC,MAAM,EAAEzF,SAAS,CAAC,KAAK6X,YAAL,CAAkB5K,YAAlB,EAAD;IAHqB,CAA1C;EAKH,CAphC0B;EAqhC3BoR,sBAAsB,EAAE,UAAS1b,IAAT,EAAeoP,IAAf,EAAqBhN,UAArB,EAAiC;IACrD,KAAK2F,eAAL,CAAqB2T,sBAArB,CAA4C1b,IAA5C,EAAkDoP,IAAlD,EAAwDhN,UAAxD;EACH;AAvhC0B,CAAf,EAwhCbd,OAxhCa,CAwhCL3D,gBAxhCK,EAwhCage,OAxhCb,CAwhCqB/d,qBAxhCrB,CAAhB;AAyhCA/B,iBAAiB,CAAC,aAAD,EAAgBwF,SAAhB,CAAjB;AACA,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}
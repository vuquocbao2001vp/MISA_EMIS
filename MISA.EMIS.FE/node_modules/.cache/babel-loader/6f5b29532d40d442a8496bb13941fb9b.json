{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/map/provider.dynamic.google.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport { noop } from \"../../core/utils/common\";\nimport devices from \"../../core/devices\";\nimport { extend } from \"../../core/utils/extend\";\nimport { map } from \"../../core/utils/iterator\";\nimport DynamicProvider from \"./provider.dynamic\";\nimport errors from \"../widget/ui.errors\";\nimport Color from \"../../color\";\nimport ajax from \"../../core/utils/ajax\";\nimport { isDefined } from \"../../core/utils/type\";\nvar GOOGLE_MAP_READY = \"_googleScriptReady\";\nvar GOOGLE_URL = \"https://maps.googleapis.com/maps/api/js?callback=\" + GOOGLE_MAP_READY;\nvar INFO_WINDOW_CLASS = \"gm-style-iw\";\nvar CustomMarker;\n\nvar initCustomMarkerClass = function () {\n  CustomMarker = function (options) {\n    this._position = options.position;\n    this._offset = options.offset;\n    this._$overlayContainer = $(\"<div>\").css({\n      position: \"absolute\",\n      display: \"none\",\n      cursor: \"pointer\"\n    }).append(options.html);\n    this.setMap(options.map);\n  };\n\n  CustomMarker.prototype = new google.maps.OverlayView();\n\n  CustomMarker.prototype.onAdd = function () {\n    var $pane = $(this.getPanes().overlayMouseTarget);\n    $pane.append(this._$overlayContainer);\n    this._clickListener = google.maps.event.addDomListener(this._$overlayContainer.get(0), \"click\", function (e) {\n      google.maps.event.trigger(this, \"click\");\n      e.preventDefault();\n    }.bind(this));\n    this.draw();\n  };\n\n  CustomMarker.prototype.onRemove = function () {\n    google.maps.event.removeListener(this._clickListener);\n\n    this._$overlayContainer.remove();\n  };\n\n  CustomMarker.prototype.draw = function () {\n    var position = this.getProjection().fromLatLngToDivPixel(this._position);\n\n    this._$overlayContainer.css({\n      left: position.x + this._offset.left,\n      top: position.y + this._offset.top,\n      display: \"block\"\n    });\n  };\n};\n\nvar googleMapsLoaded = function () {\n  return window.google && window.google.maps;\n};\n\nvar googleMapsLoader;\nvar GoogleProvider = DynamicProvider.inherit({\n  _mapType: function (type) {\n    var mapTypes = {\n      hybrid: google.maps.MapTypeId.HYBRID,\n      roadmap: google.maps.MapTypeId.ROADMAP,\n      satellite: google.maps.MapTypeId.SATELLITE\n    };\n    return mapTypes[type] || mapTypes.hybrid;\n  },\n  _movementMode: function (type) {\n    var movementTypes = {\n      driving: google.maps.TravelMode.DRIVING,\n      walking: google.maps.TravelMode.WALKING\n    };\n    return movementTypes[type] || movementTypes.driving;\n  },\n  _resolveLocation: function (location) {\n    return new Promise(function (resolve) {\n      var latLng = this._getLatLng(location);\n\n      if (latLng) {\n        resolve(new google.maps.LatLng(latLng.lat, latLng.lng));\n      } else {\n        this._geocodeLocation(location).then(function (geocodedLocation) {\n          resolve(geocodedLocation);\n        });\n      }\n    }.bind(this));\n  },\n  _geocodedLocations: {},\n  _geocodeLocationImpl: function (location) {\n    return new Promise(function (resolve) {\n      if (!isDefined(location)) {\n        resolve(new google.maps.LatLng(0, 0));\n        return;\n      }\n\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        address: location\n      }, function (results, status) {\n        if (status === google.maps.GeocoderStatus.OK) {\n          resolve(results[0].geometry.location);\n        } else {\n          errors.log(\"W1006\", status);\n          resolve(new google.maps.LatLng(0, 0));\n        }\n      });\n    });\n  },\n  _normalizeLocation: function (location) {\n    return {\n      lat: location.lat(),\n      lng: location.lng()\n    };\n  },\n  _normalizeLocationRect: function (locationRect) {\n    return {\n      northEast: this._normalizeLocation(locationRect.getNorthEast()),\n      southWest: this._normalizeLocation(locationRect.getSouthWest())\n    };\n  },\n  _loadImpl: function () {\n    return new Promise(function (resolve) {\n      if (googleMapsLoaded()) {\n        resolve();\n      } else {\n        if (!googleMapsLoader) {\n          googleMapsLoader = this._loadMapScript();\n        }\n\n        googleMapsLoader.then(function () {\n          if (googleMapsLoaded()) {\n            resolve();\n            return;\n          }\n\n          this._loadMapScript().then(resolve);\n        }.bind(this));\n      }\n    }.bind(this)).then(function () {\n      initCustomMarkerClass();\n    });\n  },\n  _loadMapScript: function () {\n    return new Promise(function (resolve) {\n      var key = this._keyOption(\"google\");\n\n      window[GOOGLE_MAP_READY] = resolve;\n      ajax.sendRequest({\n        url: GOOGLE_URL + (key ? \"&key=\" + key : \"\"),\n        dataType: \"script\"\n      });\n    }.bind(this)).then(function () {\n      try {\n        delete window[GOOGLE_MAP_READY];\n      } catch (e) {\n        window[GOOGLE_MAP_READY] = void 0;\n      }\n    });\n  },\n  _init: function () {\n    return new Promise(function (resolve) {\n      this._resolveLocation(this._option(\"center\")).then(function (center) {\n        var showDefaultUI = this._option(\"controls\");\n\n        this._map = new google.maps.Map(this._$container[0], {\n          zoom: this._option(\"zoom\"),\n          center: center,\n          disableDefaultUI: !showDefaultUI\n        });\n        var listener = google.maps.event.addListener(this._map, \"idle\", function () {\n          resolve(listener);\n        });\n      }.bind(this));\n    }.bind(this)).then(function (listener) {\n      google.maps.event.removeListener(listener);\n    });\n  },\n  _attachHandlers: function () {\n    this._boundsChangeListener = google.maps.event.addListener(this._map, \"bounds_changed\", this._boundsChangeHandler.bind(this));\n    this._clickListener = google.maps.event.addListener(this._map, \"click\", this._clickActionHandler.bind(this));\n  },\n  _boundsChangeHandler: function () {\n    var bounds = this._map.getBounds();\n\n    this._option(\"bounds\", this._normalizeLocationRect(bounds));\n\n    var center = this._map.getCenter();\n\n    this._option(\"center\", this._normalizeLocation(center));\n\n    if (!this._preventZoomChangeEvent) {\n      this._option(\"zoom\", this._map.getZoom());\n    }\n  },\n  _clickActionHandler: function (e) {\n    this._fireClickAction({\n      location: this._normalizeLocation(e.latLng)\n    });\n  },\n  updateDimensions: function () {\n    var center = this._option(\"center\");\n\n    google.maps.event.trigger(this._map, \"resize\");\n\n    this._option(\"center\", center);\n\n    return this.updateCenter();\n  },\n  updateMapType: function () {\n    this._map.setMapTypeId(this._mapType(this._option(\"type\")));\n\n    return Promise.resolve();\n  },\n  updateBounds: function () {\n    return Promise.all([this._resolveLocation(this._option(\"bounds.northEast\")), this._resolveLocation(this._option(\"bounds.southWest\"))]).then(function (result) {\n      var bounds = new google.maps.LatLngBounds();\n      bounds.extend(result[0]);\n      bounds.extend(result[1]);\n\n      this._map.fitBounds(bounds);\n    }.bind(this));\n  },\n  updateCenter: function () {\n    return this._resolveLocation(this._option(\"center\")).then(function (center) {\n      this._map.setCenter(center);\n\n      this._option(\"center\", this._normalizeLocation(center));\n    }.bind(this));\n  },\n  updateZoom: function () {\n    this._map.setZoom(this._option(\"zoom\"));\n\n    return Promise.resolve();\n  },\n  updateControls: function () {\n    var showDefaultUI = this._option(\"controls\");\n\n    this._map.setOptions({\n      disableDefaultUI: !showDefaultUI\n    });\n\n    return Promise.resolve();\n  },\n  isEventsCanceled: function (e) {\n    var gestureHandling = this._map && this._map.get(\"gestureHandling\");\n\n    var isInfoWindowContent = $(e.target).closest(\".\".concat(INFO_WINDOW_CLASS)).length > 0;\n\n    if (isInfoWindowContent || \"desktop\" !== devices.real().deviceType && \"cooperative\" === gestureHandling) {\n      return false;\n    }\n\n    return this.callBase();\n  },\n  _renderMarker: function (options) {\n    return this._resolveLocation(options.location).then(function (location) {\n      var marker;\n\n      if (options.html) {\n        marker = new CustomMarker({\n          map: this._map,\n          position: location,\n          html: options.html,\n          offset: extend({\n            top: 0,\n            left: 0\n          }, options.htmlOffset)\n        });\n      } else {\n        marker = new google.maps.Marker({\n          position: location,\n          map: this._map,\n          icon: options.iconSrc || this._option(\"markerIconSrc\")\n        });\n      }\n\n      var infoWindow = this._renderTooltip(marker, options.tooltip);\n\n      var listener;\n\n      if (options.onClick || options.tooltip) {\n        var markerClickAction = this._mapWidget._createAction(options.onClick || noop);\n\n        var markerNormalizedLocation = this._normalizeLocation(location);\n\n        listener = google.maps.event.addListener(marker, \"click\", function () {\n          markerClickAction({\n            location: markerNormalizedLocation\n          });\n\n          if (infoWindow) {\n            infoWindow.open(this._map, marker);\n          }\n        }.bind(this));\n      }\n\n      return {\n        location: location,\n        marker: marker,\n        listener: listener\n      };\n    }.bind(this));\n  },\n  _renderTooltip: function (marker, options) {\n    if (!options) {\n      return;\n    }\n\n    options = this._parseTooltipOptions(options);\n    var infoWindow = new google.maps.InfoWindow({\n      content: options.text\n    });\n\n    if (options.visible) {\n      infoWindow.open(this._map, marker);\n    }\n\n    return infoWindow;\n  },\n  _destroyMarker: function (marker) {\n    marker.marker.setMap(null);\n\n    if (marker.listener) {\n      google.maps.event.removeListener(marker.listener);\n    }\n  },\n  _renderRoute: function (options) {\n    return Promise.all(map(options.locations, function (point) {\n      return this._resolveLocation(point);\n    }.bind(this))).then(function (locations) {\n      return new Promise(function (resolve) {\n        var origin = locations.shift();\n        var destination = locations.pop();\n        var waypoints = map(locations, function (location) {\n          return {\n            location: location,\n            stopover: true\n          };\n        });\n        var request = {\n          origin: origin,\n          destination: destination,\n          waypoints: waypoints,\n          optimizeWaypoints: true,\n          travelMode: this._movementMode(options.mode)\n        };\n        new google.maps.DirectionsService().route(request, function (response, status) {\n          if (status === google.maps.DirectionsStatus.OK) {\n            var color = new Color(options.color || this._defaultRouteColor()).toHex();\n            var directionOptions = {\n              directions: response,\n              map: this._map,\n              suppressMarkers: true,\n              preserveViewport: true,\n              polylineOptions: {\n                strokeWeight: options.weight || this._defaultRouteWeight(),\n                strokeOpacity: options.opacity || this._defaultRouteOpacity(),\n                strokeColor: color\n              }\n            };\n            var route = new google.maps.DirectionsRenderer(directionOptions);\n            var bounds = response.routes[0].bounds;\n            resolve({\n              instance: route,\n              northEast: bounds.getNorthEast(),\n              southWest: bounds.getSouthWest()\n            });\n          } else {\n            errors.log(\"W1006\", status);\n            resolve({\n              instance: new google.maps.DirectionsRenderer({})\n            });\n          }\n        }.bind(this));\n      }.bind(this));\n    }.bind(this));\n  },\n  _destroyRoute: function (routeObject) {\n    routeObject.instance.setMap(null);\n  },\n  _fitBounds: function () {\n    this._updateBounds();\n\n    if (this._bounds && this._option(\"autoAdjust\")) {\n      var zoomBeforeFitting = this._map.getZoom();\n\n      this._preventZoomChangeEvent = true;\n\n      this._map.fitBounds(this._bounds);\n\n      this._boundsChangeHandler();\n\n      var zoomAfterFitting = this._map.getZoom();\n\n      if (zoomBeforeFitting < zoomAfterFitting) {\n        this._map.setZoom(zoomBeforeFitting);\n      } else {\n        this._option(\"zoom\", zoomAfterFitting);\n      }\n\n      delete this._preventZoomChangeEvent;\n    }\n\n    return Promise.resolve();\n  },\n  _extendBounds: function (location) {\n    if (this._bounds) {\n      this._bounds.extend(location);\n    } else {\n      this._bounds = new google.maps.LatLngBounds();\n\n      this._bounds.extend(location);\n    }\n  },\n  clean: function () {\n    if (this._map) {\n      google.maps.event.removeListener(this._boundsChangeListener);\n      google.maps.event.removeListener(this._clickListener);\n\n      this._clearMarkers();\n\n      this._clearRoutes();\n\n      delete this._map;\n\n      this._$container.empty();\n    }\n\n    return Promise.resolve();\n  }\n});\nexport default GoogleProvider;","map":{"version":3,"names":["$","getWindow","window","noop","devices","extend","map","DynamicProvider","errors","Color","ajax","isDefined","GOOGLE_MAP_READY","GOOGLE_URL","INFO_WINDOW_CLASS","CustomMarker","initCustomMarkerClass","options","_position","position","_offset","offset","_$overlayContainer","css","display","cursor","append","html","setMap","prototype","google","maps","OverlayView","onAdd","$pane","getPanes","overlayMouseTarget","_clickListener","event","addDomListener","get","e","trigger","preventDefault","bind","draw","onRemove","removeListener","remove","getProjection","fromLatLngToDivPixel","left","x","top","y","googleMapsLoaded","googleMapsLoader","GoogleProvider","inherit","_mapType","type","mapTypes","hybrid","MapTypeId","HYBRID","roadmap","ROADMAP","satellite","SATELLITE","_movementMode","movementTypes","driving","TravelMode","DRIVING","walking","WALKING","_resolveLocation","location","Promise","resolve","latLng","_getLatLng","LatLng","lat","lng","_geocodeLocation","then","geocodedLocation","_geocodedLocations","_geocodeLocationImpl","geocoder","Geocoder","geocode","address","results","status","GeocoderStatus","OK","geometry","log","_normalizeLocation","_normalizeLocationRect","locationRect","northEast","getNorthEast","southWest","getSouthWest","_loadImpl","_loadMapScript","key","_keyOption","sendRequest","url","dataType","_init","_option","center","showDefaultUI","_map","Map","_$container","zoom","disableDefaultUI","listener","addListener","_attachHandlers","_boundsChangeListener","_boundsChangeHandler","_clickActionHandler","bounds","getBounds","getCenter","_preventZoomChangeEvent","getZoom","_fireClickAction","updateDimensions","updateCenter","updateMapType","setMapTypeId","updateBounds","all","result","LatLngBounds","fitBounds","setCenter","updateZoom","setZoom","updateControls","setOptions","isEventsCanceled","gestureHandling","isInfoWindowContent","target","closest","concat","length","real","deviceType","callBase","_renderMarker","marker","htmlOffset","Marker","icon","iconSrc","infoWindow","_renderTooltip","tooltip","onClick","markerClickAction","_mapWidget","_createAction","markerNormalizedLocation","open","_parseTooltipOptions","InfoWindow","content","text","visible","_destroyMarker","_renderRoute","locations","point","origin","shift","destination","pop","waypoints","stopover","request","optimizeWaypoints","travelMode","mode","DirectionsService","route","response","DirectionsStatus","color","_defaultRouteColor","toHex","directionOptions","directions","suppressMarkers","preserveViewport","polylineOptions","strokeWeight","weight","_defaultRouteWeight","strokeOpacity","opacity","_defaultRouteOpacity","strokeColor","DirectionsRenderer","routes","instance","_destroyRoute","routeObject","_fitBounds","_updateBounds","_bounds","zoomBeforeFitting","zoomAfterFitting","_extendBounds","clean","_clearMarkers","_clearRoutes","empty"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/map/provider.dynamic.google.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/map/provider.dynamic.google.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport DynamicProvider from \"./provider.dynamic\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport Color from \"../../color\";\r\nimport ajax from \"../../core/utils/ajax\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar GOOGLE_MAP_READY = \"_googleScriptReady\";\r\nvar GOOGLE_URL = \"https://maps.googleapis.com/maps/api/js?callback=\" + GOOGLE_MAP_READY;\r\nvar INFO_WINDOW_CLASS = \"gm-style-iw\";\r\nvar CustomMarker;\r\nvar initCustomMarkerClass = function() {\r\n    CustomMarker = function(options) {\r\n        this._position = options.position;\r\n        this._offset = options.offset;\r\n        this._$overlayContainer = $(\"<div>\").css({\r\n            position: \"absolute\",\r\n            display: \"none\",\r\n            cursor: \"pointer\"\r\n        }).append(options.html);\r\n        this.setMap(options.map)\r\n    };\r\n    CustomMarker.prototype = new google.maps.OverlayView;\r\n    CustomMarker.prototype.onAdd = function() {\r\n        var $pane = $(this.getPanes().overlayMouseTarget);\r\n        $pane.append(this._$overlayContainer);\r\n        this._clickListener = google.maps.event.addDomListener(this._$overlayContainer.get(0), \"click\", function(e) {\r\n            google.maps.event.trigger(this, \"click\");\r\n            e.preventDefault()\r\n        }.bind(this));\r\n        this.draw()\r\n    };\r\n    CustomMarker.prototype.onRemove = function() {\r\n        google.maps.event.removeListener(this._clickListener);\r\n        this._$overlayContainer.remove()\r\n    };\r\n    CustomMarker.prototype.draw = function() {\r\n        var position = this.getProjection().fromLatLngToDivPixel(this._position);\r\n        this._$overlayContainer.css({\r\n            left: position.x + this._offset.left,\r\n            top: position.y + this._offset.top,\r\n            display: \"block\"\r\n        })\r\n    }\r\n};\r\nvar googleMapsLoaded = function() {\r\n    return window.google && window.google.maps\r\n};\r\nvar googleMapsLoader;\r\nvar GoogleProvider = DynamicProvider.inherit({\r\n    _mapType: function(type) {\r\n        var mapTypes = {\r\n            hybrid: google.maps.MapTypeId.HYBRID,\r\n            roadmap: google.maps.MapTypeId.ROADMAP,\r\n            satellite: google.maps.MapTypeId.SATELLITE\r\n        };\r\n        return mapTypes[type] || mapTypes.hybrid\r\n    },\r\n    _movementMode: function(type) {\r\n        var movementTypes = {\r\n            driving: google.maps.TravelMode.DRIVING,\r\n            walking: google.maps.TravelMode.WALKING\r\n        };\r\n        return movementTypes[type] || movementTypes.driving\r\n    },\r\n    _resolveLocation: function(location) {\r\n        return new Promise(function(resolve) {\r\n            var latLng = this._getLatLng(location);\r\n            if (latLng) {\r\n                resolve(new google.maps.LatLng(latLng.lat, latLng.lng))\r\n            } else {\r\n                this._geocodeLocation(location).then((function(geocodedLocation) {\r\n                    resolve(geocodedLocation)\r\n                }))\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _geocodedLocations: {},\r\n    _geocodeLocationImpl: function(location) {\r\n        return new Promise((function(resolve) {\r\n            if (!isDefined(location)) {\r\n                resolve(new google.maps.LatLng(0, 0));\r\n                return\r\n            }\r\n            var geocoder = new google.maps.Geocoder;\r\n            geocoder.geocode({\r\n                address: location\r\n            }, (function(results, status) {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    resolve(results[0].geometry.location)\r\n                } else {\r\n                    errors.log(\"W1006\", status);\r\n                    resolve(new google.maps.LatLng(0, 0))\r\n                }\r\n            }))\r\n        }))\r\n    },\r\n    _normalizeLocation: function(location) {\r\n        return {\r\n            lat: location.lat(),\r\n            lng: location.lng()\r\n        }\r\n    },\r\n    _normalizeLocationRect: function(locationRect) {\r\n        return {\r\n            northEast: this._normalizeLocation(locationRect.getNorthEast()),\r\n            southWest: this._normalizeLocation(locationRect.getSouthWest())\r\n        }\r\n    },\r\n    _loadImpl: function() {\r\n        return new Promise(function(resolve) {\r\n            if (googleMapsLoaded()) {\r\n                resolve()\r\n            } else {\r\n                if (!googleMapsLoader) {\r\n                    googleMapsLoader = this._loadMapScript()\r\n                }\r\n                googleMapsLoader.then(function() {\r\n                    if (googleMapsLoaded()) {\r\n                        resolve();\r\n                        return\r\n                    }\r\n                    this._loadMapScript().then(resolve)\r\n                }.bind(this))\r\n            }\r\n        }.bind(this)).then((function() {\r\n            initCustomMarkerClass()\r\n        }))\r\n    },\r\n    _loadMapScript: function() {\r\n        return new Promise(function(resolve) {\r\n            var key = this._keyOption(\"google\");\r\n            window[GOOGLE_MAP_READY] = resolve;\r\n            ajax.sendRequest({\r\n                url: GOOGLE_URL + (key ? \"&key=\" + key : \"\"),\r\n                dataType: \"script\"\r\n            })\r\n        }.bind(this)).then((function() {\r\n            try {\r\n                delete window[GOOGLE_MAP_READY]\r\n            } catch (e) {\r\n                window[GOOGLE_MAP_READY] = void 0\r\n            }\r\n        }))\r\n    },\r\n    _init: function() {\r\n        return new Promise(function(resolve) {\r\n            this._resolveLocation(this._option(\"center\")).then(function(center) {\r\n                var showDefaultUI = this._option(\"controls\");\r\n                this._map = new google.maps.Map(this._$container[0], {\r\n                    zoom: this._option(\"zoom\"),\r\n                    center: center,\r\n                    disableDefaultUI: !showDefaultUI\r\n                });\r\n                var listener = google.maps.event.addListener(this._map, \"idle\", (function() {\r\n                    resolve(listener)\r\n                }))\r\n            }.bind(this))\r\n        }.bind(this)).then((function(listener) {\r\n            google.maps.event.removeListener(listener)\r\n        }))\r\n    },\r\n    _attachHandlers: function() {\r\n        this._boundsChangeListener = google.maps.event.addListener(this._map, \"bounds_changed\", this._boundsChangeHandler.bind(this));\r\n        this._clickListener = google.maps.event.addListener(this._map, \"click\", this._clickActionHandler.bind(this))\r\n    },\r\n    _boundsChangeHandler: function() {\r\n        var bounds = this._map.getBounds();\r\n        this._option(\"bounds\", this._normalizeLocationRect(bounds));\r\n        var center = this._map.getCenter();\r\n        this._option(\"center\", this._normalizeLocation(center));\r\n        if (!this._preventZoomChangeEvent) {\r\n            this._option(\"zoom\", this._map.getZoom())\r\n        }\r\n    },\r\n    _clickActionHandler: function(e) {\r\n        this._fireClickAction({\r\n            location: this._normalizeLocation(e.latLng)\r\n        })\r\n    },\r\n    updateDimensions: function() {\r\n        var center = this._option(\"center\");\r\n        google.maps.event.trigger(this._map, \"resize\");\r\n        this._option(\"center\", center);\r\n        return this.updateCenter()\r\n    },\r\n    updateMapType: function() {\r\n        this._map.setMapTypeId(this._mapType(this._option(\"type\")));\r\n        return Promise.resolve()\r\n    },\r\n    updateBounds: function() {\r\n        return Promise.all([this._resolveLocation(this._option(\"bounds.northEast\")), this._resolveLocation(this._option(\"bounds.southWest\"))]).then(function(result) {\r\n            var bounds = new google.maps.LatLngBounds;\r\n            bounds.extend(result[0]);\r\n            bounds.extend(result[1]);\r\n            this._map.fitBounds(bounds)\r\n        }.bind(this))\r\n    },\r\n    updateCenter: function() {\r\n        return this._resolveLocation(this._option(\"center\")).then(function(center) {\r\n            this._map.setCenter(center);\r\n            this._option(\"center\", this._normalizeLocation(center))\r\n        }.bind(this))\r\n    },\r\n    updateZoom: function() {\r\n        this._map.setZoom(this._option(\"zoom\"));\r\n        return Promise.resolve()\r\n    },\r\n    updateControls: function() {\r\n        var showDefaultUI = this._option(\"controls\");\r\n        this._map.setOptions({\r\n            disableDefaultUI: !showDefaultUI\r\n        });\r\n        return Promise.resolve()\r\n    },\r\n    isEventsCanceled: function(e) {\r\n        var gestureHandling = this._map && this._map.get(\"gestureHandling\");\r\n        var isInfoWindowContent = $(e.target).closest(\".\".concat(INFO_WINDOW_CLASS)).length > 0;\r\n        if (isInfoWindowContent || \"desktop\" !== devices.real().deviceType && \"cooperative\" === gestureHandling) {\r\n            return false\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _renderMarker: function(options) {\r\n        return this._resolveLocation(options.location).then(function(location) {\r\n            var marker;\r\n            if (options.html) {\r\n                marker = new CustomMarker({\r\n                    map: this._map,\r\n                    position: location,\r\n                    html: options.html,\r\n                    offset: extend({\r\n                        top: 0,\r\n                        left: 0\r\n                    }, options.htmlOffset)\r\n                })\r\n            } else {\r\n                marker = new google.maps.Marker({\r\n                    position: location,\r\n                    map: this._map,\r\n                    icon: options.iconSrc || this._option(\"markerIconSrc\")\r\n                })\r\n            }\r\n            var infoWindow = this._renderTooltip(marker, options.tooltip);\r\n            var listener;\r\n            if (options.onClick || options.tooltip) {\r\n                var markerClickAction = this._mapWidget._createAction(options.onClick || noop);\r\n                var markerNormalizedLocation = this._normalizeLocation(location);\r\n                listener = google.maps.event.addListener(marker, \"click\", function() {\r\n                    markerClickAction({\r\n                        location: markerNormalizedLocation\r\n                    });\r\n                    if (infoWindow) {\r\n                        infoWindow.open(this._map, marker)\r\n                    }\r\n                }.bind(this))\r\n            }\r\n            return {\r\n                location: location,\r\n                marker: marker,\r\n                listener: listener\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _renderTooltip: function(marker, options) {\r\n        if (!options) {\r\n            return\r\n        }\r\n        options = this._parseTooltipOptions(options);\r\n        var infoWindow = new google.maps.InfoWindow({\r\n            content: options.text\r\n        });\r\n        if (options.visible) {\r\n            infoWindow.open(this._map, marker)\r\n        }\r\n        return infoWindow\r\n    },\r\n    _destroyMarker: function(marker) {\r\n        marker.marker.setMap(null);\r\n        if (marker.listener) {\r\n            google.maps.event.removeListener(marker.listener)\r\n        }\r\n    },\r\n    _renderRoute: function(options) {\r\n        return Promise.all(map(options.locations, function(point) {\r\n            return this._resolveLocation(point)\r\n        }.bind(this))).then(function(locations) {\r\n            return new Promise(function(resolve) {\r\n                var origin = locations.shift();\r\n                var destination = locations.pop();\r\n                var waypoints = map(locations, (function(location) {\r\n                    return {\r\n                        location: location,\r\n                        stopover: true\r\n                    }\r\n                }));\r\n                var request = {\r\n                    origin: origin,\r\n                    destination: destination,\r\n                    waypoints: waypoints,\r\n                    optimizeWaypoints: true,\r\n                    travelMode: this._movementMode(options.mode)\r\n                };\r\n                (new google.maps.DirectionsService).route(request, function(response, status) {\r\n                    if (status === google.maps.DirectionsStatus.OK) {\r\n                        var color = new Color(options.color || this._defaultRouteColor()).toHex();\r\n                        var directionOptions = {\r\n                            directions: response,\r\n                            map: this._map,\r\n                            suppressMarkers: true,\r\n                            preserveViewport: true,\r\n                            polylineOptions: {\r\n                                strokeWeight: options.weight || this._defaultRouteWeight(),\r\n                                strokeOpacity: options.opacity || this._defaultRouteOpacity(),\r\n                                strokeColor: color\r\n                            }\r\n                        };\r\n                        var route = new google.maps.DirectionsRenderer(directionOptions);\r\n                        var bounds = response.routes[0].bounds;\r\n                        resolve({\r\n                            instance: route,\r\n                            northEast: bounds.getNorthEast(),\r\n                            southWest: bounds.getSouthWest()\r\n                        })\r\n                    } else {\r\n                        errors.log(\"W1006\", status);\r\n                        resolve({\r\n                            instance: new google.maps.DirectionsRenderer({})\r\n                        })\r\n                    }\r\n                }.bind(this))\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    _destroyRoute: function(routeObject) {\r\n        routeObject.instance.setMap(null)\r\n    },\r\n    _fitBounds: function() {\r\n        this._updateBounds();\r\n        if (this._bounds && this._option(\"autoAdjust\")) {\r\n            var zoomBeforeFitting = this._map.getZoom();\r\n            this._preventZoomChangeEvent = true;\r\n            this._map.fitBounds(this._bounds);\r\n            this._boundsChangeHandler();\r\n            var zoomAfterFitting = this._map.getZoom();\r\n            if (zoomBeforeFitting < zoomAfterFitting) {\r\n                this._map.setZoom(zoomBeforeFitting)\r\n            } else {\r\n                this._option(\"zoom\", zoomAfterFitting)\r\n            }\r\n            delete this._preventZoomChangeEvent\r\n        }\r\n        return Promise.resolve()\r\n    },\r\n    _extendBounds: function(location) {\r\n        if (this._bounds) {\r\n            this._bounds.extend(location)\r\n        } else {\r\n            this._bounds = new google.maps.LatLngBounds;\r\n            this._bounds.extend(location)\r\n        }\r\n    },\r\n    clean: function() {\r\n        if (this._map) {\r\n            google.maps.event.removeListener(this._boundsChangeListener);\r\n            google.maps.event.removeListener(this._clickListener);\r\n            this._clearMarkers();\r\n            this._clearRoutes();\r\n            delete this._map;\r\n            this._$container.empty()\r\n        }\r\n        return Promise.resolve()\r\n    }\r\n});\r\nexport default GoogleProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
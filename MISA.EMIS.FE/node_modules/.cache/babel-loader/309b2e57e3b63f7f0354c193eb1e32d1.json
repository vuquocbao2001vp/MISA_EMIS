{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/draggable.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getWidth, getHeight, getOuterWidth, getOuterHeight } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport domAdapter from \"../core/dom_adapter\";\nimport { getWindow } from \"../core/utils/window\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { quadToObject } from \"../core/utils/string\";\nimport registerComponent from \"../core/component_registrator\";\nimport { locate, move } from \"../animation/translator\";\nimport Animator from \"./scroll_view/animator\";\nimport { dasherize } from \"../core/utils/inflector\";\nimport { extend } from \"../core/utils/extend\";\nimport DOMComponent from \"../core/dom_component\";\nimport { getPublicElement } from \"../core/element\";\nimport { addNamespace, needSkipEvent } from \"../events/utils/index\";\nimport pointerEvents from \"../events/pointer\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd, enter as dragEventEnter, leave as dragEventLeave } from \"../events/drag\";\nimport positionUtils from \"../animation/position\";\nimport { isFunction, isObject } from \"../core/utils/type\";\nimport { noop, splitPair } from \"../core/utils/common\";\nimport { value as viewPort } from \"../core/utils/view_port\";\nimport { EmptyTemplate } from \"../core/templates/empty_template\";\nimport { when, fromPromise, Deferred } from \"../core/utils/deferred\";\nvar window = getWindow();\nvar DRAGGABLE = \"dxDraggable\";\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\nvar CLONE_CLASS = \"clone\";\nvar targetDraggable;\nvar sourceDraggable;\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\n\nvar getMousePosition = event => ({\n  x: event.pageX - $(window).scrollLeft(),\n  y: event.pageY - $(window).scrollTop()\n});\n\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\n\nclass ScrollHelper {\n  constructor(orientation, component) {\n    this._preventScroll = true;\n    this._component = component;\n\n    if (\"vertical\" === orientation) {\n      this._scrollValue = \"scrollTop\";\n      this._overFlowAttr = \"overflowY\";\n      this._sizeAttr = \"height\";\n      this._scrollSizeProp = \"scrollHeight\";\n      this._clientSizeProp = \"clientHeight\";\n      this._limitProps = {\n        start: \"top\",\n        end: \"bottom\"\n      };\n    } else {\n      this._scrollValue = \"scrollLeft\";\n      this._overFlowAttr = \"overflowX\";\n      this._sizeAttr = \"width\";\n      this._scrollSizeProp = \"scrollWidth\";\n      this._clientSizeProp = \"clientWidth\";\n      this._limitProps = {\n        start: \"left\",\n        end: \"right\"\n      };\n    }\n  }\n\n  updateScrollable(elements, mousePosition) {\n    var isScrollableFound = false;\n    elements.some(element => {\n      var $element = $(element);\n      var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);\n      var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);\n\n      if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {\n        return true;\n      }\n\n      isScrollableFound = this._trySetScrollable(element, mousePosition);\n      return isScrollableFound;\n    });\n\n    if (!isScrollableFound) {\n      this._$scrollableAtPointer = null;\n      this._scrollSpeed = 0;\n    }\n  }\n\n  isScrolling() {\n    return !!this._scrollSpeed;\n  }\n\n  isScrollable($element) {\n    return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > Math.ceil(\"width\" === this._sizeAttr ? getWidth($element) : getHeight($element));\n  }\n\n  _trySetScrollable(element, mousePosition) {\n    var $element = $(element);\n    var distanceToBorders;\n\n    var sensitivity = this._component.option(\"scrollSensitivity\");\n\n    var isScrollable = this.isScrollable($element);\n\n    if (isScrollable) {\n      distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\n\n      if (sensitivity > distanceToBorders[this._limitProps.start]) {\n        if (!this._preventScroll) {\n          this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\n          this._$scrollableAtPointer = $element;\n        }\n      } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\n        if (!this._preventScroll) {\n          this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\n          this._$scrollableAtPointer = $element;\n        }\n      } else {\n        isScrollable = false;\n        this._preventScroll = false;\n      }\n    }\n\n    return isScrollable;\n  }\n\n  _calculateDistanceToBorders($area, mousePosition) {\n    var area = $area.get(0);\n    var areaBoundingRect;\n\n    if (area) {\n      areaBoundingRect = getBoundingRect(area);\n      return {\n        left: mousePosition.x - areaBoundingRect.left,\n        top: mousePosition.y - areaBoundingRect.top,\n        right: areaBoundingRect.right - mousePosition.x,\n        bottom: areaBoundingRect.bottom - mousePosition.y\n      };\n    } else {\n      return {};\n    }\n  }\n\n  _calculateScrollSpeed(distance) {\n    var component = this._component;\n    var sensitivity = component.option(\"scrollSensitivity\");\n    var maxSpeed = component.option(\"scrollSpeed\");\n    return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed);\n  }\n\n  scrollByStep() {\n    if (this._$scrollableAtPointer && this._scrollSpeed) {\n      if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\n        var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\n\n        var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\n\n        if (scrollableInstance) {\n          var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\n\n          scrollableInstance.scrollTo({\n            [this._limitProps.start]: nextScrollPosition\n          });\n        }\n      } else {\n        var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\n\n        this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition);\n      }\n\n      var dragMoveArgs = this._component._dragMoveArgs;\n\n      if (dragMoveArgs) {\n        this._component._dragMoveHandler(dragMoveArgs);\n      }\n    }\n  }\n\n  reset() {\n    this._$scrollableAtPointer = null;\n    this._scrollSpeed = 0;\n    this._preventScroll = true;\n  }\n\n  isOutsideScrollable($scrollable, event) {\n    if (!$scrollable) {\n      return false;\n    }\n\n    var scrollableSize = getBoundingRect($scrollable.get(0));\n    var start = scrollableSize[this._limitProps.start];\n    var size = scrollableSize[this._sizeAttr];\n    var mousePosition = getMousePosition(event);\n    var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\n    return location < start || location > start + size;\n  }\n\n}\n\nvar ScrollAnimator = Animator.inherit({\n  ctor: function (strategy) {\n    this.callBase();\n    this._strategy = strategy;\n  },\n  _step: function () {\n    var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\n    var verticalScrollHelper = this._strategy._verticalScrollHelper;\n    horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\n    verticalScrollHelper && verticalScrollHelper.scrollByStep();\n  }\n});\nvar Draggable = DOMComponent.inherit({\n  reset: noop,\n  dragMove: noop,\n  dragEnter: noop,\n  dragLeave: noop,\n  dragEnd: function (sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable._fireRemoveEvent(sourceEvent);\n\n    return new Deferred().resolve();\n  },\n  _fireRemoveEvent: noop,\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      onDragStart: null,\n      onDragMove: null,\n      onDragEnd: null,\n      onDragEnter: null,\n      onDragLeave: null,\n      onDrop: null,\n      immediate: true,\n      dragDirection: \"both\",\n      boundary: void 0,\n      boundOffset: 0,\n      allowMoveByClick: false,\n      itemData: null,\n      container: void 0,\n      dragTemplate: void 0,\n      contentTemplate: \"content\",\n      handle: \"\",\n      filter: \"\",\n      clone: false,\n      autoScroll: true,\n      scrollSpeed: 30,\n      scrollSensitivity: 60,\n      group: void 0,\n      data: void 0\n    });\n  },\n  _setOptionsByReference: function () {\n    this.callBase.apply(this, arguments);\n    extend(this._optionsByReference, {\n      component: true,\n      group: true,\n      itemData: true,\n      data: true\n    });\n  },\n  _init: function () {\n    this.callBase();\n\n    this._attachEventHandlers();\n\n    this._scrollAnimator = new ScrollAnimator(this);\n    this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\n    this._verticalScrollHelper = new ScrollHelper(\"vertical\", this);\n  },\n  _normalizeCursorOffset: function (offset) {\n    if (isObject(offset)) {\n      offset = {\n        h: offset.x,\n        v: offset.y\n      };\n    }\n\n    offset = splitPair(offset).map(value => parseFloat(value));\n    return {\n      left: offset[0],\n      top: 1 === offset.length ? offset[0] : offset[1]\n    };\n  },\n  _getNormalizedCursorOffset: function (offset, options) {\n    if (isFunction(offset)) {\n      offset = offset.call(this, options);\n    }\n\n    return this._normalizeCursorOffset(offset);\n  },\n  _calculateElementOffset: function (options) {\n    var elementOffset;\n    var dragElementOffset;\n    var event = options.event;\n    var $element = $(options.itemElement);\n    var $dragElement = $(options.dragElement);\n\n    var isCloned = this._dragElementIsCloned();\n\n    var cursorOffset = this.option(\"cursorOffset\");\n    var normalizedCursorOffset = {\n      left: 0,\n      top: 0\n    };\n    var currentLocate = this._initialLocate = locate($dragElement);\n\n    if (isCloned || options.initialOffset || cursorOffset) {\n      elementOffset = options.initialOffset || $element.offset();\n\n      if (cursorOffset) {\n        normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\n\n        if (isFinite(normalizedCursorOffset.left)) {\n          elementOffset.left = event.pageX;\n        }\n\n        if (isFinite(normalizedCursorOffset.top)) {\n          elementOffset.top = event.pageY;\n        }\n      }\n\n      dragElementOffset = $dragElement.offset();\n      elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\n      elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left;\n    }\n\n    return elementOffset;\n  },\n  _initPosition: function (options) {\n    var $dragElement = $(options.dragElement);\n\n    var elementOffset = this._calculateElementOffset(options);\n\n    if (elementOffset) {\n      this._move(elementOffset, $dragElement);\n    }\n\n    this._startPosition = locate($dragElement);\n  },\n  _startAnimator: function () {\n    if (!this._scrollAnimator.inProgress()) {\n      this._scrollAnimator.start();\n    }\n  },\n  _stopAnimator: function () {\n    this._scrollAnimator.stop();\n  },\n  _addWidgetPrefix: function (className) {\n    var componentName = this.NAME;\n    return dasherize(componentName) + (className ? \"-\" + className : \"\");\n  },\n  _getItemsSelector: function () {\n    return this.option(\"filter\") || \"\";\n  },\n  _$content: function () {\n    var $element = this.$element();\n    var $wrapper = $element.children(\".dx-template-wrapper\");\n    return $wrapper.length ? $wrapper : $element;\n  },\n  _attachEventHandlers: function () {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var $element = this._$content();\n\n    var itemsSelector = this._getItemsSelector();\n\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n    var data = {\n      direction: this.option(\"dragDirection\"),\n      immediate: this.option(\"immediate\"),\n      checkDropTarget: ($target, event) => {\n        var targetGroup = this.option(\"group\");\n\n        var sourceGroup = this._getSourceDraggable().option(\"group\");\n\n        var $scrollable = this._getScrollable($target);\n\n        if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\n          return false;\n        }\n\n        return sourceGroup && sourceGroup === targetGroup;\n      }\n    };\n\n    if (allowMoveByClick) {\n      $element = this._getArea();\n      eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this));\n    }\n\n    if (\">\" === itemsSelector[0]) {\n      itemsSelector = itemsSelector.slice(1);\n    }\n\n    eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\n    eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\n    eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));\n  },\n  _dragElementIsCloned: function () {\n    return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS));\n  },\n  _getDragTemplateArgs: function ($element, $container) {\n    return {\n      container: getPublicElement($container),\n      model: {\n        itemData: this.option(\"itemData\"),\n        itemElement: getPublicElement($element)\n      }\n    };\n  },\n  _createDragElement: function ($element) {\n    var result = $element;\n    var clone = this.option(\"clone\");\n\n    var $container = this._getContainer();\n\n    var template = this.option(\"dragTemplate\");\n\n    if (template) {\n      template = this._getTemplate(template);\n      result = $(\"<div>\").appendTo($container);\n      template.render(this._getDragTemplateArgs($element, result));\n    } else if (clone) {\n      result = $(\"<div>\").appendTo($container);\n      $element.clone().css({\n        width: $element.css(\"width\"),\n        height: $element.css(\"height\")\n      }).appendTo(result);\n    }\n\n    return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"));\n  },\n  _resetDragElement: function () {\n    if (this._dragElementIsCloned()) {\n      this._$dragElement.remove();\n    } else {\n      this._toggleDraggingClass(false);\n    }\n\n    this._$dragElement = null;\n  },\n  _resetSourceElement: function () {\n    this._toggleDragSourceClass(false);\n\n    this._$sourceElement = null;\n  },\n  _detachEventHandlers: function () {\n    eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\n    eventsEngine.off(this._getArea(), \".\" + DRAGGABLE);\n  },\n  _move: function (position, $element) {\n    move($element || this._$dragElement, position);\n  },\n  _getDraggableElement: function (e) {\n    var $sourceElement = this._getSourceElement();\n\n    if ($sourceElement) {\n      return $sourceElement;\n    }\n\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n\n    if (allowMoveByClick) {\n      return this.$element();\n    }\n\n    var $target = $(e && e.target);\n\n    var itemsSelector = this._getItemsSelector();\n\n    if (\">\" === itemsSelector[0]) {\n      var $items = this._$content().find(itemsSelector);\n\n      if (!$items.is($target)) {\n        $target = $target.closest($items);\n      }\n    }\n\n    return $target;\n  },\n  _getSourceElement: function () {\n    var draggable = this._getSourceDraggable();\n\n    return draggable._$sourceElement;\n  },\n  _pointerDownHandler: function (e) {\n    if (needSkipEvent(e)) {\n      return;\n    }\n\n    var position = {};\n    var $element = this.$element();\n    var dragDirection = this.option(\"dragDirection\");\n\n    if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\n      position.left = e.pageX - $element.offset().left + locate($element).left - getWidth($element) / 2;\n    }\n\n    if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\n      position.top = e.pageY - $element.offset().top + locate($element).top - getHeight($element) / 2;\n    }\n\n    this._move(position, $element);\n\n    this._getAction(\"onDragMove\")(this._getEventArgs(e));\n  },\n  _isValidElement: function (event, $element) {\n    var handle = this.option(\"handle\");\n    var $target = $(event.originalEvent && event.originalEvent.target);\n\n    if (handle && !$target.closest(handle).length) {\n      return false;\n    }\n\n    if (!$element.length) {\n      return false;\n    }\n\n    return !$element.is(\".dx-state-disabled, .dx-state-disabled *\");\n  },\n  _dragStartHandler: function (e) {\n    var $element = this._getDraggableElement(e);\n\n    if (!this._isValidElement(e, $element)) {\n      e.cancel = true;\n      return;\n    }\n\n    if (this._$sourceElement) {\n      return;\n    }\n\n    var dragStartArgs = this._getDragStartArgs(e, $element);\n\n    this._getAction(\"onDragStart\")(dragStartArgs);\n\n    if (dragStartArgs.cancel) {\n      e.cancel = true;\n      return;\n    }\n\n    this.option(\"itemData\", dragStartArgs.itemData);\n\n    this._setSourceDraggable();\n\n    this._$sourceElement = $element;\n    var initialOffset = $element.offset();\n\n    var $dragElement = this._$dragElement = this._createDragElement($element);\n\n    this._toggleDraggingClass(true);\n\n    this._toggleDragSourceClass(true);\n\n    this._setGestureCoverCursor($dragElement.children());\n\n    var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\n\n    this._initPosition(extend({}, dragStartArgs, {\n      dragElement: $dragElement.get(0),\n      initialOffset: isFixedPosition && initialOffset\n    }));\n\n    this._getAction(\"onDraggableElementShown\")(_extends({}, dragStartArgs, {\n      dragElement: $dragElement\n    }));\n\n    var $area = this._getArea();\n\n    var areaOffset = this._getAreaOffset($area);\n\n    var boundOffset = this._getBoundOffset();\n\n    var areaWidth = getOuterWidth($area);\n    var areaHeight = getOuterHeight($area);\n    var elementWidth = getWidth($dragElement);\n    var elementHeight = getHeight($dragElement);\n    var startOffset_left = $dragElement.offset().left - areaOffset.left,\n        startOffset_top = $dragElement.offset().top - areaOffset.top;\n\n    if ($area.length) {\n      e.maxLeftOffset = startOffset_left - boundOffset.left;\n      e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\n      e.maxTopOffset = startOffset_top - boundOffset.top;\n      e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom;\n    }\n\n    if (this.option(\"autoScroll\")) {\n      this._startAnimator();\n    }\n  },\n  _getAreaOffset: function ($area) {\n    var offset = $area && positionUtils.offset($area);\n    return offset ? offset : {\n      left: 0,\n      top: 0\n    };\n  },\n  _toggleDraggingClass: function (value) {\n    this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value);\n  },\n  _toggleDragSourceClass: function (value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value);\n  },\n  _setGestureCoverCursor: function ($element) {\n    $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"));\n  },\n  _getBoundOffset: function () {\n    var boundOffset = this.option(\"boundOffset\");\n\n    if (isFunction(boundOffset)) {\n      boundOffset = boundOffset.call(this);\n    }\n\n    return quadToObject(boundOffset);\n  },\n  _getArea: function () {\n    var area = this.option(\"boundary\");\n\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n\n    return $(area);\n  },\n  _getContainer: function () {\n    var container = this.option(\"container\");\n\n    if (void 0 === container) {\n      container = viewPort();\n    }\n\n    return $(container);\n  },\n  _dragMoveHandler: function (e, scrollBy) {\n    this._dragMoveArgs = e;\n\n    if (!this._$dragElement) {\n      e.cancel = true;\n      return;\n    }\n\n    var offset = e.offset;\n    var startPosition = this._startPosition;\n\n    this._move({\n      left: startPosition.left + offset.x,\n      top: startPosition.top + offset.y\n    });\n\n    if (!scrollBy) {\n      this._updateScrollable(e);\n    }\n\n    var eventArgs = this._getEventArgs(e);\n\n    this._getAction(\"onDragMove\")(eventArgs);\n\n    if (true === eventArgs.cancel) {\n      return;\n    }\n\n    var targetDraggable = this._getTargetDraggable();\n\n    targetDraggable.dragMove(e, scrollBy);\n  },\n  _updateScrollable: function (e) {\n    if (this.option(\"autoScroll\")) {\n      var mousePosition = getMousePosition(e);\n      var allObjects = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y);\n\n      this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\n\n      this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition);\n    }\n  },\n  _getScrollable: function ($element) {\n    var $scrollable;\n    $element.parents().toArray().some(parent => {\n      var $parent = $(parent);\n\n      if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {\n        $scrollable = $parent;\n        return true;\n      }\n    });\n    return $scrollable;\n  },\n  _defaultActionArgs: function () {\n    var args = this.callBase.apply(this, arguments);\n    var component = this.option(\"component\");\n\n    if (component) {\n      args.component = component;\n      args.element = component.element();\n    }\n\n    return args;\n  },\n  _getEventArgs: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    return {\n      event: e,\n      itemData: sourceDraggable.option(\"itemData\"),\n      itemElement: getPublicElement(sourceDraggable._$sourceElement),\n      fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\n      toComponent: targetDraggable.option(\"component\") || targetDraggable,\n      fromData: sourceDraggable.option(\"data\"),\n      toData: targetDraggable.option(\"data\")\n    };\n  },\n  _getDragStartArgs: function (e, $itemElement) {\n    var args = this._getEventArgs(e);\n\n    return {\n      event: args.event,\n      itemData: args.itemData,\n      itemElement: $itemElement,\n      fromData: args.fromData\n    };\n  },\n  _revertItemToInitialPosition: function () {\n    !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement);\n  },\n  _dragEndHandler: function (e) {\n    var d = new Deferred();\n\n    var dragEndEventArgs = this._getEventArgs(e);\n\n    var dropEventArgs = this._getEventArgs(e);\n\n    var targetDraggable = this._getTargetDraggable();\n\n    var needRevertPosition = true;\n\n    try {\n      this._getAction(\"onDragEnd\")(dragEndEventArgs);\n    } finally {\n      when(fromPromise(dragEndEventArgs.cancel)).done(cancel => {\n        if (!cancel) {\n          if (targetDraggable !== this) {\n            targetDraggable._getAction(\"onDrop\")(dropEventArgs);\n          }\n\n          if (!dropEventArgs.cancel) {\n            needRevertPosition = false;\n            when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\n            return;\n          }\n        }\n\n        d.resolve();\n      }).fail(d.resolve);\n      d.done(() => {\n        if (needRevertPosition) {\n          this._revertItemToInitialPosition();\n        }\n\n        this.reset();\n        targetDraggable.reset();\n\n        this._stopAnimator();\n\n        this._horizontalScrollHelper.reset();\n\n        this._verticalScrollHelper.reset();\n\n        this._resetDragElement();\n\n        this._resetSourceElement();\n\n        this._resetTargetDraggable();\n\n        this._resetSourceDraggable();\n      });\n    }\n  },\n  _isTargetOverAnotherDraggable: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (this === sourceDraggable) {\n      return false;\n    }\n\n    var $dragElement = sourceDraggable._$dragElement;\n    var $sourceDraggableElement = sourceDraggable.$element();\n    var $targetDraggableElement = this.$element();\n    var mousePosition = getMousePosition(e);\n    var elements = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y);\n    var firstWidgetElement = elements.filter(element => {\n      var $element = $(element);\n\n      if ($element.hasClass(this._addWidgetPrefix())) {\n        return !$element.closest($dragElement).length;\n      }\n    })[0];\n\n    var $sourceElement = this._getSourceElement();\n\n    var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\n    var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\n    return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable;\n  },\n  _dragEnterHandler: function (e) {\n    this._fireDragEnterEvent(e);\n\n    if (this._isTargetOverAnotherDraggable(e)) {\n      this._setTargetDraggable();\n    }\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable.dragEnter(e);\n  },\n  _dragLeaveHandler: function (e) {\n    this._fireDragLeaveEvent(e);\n\n    this._resetTargetDraggable();\n\n    if (this !== this._getSourceDraggable()) {\n      this.reset();\n    }\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    sourceDraggable.dragLeave(e);\n  },\n  _getAction: function (name) {\n    return this[\"_\" + name + \"Action\"] || this._createActionByOption(name);\n  },\n  _getAnonymousTemplateName: function () {\n    return ANONYMOUS_TEMPLATE_NAME;\n  },\n  _initTemplates: function () {\n    if (!this.option(\"contentTemplate\")) {\n      return;\n    }\n\n    this._templateManager.addDefaultTemplates({\n      content: new EmptyTemplate()\n    });\n\n    this.callBase.apply(this, arguments);\n  },\n  _render: function () {\n    this.callBase();\n    this.$element().addClass(this._addWidgetPrefix());\n    var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\n\n    var template = this._getTemplateByOption(\"contentTemplate\");\n\n    if (template) {\n      $(template.render({\n        container: this.element(),\n        transclude: transclude\n      }));\n    }\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"onDragStart\":\n      case \"onDragMove\":\n      case \"onDragEnd\":\n      case \"onDrop\":\n      case \"onDragEnter\":\n      case \"onDragLeave\":\n      case \"onDraggableElementShown\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n\n      case \"dragTemplate\":\n      case \"contentTemplate\":\n      case \"container\":\n      case \"clone\":\n        break;\n\n      case \"allowMoveByClick\":\n      case \"dragDirection\":\n      case \"disabled\":\n      case \"boundary\":\n      case \"filter\":\n      case \"immediate\":\n        this._resetDragElement();\n\n        this._detachEventHandlers();\n\n        this._attachEventHandlers();\n\n        break;\n\n      case \"autoScroll\":\n        this._verticalScrollHelper.reset();\n\n        this._horizontalScrollHelper.reset();\n\n        break;\n\n      case \"scrollSensitivity\":\n      case \"scrollSpeed\":\n      case \"boundOffset\":\n      case \"handle\":\n      case \"group\":\n      case \"data\":\n      case \"itemData\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _getTargetDraggable: function () {\n    return targetDraggable || this;\n  },\n  _getSourceDraggable: function () {\n    return sourceDraggable || this;\n  },\n  _setTargetDraggable: function () {\n    var currentGroup = this.option(\"group\");\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\n      targetDraggable = this;\n    }\n  },\n  _setSourceDraggable: function () {\n    sourceDraggable = this;\n  },\n  _resetSourceDraggable: function () {\n    sourceDraggable = null;\n  },\n  _resetTargetDraggable: function () {\n    targetDraggable = null;\n  },\n  _dispose: function () {\n    this.callBase();\n\n    this._detachEventHandlers();\n\n    this._resetDragElement();\n\n    this._resetTargetDraggable();\n\n    this._resetSourceDraggable();\n\n    this._$sourceElement = null;\n\n    this._stopAnimator();\n  },\n  _fireDragEnterEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onDragEnter\")(args);\n  },\n  _fireDragLeaveEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onDragLeave\")(args);\n  }\n});\nregisterComponent(DRAGGABLE, Draggable);\nexport default Draggable;","map":{"version":3,"names":["_extends","getWidth","getHeight","getOuterWidth","getOuterHeight","$","domAdapter","getWindow","getBoundingRect","eventsEngine","quadToObject","registerComponent","locate","move","Animator","dasherize","extend","DOMComponent","getPublicElement","addNamespace","needSkipEvent","pointerEvents","start","dragEventStart","dragEventMove","end","dragEventEnd","enter","dragEventEnter","leave","dragEventLeave","positionUtils","isFunction","isObject","noop","splitPair","value","viewPort","EmptyTemplate","when","fromPromise","Deferred","window","DRAGGABLE","DRAGSTART_EVENT_NAME","DRAG_EVENT_NAME","DRAGEND_EVENT_NAME","DRAG_ENTER_EVENT_NAME","DRAGEND_LEAVE_EVENT_NAME","POINTERDOWN_EVENT_NAME","down","CLONE_CLASS","targetDraggable","sourceDraggable","ANONYMOUS_TEMPLATE_NAME","getMousePosition","event","x","pageX","scrollLeft","y","pageY","scrollTop","GESTURE_COVER_CLASS","OVERLAY_WRAPPER_CLASS","OVERLAY_CONTENT_CLASS","ScrollHelper","constructor","orientation","component","_preventScroll","_component","_scrollValue","_overFlowAttr","_sizeAttr","_scrollSizeProp","_clientSizeProp","_limitProps","updateScrollable","elements","mousePosition","isScrollableFound","some","element","$element","isTargetOverOverlayWrapper","hasClass","isTargetOverOverlayContent","_trySetScrollable","_$scrollableAtPointer","_scrollSpeed","isScrolling","isScrollable","css","prop","Math","ceil","distanceToBorders","sensitivity","option","_calculateDistanceToBorders","_calculateScrollSpeed","$area","area","get","areaBoundingRect","left","top","right","bottom","distance","maxSpeed","pow","scrollByStep","$scrollable","closest","scrollableInstance","data","nextScrollPosition","scrollOffset","scrollTo","_nextScrollPosition","dragMoveArgs","_dragMoveArgs","_dragMoveHandler","reset","isOutsideScrollable","scrollableSize","size","location","ScrollAnimator","inherit","ctor","strategy","callBase","_strategy","_step","horizontalScrollHelper","_horizontalScrollHelper","verticalScrollHelper","_verticalScrollHelper","Draggable","dragMove","dragEnter","dragLeave","dragEnd","sourceEvent","_getSourceDraggable","_fireRemoveEvent","resolve","_getDefaultOptions","onDragStart","onDragMove","onDragEnd","onDragEnter","onDragLeave","onDrop","immediate","dragDirection","boundary","boundOffset","allowMoveByClick","itemData","container","dragTemplate","contentTemplate","handle","filter","clone","autoScroll","scrollSpeed","scrollSensitivity","group","_setOptionsByReference","apply","arguments","_optionsByReference","_init","_attachEventHandlers","_scrollAnimator","_normalizeCursorOffset","offset","h","v","map","parseFloat","length","_getNormalizedCursorOffset","options","call","_calculateElementOffset","elementOffset","dragElementOffset","itemElement","$dragElement","dragElement","isCloned","_dragElementIsCloned","cursorOffset","normalizedCursorOffset","currentLocate","_initialLocate","initialOffset","isFinite","_initPosition","_move","_startPosition","_startAnimator","inProgress","_stopAnimator","stop","_addWidgetPrefix","className","componentName","NAME","_getItemsSelector","_$content","$wrapper","children","itemsSelector","direction","checkDropTarget","$target","targetGroup","sourceGroup","_getScrollable","_getArea","on","_pointerDownHandler","bind","slice","_dragStartHandler","_dragEndHandler","_dragEnterHandler","_dragLeaveHandler","_$dragElement","_getDragTemplateArgs","$container","model","_createDragElement","result","_getContainer","template","_getTemplate","appendTo","render","width","height","toggleClass","_resetDragElement","remove","_toggleDraggingClass","_resetSourceElement","_toggleDragSourceClass","_$sourceElement","_detachEventHandlers","off","position","_getDraggableElement","e","$sourceElement","_getSourceElement","target","$items","find","is","draggable","_getAction","_getEventArgs","_isValidElement","originalEvent","cancel","dragStartArgs","_getDragStartArgs","_setSourceDraggable","_setGestureCoverCursor","isFixedPosition","areaOffset","_getAreaOffset","_getBoundOffset","areaWidth","areaHeight","elementWidth","elementHeight","startOffset_left","startOffset_top","maxLeftOffset","maxRightOffset","maxTopOffset","maxBottomOffset","concat","scrollBy","startPosition","_updateScrollable","eventArgs","_getTargetDraggable","allObjects","elementsFromPoint","parents","toArray","parent","$parent","_defaultActionArgs","args","fromComponent","toComponent","fromData","toData","$itemElement","_revertItemToInitialPosition","d","dragEndEventArgs","dropEventArgs","needRevertPosition","done","always","fail","_resetTargetDraggable","_resetSourceDraggable","_isTargetOverAnotherDraggable","$sourceDraggableElement","$targetDraggableElement","firstWidgetElement","isTargetOverItself","isTargetOverNestedDraggable","_fireDragEnterEvent","_setTargetDraggable","_fireDragLeaveEvent","name","_createActionByOption","_getAnonymousTemplateName","_initTemplates","_templateManager","addDefaultTemplates","content","_render","addClass","transclude","anonymousTemplateName","_getTemplateByOption","_optionChanged","currentGroup","_dispose"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/draggable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/draggable.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport domAdapter from \"../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    quadToObject\r\n} from \"../core/utils/string\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../animation/translator\";\r\nimport Animator from \"./scroll_view/animator\";\r\nimport {\r\n    dasherize\r\n} from \"../core/utils/inflector\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport DOMComponent from \"../core/dom_component\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    addNamespace,\r\n    needSkipEvent\r\n} from \"../events/utils/index\";\r\nimport pointerEvents from \"../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd,\r\n    enter as dragEventEnter,\r\n    leave as dragEventLeave\r\n} from \"../events/drag\";\r\nimport positionUtils from \"../animation/position\";\r\nimport {\r\n    isFunction,\r\n    isObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    noop,\r\n    splitPair\r\n} from \"../core/utils/common\";\r\nimport {\r\n    value as viewPort\r\n} from \"../core/utils/view_port\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../core/templates/empty_template\";\r\nimport {\r\n    when,\r\n    fromPromise,\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nvar window = getWindow();\r\nvar DRAGGABLE = \"dxDraggable\";\r\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\r\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\r\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\r\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\r\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\r\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\r\nvar CLONE_CLASS = \"clone\";\r\nvar targetDraggable;\r\nvar sourceDraggable;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar getMousePosition = event => ({\r\n    x: event.pageX - $(window).scrollLeft(),\r\n    y: event.pageY - $(window).scrollTop()\r\n});\r\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\r\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\r\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\r\nclass ScrollHelper {\r\n    constructor(orientation, component) {\r\n        this._preventScroll = true;\r\n        this._component = component;\r\n        if (\"vertical\" === orientation) {\r\n            this._scrollValue = \"scrollTop\";\r\n            this._overFlowAttr = \"overflowY\";\r\n            this._sizeAttr = \"height\";\r\n            this._scrollSizeProp = \"scrollHeight\";\r\n            this._clientSizeProp = \"clientHeight\";\r\n            this._limitProps = {\r\n                start: \"top\",\r\n                end: \"bottom\"\r\n            }\r\n        } else {\r\n            this._scrollValue = \"scrollLeft\";\r\n            this._overFlowAttr = \"overflowX\";\r\n            this._sizeAttr = \"width\";\r\n            this._scrollSizeProp = \"scrollWidth\";\r\n            this._clientSizeProp = \"clientWidth\";\r\n            this._limitProps = {\r\n                start: \"left\",\r\n                end: \"right\"\r\n            }\r\n        }\r\n    }\r\n    updateScrollable(elements, mousePosition) {\r\n        var isScrollableFound = false;\r\n        elements.some(element => {\r\n            var $element = $(element);\r\n            var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);\r\n            var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);\r\n            if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {\r\n                return true\r\n            }\r\n            isScrollableFound = this._trySetScrollable(element, mousePosition);\r\n            return isScrollableFound\r\n        });\r\n        if (!isScrollableFound) {\r\n            this._$scrollableAtPointer = null;\r\n            this._scrollSpeed = 0\r\n        }\r\n    }\r\n    isScrolling() {\r\n        return !!this._scrollSpeed\r\n    }\r\n    isScrollable($element) {\r\n        return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > Math.ceil(\"width\" === this._sizeAttr ? getWidth($element) : getHeight($element))\r\n    }\r\n    _trySetScrollable(element, mousePosition) {\r\n        var $element = $(element);\r\n        var distanceToBorders;\r\n        var sensitivity = this._component.option(\"scrollSensitivity\");\r\n        var isScrollable = this.isScrollable($element);\r\n        if (isScrollable) {\r\n            distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\r\n            if (sensitivity > distanceToBorders[this._limitProps.start]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else {\r\n                isScrollable = false;\r\n                this._preventScroll = false\r\n            }\r\n        }\r\n        return isScrollable\r\n    }\r\n    _calculateDistanceToBorders($area, mousePosition) {\r\n        var area = $area.get(0);\r\n        var areaBoundingRect;\r\n        if (area) {\r\n            areaBoundingRect = getBoundingRect(area);\r\n            return {\r\n                left: mousePosition.x - areaBoundingRect.left,\r\n                top: mousePosition.y - areaBoundingRect.top,\r\n                right: areaBoundingRect.right - mousePosition.x,\r\n                bottom: areaBoundingRect.bottom - mousePosition.y\r\n            }\r\n        } else {\r\n            return {}\r\n        }\r\n    }\r\n    _calculateScrollSpeed(distance) {\r\n        var component = this._component;\r\n        var sensitivity = component.option(\"scrollSensitivity\");\r\n        var maxSpeed = component.option(\"scrollSpeed\");\r\n        return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed)\r\n    }\r\n    scrollByStep() {\r\n        if (this._$scrollableAtPointer && this._scrollSpeed) {\r\n            if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\r\n                var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\r\n                var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\r\n                if (scrollableInstance) {\r\n                    var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\r\n                    scrollableInstance.scrollTo({\r\n                        [this._limitProps.start]: nextScrollPosition\r\n                    })\r\n                }\r\n            } else {\r\n                var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\r\n                this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition)\r\n            }\r\n            var dragMoveArgs = this._component._dragMoveArgs;\r\n            if (dragMoveArgs) {\r\n                this._component._dragMoveHandler(dragMoveArgs)\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        this._$scrollableAtPointer = null;\r\n        this._scrollSpeed = 0;\r\n        this._preventScroll = true\r\n    }\r\n    isOutsideScrollable($scrollable, event) {\r\n        if (!$scrollable) {\r\n            return false\r\n        }\r\n        var scrollableSize = getBoundingRect($scrollable.get(0));\r\n        var start = scrollableSize[this._limitProps.start];\r\n        var size = scrollableSize[this._sizeAttr];\r\n        var mousePosition = getMousePosition(event);\r\n        var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\r\n        return location < start || location > start + size\r\n    }\r\n}\r\nvar ScrollAnimator = Animator.inherit({\r\n    ctor: function(strategy) {\r\n        this.callBase();\r\n        this._strategy = strategy\r\n    },\r\n    _step: function() {\r\n        var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\r\n        var verticalScrollHelper = this._strategy._verticalScrollHelper;\r\n        horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\r\n        verticalScrollHelper && verticalScrollHelper.scrollByStep()\r\n    }\r\n});\r\nvar Draggable = DOMComponent.inherit({\r\n    reset: noop,\r\n    dragMove: noop,\r\n    dragEnter: noop,\r\n    dragLeave: noop,\r\n    dragEnd: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable._fireRemoveEvent(sourceEvent);\r\n        return (new Deferred).resolve()\r\n    },\r\n    _fireRemoveEvent: noop,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: null,\r\n            onDragMove: null,\r\n            onDragEnd: null,\r\n            onDragEnter: null,\r\n            onDragLeave: null,\r\n            onDrop: null,\r\n            immediate: true,\r\n            dragDirection: \"both\",\r\n            boundary: void 0,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false,\r\n            itemData: null,\r\n            container: void 0,\r\n            dragTemplate: void 0,\r\n            contentTemplate: \"content\",\r\n            handle: \"\",\r\n            filter: \"\",\r\n            clone: false,\r\n            autoScroll: true,\r\n            scrollSpeed: 30,\r\n            scrollSensitivity: 60,\r\n            group: void 0,\r\n            data: void 0\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase.apply(this, arguments);\r\n        extend(this._optionsByReference, {\r\n            component: true,\r\n            group: true,\r\n            itemData: true,\r\n            data: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers();\r\n        this._scrollAnimator = new ScrollAnimator(this);\r\n        this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\r\n        this._verticalScrollHelper = new ScrollHelper(\"vertical\", this)\r\n    },\r\n    _normalizeCursorOffset: function(offset) {\r\n        if (isObject(offset)) {\r\n            offset = {\r\n                h: offset.x,\r\n                v: offset.y\r\n            }\r\n        }\r\n        offset = splitPair(offset).map(value => parseFloat(value));\r\n        return {\r\n            left: offset[0],\r\n            top: 1 === offset.length ? offset[0] : offset[1]\r\n        }\r\n    },\r\n    _getNormalizedCursorOffset: function(offset, options) {\r\n        if (isFunction(offset)) {\r\n            offset = offset.call(this, options)\r\n        }\r\n        return this._normalizeCursorOffset(offset)\r\n    },\r\n    _calculateElementOffset: function(options) {\r\n        var elementOffset;\r\n        var dragElementOffset;\r\n        var event = options.event;\r\n        var $element = $(options.itemElement);\r\n        var $dragElement = $(options.dragElement);\r\n        var isCloned = this._dragElementIsCloned();\r\n        var cursorOffset = this.option(\"cursorOffset\");\r\n        var normalizedCursorOffset = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        var currentLocate = this._initialLocate = locate($dragElement);\r\n        if (isCloned || options.initialOffset || cursorOffset) {\r\n            elementOffset = options.initialOffset || $element.offset();\r\n            if (cursorOffset) {\r\n                normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\r\n                if (isFinite(normalizedCursorOffset.left)) {\r\n                    elementOffset.left = event.pageX\r\n                }\r\n                if (isFinite(normalizedCursorOffset.top)) {\r\n                    elementOffset.top = event.pageY\r\n                }\r\n            }\r\n            dragElementOffset = $dragElement.offset();\r\n            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\r\n            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left\r\n        }\r\n        return elementOffset\r\n    },\r\n    _initPosition: function(options) {\r\n        var $dragElement = $(options.dragElement);\r\n        var elementOffset = this._calculateElementOffset(options);\r\n        if (elementOffset) {\r\n            this._move(elementOffset, $dragElement)\r\n        }\r\n        this._startPosition = locate($dragElement)\r\n    },\r\n    _startAnimator: function() {\r\n        if (!this._scrollAnimator.inProgress()) {\r\n            this._scrollAnimator.start()\r\n        }\r\n    },\r\n    _stopAnimator: function() {\r\n        this._scrollAnimator.stop()\r\n    },\r\n    _addWidgetPrefix: function(className) {\r\n        var componentName = this.NAME;\r\n        return dasherize(componentName) + (className ? \"-\" + className : \"\")\r\n    },\r\n    _getItemsSelector: function() {\r\n        return this.option(\"filter\") || \"\"\r\n    },\r\n    _$content: function() {\r\n        var $element = this.$element();\r\n        var $wrapper = $element.children(\".dx-template-wrapper\");\r\n        return $wrapper.length ? $wrapper : $element\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this._$content();\r\n        var itemsSelector = this._getItemsSelector();\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        var data = {\r\n            direction: this.option(\"dragDirection\"),\r\n            immediate: this.option(\"immediate\"),\r\n            checkDropTarget: ($target, event) => {\r\n                var targetGroup = this.option(\"group\");\r\n                var sourceGroup = this._getSourceDraggable().option(\"group\");\r\n                var $scrollable = this._getScrollable($target);\r\n                if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\r\n                    return false\r\n                }\r\n                return sourceGroup && sourceGroup === targetGroup\r\n            }\r\n        };\r\n        if (allowMoveByClick) {\r\n            $element = this._getArea();\r\n            eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this))\r\n        }\r\n        if (\">\" === itemsSelector[0]) {\r\n            itemsSelector = itemsSelector.slice(1)\r\n        }\r\n        eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this))\r\n    },\r\n    _dragElementIsCloned: function() {\r\n        return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS))\r\n    },\r\n    _getDragTemplateArgs: function($element, $container) {\r\n        return {\r\n            container: getPublicElement($container),\r\n            model: {\r\n                itemData: this.option(\"itemData\"),\r\n                itemElement: getPublicElement($element)\r\n            }\r\n        }\r\n    },\r\n    _createDragElement: function($element) {\r\n        var result = $element;\r\n        var clone = this.option(\"clone\");\r\n        var $container = this._getContainer();\r\n        var template = this.option(\"dragTemplate\");\r\n        if (template) {\r\n            template = this._getTemplate(template);\r\n            result = $(\"<div>\").appendTo($container);\r\n            template.render(this._getDragTemplateArgs($element, result))\r\n        } else if (clone) {\r\n            result = $(\"<div>\").appendTo($container);\r\n            $element.clone().css({\r\n                width: $element.css(\"width\"),\r\n                height: $element.css(\"height\")\r\n            }).appendTo(result)\r\n        }\r\n        return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"))\r\n    },\r\n    _resetDragElement: function() {\r\n        if (this._dragElementIsCloned()) {\r\n            this._$dragElement.remove()\r\n        } else {\r\n            this._toggleDraggingClass(false)\r\n        }\r\n        this._$dragElement = null\r\n    },\r\n    _resetSourceElement: function() {\r\n        this._toggleDragSourceClass(false);\r\n        this._$sourceElement = null\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this._$content(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position, $element) {\r\n        move($element || this._$dragElement, position)\r\n    },\r\n    _getDraggableElement: function(e) {\r\n        var $sourceElement = this._getSourceElement();\r\n        if ($sourceElement) {\r\n            return $sourceElement\r\n        }\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        if (allowMoveByClick) {\r\n            return this.$element()\r\n        }\r\n        var $target = $(e && e.target);\r\n        var itemsSelector = this._getItemsSelector();\r\n        if (\">\" === itemsSelector[0]) {\r\n            var $items = this._$content().find(itemsSelector);\r\n            if (!$items.is($target)) {\r\n                $target = $target.closest($items)\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _getSourceElement: function() {\r\n        var draggable = this._getSourceDraggable();\r\n        return draggable._$sourceElement\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var position = {};\r\n        var $element = this.$element();\r\n        var dragDirection = this.option(\"dragDirection\");\r\n        if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\r\n            position.left = e.pageX - $element.offset().left + locate($element).left - getWidth($element) / 2\r\n        }\r\n        if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\r\n            position.top = e.pageY - $element.offset().top + locate($element).top - getHeight($element) / 2\r\n        }\r\n        this._move(position, $element);\r\n        this._getAction(\"onDragMove\")(this._getEventArgs(e))\r\n    },\r\n    _isValidElement: function(event, $element) {\r\n        var handle = this.option(\"handle\");\r\n        var $target = $(event.originalEvent && event.originalEvent.target);\r\n        if (handle && !$target.closest(handle).length) {\r\n            return false\r\n        }\r\n        if (!$element.length) {\r\n            return false\r\n        }\r\n        return !$element.is(\".dx-state-disabled, .dx-state-disabled *\")\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this._getDraggableElement(e);\r\n        if (!this._isValidElement(e, $element)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._$sourceElement) {\r\n            return\r\n        }\r\n        var dragStartArgs = this._getDragStartArgs(e, $element);\r\n        this._getAction(\"onDragStart\")(dragStartArgs);\r\n        if (dragStartArgs.cancel) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this.option(\"itemData\", dragStartArgs.itemData);\r\n        this._setSourceDraggable();\r\n        this._$sourceElement = $element;\r\n        var initialOffset = $element.offset();\r\n        var $dragElement = this._$dragElement = this._createDragElement($element);\r\n        this._toggleDraggingClass(true);\r\n        this._toggleDragSourceClass(true);\r\n        this._setGestureCoverCursor($dragElement.children());\r\n        var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\r\n        this._initPosition(extend({}, dragStartArgs, {\r\n            dragElement: $dragElement.get(0),\r\n            initialOffset: isFixedPosition && initialOffset\r\n        }));\r\n        this._getAction(\"onDraggableElementShown\")(_extends({}, dragStartArgs, {\r\n            dragElement: $dragElement\r\n        }));\r\n        var $area = this._getArea();\r\n        var areaOffset = this._getAreaOffset($area);\r\n        var boundOffset = this._getBoundOffset();\r\n        var areaWidth = getOuterWidth($area);\r\n        var areaHeight = getOuterHeight($area);\r\n        var elementWidth = getWidth($dragElement);\r\n        var elementHeight = getHeight($dragElement);\r\n        var startOffset_left = $dragElement.offset().left - areaOffset.left,\r\n            startOffset_top = $dragElement.offset().top - areaOffset.top;\r\n        if ($area.length) {\r\n            e.maxLeftOffset = startOffset_left - boundOffset.left;\r\n            e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\r\n            e.maxTopOffset = startOffset_top - boundOffset.top;\r\n            e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom\r\n        }\r\n        if (this.option(\"autoScroll\")) {\r\n            this._startAnimator()\r\n        }\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value)\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value)\r\n    },\r\n    _setGestureCoverCursor: function($element) {\r\n        $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"))\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"boundary\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _getContainer: function() {\r\n        var container = this.option(\"container\");\r\n        if (void 0 === container) {\r\n            container = viewPort()\r\n        }\r\n        return $(container)\r\n    },\r\n    _dragMoveHandler: function(e, scrollBy) {\r\n        this._dragMoveArgs = e;\r\n        if (!this._$dragElement) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var offset = e.offset;\r\n        var startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        if (!scrollBy) {\r\n            this._updateScrollable(e)\r\n        }\r\n        var eventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragMove\")(eventArgs);\r\n        if (true === eventArgs.cancel) {\r\n            return\r\n        }\r\n        var targetDraggable = this._getTargetDraggable();\r\n        targetDraggable.dragMove(e, scrollBy)\r\n    },\r\n    _updateScrollable: function(e) {\r\n        if (this.option(\"autoScroll\")) {\r\n            var mousePosition = getMousePosition(e);\r\n            var allObjects = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y);\r\n            this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\r\n            this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition)\r\n        }\r\n    },\r\n    _getScrollable: function($element) {\r\n        var $scrollable;\r\n        $element.parents().toArray().some(parent => {\r\n            var $parent = $(parent);\r\n            if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {\r\n                $scrollable = $parent;\r\n                return true\r\n            }\r\n        });\r\n        return $scrollable\r\n    },\r\n    _defaultActionArgs: function() {\r\n        var args = this.callBase.apply(this, arguments);\r\n        var component = this.option(\"component\");\r\n        if (component) {\r\n            args.component = component;\r\n            args.element = component.element()\r\n        }\r\n        return args\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return {\r\n            event: e,\r\n            itemData: sourceDraggable.option(\"itemData\"),\r\n            itemElement: getPublicElement(sourceDraggable._$sourceElement),\r\n            fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\r\n            toComponent: targetDraggable.option(\"component\") || targetDraggable,\r\n            fromData: sourceDraggable.option(\"data\"),\r\n            toData: targetDraggable.option(\"data\")\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        var args = this._getEventArgs(e);\r\n        return {\r\n            event: args.event,\r\n            itemData: args.itemData,\r\n            itemElement: $itemElement,\r\n            fromData: args.fromData\r\n        }\r\n    },\r\n    _revertItemToInitialPosition: function() {\r\n        !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement)\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var d = new Deferred;\r\n        var dragEndEventArgs = this._getEventArgs(e);\r\n        var dropEventArgs = this._getEventArgs(e);\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var needRevertPosition = true;\r\n        try {\r\n            this._getAction(\"onDragEnd\")(dragEndEventArgs)\r\n        } finally {\r\n            when(fromPromise(dragEndEventArgs.cancel)).done(cancel => {\r\n                if (!cancel) {\r\n                    if (targetDraggable !== this) {\r\n                        targetDraggable._getAction(\"onDrop\")(dropEventArgs)\r\n                    }\r\n                    if (!dropEventArgs.cancel) {\r\n                        needRevertPosition = false;\r\n                        when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\r\n                        return\r\n                    }\r\n                }\r\n                d.resolve()\r\n            }).fail(d.resolve);\r\n            d.done(() => {\r\n                if (needRevertPosition) {\r\n                    this._revertItemToInitialPosition()\r\n                }\r\n                this.reset();\r\n                targetDraggable.reset();\r\n                this._stopAnimator();\r\n                this._horizontalScrollHelper.reset();\r\n                this._verticalScrollHelper.reset();\r\n                this._resetDragElement();\r\n                this._resetSourceElement();\r\n                this._resetTargetDraggable();\r\n                this._resetSourceDraggable()\r\n            })\r\n        }\r\n    },\r\n    _isTargetOverAnotherDraggable: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (this === sourceDraggable) {\r\n            return false\r\n        }\r\n        var $dragElement = sourceDraggable._$dragElement;\r\n        var $sourceDraggableElement = sourceDraggable.$element();\r\n        var $targetDraggableElement = this.$element();\r\n        var mousePosition = getMousePosition(e);\r\n        var elements = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y);\r\n        var firstWidgetElement = elements.filter(element => {\r\n            var $element = $(element);\r\n            if ($element.hasClass(this._addWidgetPrefix())) {\r\n                return !$element.closest($dragElement).length\r\n            }\r\n        })[0];\r\n        var $sourceElement = this._getSourceElement();\r\n        var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\r\n        var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\r\n        return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this._fireDragEnterEvent(e);\r\n        if (this._isTargetOverAnotherDraggable(e)) {\r\n            this._setTargetDraggable()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragEnter(e)\r\n    },\r\n    _dragLeaveHandler: function(e) {\r\n        this._fireDragLeaveEvent(e);\r\n        this._resetTargetDraggable();\r\n        if (this !== this._getSourceDraggable()) {\r\n            this.reset()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragLeave(e)\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates: function() {\r\n        if (!this.option(\"contentTemplate\")) {\r\n            return\r\n        }\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new EmptyTemplate\r\n        });\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(this._addWidgetPrefix());\r\n        var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\r\n        var template = this._getTemplateByOption(\"contentTemplate\");\r\n        if (template) {\r\n            $(template.render({\r\n                container: this.element(),\r\n                transclude: transclude\r\n            }))\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDragMove\":\r\n            case \"onDragEnd\":\r\n            case \"onDrop\":\r\n            case \"onDragEnter\":\r\n            case \"onDragLeave\":\r\n            case \"onDraggableElementShown\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"dragTemplate\":\r\n            case \"contentTemplate\":\r\n            case \"container\":\r\n            case \"clone\":\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"dragDirection\":\r\n            case \"disabled\":\r\n            case \"boundary\":\r\n            case \"filter\":\r\n            case \"immediate\":\r\n                this._resetDragElement();\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"autoScroll\":\r\n                this._verticalScrollHelper.reset();\r\n                this._horizontalScrollHelper.reset();\r\n                break;\r\n            case \"scrollSensitivity\":\r\n            case \"scrollSpeed\":\r\n            case \"boundOffset\":\r\n            case \"handle\":\r\n            case \"group\":\r\n            case \"data\":\r\n            case \"itemData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getTargetDraggable: function() {\r\n        return targetDraggable || this\r\n    },\r\n    _getSourceDraggable: function() {\r\n        return sourceDraggable || this\r\n    },\r\n    _setTargetDraggable: function() {\r\n        var currentGroup = this.option(\"group\");\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\r\n            targetDraggable = this\r\n        }\r\n    },\r\n    _setSourceDraggable: function() {\r\n        sourceDraggable = this\r\n    },\r\n    _resetSourceDraggable: function() {\r\n        sourceDraggable = null\r\n    },\r\n    _resetTargetDraggable: function() {\r\n        targetDraggable = null\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers();\r\n        this._resetDragElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable();\r\n        this._$sourceElement = null;\r\n        this._stopAnimator()\r\n    },\r\n    _fireDragEnterEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragEnter\")(args)\r\n    },\r\n    _fireDragLeaveEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragLeave\")(args)\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nexport default Draggable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
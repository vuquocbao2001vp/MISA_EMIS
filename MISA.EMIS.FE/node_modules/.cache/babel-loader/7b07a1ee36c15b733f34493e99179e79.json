{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\n/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../../core/class\";\nimport { noop } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isFunction, isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../../ui/widget/ui.errors\";\nimport uiSearchBoxMixin from \"../../ui/widget/ui.search_box_mixin\";\nimport TextBox from \"../../ui/text_box\";\nimport query from \"../../data/query\";\nimport storeHelper from \"../../data/store_helper\";\nimport HierarchicalDataConverter from \"./ui.data_converter\";\nvar EXPANDED = \"expanded\";\nvar SELECTED = \"selected\";\nvar DISABLED = \"disabled\";\nuiSearchBoxMixin.setEditorClass(TextBox);\nvar DataAdapter = Class.inherit({\n  ctor: function (options) {\n    this.options = {};\n    extend(this.options, this._defaultOptions(), options);\n    this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\n    this._selectedNodesKeys = [];\n    this._expandedNodesKeys = [];\n    this._dataStructure = [];\n\n    this._createInternalDataStructure();\n\n    this.getTreeNodes();\n  },\n  setOption: function (name, value) {\n    this.options[name] = value;\n\n    if (\"recursiveSelection\" === name) {\n      this._updateSelection();\n    }\n  },\n  _defaultOptions: function () {\n    return {\n      dataAccessors: void 0,\n      items: [],\n      multipleSelection: true,\n      recursiveSelection: false,\n      recursiveExpansion: false,\n      rootValue: 0,\n      searchValue: \"\",\n      dataType: \"tree\",\n      searchMode: \"contains\",\n      dataConverter: new HierarchicalDataConverter(),\n      onNodeChanged: noop,\n      sort: null\n    };\n  },\n  _createInternalDataStructure: function () {\n    this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\n    this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\n    this.options.dataConverter._dataStructure = this._dataStructure;\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  _updateSelection: function () {\n    if (this.options.recursiveSelection) {\n      this._setChildrenSelection();\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _updateExpansion: function (key) {\n    if (this.options.recursiveExpansion) {\n      key ? this._updateOneBranch(key) : this._setParentExpansion();\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  _updateNodesKeysArray: function (property) {\n    var that = this;\n    var array = [];\n    each(that._getDataBySelectionMode(), function (_, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      if (node.internalFields[property]) {\n        if (property === EXPANDED || that.options.multipleSelection) {\n          array.push(node.internalFields.key);\n        } else {\n          array.length && that.toggleSelection(array[0], false, true);\n          array = [node.internalFields.key];\n        }\n      }\n    });\n    return array;\n  },\n  _getDataBySelectionMode: function () {\n    return this.options.multipleSelection ? this.getData() : this.getFullData();\n  },\n  _isNodeVisible: function (node) {\n    return false !== node.internalFields.item.visible;\n  },\n  _getByKey: function (data, key) {\n    return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key);\n  },\n  _setChildrenSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.childrenKeys.length) {\n        return;\n      }\n\n      var isSelected = node.internalFields.selected;\n      true === isSelected && that._toggleChildrenSelection(node, isSelected);\n    });\n  },\n  _setParentSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      var parent = that.options.dataConverter.getParentNode(node);\n\n      if (parent && node.internalFields.parentKey !== that.options.rootValue) {\n        that._iterateParents(node, function (parent) {\n          var newParentState = that._calculateSelectedState(parent);\n\n          that._setFieldState(parent, SELECTED, newParentState);\n        });\n      }\n    });\n  },\n  _setParentExpansion: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.expanded) {\n        return;\n      }\n\n      that._updateOneBranch(node.internalFields.key);\n    });\n  },\n  _updateOneBranch: function (key) {\n    var that = this;\n    var node = this.getNodeByKey(key);\n\n    that._iterateParents(node, function (parent) {\n      that._setFieldState(parent, EXPANDED, true);\n    });\n  },\n  _iterateChildren: function (node, recursive, callback, processedKeys) {\n    if (!isFunction(callback)) {\n      return;\n    }\n\n    var that = this;\n    var nodeKey = node.internalFields.key;\n    processedKeys = processedKeys || [];\n\n    if (-1 === processedKeys.indexOf(nodeKey)) {\n      processedKeys.push(nodeKey);\n      each(node.internalFields.childrenKeys, function (_, key) {\n        var child = that.getNodeByKey(key);\n        callback(child);\n\n        if (child.internalFields.childrenKeys.length && recursive) {\n          that._iterateChildren(child, recursive, callback, processedKeys);\n        }\n      });\n    }\n  },\n  _iterateParents: function (node, callback, processedKeys) {\n    if (node.internalFields.parentKey === this.options.rootValue || !isFunction(callback)) {\n      return;\n    }\n\n    processedKeys = processedKeys || [];\n    var key = node.internalFields.key;\n\n    if (-1 === processedKeys.indexOf(key)) {\n      processedKeys.push(key);\n      var parent = this.options.dataConverter.getParentNode(node);\n\n      if (parent) {\n        callback(parent);\n\n        if (parent.internalFields.parentKey !== this.options.rootValue) {\n          this._iterateParents(parent, callback, processedKeys);\n        }\n      }\n    }\n  },\n  _calculateSelectedState: function (node) {\n    var itemsCount = node.internalFields.childrenKeys.length;\n    var selectedItemsCount = 0;\n    var invisibleItemsCount = 0;\n    var result = false;\n\n    for (var i = 0; i <= itemsCount - 1; i++) {\n      var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\n      var isChildInvisible = false === childNode.internalFields.item.visible;\n      var childState = childNode.internalFields.selected;\n\n      if (isChildInvisible) {\n        invisibleItemsCount++;\n        continue;\n      }\n\n      if (childState) {\n        selectedItemsCount++;\n      } else if (void 0 === childState) {\n        selectedItemsCount += .5;\n      }\n    }\n\n    if (selectedItemsCount) {\n      result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0;\n    }\n\n    return result;\n  },\n  _toggleChildrenSelection: function (node, state) {\n    var that = this;\n\n    this._iterateChildren(node, true, function (child) {\n      if (that._isNodeVisible(child)) {\n        that._setFieldState(child, SELECTED, state);\n      }\n    });\n  },\n  _setFieldState: function (node, field, state) {\n    if (node.internalFields[field] === state) {\n      return;\n    }\n\n    node.internalFields[field] = state;\n\n    if (node.internalFields.publicNode) {\n      node.internalFields.publicNode[field] = state;\n    }\n\n    this.options.dataAccessors.setters[field](node.internalFields.item, state);\n    this.options.onNodeChanged(node);\n  },\n  _markChildren: function (keys) {\n    var that = this;\n    each(keys, function (_, key) {\n      var index = that.getIndexByKey(key);\n      var node = that.getNodeByKey(key);\n      that._dataStructure[index] = 0;\n      node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys);\n    });\n  },\n  _removeNode: function (key) {\n    var node = this.getNodeByKey(key);\n    this._dataStructure[this.getIndexByKey(key)] = 0;\n\n    this._markChildren(node.internalFields.childrenKeys);\n\n    var that = this;\n    var counter = 0;\n    var items = extend([], this._dataStructure);\n    each(items, function (index, item) {\n      if (!item) {\n        that._dataStructure.splice(index - counter, 1);\n\n        counter++;\n      }\n    });\n  },\n  _addNode: function (item) {\n    var dataConverter = this.options.dataConverter;\n\n    var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\n\n    this._dataStructure = this._dataStructure.concat(node);\n    this._initialDataStructure = this._initialDataStructure.concat(node);\n    dataConverter._dataStructure = dataConverter._dataStructure.concat(node);\n  },\n  _updateFields: function () {\n    this.options.dataConverter.updateChildrenKeys();\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  getSelectedNodesKeys: function () {\n    return this._selectedNodesKeys;\n  },\n  getExpandedNodesKeys: function () {\n    return this._expandedNodesKeys;\n  },\n  getData: function () {\n    return this._dataStructure;\n  },\n  getFullData: function () {\n    return this._initialDataStructure;\n  },\n  getNodeByItem: function (item) {\n    var result = null;\n    each(this._dataStructure, function (_, node) {\n      if (node.internalFields.item === item) {\n        result = node;\n        return false;\n      }\n    });\n    return result;\n  },\n  getNodesByItems: function (items) {\n    var that = this;\n    var nodes = [];\n    each(items, function (_, item) {\n      var node = that.getNodeByItem(item);\n      node && nodes.push(node);\n    });\n    return nodes;\n  },\n  getNodeByKey: function (key, data) {\n    return this._getByKey(data || this._getDataBySelectionMode(), key);\n  },\n  getTreeNodes: function () {\n    return this.options.dataConverter.convertToPublicNodes(this.getRootNodes());\n  },\n  getItemsCount: function () {\n    return this.options.dataConverter.getItemsCount();\n  },\n  getVisibleItemsCount: function () {\n    return this.options.dataConverter.getVisibleItemsCount();\n  },\n  getPublicNode: function (node) {\n    return node.internalFields.publicNode;\n  },\n  getRootNodes: function () {\n    return this.getChildrenNodes(this.options.rootValue);\n  },\n  getChildrenNodes: function (parentKey) {\n    return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray();\n  },\n  getIndexByKey: function (key) {\n    return this.options.dataConverter.getIndexByKey(key);\n  },\n  addItem: function (item) {\n    this._addNode(item);\n\n    this._updateFields();\n  },\n  removeItem: function (key) {\n    this._removeNode(key);\n\n    this._updateFields();\n  },\n  toggleSelection: function (key, state, selectRecursive) {\n    var isSingleModeUnselect = this._isSingleModeUnselect(state);\n\n    var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\n\n    this._setFieldState(node, SELECTED, state);\n\n    if (this.options.recursiveSelection && !selectRecursive) {\n      state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _isSingleModeUnselect: function (selectionState) {\n    return !this.options.multipleSelection && !selectionState;\n  },\n  toggleNodeDisabledState: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, DISABLED, state);\n  },\n  toggleSelectAll: function (state) {\n    if (!isDefined(state)) {\n      return;\n    }\n\n    var that = this;\n    var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\n    var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\n    each(dataStructure, function (index, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      that._setFieldState(node, SELECTED, state);\n    });\n    that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\n\n    if (!state && that.options.selectionRequired) {\n      that.toggleSelection(lastSelectedKey, true);\n    }\n  },\n  isAllSelected: function () {\n    if (this.getSelectedNodesKeys().length) {\n      return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0;\n    } else {\n      return false;\n    }\n  },\n  toggleExpansion: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, EXPANDED, state);\n\n    if (state) {\n      this._updateExpansion(key);\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  isFiltered: function (item) {\n    return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length;\n  },\n  _createCriteria: function (selector, value, operation) {\n    var searchFilter = [];\n\n    if (!Array.isArray(selector)) {\n      return [selector, operation, value];\n    }\n\n    each(selector, function (i, item) {\n      searchFilter.push([item, operation, value], \"or\");\n    });\n    searchFilter.pop();\n    return searchFilter;\n  },\n  _filterDataStructure: function (filterValue, dataStructure) {\n    var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\n    var operation = uiSearchBoxMixin.getOperationBySearchMode(this.options.searchMode);\n\n    var criteria = this._createCriteria(selector, filterValue, operation);\n\n    dataStructure = dataStructure || this._initialDataStructure;\n    return query(dataStructure).filter(criteria).toArray();\n  },\n  search: function (searchValue) {\n    var that = this;\n\n    var matches = this._filterDataStructure(searchValue);\n\n    var dataConverter = this.options.dataConverter;\n    !function lookForParents(matches, index) {\n      var length = matches.length;\n\n      while (index < length) {\n        var node = matches[index];\n\n        if (node.internalFields.parentKey === that.options.rootValue) {\n          index++;\n          continue;\n        }\n\n        var parent = dataConverter.getParentNode(node);\n\n        if (!parent) {\n          errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\n          index++;\n          continue;\n        }\n\n        if (!parent.internalFields.expanded) {\n          that._setFieldState(parent, EXPANDED, true);\n        }\n\n        if (matches.includes(parent)) {\n          index++;\n          continue;\n        }\n\n        matches.splice(index, 0, parent);\n        lookForParents(matches, index);\n      }\n    }(matches, 0);\n\n    if (this.options.sort) {\n      matches = storeHelper.queryByOptions(query(matches), {\n        sort: this.options.sort\n      }).toArray();\n    }\n\n    dataConverter._indexByKey = {};\n    each(matches, function (index, node) {\n      node.internalFields.childrenKeys = [];\n      dataConverter._indexByKey[node.internalFields.key] = index;\n    });\n    dataConverter._dataStructure = matches;\n    dataConverter.setChildrenKeys();\n    return dataConverter._dataStructure;\n  }\n});\nexport default DataAdapter;","map":{"version":3,"names":["Class","noop","each","isFunction","isDefined","extend","errors","uiSearchBoxMixin","TextBox","query","storeHelper","HierarchicalDataConverter","EXPANDED","SELECTED","DISABLED","setEditorClass","DataAdapter","inherit","ctor","options","_defaultOptions","dataConverter","setDataAccessors","dataAccessors","_selectedNodesKeys","_expandedNodesKeys","_dataStructure","_createInternalDataStructure","getTreeNodes","setOption","name","value","_updateSelection","items","multipleSelection","recursiveSelection","recursiveExpansion","rootValue","searchValue","dataType","searchMode","onNodeChanged","sort","_initialDataStructure","createPlainStructure","length","search","_updateExpansion","_setChildrenSelection","_setParentSelection","_updateNodesKeysArray","key","_updateOneBranch","_setParentExpansion","property","that","array","_getDataBySelectionMode","_","node","_isNodeVisible","internalFields","push","toggleSelection","getData","getFullData","item","visible","_getByKey","data","getByKey","childrenKeys","isSelected","selected","_toggleChildrenSelection","parent","getParentNode","parentKey","_iterateParents","newParentState","_calculateSelectedState","_setFieldState","expanded","getNodeByKey","_iterateChildren","recursive","callback","processedKeys","nodeKey","indexOf","child","itemsCount","selectedItemsCount","invisibleItemsCount","result","i","childNode","isChildInvisible","childState","state","field","publicNode","setters","_markChildren","keys","index","getIndexByKey","_removeNode","counter","splice","_addNode","_convertItemToNode","getters","concat","_updateFields","updateChildrenKeys","getSelectedNodesKeys","getExpandedNodesKeys","getNodeByItem","getNodesByItems","nodes","convertToPublicNodes","getRootNodes","getItemsCount","getVisibleItemsCount","getPublicNode","getChildrenNodes","filter","toArray","addItem","removeItem","selectRecursive","isSingleModeUnselect","_isSingleModeUnselect","selectionState","toggleNodeDisabledState","toggleSelectAll","lastSelectedKey","dataStructure","selectionRequired","isAllSelected","toggleExpansion","isFiltered","_filterDataStructure","_createCriteria","selector","operation","searchFilter","Array","isArray","pop","filterValue","searchExpr","display","getOperationBySearchMode","criteria","matches","lookForParents","log","includes","queryByOptions","_indexByKey","setChildrenKeys"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/hierarchical_collection/ui.data_adapter.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../../ui/widget/ui.errors\";\r\nimport uiSearchBoxMixin from \"../../ui/widget/ui.search_box_mixin\";\r\nimport TextBox from \"../../ui/text_box\";\r\nimport query from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport HierarchicalDataConverter from \"./ui.data_converter\";\r\nvar EXPANDED = \"expanded\";\r\nvar SELECTED = \"selected\";\r\nvar DISABLED = \"disabled\";\r\nuiSearchBoxMixin.setEditorClass(TextBox);\r\nvar DataAdapter = Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = {};\r\n        extend(this.options, this._defaultOptions(), options);\r\n        this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\r\n        this._selectedNodesKeys = [];\r\n        this._expandedNodesKeys = [];\r\n        this._dataStructure = [];\r\n        this._createInternalDataStructure();\r\n        this.getTreeNodes()\r\n    },\r\n    setOption: function(name, value) {\r\n        this.options[name] = value;\r\n        if (\"recursiveSelection\" === name) {\r\n            this._updateSelection()\r\n        }\r\n    },\r\n    _defaultOptions: function() {\r\n        return {\r\n            dataAccessors: void 0,\r\n            items: [],\r\n            multipleSelection: true,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            rootValue: 0,\r\n            searchValue: \"\",\r\n            dataType: \"tree\",\r\n            searchMode: \"contains\",\r\n            dataConverter: new HierarchicalDataConverter,\r\n            onNodeChanged: noop,\r\n            sort: null\r\n        }\r\n    },\r\n    _createInternalDataStructure: function() {\r\n        this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\r\n        this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\r\n        this.options.dataConverter._dataStructure = this._dataStructure;\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    _updateSelection: function() {\r\n        if (this.options.recursiveSelection) {\r\n            this._setChildrenSelection();\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _updateExpansion: function(key) {\r\n        if (this.options.recursiveExpansion) {\r\n            key ? this._updateOneBranch(key) : this._setParentExpansion()\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    _updateNodesKeysArray: function(property) {\r\n        var that = this;\r\n        var array = [];\r\n        each(that._getDataBySelectionMode(), (function(_, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            if (node.internalFields[property]) {\r\n                if (property === EXPANDED || that.options.multipleSelection) {\r\n                    array.push(node.internalFields.key)\r\n                } else {\r\n                    array.length && that.toggleSelection(array[0], false, true);\r\n                    array = [node.internalFields.key]\r\n                }\r\n            }\r\n        }));\r\n        return array\r\n    },\r\n    _getDataBySelectionMode: function() {\r\n        return this.options.multipleSelection ? this.getData() : this.getFullData()\r\n    },\r\n    _isNodeVisible: function(node) {\r\n        return false !== node.internalFields.item.visible\r\n    },\r\n    _getByKey: function(data, key) {\r\n        return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key)\r\n    },\r\n    _setChildrenSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (!node.internalFields.childrenKeys.length) {\r\n                return\r\n            }\r\n            var isSelected = node.internalFields.selected;\r\n            true === isSelected && that._toggleChildrenSelection(node, isSelected)\r\n        }))\r\n    },\r\n    _setParentSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            var parent = that.options.dataConverter.getParentNode(node);\r\n            if (parent && node.internalFields.parentKey !== that.options.rootValue) {\r\n                that._iterateParents(node, (function(parent) {\r\n                    var newParentState = that._calculateSelectedState(parent);\r\n                    that._setFieldState(parent, SELECTED, newParentState)\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _setParentExpansion: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (!node.internalFields.expanded) {\r\n                return\r\n            }\r\n            that._updateOneBranch(node.internalFields.key)\r\n        }))\r\n    },\r\n    _updateOneBranch: function(key) {\r\n        var that = this;\r\n        var node = this.getNodeByKey(key);\r\n        that._iterateParents(node, (function(parent) {\r\n            that._setFieldState(parent, EXPANDED, true)\r\n        }))\r\n    },\r\n    _iterateChildren: function(node, recursive, callback, processedKeys) {\r\n        if (!isFunction(callback)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var nodeKey = node.internalFields.key;\r\n        processedKeys = processedKeys || [];\r\n        if (-1 === processedKeys.indexOf(nodeKey)) {\r\n            processedKeys.push(nodeKey);\r\n            each(node.internalFields.childrenKeys, (function(_, key) {\r\n                var child = that.getNodeByKey(key);\r\n                callback(child);\r\n                if (child.internalFields.childrenKeys.length && recursive) {\r\n                    that._iterateChildren(child, recursive, callback, processedKeys)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _iterateParents: function(node, callback, processedKeys) {\r\n        if (node.internalFields.parentKey === this.options.rootValue || !isFunction(callback)) {\r\n            return\r\n        }\r\n        processedKeys = processedKeys || [];\r\n        var key = node.internalFields.key;\r\n        if (-1 === processedKeys.indexOf(key)) {\r\n            processedKeys.push(key);\r\n            var parent = this.options.dataConverter.getParentNode(node);\r\n            if (parent) {\r\n                callback(parent);\r\n                if (parent.internalFields.parentKey !== this.options.rootValue) {\r\n                    this._iterateParents(parent, callback, processedKeys)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _calculateSelectedState: function(node) {\r\n        var itemsCount = node.internalFields.childrenKeys.length;\r\n        var selectedItemsCount = 0;\r\n        var invisibleItemsCount = 0;\r\n        var result = false;\r\n        for (var i = 0; i <= itemsCount - 1; i++) {\r\n            var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\r\n            var isChildInvisible = false === childNode.internalFields.item.visible;\r\n            var childState = childNode.internalFields.selected;\r\n            if (isChildInvisible) {\r\n                invisibleItemsCount++;\r\n                continue\r\n            }\r\n            if (childState) {\r\n                selectedItemsCount++\r\n            } else if (void 0 === childState) {\r\n                selectedItemsCount += .5\r\n            }\r\n        }\r\n        if (selectedItemsCount) {\r\n            result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0\r\n        }\r\n        return result\r\n    },\r\n    _toggleChildrenSelection: function(node, state) {\r\n        var that = this;\r\n        this._iterateChildren(node, true, (function(child) {\r\n            if (that._isNodeVisible(child)) {\r\n                that._setFieldState(child, SELECTED, state)\r\n            }\r\n        }))\r\n    },\r\n    _setFieldState: function(node, field, state) {\r\n        if (node.internalFields[field] === state) {\r\n            return\r\n        }\r\n        node.internalFields[field] = state;\r\n        if (node.internalFields.publicNode) {\r\n            node.internalFields.publicNode[field] = state\r\n        }\r\n        this.options.dataAccessors.setters[field](node.internalFields.item, state);\r\n        this.options.onNodeChanged(node)\r\n    },\r\n    _markChildren: function(keys) {\r\n        var that = this;\r\n        each(keys, (function(_, key) {\r\n            var index = that.getIndexByKey(key);\r\n            var node = that.getNodeByKey(key);\r\n            that._dataStructure[index] = 0;\r\n            node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys)\r\n        }))\r\n    },\r\n    _removeNode: function(key) {\r\n        var node = this.getNodeByKey(key);\r\n        this._dataStructure[this.getIndexByKey(key)] = 0;\r\n        this._markChildren(node.internalFields.childrenKeys);\r\n        var that = this;\r\n        var counter = 0;\r\n        var items = extend([], this._dataStructure);\r\n        each(items, (function(index, item) {\r\n            if (!item) {\r\n                that._dataStructure.splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        }))\r\n    },\r\n    _addNode: function(item) {\r\n        var dataConverter = this.options.dataConverter;\r\n        var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\r\n        this._dataStructure = this._dataStructure.concat(node);\r\n        this._initialDataStructure = this._initialDataStructure.concat(node);\r\n        dataConverter._dataStructure = dataConverter._dataStructure.concat(node)\r\n    },\r\n    _updateFields: function() {\r\n        this.options.dataConverter.updateChildrenKeys();\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        return this._selectedNodesKeys\r\n    },\r\n    getExpandedNodesKeys: function() {\r\n        return this._expandedNodesKeys\r\n    },\r\n    getData: function() {\r\n        return this._dataStructure\r\n    },\r\n    getFullData: function() {\r\n        return this._initialDataStructure\r\n    },\r\n    getNodeByItem: function(item) {\r\n        var result = null;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (node.internalFields.item === item) {\r\n                result = node;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    getNodesByItems: function(items) {\r\n        var that = this;\r\n        var nodes = [];\r\n        each(items, (function(_, item) {\r\n            var node = that.getNodeByItem(item);\r\n            node && nodes.push(node)\r\n        }));\r\n        return nodes\r\n    },\r\n    getNodeByKey: function(key, data) {\r\n        return this._getByKey(data || this._getDataBySelectionMode(), key)\r\n    },\r\n    getTreeNodes: function() {\r\n        return this.options.dataConverter.convertToPublicNodes(this.getRootNodes())\r\n    },\r\n    getItemsCount: function() {\r\n        return this.options.dataConverter.getItemsCount()\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this.options.dataConverter.getVisibleItemsCount()\r\n    },\r\n    getPublicNode: function(node) {\r\n        return node.internalFields.publicNode\r\n    },\r\n    getRootNodes: function() {\r\n        return this.getChildrenNodes(this.options.rootValue)\r\n    },\r\n    getChildrenNodes: function(parentKey) {\r\n        return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray()\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this.options.dataConverter.getIndexByKey(key)\r\n    },\r\n    addItem: function(item) {\r\n        this._addNode(item);\r\n        this._updateFields()\r\n    },\r\n    removeItem: function(key) {\r\n        this._removeNode(key);\r\n        this._updateFields()\r\n    },\r\n    toggleSelection: function(key, state, selectRecursive) {\r\n        var isSingleModeUnselect = this._isSingleModeUnselect(state);\r\n        var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\r\n        this._setFieldState(node, SELECTED, state);\r\n        if (this.options.recursiveSelection && !selectRecursive) {\r\n            state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _isSingleModeUnselect: function(selectionState) {\r\n        return !this.options.multipleSelection && !selectionState\r\n    },\r\n    toggleNodeDisabledState: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, DISABLED, state)\r\n    },\r\n    toggleSelectAll: function(state) {\r\n        if (!isDefined(state)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\r\n        var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\r\n        each(dataStructure, (function(index, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            that._setFieldState(node, SELECTED, state)\r\n        }));\r\n        that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\r\n        if (!state && that.options.selectionRequired) {\r\n            that.toggleSelection(lastSelectedKey, true)\r\n        }\r\n    },\r\n    isAllSelected: function() {\r\n        if (this.getSelectedNodesKeys().length) {\r\n            return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    toggleExpansion: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, EXPANDED, state);\r\n        if (state) {\r\n            this._updateExpansion(key)\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    isFiltered: function(item) {\r\n        return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length\r\n    },\r\n    _createCriteria: function(selector, value, operation) {\r\n        var searchFilter = [];\r\n        if (!Array.isArray(selector)) {\r\n            return [selector, operation, value]\r\n        }\r\n        each(selector, (function(i, item) {\r\n            searchFilter.push([item, operation, value], \"or\")\r\n        }));\r\n        searchFilter.pop();\r\n        return searchFilter\r\n    },\r\n    _filterDataStructure: function(filterValue, dataStructure) {\r\n        var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\r\n        var operation = uiSearchBoxMixin.getOperationBySearchMode(this.options.searchMode);\r\n        var criteria = this._createCriteria(selector, filterValue, operation);\r\n        dataStructure = dataStructure || this._initialDataStructure;\r\n        return query(dataStructure).filter(criteria).toArray()\r\n    },\r\n    search: function(searchValue) {\r\n        var that = this;\r\n        var matches = this._filterDataStructure(searchValue);\r\n        var dataConverter = this.options.dataConverter;\r\n        ! function lookForParents(matches, index) {\r\n            var length = matches.length;\r\n            while (index < length) {\r\n                var node = matches[index];\r\n                if (node.internalFields.parentKey === that.options.rootValue) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                var parent = dataConverter.getParentNode(node);\r\n                if (!parent) {\r\n                    errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\r\n                    index++;\r\n                    continue\r\n                }\r\n                if (!parent.internalFields.expanded) {\r\n                    that._setFieldState(parent, EXPANDED, true)\r\n                }\r\n                if (matches.includes(parent)) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                matches.splice(index, 0, parent);\r\n                lookForParents(matches, index)\r\n            }\r\n        }(matches, 0);\r\n        if (this.options.sort) {\r\n            matches = storeHelper.queryByOptions(query(matches), {\r\n                sort: this.options.sort\r\n            }).toArray()\r\n        }\r\n        dataConverter._indexByKey = {};\r\n        each(matches, (function(index, node) {\r\n            node.internalFields.childrenKeys = [];\r\n            dataConverter._indexByKey[node.internalFields.key] = index\r\n        }));\r\n        dataConverter._dataStructure = matches;\r\n        dataConverter.setChildrenKeys();\r\n        return dataConverter._dataStructure\r\n    }\r\n});\r\nexport default DataAdapter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
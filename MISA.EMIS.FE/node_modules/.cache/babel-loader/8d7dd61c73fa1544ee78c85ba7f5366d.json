{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/array_compare.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isObject } from \"./type\";\n\nvar getKeyWrapper = function (item, getKey) {\n  var key = getKey(item);\n\n  if (isObject(key)) {\n    try {\n      return JSON.stringify(key);\n    } catch (e) {\n      return key;\n    }\n  }\n\n  return key;\n};\n\nvar getSameNewByOld = function (oldItem, newItems, newIndexByKey, getKey) {\n  var key = getKeyWrapper(oldItem, getKey);\n  return newItems[newIndexByKey[key]];\n};\n\nexport var isKeysEqual = function (oldKeys, newKeys) {\n  if (oldKeys.length !== newKeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < newKeys.length; i++) {\n    if (oldKeys[i] !== newKeys[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nexport var findChanges = function (oldItems, newItems, getKey, isItemEquals) {\n  var oldIndexByKey = {};\n  var newIndexByKey = {};\n  var addedCount = 0;\n  var removeCount = 0;\n  var result = [];\n  oldItems.forEach(function (item, index) {\n    var key = getKeyWrapper(item, getKey);\n    oldIndexByKey[key] = index;\n  });\n  newItems.forEach(function (item, index) {\n    var key = getKeyWrapper(item, getKey);\n    newIndexByKey[key] = index;\n  });\n  var itemCount = Math.max(oldItems.length, newItems.length);\n\n  for (var index = 0; index < itemCount + addedCount; index++) {\n    var newItem = newItems[index];\n    var oldNextIndex = index - addedCount + removeCount;\n    var nextOldItem = oldItems[oldNextIndex];\n    var isRemoved = !newItem || nextOldItem && !getSameNewByOld(nextOldItem, newItems, newIndexByKey, getKey);\n\n    if (isRemoved) {\n      if (nextOldItem) {\n        result.push({\n          type: \"remove\",\n          key: getKey(nextOldItem),\n          index: index,\n          oldItem: nextOldItem\n        });\n        removeCount++;\n        index--;\n      }\n    } else {\n      var key = getKeyWrapper(newItem, getKey);\n      var oldIndex = oldIndexByKey[key];\n      var oldItem = oldItems[oldIndex];\n\n      if (!oldItem) {\n        addedCount++;\n        result.push({\n          type: \"insert\",\n          data: newItem,\n          index: index\n        });\n      } else if (oldIndex === oldNextIndex) {\n        if (!isItemEquals(oldItem, newItem)) {\n          result.push({\n            type: \"update\",\n            data: newItem,\n            key: getKey(newItem),\n            index: index,\n            oldItem: oldItem\n          });\n        }\n      } else {\n        return;\n      }\n    }\n  }\n\n  return result;\n};","map":{"version":3,"names":["isObject","getKeyWrapper","item","getKey","key","JSON","stringify","e","getSameNewByOld","oldItem","newItems","newIndexByKey","isKeysEqual","oldKeys","newKeys","length","i","findChanges","oldItems","isItemEquals","oldIndexByKey","addedCount","removeCount","result","forEach","index","itemCount","Math","max","newItem","oldNextIndex","nextOldItem","isRemoved","push","type","oldIndex","data"],"sources":["E:/MisaProject/MISA_EMIS/MISA.EMIS.FE/node_modules/devextreme/esm/core/utils/array_compare.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/core/utils/array_compare.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isObject\r\n} from \"./type\";\r\nvar getKeyWrapper = function(item, getKey) {\r\n    var key = getKey(item);\r\n    if (isObject(key)) {\r\n        try {\r\n            return JSON.stringify(key)\r\n        } catch (e) {\r\n            return key\r\n        }\r\n    }\r\n    return key\r\n};\r\nvar getSameNewByOld = function(oldItem, newItems, newIndexByKey, getKey) {\r\n    var key = getKeyWrapper(oldItem, getKey);\r\n    return newItems[newIndexByKey[key]]\r\n};\r\nexport var isKeysEqual = function(oldKeys, newKeys) {\r\n    if (oldKeys.length !== newKeys.length) {\r\n        return false\r\n    }\r\n    for (var i = 0; i < newKeys.length; i++) {\r\n        if (oldKeys[i] !== newKeys[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n};\r\nexport var findChanges = function(oldItems, newItems, getKey, isItemEquals) {\r\n    var oldIndexByKey = {};\r\n    var newIndexByKey = {};\r\n    var addedCount = 0;\r\n    var removeCount = 0;\r\n    var result = [];\r\n    oldItems.forEach((function(item, index) {\r\n        var key = getKeyWrapper(item, getKey);\r\n        oldIndexByKey[key] = index\r\n    }));\r\n    newItems.forEach((function(item, index) {\r\n        var key = getKeyWrapper(item, getKey);\r\n        newIndexByKey[key] = index\r\n    }));\r\n    var itemCount = Math.max(oldItems.length, newItems.length);\r\n    for (var index = 0; index < itemCount + addedCount; index++) {\r\n        var newItem = newItems[index];\r\n        var oldNextIndex = index - addedCount + removeCount;\r\n        var nextOldItem = oldItems[oldNextIndex];\r\n        var isRemoved = !newItem || nextOldItem && !getSameNewByOld(nextOldItem, newItems, newIndexByKey, getKey);\r\n        if (isRemoved) {\r\n            if (nextOldItem) {\r\n                result.push({\r\n                    type: \"remove\",\r\n                    key: getKey(nextOldItem),\r\n                    index: index,\r\n                    oldItem: nextOldItem\r\n                });\r\n                removeCount++;\r\n                index--\r\n            }\r\n        } else {\r\n            var key = getKeyWrapper(newItem, getKey);\r\n            var oldIndex = oldIndexByKey[key];\r\n            var oldItem = oldItems[oldIndex];\r\n            if (!oldItem) {\r\n                addedCount++;\r\n                result.push({\r\n                    type: \"insert\",\r\n                    data: newItem,\r\n                    index: index\r\n                })\r\n            } else if (oldIndex === oldNextIndex) {\r\n                if (!isItemEquals(oldItem, newItem)) {\r\n                    result.push({\r\n                        type: \"update\",\r\n                        data: newItem,\r\n                        key: getKey(newItem),\r\n                        index: index,\r\n                        oldItem: oldItem\r\n                    })\r\n                }\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n    }\r\n    return result\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../../../../core/utils/date\";\n\nvar getSkippedHoursInRange = (startDate, endDate, viewDataProvider) => {\n  var msInHour = dateUtils.dateToMilliseconds(\"hour\");\n  var startTime = dateUtils.trimTime(startDate).getTime();\n  var endTime = dateUtils.setToDayEnd(new Date(endDate.getTime() - 1)).getTime();\n  var allDayIntervalDuration = 24 * msInHour;\n  var excludedHours = 0;\n\n  for (var time = startTime; time < endTime; time += allDayIntervalDuration) {\n    var checkDate = new Date(time);\n\n    if (viewDataProvider.isSkippedDate(checkDate)) {\n      excludedHours += 24;\n    }\n  }\n\n  return excludedHours;\n};\n\nexport default getSkippedHoursInRange;","map":{"version":3,"names":["dateUtils","getSkippedHoursInRange","startDate","endDate","viewDataProvider","msInHour","dateToMilliseconds","startTime","trimTime","getTime","endTime","setToDayEnd","Date","allDayIntervalDuration","excludedHours","time","checkDate","isSkippedDate"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../../../../core/utils/date\";\r\nvar getSkippedHoursInRange = (startDate, endDate, viewDataProvider) => {\r\n    var msInHour = dateUtils.dateToMilliseconds(\"hour\");\r\n    var startTime = dateUtils.trimTime(startDate).getTime();\r\n    var endTime = dateUtils.setToDayEnd(new Date(endDate.getTime() - 1)).getTime();\r\n    var allDayIntervalDuration = 24 * msInHour;\r\n    var excludedHours = 0;\r\n    for (var time = startTime; time < endTime; time += allDayIntervalDuration) {\r\n        var checkDate = new Date(time);\r\n        if (viewDataProvider.isSkippedDate(checkDate)) {\r\n            excludedHours += 24\r\n        }\r\n    }\r\n    return excludedHours\r\n};\r\nexport default getSkippedHoursInRange;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,mCAAtB;;AACA,IAAIC,sBAAsB,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,gBAArB,KAA0C;EACnE,IAAIC,QAAQ,GAAGL,SAAS,CAACM,kBAAV,CAA6B,MAA7B,CAAf;EACA,IAAIC,SAAS,GAAGP,SAAS,CAACQ,QAAV,CAAmBN,SAAnB,EAA8BO,OAA9B,EAAhB;EACA,IAAIC,OAAO,GAAGV,SAAS,CAACW,WAAV,CAAsB,IAAIC,IAAJ,CAAST,OAAO,CAACM,OAAR,KAAoB,CAA7B,CAAtB,EAAuDA,OAAvD,EAAd;EACA,IAAII,sBAAsB,GAAG,KAAKR,QAAlC;EACA,IAAIS,aAAa,GAAG,CAApB;;EACA,KAAK,IAAIC,IAAI,GAAGR,SAAhB,EAA2BQ,IAAI,GAAGL,OAAlC,EAA2CK,IAAI,IAAIF,sBAAnD,EAA2E;IACvE,IAAIG,SAAS,GAAG,IAAIJ,IAAJ,CAASG,IAAT,CAAhB;;IACA,IAAIX,gBAAgB,CAACa,aAAjB,CAA+BD,SAA/B,CAAJ,EAA+C;MAC3CF,aAAa,IAAI,EAAjB;IACH;EACJ;;EACD,OAAOA,aAAP;AACH,CAbD;;AAcA,eAAeb,sBAAf"},"metadata":{},"sourceType":"module"}
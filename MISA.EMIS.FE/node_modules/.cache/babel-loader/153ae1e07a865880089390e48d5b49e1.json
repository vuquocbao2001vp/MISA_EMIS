{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/remote.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { equalByValue } from \"../../../../../core/utils/common\";\nimport { extend } from \"../../../../../core/utils/extend\";\nimport dateSerialization from \"../../../../../core/utils/date_serialization\";\nimport { isDefined, isString } from \"../../../../../core/utils/type\";\nimport getDatesWithoutTime from \"./getDatesWithoutTime\";\nvar FilterPosition = {\n  dateFilter: 0,\n  userFilter: 1\n};\n\nclass RemoteFilterCombiner {\n  constructor(options) {\n    this.options = options;\n  }\n\n  get dataAccessors() {\n    return this.options.dataAccessors;\n  }\n\n  get dataSourceFilter() {\n    return this.options.dataSourceFilter;\n  }\n\n  get dateSerializationFormat() {\n    return this.options.dateSerializationFormat;\n  }\n\n  get forceIsoDateParsing() {\n    return isDefined(this.options.forceIsoDateParsing) ? this.options.forceIsoDateParsing : true;\n  }\n\n  makeDateFilter(min, max) {\n    var {\n      endDateExpr: endDateExpr,\n      recurrenceRuleExpr: recurrenceRuleExpr,\n      startDateExpr: startDateExpr\n    } = this.dataAccessors.expr;\n    var dateFilter = [[[endDateExpr, \">=\", min], [startDateExpr, \"<\", max]], \"or\", [recurrenceRuleExpr, \"startswith\", \"freq\"], \"or\", [[endDateExpr, min], [startDateExpr, min]]];\n\n    if (!recurrenceRuleExpr) {\n      dateFilter.splice(1, 2);\n    }\n\n    return dateFilter;\n  }\n\n  combineFilters(dateFilter, userFilter) {\n    var combinedFilter = [];\n    dateFilter && combinedFilter.push(dateFilter);\n    userFilter && combinedFilter.push(userFilter);\n    return this.serializeRemoteFilter(combinedFilter);\n  }\n\n  serializeRemoteFilter(combinedFilter) {\n    if (!Array.isArray(combinedFilter)) {\n      return combinedFilter;\n    }\n\n    var {\n      endDateExpr: endDateExpr,\n      startDateExpr: startDateExpr\n    } = this.dataAccessors.expr;\n    var filter = extend([], combinedFilter);\n\n    if (isString(filter[0])) {\n      if (this.forceIsoDateParsing && filter.length > 1) {\n        if (filter[0] === startDateExpr || filter[0] === endDateExpr) {\n          var lastFilterValue = filter[filter.length - 1];\n          filter[filter.length - 1] = dateSerialization.serializeDate(new Date(lastFilterValue), this.dateSerializationFormat);\n        }\n      }\n    }\n\n    for (var i = 0; i < filter.length; i += 1) {\n      filter[i] = this.serializeRemoteFilter(filter[i]);\n    }\n\n    return filter;\n  }\n\n  getUserFilter(dateFilter) {\n    if (!this.dataSourceFilter || equalByValue(this.dataSourceFilter, dateFilter)) {\n      return;\n    }\n\n    var containsDateFilter = this.dataSourceFilter.length > 0 && equalByValue(this.dataSourceFilter[FilterPosition.dateFilter], dateFilter);\n    var userFilter = containsDateFilter ? this.dataSourceFilter[FilterPosition.userFilter] : this.dataSourceFilter;\n    return userFilter;\n  }\n\n  combine(min, max) {\n    var [trimMin, trimMax] = getDatesWithoutTime(min, max);\n    var dateFilter = this.makeDateFilter(trimMin, trimMax);\n    var userFilter = this.getUserFilter(dateFilter);\n    var combinedFilter = this.combineFilters(dateFilter, userFilter);\n    return combinedFilter;\n  }\n\n}\n\nvar combineRemoteFilter = options => new RemoteFilterCombiner(options).combine(options.min, options.max);\n\nexport default combineRemoteFilter;","map":{"version":3,"names":["equalByValue","extend","dateSerialization","isDefined","isString","getDatesWithoutTime","FilterPosition","dateFilter","userFilter","RemoteFilterCombiner","constructor","options","dataAccessors","dataSourceFilter","dateSerializationFormat","forceIsoDateParsing","makeDateFilter","min","max","endDateExpr","recurrenceRuleExpr","startDateExpr","expr","splice","combineFilters","combinedFilter","push","serializeRemoteFilter","Array","isArray","filter","length","lastFilterValue","serializeDate","Date","i","getUserFilter","containsDateFilter","combine","trimMin","trimMax","combineRemoteFilter"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/renovation/ui/scheduler/utils/filtering/remote.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/remote.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    equalByValue\r\n} from \"../../../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../../../core/utils/extend\";\r\nimport dateSerialization from \"../../../../../core/utils/date_serialization\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../../../../core/utils/type\";\r\nimport getDatesWithoutTime from \"./getDatesWithoutTime\";\r\nvar FilterPosition = {\r\n    dateFilter: 0,\r\n    userFilter: 1\r\n};\r\nclass RemoteFilterCombiner {\r\n    constructor(options) {\r\n        this.options = options\r\n    }\r\n    get dataAccessors() {\r\n        return this.options.dataAccessors\r\n    }\r\n    get dataSourceFilter() {\r\n        return this.options.dataSourceFilter\r\n    }\r\n    get dateSerializationFormat() {\r\n        return this.options.dateSerializationFormat\r\n    }\r\n    get forceIsoDateParsing() {\r\n        return isDefined(this.options.forceIsoDateParsing) ? this.options.forceIsoDateParsing : true\r\n    }\r\n    makeDateFilter(min, max) {\r\n        var {\r\n            endDateExpr: endDateExpr,\r\n            recurrenceRuleExpr: recurrenceRuleExpr,\r\n            startDateExpr: startDateExpr\r\n        } = this.dataAccessors.expr;\r\n        var dateFilter = [\r\n            [\r\n                [endDateExpr, \">=\", min],\r\n                [startDateExpr, \"<\", max]\r\n            ], \"or\", [recurrenceRuleExpr, \"startswith\", \"freq\"], \"or\", [\r\n                [endDateExpr, min],\r\n                [startDateExpr, min]\r\n            ]\r\n        ];\r\n        if (!recurrenceRuleExpr) {\r\n            dateFilter.splice(1, 2)\r\n        }\r\n        return dateFilter\r\n    }\r\n    combineFilters(dateFilter, userFilter) {\r\n        var combinedFilter = [];\r\n        dateFilter && combinedFilter.push(dateFilter);\r\n        userFilter && combinedFilter.push(userFilter);\r\n        return this.serializeRemoteFilter(combinedFilter)\r\n    }\r\n    serializeRemoteFilter(combinedFilter) {\r\n        if (!Array.isArray(combinedFilter)) {\r\n            return combinedFilter\r\n        }\r\n        var {\r\n            endDateExpr: endDateExpr,\r\n            startDateExpr: startDateExpr\r\n        } = this.dataAccessors.expr;\r\n        var filter = extend([], combinedFilter);\r\n        if (isString(filter[0])) {\r\n            if (this.forceIsoDateParsing && filter.length > 1) {\r\n                if (filter[0] === startDateExpr || filter[0] === endDateExpr) {\r\n                    var lastFilterValue = filter[filter.length - 1];\r\n                    filter[filter.length - 1] = dateSerialization.serializeDate(new Date(lastFilterValue), this.dateSerializationFormat)\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < filter.length; i += 1) {\r\n            filter[i] = this.serializeRemoteFilter(filter[i])\r\n        }\r\n        return filter\r\n    }\r\n    getUserFilter(dateFilter) {\r\n        if (!this.dataSourceFilter || equalByValue(this.dataSourceFilter, dateFilter)) {\r\n            return\r\n        }\r\n        var containsDateFilter = this.dataSourceFilter.length > 0 && equalByValue(this.dataSourceFilter[FilterPosition.dateFilter], dateFilter);\r\n        var userFilter = containsDateFilter ? this.dataSourceFilter[FilterPosition.userFilter] : this.dataSourceFilter;\r\n        return userFilter\r\n    }\r\n    combine(min, max) {\r\n        var [trimMin, trimMax] = getDatesWithoutTime(min, max);\r\n        var dateFilter = this.makeDateFilter(trimMin, trimMax);\r\n        var userFilter = this.getUserFilter(dateFilter);\r\n        var combinedFilter = this.combineFilters(dateFilter, userFilter);\r\n        return combinedFilter\r\n    }\r\n}\r\nvar combineRemoteFilter = options => new RemoteFilterCombiner(options).combine(options.min, options.max);\r\nexport default combineRemoteFilter;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,YADJ,QAEO,kCAFP;AAGA,SACIC,MADJ,QAEO,kCAFP;AAGA,OAAOC,iBAAP,MAA8B,8CAA9B;AACA,SACIC,SADJ,EAEIC,QAFJ,QAGO,gCAHP;AAIA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,IAAIC,cAAc,GAAG;EACjBC,UAAU,EAAE,CADK;EAEjBC,UAAU,EAAE;AAFK,CAArB;;AAIA,MAAMC,oBAAN,CAA2B;EACvBC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKA,OAAL,GAAeA,OAAf;EACH;;EACgB,IAAbC,aAAa,GAAG;IAChB,OAAO,KAAKD,OAAL,CAAaC,aAApB;EACH;;EACmB,IAAhBC,gBAAgB,GAAG;IACnB,OAAO,KAAKF,OAAL,CAAaE,gBAApB;EACH;;EAC0B,IAAvBC,uBAAuB,GAAG;IAC1B,OAAO,KAAKH,OAAL,CAAaG,uBAApB;EACH;;EACsB,IAAnBC,mBAAmB,GAAG;IACtB,OAAOZ,SAAS,CAAC,KAAKQ,OAAL,CAAaI,mBAAd,CAAT,GAA8C,KAAKJ,OAAL,CAAaI,mBAA3D,GAAiF,IAAxF;EACH;;EACDC,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAW;IACrB,IAAI;MACAC,WAAW,EAAEA,WADb;MAEAC,kBAAkB,EAAEA,kBAFpB;MAGAC,aAAa,EAAEA;IAHf,IAIA,KAAKT,aAAL,CAAmBU,IAJvB;IAKA,IAAIf,UAAU,GAAG,CACb,CACI,CAACY,WAAD,EAAc,IAAd,EAAoBF,GAApB,CADJ,EAEI,CAACI,aAAD,EAAgB,GAAhB,EAAqBH,GAArB,CAFJ,CADa,EAIV,IAJU,EAIJ,CAACE,kBAAD,EAAqB,YAArB,EAAmC,MAAnC,CAJI,EAIwC,IAJxC,EAI8C,CACvD,CAACD,WAAD,EAAcF,GAAd,CADuD,EAEvD,CAACI,aAAD,EAAgBJ,GAAhB,CAFuD,CAJ9C,CAAjB;;IASA,IAAI,CAACG,kBAAL,EAAyB;MACrBb,UAAU,CAACgB,MAAX,CAAkB,CAAlB,EAAqB,CAArB;IACH;;IACD,OAAOhB,UAAP;EACH;;EACDiB,cAAc,CAACjB,UAAD,EAAaC,UAAb,EAAyB;IACnC,IAAIiB,cAAc,GAAG,EAArB;IACAlB,UAAU,IAAIkB,cAAc,CAACC,IAAf,CAAoBnB,UAApB,CAAd;IACAC,UAAU,IAAIiB,cAAc,CAACC,IAAf,CAAoBlB,UAApB,CAAd;IACA,OAAO,KAAKmB,qBAAL,CAA2BF,cAA3B,CAAP;EACH;;EACDE,qBAAqB,CAACF,cAAD,EAAiB;IAClC,IAAI,CAACG,KAAK,CAACC,OAAN,CAAcJ,cAAd,CAAL,EAAoC;MAChC,OAAOA,cAAP;IACH;;IACD,IAAI;MACAN,WAAW,EAAEA,WADb;MAEAE,aAAa,EAAEA;IAFf,IAGA,KAAKT,aAAL,CAAmBU,IAHvB;IAIA,IAAIQ,MAAM,GAAG7B,MAAM,CAAC,EAAD,EAAKwB,cAAL,CAAnB;;IACA,IAAIrB,QAAQ,CAAC0B,MAAM,CAAC,CAAD,CAAP,CAAZ,EAAyB;MACrB,IAAI,KAAKf,mBAAL,IAA4Be,MAAM,CAACC,MAAP,GAAgB,CAAhD,EAAmD;QAC/C,IAAID,MAAM,CAAC,CAAD,CAAN,KAAcT,aAAd,IAA+BS,MAAM,CAAC,CAAD,CAAN,KAAcX,WAAjD,EAA8D;UAC1D,IAAIa,eAAe,GAAGF,MAAM,CAACA,MAAM,CAACC,MAAP,GAAgB,CAAjB,CAA5B;UACAD,MAAM,CAACA,MAAM,CAACC,MAAP,GAAgB,CAAjB,CAAN,GAA4B7B,iBAAiB,CAAC+B,aAAlB,CAAgC,IAAIC,IAAJ,CAASF,eAAT,CAAhC,EAA2D,KAAKlB,uBAAhE,CAA5B;QACH;MACJ;IACJ;;IACD,KAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACC,MAA3B,EAAmCI,CAAC,IAAI,CAAxC,EAA2C;MACvCL,MAAM,CAACK,CAAD,CAAN,GAAY,KAAKR,qBAAL,CAA2BG,MAAM,CAACK,CAAD,CAAjC,CAAZ;IACH;;IACD,OAAOL,MAAP;EACH;;EACDM,aAAa,CAAC7B,UAAD,EAAa;IACtB,IAAI,CAAC,KAAKM,gBAAN,IAA0Bb,YAAY,CAAC,KAAKa,gBAAN,EAAwBN,UAAxB,CAA1C,EAA+E;MAC3E;IACH;;IACD,IAAI8B,kBAAkB,GAAG,KAAKxB,gBAAL,CAAsBkB,MAAtB,GAA+B,CAA/B,IAAoC/B,YAAY,CAAC,KAAKa,gBAAL,CAAsBP,cAAc,CAACC,UAArC,CAAD,EAAmDA,UAAnD,CAAzE;IACA,IAAIC,UAAU,GAAG6B,kBAAkB,GAAG,KAAKxB,gBAAL,CAAsBP,cAAc,CAACE,UAArC,CAAH,GAAsD,KAAKK,gBAA9F;IACA,OAAOL,UAAP;EACH;;EACD8B,OAAO,CAACrB,GAAD,EAAMC,GAAN,EAAW;IACd,IAAI,CAACqB,OAAD,EAAUC,OAAV,IAAqBnC,mBAAmB,CAACY,GAAD,EAAMC,GAAN,CAA5C;IACA,IAAIX,UAAU,GAAG,KAAKS,cAAL,CAAoBuB,OAApB,EAA6BC,OAA7B,CAAjB;IACA,IAAIhC,UAAU,GAAG,KAAK4B,aAAL,CAAmB7B,UAAnB,CAAjB;IACA,IAAIkB,cAAc,GAAG,KAAKD,cAAL,CAAoBjB,UAApB,EAAgCC,UAAhC,CAArB;IACA,OAAOiB,cAAP;EACH;;AA9EsB;;AAgF3B,IAAIgB,mBAAmB,GAAG9B,OAAO,IAAI,IAAIF,oBAAJ,CAAyBE,OAAzB,EAAkC2B,OAAlC,CAA0C3B,OAAO,CAACM,GAAlD,EAAuDN,OAAO,CAACO,GAA/D,CAArC;;AACA,eAAeuB,mBAAf"},"metadata":{},"sourceType":"module"}
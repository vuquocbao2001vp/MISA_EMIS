{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport dateutil from './dateutil';\nimport { DateTime } from 'luxon';\n\nvar DateWithZone =\n/** @class */\nfunction () {\n  function DateWithZone(date, tzid) {\n    this.date = date;\n    this.tzid = tzid;\n  }\n\n  Object.defineProperty(DateWithZone.prototype, \"isUTC\", {\n    get: function () {\n      return !this.tzid || this.tzid.toUpperCase() === 'UTC';\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DateWithZone.prototype.toString = function () {\n    var datestr = dateutil.timeToUntilString(this.date.getTime(), this.isUTC);\n\n    if (!this.isUTC) {\n      return \";TZID=\" + this.tzid + \":\" + datestr;\n    }\n\n    return \":\" + datestr;\n  };\n\n  DateWithZone.prototype.getTime = function () {\n    return this.date.getTime();\n  };\n\n  DateWithZone.prototype.rezonedDate = function () {\n    if (this.isUTC) {\n      return this.date;\n    }\n\n    try {\n      var datetime = DateTime.fromJSDate(this.date);\n      var rezoned = datetime.setZone(this.tzid, {\n        keepLocalTime: true\n      });\n      return rezoned.toJSDate();\n    } catch (e) {\n      if (e instanceof TypeError) {\n        console.error('Using TZID without Luxon available is unsupported. Returned times are in UTC, not the requested time zone');\n      }\n\n      return this.date;\n    }\n  };\n\n  return DateWithZone;\n}();\n\nexport { DateWithZone };","map":{"version":3,"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA;AAAA;AAAA;EAIE,sBAAaC,IAAb,EAAyBC,IAAzB,EAA6C;IAC3C,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACD;;EAEDC,sBAAYC,sBAAZ,EAAY,OAAZ,EAAiB;SAAjB;MACE,OAAO,CAAC,KAAKF,IAAN,IAAc,KAAKA,IAAL,CAAUG,WAAV,OAA4B,KAAjD;IACD,CAFgB;oBAAA;;EAAA,CAAjB;;EAIOD,kCAAP;IACE,IAAME,OAAO,GAAGP,QAAQ,CAACQ,iBAAT,CAA2B,KAAKN,IAAL,CAAUO,OAAV,EAA3B,EAAgD,KAAKC,KAArD,CAAhB;;IACA,IAAI,CAAC,KAAKA,KAAV,EAAiB;MACf,OAAO,WAAS,KAAKP,IAAd,GAAkB,GAAlB,GAAsBI,OAA7B;IACD;;IAED,OAAO,MAAIA,OAAX;EACD,CAPM;;EASAF,iCAAP;IACE,OAAO,KAAKH,IAAL,CAAUO,OAAV,EAAP;EACD,CAFM;;EAIAJ,qCAAP;IACE,IAAI,KAAKK,KAAT,EAAgB;MACd,OAAO,KAAKR,IAAZ;IACD;;IAED,IAAI;MACF,IAAMS,QAAQ,GAAGV,QAAQ,CACtBW,UADc,CACH,KAAKV,IADF,CAAjB;MAGA,IAAMW,OAAO,GAAGF,QAAQ,CAACG,OAAT,CAAiB,KAAKX,IAAtB,EAA6B;QAAEY,aAAa,EAAE;MAAjB,CAA7B,CAAhB;MAEA,OAAOF,OAAO,CAACG,QAAR,EAAP;IACD,CAPD,CAOE,OAAOC,CAAP,EAAU;MACV,IAAIA,CAAC,YAAYC,SAAjB,EAA4B;QAC1BC,OAAO,CAACC,KAAR,CAAc,2GAAd;MACD;;MACD,OAAO,KAAKlB,IAAZ;IACD;EACF,CAlBM;;EAmBT;AAAC,CA7CD","names":["dateutil","DateTime","date","tzid","Object","DateWithZone","toUpperCase","datestr","timeToUntilString","getTime","isUTC","datetime","fromJSDate","rezoned","setZone","keepLocalTime","toJSDate","e","TypeError","console","error"],"sourceRoot":"","sources":["../../../src/datewithzone.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
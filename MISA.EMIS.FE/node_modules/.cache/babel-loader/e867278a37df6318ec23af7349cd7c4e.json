{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/circular_indicators.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { BaseIndicator, BaseTextCloudMarker, BaseRangeBar } from \"./base_indicators\";\nimport { getCosAndSin, convertAngleToRendererSpace, normalizeAngle } from \"../core/utils\";\nvar _Number = Number;\nvar _getCosAndSin = getCosAndSin;\nvar _convertAngleToRendererSpace = convertAngleToRendererSpace;\n\nfunction correctRadius(layout, size) {\n  if (layout && layout.radius - size <= 0) {\n    layout.radius = size + 1;\n  }\n\n  return layout;\n}\n\nvar SimpleIndicator = BaseIndicator.inherit({\n  _move: function () {\n    var options = this._options;\n\n    var angle = _convertAngleToRendererSpace(this._actualPosition);\n\n    this._rootElement.rotate(angle, options.x, options.y);\n\n    this._trackerElement && this._trackerElement.rotate(angle, options.x, options.y);\n  },\n  _isEnabled: function () {\n    return this._options.width > 0;\n  },\n  _isVisible: function (layout) {\n    return layout.radius - _Number(this._options.indentFromCenter) > 0;\n  },\n  _getTrackerSettings: function () {\n    var options = this._options;\n\n    var radius = this._getRadius();\n\n    var indentFromCenter = this._getIndentFromCenter();\n\n    var x = options.x;\n    var y = options.y - (radius + indentFromCenter) / 2;\n    var width = options.width / 2;\n    var length = (radius - indentFromCenter) / 2;\n    width > 10 || (width = 10);\n    length > 10 || (length = 10);\n    return {\n      points: [x - width, y - length, x - width, y + length, x + width, y + length, x + width, y - length]\n    };\n  },\n  _render: function () {\n    this._renderPointer();\n  },\n  _clearPointer: function () {\n    delete this._element;\n  },\n  _clear: function () {\n    this._clearPointer();\n  },\n  _getIndentFromCenter: function (radius) {\n    return Number(this._options.indentFromCenter) || 0;\n  },\n  _getRadius: function () {\n    return 0;\n  },\n  measure: function (layout) {\n    var result = {\n      max: layout.radius\n    };\n\n    if (this._options.indentFromCenter < 0) {\n      result.inverseHorizontalOffset = result.inverseVerticalOffset = -_Number(this._options.indentFromCenter);\n    }\n\n    return result;\n  },\n  getTooltipParameters: function () {\n    var options = this._options;\n\n    var cosSin = _getCosAndSin(this._actualPosition);\n\n    var r = (this._getRadius() + this._getIndentFromCenter()) / 2;\n    return {\n      x: options.x + cosSin.cos * r,\n      y: options.y - cosSin.sin * r,\n      value: this._currentValue,\n      color: options.color,\n      offset: options.width / 2\n    };\n  }\n});\nvar NeedleIndicator = SimpleIndicator.inherit({\n  _isVisible: function (layout) {\n    var indentFromCenter = this._adjustOffset(Number(this._options.indentFromCenter), layout.radius);\n\n    var offset = this._adjustOffset(Number(this._options.offset), layout.radius);\n\n    return layout.radius - indentFromCenter - offset > 0;\n  },\n  getOffset: function () {\n    return 0;\n  },\n  _adjustOffset: function (value, radius) {\n    var minRadius = Number(this._options.beginAdaptingAtRadius);\n    var diff = radius / minRadius;\n\n    if (diff < 1) {\n      value = Math.floor(value * diff);\n    }\n\n    return value || 0;\n  },\n  _getIndentFromCenter: function (radius) {\n    return this._adjustOffset(Number(this._options.indentFromCenter), this._options.radius);\n  },\n  _getRadius: function () {\n    var options = this._options;\n    return options.radius - this._adjustOffset(Number(options.offset), options.radius);\n  },\n  _renderSpindle: function () {\n    var options = this._options;\n    var radius = options.radius;\n\n    var spindleSize = 2 * this._adjustOffset(_Number(options.spindleSize) / 2, radius);\n\n    var gapSize = 2 * this._adjustOffset(_Number(options.spindleGapSize) / 2, radius) || 0;\n\n    if (gapSize > 0) {\n      gapSize = gapSize <= spindleSize ? gapSize : spindleSize;\n    }\n\n    if (spindleSize > 0) {\n      this._spindleOuter = this._spindleOuter || this._renderer.circle().append(this._rootElement);\n      this._spindleInner = this._spindleInner || this._renderer.circle().append(this._rootElement);\n\n      this._spindleOuter.attr({\n        class: \"dxg-spindle-border\",\n        cx: options.x,\n        cy: options.y,\n        r: spindleSize / 2\n      });\n\n      this._spindleInner.attr({\n        class: \"dxg-spindle-hole\",\n        cx: options.x,\n        cy: options.y,\n        r: gapSize / 2,\n        fill: options.containerBackgroundColor\n      });\n    }\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderSpindle();\n  },\n  _clear: function () {\n    this.callBase();\n    delete this._spindleOuter;\n    delete this._spindleInner;\n  }\n});\nvar rectangleNeedle = NeedleIndicator.inherit({\n  _renderPointer: function () {\n    var options = this._options;\n\n    var y2 = options.y - this._getRadius();\n\n    var y1 = options.y - this._getIndentFromCenter();\n\n    var x1 = options.x - options.width / 2;\n\n    var x2 = x1 + _Number(options.width);\n\n    this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\n\n    this._element.attr({\n      points: [x1, y1, x1, y2, x2, y2, x2, y1]\n    });\n  }\n});\nvar triangleNeedle = NeedleIndicator.inherit({\n  _renderPointer: function () {\n    var options = this._options;\n\n    var y2 = options.y - this._getRadius();\n\n    var y1 = options.y - this._getIndentFromCenter();\n\n    var x1 = options.x - options.width / 2;\n    var x2 = options.x + options.width / 2;\n    this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\n\n    this._element.attr({\n      points: [x1, y1, options.x, y2, x2, y1]\n    });\n  }\n});\nvar twoColorNeedle = NeedleIndicator.inherit({\n  _renderPointer: function () {\n    var options = this._options;\n    var x1 = options.x - options.width / 2;\n    var x2 = options.x + options.width / 2;\n\n    var y4 = options.y - this._getRadius();\n\n    var y1 = options.y - this._getIndentFromCenter();\n\n    var fraction = _Number(options.secondFraction) || 0;\n    var y2;\n    var y3;\n\n    if (fraction >= 1) {\n      y2 = y3 = y1;\n    } else if (fraction <= 0) {\n      y2 = y3 = y4;\n    } else {\n      y3 = y4 + (y1 - y4) * fraction;\n      y2 = y3 + _Number(options.space);\n    }\n\n    this._firstElement = this._firstElement || this._renderer.path([], \"area\").append(this._rootElement);\n    this._spaceElement = this._spaceElement || this._renderer.path([], \"area\").append(this._rootElement);\n    this._secondElement = this._secondElement || this._renderer.path([], \"area\").append(this._rootElement);\n\n    this._firstElement.attr({\n      points: [x1, y1, x1, y2, x2, y2, x2, y1]\n    });\n\n    this._spaceElement.attr({\n      points: [x1, y2, x1, y3, x2, y3, x2, y2],\n      class: \"dxg-hole\",\n      fill: options.containerBackgroundColor\n    });\n\n    this._secondElement.attr({\n      points: [x1, y3, x1, y4, x2, y4, x2, y3],\n      class: \"dxg-part\",\n      fill: options.secondColor\n    });\n  },\n  _clearPointer: function () {\n    delete this._firstElement;\n    delete this._secondElement;\n    delete this._spaceElement;\n  }\n});\nvar triangleMarker = SimpleIndicator.inherit({\n  _isEnabled: function () {\n    return this._options.length > 0 && this._options.width > 0;\n  },\n  _isVisible: layout => true,\n\n  resize(layout) {\n    return this.callBase(correctRadius(layout, 0));\n  },\n\n  _render: function () {\n    var options = this._options;\n    var x = options.x;\n    var y1 = options.y - options.radius;\n    var dx = options.width / 2 || 0;\n\n    var y2 = y1 - _Number(options.length);\n\n    this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\n    var settings = {\n      points: [x, y1, x - dx, y2, x + dx, y2],\n      stroke: \"none\",\n      \"stroke-width\": 0,\n      \"stroke-linecap\": \"square\"\n    };\n\n    if (options.space > 0) {\n      settings[\"stroke-width\"] = Math.min(options.space, options.width / 4) || 0;\n      settings.stroke = settings[\"stroke-width\"] > 0 ? options.containerBackgroundColor || \"none\" : \"none\";\n    }\n\n    this._element.attr(settings).sharp();\n  },\n  _clear: function () {\n    delete this._element;\n  },\n  _getTrackerSettings: function () {\n    var options = this._options;\n    var x = options.x;\n    var y = options.y - options.radius - options.length / 2;\n    var width = options.width / 2;\n    var length = options.length / 2;\n    width > 10 || (width = 10);\n    length > 10 || (length = 10);\n    return {\n      points: [x - width, y - length, x - width, y + length, x + width, y + length, x + width, y - length]\n    };\n  },\n  measure: function (layout) {\n    return {\n      min: layout.radius,\n      max: layout.radius + _Number(this._options.length)\n    };\n  },\n  getTooltipParameters: function () {\n    var options = this._options;\n\n    var cosSin = _getCosAndSin(this._actualPosition);\n\n    var r = options.radius + options.length / 2;\n    var parameters = this.callBase();\n    parameters.x = options.x + cosSin.cos * r;\n    parameters.y = options.y - cosSin.sin * r;\n    parameters.offset = options.length / 2;\n    return parameters;\n  }\n});\nvar textCloud = BaseTextCloudMarker.inherit({\n  _isEnabled: function () {\n    return true;\n  },\n  _isVisible: layout => true,\n\n  resize(layout) {\n    return this.callBase(correctRadius(layout, 0));\n  },\n\n  _getTextCloudOptions: function () {\n    var cosSin = _getCosAndSin(this._actualPosition);\n\n    var nAngle = normalizeAngle(this._actualPosition);\n    return {\n      x: this._options.x + cosSin.cos * this._options.radius,\n      y: this._options.y - cosSin.sin * this._options.radius,\n      type: nAngle > 270 ? \"left-top\" : nAngle > 180 ? \"top-right\" : nAngle > 90 ? \"right-bottom\" : \"bottom-left\"\n    };\n  },\n  measure: function (layout) {\n    var arrowLength = _Number(this._options.arrowLength) || 0;\n\n    this._measureText();\n\n    var verticalOffset = this._textFullHeight + arrowLength;\n    var horizontalOffset = this._textFullWidth + arrowLength;\n    return {\n      min: layout.radius,\n      max: layout.radius,\n      horizontalOffset: horizontalOffset,\n      verticalOffset: verticalOffset,\n      inverseHorizontalOffset: horizontalOffset,\n      inverseVerticalOffset: verticalOffset\n    };\n  }\n});\nvar rangeBar = BaseRangeBar.inherit({\n  _isEnabled: function () {\n    return this._options.size > 0;\n  },\n  _isVisible: layout => true,\n\n  resize(layout) {\n    return this.callBase(correctRadius(layout, _Number(this._options.size)));\n  },\n\n  _createBarItem: function () {\n    return this._renderer.arc().attr({\n      \"stroke-linejoin\": \"round\"\n    }).append(this._rootElement);\n  },\n  _createTracker: function () {\n    return this._renderer.arc().attr({\n      \"stroke-linejoin\": \"round\"\n    });\n  },\n  _setBarSides: function () {\n    this._maxSide = this._options.radius;\n    this._minSide = this._maxSide - _Number(this._options.size);\n  },\n  _getSpace: function () {\n    var options = this._options;\n    return options.space > 0 ? 180 * options.space / options.radius / Math.PI : 0;\n  },\n  _isTextVisible: function () {\n    var options = this._options.text || {};\n    return options.indent > 0;\n  },\n  _setTextItemsSides: function () {\n    var options = this._options;\n\n    var indent = _Number(options.text.indent);\n\n    this._lineFrom = options.y - options.radius;\n    this._lineTo = this._lineFrom - indent;\n    this._textRadius = options.radius + indent;\n  },\n  _getPositions: function () {\n    var basePosition = this._basePosition;\n    var actualPosition = this._actualPosition;\n    var mainPosition1;\n    var mainPosition2;\n\n    if (basePosition >= actualPosition) {\n      mainPosition1 = basePosition;\n      mainPosition2 = actualPosition;\n    } else {\n      mainPosition1 = actualPosition;\n      mainPosition2 = basePosition;\n    }\n\n    return {\n      start: this._startPosition,\n      end: this._endPosition,\n      main1: mainPosition1,\n      main2: mainPosition2,\n      back1: Math.min(mainPosition1 + this._space, this._startPosition),\n      back2: Math.max(mainPosition2 - this._space, this._endPosition)\n    };\n  },\n  _buildItemSettings: function (from, to) {\n    return {\n      x: this._options.x,\n      y: this._options.y,\n      innerRadius: this._minSide,\n      outerRadius: this._maxSide,\n      startAngle: to,\n      endAngle: from\n    };\n  },\n  _updateTextPosition: function () {\n    var cosSin = _getCosAndSin(this._actualPosition);\n\n    var x = this._options.x + this._textRadius * cosSin.cos;\n    var y = this._options.y - this._textRadius * cosSin.sin;\n    x += cosSin.cos * this._textWidth * .6;\n    y -= cosSin.sin * this._textHeight * .6;\n\n    this._text.attr({\n      x: x,\n      y: y + this._textVerticalOffset\n    });\n  },\n  _updateLinePosition: function () {\n    var x = this._options.x;\n    var x1;\n    var x2;\n\n    if (this._basePosition > this._actualPosition) {\n      x1 = x - 2;\n      x2 = x;\n    } else if (this._basePosition < this._actualPosition) {\n      x1 = x;\n      x2 = x + 2;\n    } else {\n      x1 = x - 1;\n      x2 = x + 1;\n    }\n\n    this._line.attr({\n      points: [x1, this._lineFrom, x1, this._lineTo, x2, this._lineTo, x2, this._lineFrom]\n    }).rotate(_convertAngleToRendererSpace(this._actualPosition), x, this._options.y).sharp();\n  },\n  _getTooltipPosition: function () {\n    var cosSin = _getCosAndSin((this._basePosition + this._actualPosition) / 2);\n\n    var r = (this._minSide + this._maxSide) / 2;\n    return {\n      x: this._options.x + cosSin.cos * r,\n      y: this._options.y - cosSin.sin * r\n    };\n  },\n  measure: function (layout) {\n    var result = {\n      min: layout.radius - _Number(this._options.size),\n      max: layout.radius\n    };\n\n    this._measureText();\n\n    if (this._hasText) {\n      result.max += _Number(this._options.text.indent);\n      result.horizontalOffset = this._textWidth;\n      result.verticalOffset = this._textHeight;\n    }\n\n    return result;\n  }\n});\nexport { rectangleNeedle as _default, rectangleNeedle as rectangleneedle, triangleNeedle as triangleneedle, twoColorNeedle as twocolorneedle, triangleMarker as trianglemarker, textCloud as textcloud, rangeBar as rangebar };","map":{"version":3,"names":["BaseIndicator","BaseTextCloudMarker","BaseRangeBar","getCosAndSin","convertAngleToRendererSpace","normalizeAngle","_Number","Number","_getCosAndSin","_convertAngleToRendererSpace","correctRadius","layout","size","radius","SimpleIndicator","inherit","_move","options","_options","angle","_actualPosition","_rootElement","rotate","x","y","_trackerElement","_isEnabled","width","_isVisible","indentFromCenter","_getTrackerSettings","_getRadius","_getIndentFromCenter","length","points","_render","_renderPointer","_clearPointer","_element","_clear","measure","result","max","inverseHorizontalOffset","inverseVerticalOffset","getTooltipParameters","cosSin","r","cos","sin","value","_currentValue","color","offset","NeedleIndicator","_adjustOffset","getOffset","minRadius","beginAdaptingAtRadius","diff","Math","floor","_renderSpindle","spindleSize","gapSize","spindleGapSize","_spindleOuter","_renderer","circle","append","_spindleInner","attr","class","cx","cy","fill","containerBackgroundColor","callBase","rectangleNeedle","y2","y1","x1","x2","path","triangleNeedle","twoColorNeedle","y4","fraction","secondFraction","y3","space","_firstElement","_spaceElement","_secondElement","secondColor","triangleMarker","resize","dx","settings","stroke","min","sharp","parameters","textCloud","_getTextCloudOptions","nAngle","type","arrowLength","_measureText","verticalOffset","_textFullHeight","horizontalOffset","_textFullWidth","rangeBar","_createBarItem","arc","_createTracker","_setBarSides","_maxSide","_minSide","_getSpace","PI","_isTextVisible","text","indent","_setTextItemsSides","_lineFrom","_lineTo","_textRadius","_getPositions","basePosition","_basePosition","actualPosition","mainPosition1","mainPosition2","start","_startPosition","end","_endPosition","main1","main2","back1","_space","back2","_buildItemSettings","from","to","innerRadius","outerRadius","startAngle","endAngle","_updateTextPosition","_textWidth","_textHeight","_text","_textVerticalOffset","_updateLinePosition","_line","_getTooltipPosition","_hasText","_default","rectangleneedle","triangleneedle","twocolorneedle","trianglemarker","textcloud","rangebar"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/gauges/circular_indicators.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/gauges/circular_indicators.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    BaseIndicator,\r\n    BaseTextCloudMarker,\r\n    BaseRangeBar\r\n} from \"./base_indicators\";\r\nimport {\r\n    getCosAndSin,\r\n    convertAngleToRendererSpace,\r\n    normalizeAngle\r\n} from \"../core/utils\";\r\nvar _Number = Number;\r\nvar _getCosAndSin = getCosAndSin;\r\nvar _convertAngleToRendererSpace = convertAngleToRendererSpace;\r\n\r\nfunction correctRadius(layout, size) {\r\n    if (layout && layout.radius - size <= 0) {\r\n        layout.radius = size + 1\r\n    }\r\n    return layout\r\n}\r\nvar SimpleIndicator = BaseIndicator.inherit({\r\n    _move: function() {\r\n        var options = this._options;\r\n        var angle = _convertAngleToRendererSpace(this._actualPosition);\r\n        this._rootElement.rotate(angle, options.x, options.y);\r\n        this._trackerElement && this._trackerElement.rotate(angle, options.x, options.y)\r\n    },\r\n    _isEnabled: function() {\r\n        return this._options.width > 0\r\n    },\r\n    _isVisible: function(layout) {\r\n        return layout.radius - _Number(this._options.indentFromCenter) > 0\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var options = this._options;\r\n        var radius = this._getRadius();\r\n        var indentFromCenter = this._getIndentFromCenter();\r\n        var x = options.x;\r\n        var y = options.y - (radius + indentFromCenter) / 2;\r\n        var width = options.width / 2;\r\n        var length = (radius - indentFromCenter) / 2;\r\n        width > 10 || (width = 10);\r\n        length > 10 || (length = 10);\r\n        return {\r\n            points: [x - width, y - length, x - width, y + length, x + width, y + length, x + width, y - length]\r\n        }\r\n    },\r\n    _render: function() {\r\n        this._renderPointer()\r\n    },\r\n    _clearPointer: function() {\r\n        delete this._element\r\n    },\r\n    _clear: function() {\r\n        this._clearPointer()\r\n    },\r\n    _getIndentFromCenter: function(radius) {\r\n        return Number(this._options.indentFromCenter) || 0\r\n    },\r\n    _getRadius: function() {\r\n        return 0\r\n    },\r\n    measure: function(layout) {\r\n        var result = {\r\n            max: layout.radius\r\n        };\r\n        if (this._options.indentFromCenter < 0) {\r\n            result.inverseHorizontalOffset = result.inverseVerticalOffset = -_Number(this._options.indentFromCenter)\r\n        }\r\n        return result\r\n    },\r\n    getTooltipParameters: function() {\r\n        var options = this._options;\r\n        var cosSin = _getCosAndSin(this._actualPosition);\r\n        var r = (this._getRadius() + this._getIndentFromCenter()) / 2;\r\n        return {\r\n            x: options.x + cosSin.cos * r,\r\n            y: options.y - cosSin.sin * r,\r\n            value: this._currentValue,\r\n            color: options.color,\r\n            offset: options.width / 2\r\n        }\r\n    }\r\n});\r\nvar NeedleIndicator = SimpleIndicator.inherit({\r\n    _isVisible: function(layout) {\r\n        var indentFromCenter = this._adjustOffset(Number(this._options.indentFromCenter), layout.radius);\r\n        var offset = this._adjustOffset(Number(this._options.offset), layout.radius);\r\n        return layout.radius - indentFromCenter - offset > 0\r\n    },\r\n    getOffset: function() {\r\n        return 0\r\n    },\r\n    _adjustOffset: function(value, radius) {\r\n        var minRadius = Number(this._options.beginAdaptingAtRadius);\r\n        var diff = radius / minRadius;\r\n        if (diff < 1) {\r\n            value = Math.floor(value * diff)\r\n        }\r\n        return value || 0\r\n    },\r\n    _getIndentFromCenter: function(radius) {\r\n        return this._adjustOffset(Number(this._options.indentFromCenter), this._options.radius)\r\n    },\r\n    _getRadius: function() {\r\n        var options = this._options;\r\n        return options.radius - this._adjustOffset(Number(options.offset), options.radius)\r\n    },\r\n    _renderSpindle: function() {\r\n        var options = this._options;\r\n        var radius = options.radius;\r\n        var spindleSize = 2 * this._adjustOffset(_Number(options.spindleSize) / 2, radius);\r\n        var gapSize = 2 * this._adjustOffset(_Number(options.spindleGapSize) / 2, radius) || 0;\r\n        if (gapSize > 0) {\r\n            gapSize = gapSize <= spindleSize ? gapSize : spindleSize\r\n        }\r\n        if (spindleSize > 0) {\r\n            this._spindleOuter = this._spindleOuter || this._renderer.circle().append(this._rootElement);\r\n            this._spindleInner = this._spindleInner || this._renderer.circle().append(this._rootElement);\r\n            this._spindleOuter.attr({\r\n                class: \"dxg-spindle-border\",\r\n                cx: options.x,\r\n                cy: options.y,\r\n                r: spindleSize / 2\r\n            });\r\n            this._spindleInner.attr({\r\n                class: \"dxg-spindle-hole\",\r\n                cx: options.x,\r\n                cy: options.y,\r\n                r: gapSize / 2,\r\n                fill: options.containerBackgroundColor\r\n            })\r\n        }\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderSpindle()\r\n    },\r\n    _clear: function() {\r\n        this.callBase();\r\n        delete this._spindleOuter;\r\n        delete this._spindleInner\r\n    }\r\n});\r\nvar rectangleNeedle = NeedleIndicator.inherit({\r\n    _renderPointer: function() {\r\n        var options = this._options;\r\n        var y2 = options.y - this._getRadius();\r\n        var y1 = options.y - this._getIndentFromCenter();\r\n        var x1 = options.x - options.width / 2;\r\n        var x2 = x1 + _Number(options.width);\r\n        this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._element.attr({\r\n            points: [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        })\r\n    }\r\n});\r\nvar triangleNeedle = NeedleIndicator.inherit({\r\n    _renderPointer: function() {\r\n        var options = this._options;\r\n        var y2 = options.y - this._getRadius();\r\n        var y1 = options.y - this._getIndentFromCenter();\r\n        var x1 = options.x - options.width / 2;\r\n        var x2 = options.x + options.width / 2;\r\n        this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._element.attr({\r\n            points: [x1, y1, options.x, y2, x2, y1]\r\n        })\r\n    }\r\n});\r\nvar twoColorNeedle = NeedleIndicator.inherit({\r\n    _renderPointer: function() {\r\n        var options = this._options;\r\n        var x1 = options.x - options.width / 2;\r\n        var x2 = options.x + options.width / 2;\r\n        var y4 = options.y - this._getRadius();\r\n        var y1 = options.y - this._getIndentFromCenter();\r\n        var fraction = _Number(options.secondFraction) || 0;\r\n        var y2;\r\n        var y3;\r\n        if (fraction >= 1) {\r\n            y2 = y3 = y1\r\n        } else if (fraction <= 0) {\r\n            y2 = y3 = y4\r\n        } else {\r\n            y3 = y4 + (y1 - y4) * fraction;\r\n            y2 = y3 + _Number(options.space)\r\n        }\r\n        this._firstElement = this._firstElement || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._spaceElement = this._spaceElement || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._secondElement = this._secondElement || this._renderer.path([], \"area\").append(this._rootElement);\r\n        this._firstElement.attr({\r\n            points: [x1, y1, x1, y2, x2, y2, x2, y1]\r\n        });\r\n        this._spaceElement.attr({\r\n            points: [x1, y2, x1, y3, x2, y3, x2, y2],\r\n            class: \"dxg-hole\",\r\n            fill: options.containerBackgroundColor\r\n        });\r\n        this._secondElement.attr({\r\n            points: [x1, y3, x1, y4, x2, y4, x2, y3],\r\n            class: \"dxg-part\",\r\n            fill: options.secondColor\r\n        })\r\n    },\r\n    _clearPointer: function() {\r\n        delete this._firstElement;\r\n        delete this._secondElement;\r\n        delete this._spaceElement\r\n    }\r\n});\r\nvar triangleMarker = SimpleIndicator.inherit({\r\n    _isEnabled: function() {\r\n        return this._options.length > 0 && this._options.width > 0\r\n    },\r\n    _isVisible: layout => true,\r\n    resize(layout) {\r\n        return this.callBase(correctRadius(layout, 0))\r\n    },\r\n    _render: function() {\r\n        var options = this._options;\r\n        var x = options.x;\r\n        var y1 = options.y - options.radius;\r\n        var dx = options.width / 2 || 0;\r\n        var y2 = y1 - _Number(options.length);\r\n        this._element = this._element || this._renderer.path([], \"area\").append(this._rootElement);\r\n        var settings = {\r\n            points: [x, y1, x - dx, y2, x + dx, y2],\r\n            stroke: \"none\",\r\n            \"stroke-width\": 0,\r\n            \"stroke-linecap\": \"square\"\r\n        };\r\n        if (options.space > 0) {\r\n            settings[\"stroke-width\"] = Math.min(options.space, options.width / 4) || 0;\r\n            settings.stroke = settings[\"stroke-width\"] > 0 ? options.containerBackgroundColor || \"none\" : \"none\"\r\n        }\r\n        this._element.attr(settings).sharp()\r\n    },\r\n    _clear: function() {\r\n        delete this._element\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var options = this._options;\r\n        var x = options.x;\r\n        var y = options.y - options.radius - options.length / 2;\r\n        var width = options.width / 2;\r\n        var length = options.length / 2;\r\n        width > 10 || (width = 10);\r\n        length > 10 || (length = 10);\r\n        return {\r\n            points: [x - width, y - length, x - width, y + length, x + width, y + length, x + width, y - length]\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        return {\r\n            min: layout.radius,\r\n            max: layout.radius + _Number(this._options.length)\r\n        }\r\n    },\r\n    getTooltipParameters: function() {\r\n        var options = this._options;\r\n        var cosSin = _getCosAndSin(this._actualPosition);\r\n        var r = options.radius + options.length / 2;\r\n        var parameters = this.callBase();\r\n        parameters.x = options.x + cosSin.cos * r;\r\n        parameters.y = options.y - cosSin.sin * r;\r\n        parameters.offset = options.length / 2;\r\n        return parameters\r\n    }\r\n});\r\nvar textCloud = BaseTextCloudMarker.inherit({\r\n    _isEnabled: function() {\r\n        return true\r\n    },\r\n    _isVisible: layout => true,\r\n    resize(layout) {\r\n        return this.callBase(correctRadius(layout, 0))\r\n    },\r\n    _getTextCloudOptions: function() {\r\n        var cosSin = _getCosAndSin(this._actualPosition);\r\n        var nAngle = normalizeAngle(this._actualPosition);\r\n        return {\r\n            x: this._options.x + cosSin.cos * this._options.radius,\r\n            y: this._options.y - cosSin.sin * this._options.radius,\r\n            type: nAngle > 270 ? \"left-top\" : nAngle > 180 ? \"top-right\" : nAngle > 90 ? \"right-bottom\" : \"bottom-left\"\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var arrowLength = _Number(this._options.arrowLength) || 0;\r\n        this._measureText();\r\n        var verticalOffset = this._textFullHeight + arrowLength;\r\n        var horizontalOffset = this._textFullWidth + arrowLength;\r\n        return {\r\n            min: layout.radius,\r\n            max: layout.radius,\r\n            horizontalOffset: horizontalOffset,\r\n            verticalOffset: verticalOffset,\r\n            inverseHorizontalOffset: horizontalOffset,\r\n            inverseVerticalOffset: verticalOffset\r\n        }\r\n    }\r\n});\r\nvar rangeBar = BaseRangeBar.inherit({\r\n    _isEnabled: function() {\r\n        return this._options.size > 0\r\n    },\r\n    _isVisible: layout => true,\r\n    resize(layout) {\r\n        return this.callBase(correctRadius(layout, _Number(this._options.size)))\r\n    },\r\n    _createBarItem: function() {\r\n        return this._renderer.arc().attr({\r\n            \"stroke-linejoin\": \"round\"\r\n        }).append(this._rootElement)\r\n    },\r\n    _createTracker: function() {\r\n        return this._renderer.arc().attr({\r\n            \"stroke-linejoin\": \"round\"\r\n        })\r\n    },\r\n    _setBarSides: function() {\r\n        this._maxSide = this._options.radius;\r\n        this._minSide = this._maxSide - _Number(this._options.size)\r\n    },\r\n    _getSpace: function() {\r\n        var options = this._options;\r\n        return options.space > 0 ? 180 * options.space / options.radius / Math.PI : 0\r\n    },\r\n    _isTextVisible: function() {\r\n        var options = this._options.text || {};\r\n        return options.indent > 0\r\n    },\r\n    _setTextItemsSides: function() {\r\n        var options = this._options;\r\n        var indent = _Number(options.text.indent);\r\n        this._lineFrom = options.y - options.radius;\r\n        this._lineTo = this._lineFrom - indent;\r\n        this._textRadius = options.radius + indent\r\n    },\r\n    _getPositions: function() {\r\n        var basePosition = this._basePosition;\r\n        var actualPosition = this._actualPosition;\r\n        var mainPosition1;\r\n        var mainPosition2;\r\n        if (basePosition >= actualPosition) {\r\n            mainPosition1 = basePosition;\r\n            mainPosition2 = actualPosition\r\n        } else {\r\n            mainPosition1 = actualPosition;\r\n            mainPosition2 = basePosition\r\n        }\r\n        return {\r\n            start: this._startPosition,\r\n            end: this._endPosition,\r\n            main1: mainPosition1,\r\n            main2: mainPosition2,\r\n            back1: Math.min(mainPosition1 + this._space, this._startPosition),\r\n            back2: Math.max(mainPosition2 - this._space, this._endPosition)\r\n        }\r\n    },\r\n    _buildItemSettings: function(from, to) {\r\n        return {\r\n            x: this._options.x,\r\n            y: this._options.y,\r\n            innerRadius: this._minSide,\r\n            outerRadius: this._maxSide,\r\n            startAngle: to,\r\n            endAngle: from\r\n        }\r\n    },\r\n    _updateTextPosition: function() {\r\n        var cosSin = _getCosAndSin(this._actualPosition);\r\n        var x = this._options.x + this._textRadius * cosSin.cos;\r\n        var y = this._options.y - this._textRadius * cosSin.sin;\r\n        x += cosSin.cos * this._textWidth * .6;\r\n        y -= cosSin.sin * this._textHeight * .6;\r\n        this._text.attr({\r\n            x: x,\r\n            y: y + this._textVerticalOffset\r\n        })\r\n    },\r\n    _updateLinePosition: function() {\r\n        var x = this._options.x;\r\n        var x1;\r\n        var x2;\r\n        if (this._basePosition > this._actualPosition) {\r\n            x1 = x - 2;\r\n            x2 = x\r\n        } else if (this._basePosition < this._actualPosition) {\r\n            x1 = x;\r\n            x2 = x + 2\r\n        } else {\r\n            x1 = x - 1;\r\n            x2 = x + 1\r\n        }\r\n        this._line.attr({\r\n            points: [x1, this._lineFrom, x1, this._lineTo, x2, this._lineTo, x2, this._lineFrom]\r\n        }).rotate(_convertAngleToRendererSpace(this._actualPosition), x, this._options.y).sharp()\r\n    },\r\n    _getTooltipPosition: function() {\r\n        var cosSin = _getCosAndSin((this._basePosition + this._actualPosition) / 2);\r\n        var r = (this._minSide + this._maxSide) / 2;\r\n        return {\r\n            x: this._options.x + cosSin.cos * r,\r\n            y: this._options.y - cosSin.sin * r\r\n        }\r\n    },\r\n    measure: function(layout) {\r\n        var result = {\r\n            min: layout.radius - _Number(this._options.size),\r\n            max: layout.radius\r\n        };\r\n        this._measureText();\r\n        if (this._hasText) {\r\n            result.max += _Number(this._options.text.indent);\r\n            result.horizontalOffset = this._textWidth;\r\n            result.verticalOffset = this._textHeight\r\n        }\r\n        return result\r\n    }\r\n});\r\nexport {\r\n    rectangleNeedle as _default, rectangleNeedle as rectangleneedle, triangleNeedle as triangleneedle, twoColorNeedle as twocolorneedle, triangleMarker as trianglemarker, textCloud as textcloud, rangeBar as rangebar\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
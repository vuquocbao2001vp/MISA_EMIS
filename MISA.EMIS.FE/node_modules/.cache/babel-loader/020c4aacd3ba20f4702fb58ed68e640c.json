{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/bar_gauge.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar PI_DIV_180 = Math.PI / 180;\nvar _abs = Math.abs;\nvar _round = Math.round;\nvar _floor = Math.floor;\nvar _min = Math.min;\nvar _max = Math.max;\nimport registerComponent from \"../../core/component_registrator\";\nimport { clone } from \"../../core/utils/object\";\nimport { noop } from \"../../core/utils/common\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeEnum as _normalizeEnum, convertAngleToRendererSpace, getCosAndSin, patchFontOptions } from \"../core/utils\";\nimport { BaseGauge, getSampleText, formatValue, compareArrays } from \"./base_gauge\";\nvar _getSampleText = getSampleText;\nvar _formatValue = formatValue;\nvar _compareArrays = compareArrays;\nimport dxCircularGauge from \"./circular_gauge\";\nvar _isArray = Array.isArray;\nvar _convertAngleToRendererSpace = convertAngleToRendererSpace;\nvar _getCosAndSin = getCosAndSin;\nvar _patchFontOptions = patchFontOptions;\nvar _Number = Number;\nvar _isFinite = isFinite;\nvar _noop = noop;\nvar _extend = extend;\nimport { plugin as pluginLegend } from \"../components/legend\";\nvar OPTION_VALUES = \"values\";\nvar BarWrapper;\nexport var dxBarGauge = BaseGauge.inherit({\n  _rootClass: \"dxbg-bar-gauge\",\n  _themeSection: \"barGauge\",\n  _fontFields: [\"label.font\", \"legend.font\", \"legend.title.font\", \"legend.title.subtitle.font\"],\n  _initCore: function () {\n    var that = this;\n    that.callBase.apply(that, arguments);\n    that._barsGroup = that._renderer.g().attr({\n      class: \"dxbg-bars\"\n    }).linkOn(that._renderer.root, \"bars\");\n    that._values = [];\n    that._context = {\n      renderer: that._renderer,\n      translator: that._translator,\n      tracker: that._tracker,\n      group: that._barsGroup\n    };\n\n    that._animateStep = function (pos) {\n      var bars = that._bars;\n      var i;\n      var ii;\n\n      for (i = 0, ii = bars.length; i < ii; ++i) {\n        bars[i].animate(pos);\n      }\n    };\n\n    that._animateComplete = function () {\n      that._bars.forEach(bar => bar.endAnimation());\n\n      that._checkOverlap();\n    };\n  },\n  _disposeCore: function () {\n    var that = this;\n\n    that._barsGroup.linkOff();\n\n    that._barsGroup = that._values = that._context = that._animateStep = that._animateComplete = null;\n    that.callBase.apply(that, arguments);\n  },\n  _setupDomainCore: function () {\n    var startValue = this.option(\"startValue\");\n    var endValue = this.option(\"endValue\");\n    _isFinite(startValue) || (startValue = 0);\n    _isFinite(endValue) || (endValue = 100);\n\n    this._translator.setDomain(startValue, endValue);\n\n    this._baseValue = this._translator.adjust(this.option(\"baseValue\"));\n    _isFinite(this._baseValue) || (this._baseValue = startValue < endValue ? startValue : endValue);\n  },\n  _getDefaultSize: function () {\n    return {\n      width: 300,\n      height: 300\n    };\n  },\n  _setupCodomain: dxCircularGauge.prototype._setupCodomain,\n  _getApproximateScreenRange: function () {\n    var sides = this._area.sides;\n    var width = this._canvas.width / (sides.right - sides.left);\n    var height = this._canvas.height / (sides.down - sides.up);\n    var r = width < height ? width : height;\n    return -this._translator.getCodomainRange() * r * PI_DIV_180;\n  },\n  _setupAnimationSettings: function () {\n    var that = this;\n    that.callBase.apply(that, arguments);\n\n    if (that._animationSettings) {\n      that._animationSettings.step = that._animateStep;\n      that._animationSettings.complete = that._animateComplete;\n    }\n  },\n  _cleanContent: function () {\n    this._barsGroup.linkRemove();\n\n    this._animationSettings && this._barsGroup.stopAnimation();\n\n    this._barsGroup.clear();\n  },\n  _renderContent: function () {\n    var labelOptions = this.option(\"label\");\n    var text;\n    var bBox;\n    var context = this._context;\n\n    this._barsGroup.linkAppend();\n\n    context.textEnabled = void 0 === labelOptions || labelOptions && (!(\"visible\" in labelOptions) || labelOptions.visible);\n\n    if (context.textEnabled) {\n      context.textColor = labelOptions && labelOptions.font && labelOptions.font.color || null;\n      labelOptions = _extend(true, {}, this._themeManager.theme().label, labelOptions);\n      context.formatOptions = {\n        format: void 0 !== labelOptions.format ? labelOptions.format : this._defaultFormatOptions,\n        customizeText: labelOptions.customizeText\n      };\n      context.textOptions = {\n        align: \"center\"\n      };\n      context.fontStyles = _patchFontOptions(_extend({}, this._themeManager.theme().label.font, labelOptions.font, {\n        color: null\n      }));\n      this._textIndent = labelOptions.indent > 0 ? _Number(labelOptions.indent) : 0;\n      context.lineWidth = labelOptions.connectorWidth > 0 ? _Number(labelOptions.connectorWidth) : 0;\n      context.lineColor = labelOptions.connectorColor || null;\n      text = this._renderer.text(_getSampleText(this._translator, context.formatOptions), 0, 0).attr(context.textOptions).css(context.fontStyles).append(this._barsGroup);\n      bBox = text.getBBox();\n      text.remove();\n      context.textY = bBox.y;\n      context.textWidth = bBox.width;\n      context.textHeight = bBox.height;\n    }\n\n    dxCircularGauge.prototype._applyMainLayout.call(this);\n\n    this._renderBars();\n  },\n  _measureMainElements: function () {\n    var result = {\n      maxRadius: this._area.radius\n    };\n\n    if (this._context.textEnabled) {\n      result.horizontalMargin = this._context.textWidth;\n      result.verticalMargin = this._context.textHeight;\n      result.inverseHorizontalMargin = this._context.textWidth / 2;\n      result.inverseVerticalMargin = this._context.textHeight / 2;\n    }\n\n    return result;\n  },\n  _renderBars: function () {\n    var options = _extend({}, this._themeManager.theme(), this.option());\n\n    var radius;\n    var area = this._area;\n    var relativeInnerRadius = options.relativeInnerRadius > 0 && options.relativeInnerRadius < 1 ? _Number(options.relativeInnerRadius) : .1;\n    radius = area.radius;\n\n    if (this._context.textEnabled) {\n      this._textIndent = _round(_min(this._textIndent, radius / 2));\n      radius -= this._textIndent;\n    }\n\n    this._outerRadius = _floor(radius);\n    this._innerRadius = _floor(radius * relativeInnerRadius);\n    this._barSpacing = options.barSpacing > 0 ? _Number(options.barSpacing) : 0;\n\n    _extend(this._context, {\n      backgroundColor: options.backgroundColor,\n      x: area.x,\n      y: area.y,\n      startAngle: area.startCoord,\n      endAngle: area.endCoord,\n      baseAngle: this._translator.translate(this._baseValue)\n    });\n\n    this._arrangeBars();\n  },\n  _arrangeBars: function () {\n    var radius = this._outerRadius - this._innerRadius;\n    var context = this._context;\n    var i;\n    var count = this._bars.length;\n\n    this._beginValueChanging();\n\n    context.barSize = count > 0 ? _max((radius - (count - 1) * this._barSpacing) / count, 1) : 0;\n    var spacing = count > 1 ? _max(_min((radius - count * context.barSize) / (count - 1), this._barSpacing), 0) : 0;\n\n    var _count = _min(_floor((radius + spacing) / context.barSize), count);\n\n    this._setBarsCount(count);\n\n    radius = this._outerRadius;\n    context.textRadius = radius;\n    context.textIndent = this._textIndent;\n\n    this._palette.reset();\n\n    var unitOffset = context.barSize + spacing;\n\n    var colors = this._palette.generateColors(_count);\n\n    for (i = 0; i < _count; ++i, radius -= unitOffset) {\n      this._bars[i].arrange({\n        radius: radius,\n        color: colors[i]\n      });\n    }\n\n    for (var _i = _count; _i < count; _i++) {\n      this._bars[_i].hide();\n    }\n\n    if (this._animationSettings && !this._noAnimation) {\n      this._animateBars();\n    } else {\n      this._updateBars();\n    }\n\n    this._endValueChanging();\n  },\n  _setBarsCount: function () {\n    if (this._bars.length > 0) {\n      if (this._dummyBackground) {\n        this._dummyBackground.dispose();\n\n        this._dummyBackground = null;\n      }\n    } else {\n      if (!this._dummyBackground) {\n        this._dummyBackground = this._renderer.arc().attr({\n          \"stroke-linejoin\": \"round\"\n        });\n      }\n\n      this._dummyBackground.attr({\n        x: this._context.x,\n        y: this._context.y,\n        outerRadius: this._outerRadius,\n        innerRadius: this._innerRadius,\n        startAngle: this._context.endAngle,\n        endAngle: this._context.startAngle,\n        fill: this._context.backgroundColor\n      }).append(this._barsGroup);\n    }\n  },\n  _updateBars: function () {\n    this._bars.forEach(bar => bar.applyValue());\n\n    this._checkOverlap();\n  },\n  _checkOverlap: function () {\n    var bars = this._bars;\n\n    var overlapStrategy = _normalizeEnum(this._getOption(\"resolveLabelOverlapping\", true));\n\n    if (\"none\" === overlapStrategy) {\n      return;\n    }\n\n    var sortedBars = bars.concat().sort((a, b) => a.getValue() - b.getValue());\n    var currentIndex = 0;\n    var nextIndex = 1;\n\n    while (currentIndex < sortedBars.length && nextIndex < sortedBars.length) {\n      var current = sortedBars[currentIndex];\n      var next = sortedBars[nextIndex];\n\n      if (current.checkIntersect(next)) {\n        next.hideLabel();\n        nextIndex++;\n      } else {\n        currentIndex = nextIndex;\n        nextIndex = currentIndex + 1;\n      }\n    }\n  },\n  _animateBars: function () {\n    var i;\n    var ii = this._bars.length;\n\n    if (ii > 0) {\n      for (i = 0; i < ii; ++i) {\n        this._bars[i].beginAnimation();\n      }\n\n      this._barsGroup.animate({\n        _: 0\n      }, this._animationSettings);\n    }\n  },\n\n  _buildNodes() {\n    var that = this;\n\n    var options = that._options.silent();\n\n    that._palette = that._themeManager.createPalette(options.palette, {\n      useHighlight: true,\n      extensionMode: options.paletteExtensionMode\n    });\n\n    that._palette.reset();\n\n    that._bars = that._bars || [];\n    that._animationSettings && that._barsGroup.stopAnimation();\n\n    var barValues = that._values.filter(_isFinite);\n\n    var count = barValues.length;\n\n    if (that._bars.length > count) {\n      var ii = that._bars.length;\n\n      for (var i = count; i < ii; ++i) {\n        that._bars[i].dispose();\n      }\n\n      that._bars.splice(count, ii - count);\n    } else if (that._bars.length < count) {\n      for (var _i2 = that._bars.length; _i2 < count; ++_i2) {\n        that._bars.push(new BarWrapper(_i2, that._context));\n      }\n    }\n\n    that._bars.forEach((bar, index) => {\n      bar.update({\n        color: that._palette.getNextColor(count),\n        value: barValues[index]\n      });\n    });\n  },\n\n  _updateValues: function (values) {\n    var list = _isArray(values) && values || _isFinite(values) && [values] || [];\n    var i;\n    var ii = list.length;\n    var value;\n    this._values.length = ii;\n\n    for (i = 0; i < ii; ++i) {\n      value = list[i];\n      this._values[i] = _Number(_isFinite(value) ? value : this._values[i]);\n    }\n\n    if (!this._resizing) {\n      if (!_compareArrays(this._values, this.option(OPTION_VALUES))) {\n        this.option(OPTION_VALUES, this._values.slice());\n      }\n    }\n\n    this._change([\"NODES\"]);\n  },\n  values: function (arg) {\n    if (void 0 !== arg) {\n      this._updateValues(arg);\n\n      return this;\n    } else {\n      return this._values.slice(0);\n    }\n  },\n  _optionChangesMap: {\n    backgroundColor: \"MOSTLY_TOTAL\",\n    relativeInnerRadius: \"MOSTLY_TOTAL\",\n    barSpacing: \"MOSTLY_TOTAL\",\n    label: \"MOSTLY_TOTAL\",\n    resolveLabelOverlapping: \"MOSTLY_TOTAL\",\n    palette: \"MOSTLY_TOTAL\",\n    paletteExtensionMode: \"MOSTLY_TOTAL\",\n    values: \"VALUES\"\n  },\n  _change_VALUES: function () {\n    this._updateValues(this.option(OPTION_VALUES));\n  },\n  _factory: clone(BaseGauge.prototype._factory),\n  _optionChangesOrder: [\"VALUES\", \"NODES\"],\n  _initialChanges: [\"VALUES\"],\n\n  _change_NODES() {\n    this._buildNodes();\n  },\n\n  _change_MOSTLY_TOTAL: function () {\n    this._change([\"NODES\"]);\n\n    this.callBase();\n  },\n  _proxyData: [],\n\n  _getLegendData() {\n    var formatOptions = {};\n\n    var options = this._options.silent();\n\n    var labelFormatOptions = (options.label || {}).format;\n    var legendFormatOptions = (options.legend || {}).itemTextFormat;\n\n    if (legendFormatOptions) {\n      formatOptions.format = legendFormatOptions;\n    } else {\n      formatOptions.format = labelFormatOptions || this._defaultFormatOptions;\n    }\n\n    return (this._bars || []).map(b => ({\n      id: b.index,\n      item: {\n        value: b.getValue(),\n        color: b.getColor(),\n        index: b.index\n      },\n      text: _formatValue(b.getValue(), formatOptions),\n      visible: true,\n      states: {\n        normal: {\n          fill: b.getColor()\n        }\n      }\n    }));\n  }\n\n});\n\nBarWrapper = function (index, context) {\n  this._context = context;\n  this._tracker = context.renderer.arc().attr({\n    \"stroke-linejoin\": \"round\"\n  });\n  this.index = index;\n};\n\n_extend(BarWrapper.prototype, {\n  dispose: function () {\n    this._background.dispose();\n\n    this._bar.dispose();\n\n    if (this._context.textEnabled) {\n      this._line.dispose();\n\n      this._text.dispose();\n    }\n\n    this._context.tracker.detach(this._tracker);\n\n    this._context = this._settings = this._background = this._bar = this._line = this._text = this._tracker = null;\n    return this;\n  },\n  arrange: function (options) {\n    var context = this._context;\n    this._visible = true;\n    context.tracker.attach(this._tracker, this, {\n      index: this.index\n    });\n    this._background = context.renderer.arc().attr({\n      \"stroke-linejoin\": \"round\",\n      fill: context.backgroundColor\n    }).append(context.group);\n    this._settings = this._settings || {\n      x: context.x,\n      y: context.y,\n      startAngle: context.baseAngle,\n      endAngle: context.baseAngle\n    };\n    this._bar = context.renderer.arc().attr(_extend({\n      \"stroke-linejoin\": \"round\"\n    }, this._settings)).append(context.group);\n\n    if (context.textEnabled) {\n      this._line = context.renderer.path([], \"line\").attr({\n        \"stroke-width\": context.lineWidth\n      }).append(context.group);\n      this._text = context.renderer.text().css(context.fontStyles).attr(context.textOptions).append(context.group);\n    }\n\n    this._angle = isFinite(this._angle) ? this._angle : context.baseAngle;\n    this._settings.outerRadius = options.radius;\n    this._settings.innerRadius = options.radius - context.barSize;\n    this._settings.x = context.x;\n    this._settings.y = context.y;\n\n    this._background.attr(_extend({}, this._settings, {\n      startAngle: context.endAngle,\n      endAngle: context.startAngle,\n      fill: this._context.backgroundColor\n    }));\n\n    this._bar.attr({\n      x: context.x,\n      y: context.y,\n      outerRadius: this._settings.outerRadius,\n      innerRadius: this._settings.innerRadius,\n      fill: this._color\n    });\n\n    this._tracker.attr(this._settings);\n\n    if (context.textEnabled) {\n      this._line.attr({\n        points: [context.x, context.y - this._settings.innerRadius, context.x, context.y - context.textRadius - context.textIndent],\n        stroke: context.lineColor || this._color\n      }).sharp();\n\n      this._text.css({\n        fill: context.textColor || this._color\n      });\n    }\n\n    return this;\n  },\n  getTooltipParameters: function () {\n    var cosSin = _getCosAndSin((this._angle + this._context.baseAngle) / 2);\n\n    return {\n      x: _round(this._context.x + (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.cos),\n      y: _round(this._context.y - (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.sin),\n      offset: 0,\n      color: this._color,\n      value: this._value\n    };\n  },\n  setAngle: function (angle) {\n    var context = this._context;\n    var settings = this._settings;\n    var cosSin;\n    this._angle = angle;\n    setAngles(settings, context.baseAngle, angle);\n\n    this._bar.attr(settings);\n\n    this._tracker.attr(settings);\n\n    if (context.textEnabled) {\n      cosSin = _getCosAndSin(angle);\n      var indent = context.textIndent;\n      var radius = context.textRadius + indent;\n      var x = context.x + radius * cosSin.cos;\n      var y = context.y - radius * cosSin.sin;\n      var halfWidth = .5 * context.textWidth;\n      var textHeight = context.textHeight;\n      var textY = context.textY;\n\n      if (_abs(x - context.x) > indent) {\n        x += x < context.x ? -halfWidth : halfWidth;\n      }\n\n      if (_abs(y - context.y) <= indent) {\n        y -= textY + .5 * textHeight;\n      } else {\n        y -= y < context.y ? textY + textHeight : textY;\n      }\n\n      var text = _formatValue(this._value, context.formatOptions, {\n        index: this.index\n      });\n\n      var visibility = \"\" === text ? \"hidden\" : null;\n\n      this._text.attr({\n        text: text,\n        x: x,\n        y: y,\n        visibility: visibility\n      });\n\n      this._line.attr({\n        visibility: visibility\n      });\n\n      this._line.rotate(_convertAngleToRendererSpace(angle), context.x, context.y);\n    }\n\n    return this;\n  },\n  hideLabel: function () {\n    this._text.attr({\n      visibility: \"hidden\"\n    });\n\n    this._line.attr({\n      visibility: \"hidden\"\n    });\n  },\n  checkIntersect: function (anotherBar) {\n    var coords = this.calculateLabelCoords();\n    var anotherCoords = anotherBar.calculateLabelCoords();\n\n    if (!coords || !anotherCoords) {\n      return false;\n    }\n\n    var width = Math.max(0, Math.min(coords.bottomRight.x, anotherCoords.bottomRight.x) - Math.max(coords.topLeft.x, anotherCoords.topLeft.x));\n    var height = Math.max(0, Math.min(coords.bottomRight.y, anotherCoords.bottomRight.y) - Math.max(coords.topLeft.y, anotherCoords.topLeft.y));\n    return width * height !== 0;\n  },\n  calculateLabelCoords: function () {\n    if (!this._text) {\n      return;\n    }\n\n    var box = this._text.getBBox();\n\n    return {\n      topLeft: {\n        x: box.x,\n        y: box.y\n      },\n      bottomRight: {\n        x: box.x + box.width,\n        y: box.y + box.height\n      }\n    };\n  },\n  _processValue: function (value) {\n    return this._context.translator.translate(this._context.translator.adjust(value));\n  },\n\n  applyValue() {\n    if (!this._visible) {\n      return this;\n    }\n\n    return this.setAngle(this._processValue(this.getValue()));\n  },\n\n  update(_ref) {\n    var {\n      color: color,\n      value: value\n    } = _ref;\n    this._color = color;\n    this._value = value;\n  },\n\n  hide() {\n    this._visible = false;\n  },\n\n  getColor() {\n    return this._color;\n  },\n\n  getValue() {\n    return this._value;\n  },\n\n  beginAnimation: function () {\n    if (!this._visible) {\n      return this;\n    }\n\n    var angle = this._processValue(this.getValue());\n\n    if (!compareFloats(this._angle, angle)) {\n      this._start = this._angle;\n      this._delta = angle - this._angle;\n\n      this._tracker.attr({\n        visibility: \"hidden\"\n      });\n\n      if (this._context.textEnabled) {\n        this._line.attr({\n          visibility: \"hidden\"\n        });\n\n        this._text.attr({\n          visibility: \"hidden\"\n        });\n      }\n    } else {\n      this.animate = _noop;\n      this.setAngle(this._angle);\n    }\n  },\n  animate: function (pos) {\n    if (!this._visible) {\n      return this;\n    }\n\n    this._angle = this._start + this._delta * pos;\n    setAngles(this._settings, this._context.baseAngle, this._angle);\n\n    this._bar.attr(this._settings);\n  },\n  endAnimation: function () {\n    if (void 0 !== this._delta) {\n      if (compareFloats(this._angle, this._start + this._delta)) {\n        this._tracker.attr({\n          visibility: null\n        });\n\n        this.setAngle(this._angle);\n      }\n    } else {\n      delete this.animate;\n    }\n\n    delete this._start;\n    delete this._delta;\n  }\n});\n\nfunction setAngles(target, angle1, angle2) {\n  target.startAngle = angle1 < angle2 ? angle1 : angle2;\n  target.endAngle = angle1 < angle2 ? angle2 : angle1;\n}\n\nfunction compareFloats(value1, value2) {\n  return _abs(value1 - value2) < 1e-4;\n}\n\nregisterComponent(\"dxBarGauge\", dxBarGauge);\ndxBarGauge.addPlugin(pluginLegend);","map":{"version":3,"names":["PI_DIV_180","Math","PI","_abs","abs","_round","round","_floor","floor","_min","min","_max","max","registerComponent","clone","noop","extend","normalizeEnum","_normalizeEnum","convertAngleToRendererSpace","getCosAndSin","patchFontOptions","BaseGauge","getSampleText","formatValue","compareArrays","_getSampleText","_formatValue","_compareArrays","dxCircularGauge","_isArray","Array","isArray","_convertAngleToRendererSpace","_getCosAndSin","_patchFontOptions","_Number","Number","_isFinite","isFinite","_noop","_extend","plugin","pluginLegend","OPTION_VALUES","BarWrapper","dxBarGauge","inherit","_rootClass","_themeSection","_fontFields","_initCore","that","callBase","apply","arguments","_barsGroup","_renderer","g","attr","class","linkOn","root","_values","_context","renderer","translator","_translator","tracker","_tracker","group","_animateStep","pos","bars","_bars","i","ii","length","animate","_animateComplete","forEach","bar","endAnimation","_checkOverlap","_disposeCore","linkOff","_setupDomainCore","startValue","option","endValue","setDomain","_baseValue","adjust","_getDefaultSize","width","height","_setupCodomain","prototype","_getApproximateScreenRange","sides","_area","_canvas","right","left","down","up","r","getCodomainRange","_setupAnimationSettings","_animationSettings","step","complete","_cleanContent","linkRemove","stopAnimation","clear","_renderContent","labelOptions","text","bBox","context","linkAppend","textEnabled","visible","textColor","font","color","_themeManager","theme","label","formatOptions","format","_defaultFormatOptions","customizeText","textOptions","align","fontStyles","_textIndent","indent","lineWidth","connectorWidth","lineColor","connectorColor","css","append","getBBox","remove","textY","y","textWidth","textHeight","_applyMainLayout","call","_renderBars","_measureMainElements","result","maxRadius","radius","horizontalMargin","verticalMargin","inverseHorizontalMargin","inverseVerticalMargin","options","area","relativeInnerRadius","_outerRadius","_innerRadius","_barSpacing","barSpacing","backgroundColor","x","startAngle","startCoord","endAngle","endCoord","baseAngle","translate","_arrangeBars","count","_beginValueChanging","barSize","spacing","_count","_setBarsCount","textRadius","textIndent","_palette","reset","unitOffset","colors","generateColors","arrange","_i","hide","_noAnimation","_animateBars","_updateBars","_endValueChanging","_dummyBackground","dispose","arc","outerRadius","innerRadius","fill","applyValue","overlapStrategy","_getOption","sortedBars","concat","sort","a","b","getValue","currentIndex","nextIndex","current","next","checkIntersect","hideLabel","beginAnimation","_","_buildNodes","_options","silent","createPalette","palette","useHighlight","extensionMode","paletteExtensionMode","barValues","filter","splice","_i2","push","index","update","getNextColor","value","_updateValues","values","list","_resizing","slice","_change","arg","_optionChangesMap","resolveLabelOverlapping","_change_VALUES","_factory","_optionChangesOrder","_initialChanges","_change_NODES","_change_MOSTLY_TOTAL","_proxyData","_getLegendData","labelFormatOptions","legendFormatOptions","legend","itemTextFormat","map","id","item","getColor","states","normal","_background","_bar","_line","_text","detach","_settings","_visible","attach","path","_angle","_color","points","stroke","sharp","getTooltipParameters","cosSin","cos","sin","offset","_value","setAngle","angle","settings","setAngles","halfWidth","visibility","rotate","anotherBar","coords","calculateLabelCoords","anotherCoords","bottomRight","topLeft","box","_processValue","_ref","compareFloats","_start","_delta","target","angle1","angle2","value1","value2","addPlugin"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/gauges/bar_gauge.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/gauges/bar_gauge.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar PI_DIV_180 = Math.PI / 180;\r\nvar _abs = Math.abs;\r\nvar _round = Math.round;\r\nvar _floor = Math.floor;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    clone\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeEnum as _normalizeEnum,\r\n    convertAngleToRendererSpace,\r\n    getCosAndSin,\r\n    patchFontOptions\r\n} from \"../core/utils\";\r\nimport {\r\n    BaseGauge,\r\n    getSampleText,\r\n    formatValue,\r\n    compareArrays\r\n} from \"./base_gauge\";\r\nvar _getSampleText = getSampleText;\r\nvar _formatValue = formatValue;\r\nvar _compareArrays = compareArrays;\r\nimport dxCircularGauge from \"./circular_gauge\";\r\nvar _isArray = Array.isArray;\r\nvar _convertAngleToRendererSpace = convertAngleToRendererSpace;\r\nvar _getCosAndSin = getCosAndSin;\r\nvar _patchFontOptions = patchFontOptions;\r\nvar _Number = Number;\r\nvar _isFinite = isFinite;\r\nvar _noop = noop;\r\nvar _extend = extend;\r\nimport {\r\n    plugin as pluginLegend\r\n} from \"../components/legend\";\r\nvar OPTION_VALUES = \"values\";\r\nvar BarWrapper;\r\nexport var dxBarGauge = BaseGauge.inherit({\r\n    _rootClass: \"dxbg-bar-gauge\",\r\n    _themeSection: \"barGauge\",\r\n    _fontFields: [\"label.font\", \"legend.font\", \"legend.title.font\", \"legend.title.subtitle.font\"],\r\n    _initCore: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        that._barsGroup = that._renderer.g().attr({\r\n            class: \"dxbg-bars\"\r\n        }).linkOn(that._renderer.root, \"bars\");\r\n        that._values = [];\r\n        that._context = {\r\n            renderer: that._renderer,\r\n            translator: that._translator,\r\n            tracker: that._tracker,\r\n            group: that._barsGroup\r\n        };\r\n        that._animateStep = function(pos) {\r\n            var bars = that._bars;\r\n            var i;\r\n            var ii;\r\n            for (i = 0, ii = bars.length; i < ii; ++i) {\r\n                bars[i].animate(pos)\r\n            }\r\n        };\r\n        that._animateComplete = function() {\r\n            that._bars.forEach(bar => bar.endAnimation());\r\n            that._checkOverlap()\r\n        }\r\n    },\r\n    _disposeCore: function() {\r\n        var that = this;\r\n        that._barsGroup.linkOff();\r\n        that._barsGroup = that._values = that._context = that._animateStep = that._animateComplete = null;\r\n        that.callBase.apply(that, arguments)\r\n    },\r\n    _setupDomainCore: function() {\r\n        var startValue = this.option(\"startValue\");\r\n        var endValue = this.option(\"endValue\");\r\n        _isFinite(startValue) || (startValue = 0);\r\n        _isFinite(endValue) || (endValue = 100);\r\n        this._translator.setDomain(startValue, endValue);\r\n        this._baseValue = this._translator.adjust(this.option(\"baseValue\"));\r\n        _isFinite(this._baseValue) || (this._baseValue = startValue < endValue ? startValue : endValue)\r\n    },\r\n    _getDefaultSize: function() {\r\n        return {\r\n            width: 300,\r\n            height: 300\r\n        }\r\n    },\r\n    _setupCodomain: dxCircularGauge.prototype._setupCodomain,\r\n    _getApproximateScreenRange: function() {\r\n        var sides = this._area.sides;\r\n        var width = this._canvas.width / (sides.right - sides.left);\r\n        var height = this._canvas.height / (sides.down - sides.up);\r\n        var r = width < height ? width : height;\r\n        return -this._translator.getCodomainRange() * r * PI_DIV_180\r\n    },\r\n    _setupAnimationSettings: function() {\r\n        var that = this;\r\n        that.callBase.apply(that, arguments);\r\n        if (that._animationSettings) {\r\n            that._animationSettings.step = that._animateStep;\r\n            that._animationSettings.complete = that._animateComplete\r\n        }\r\n    },\r\n    _cleanContent: function() {\r\n        this._barsGroup.linkRemove();\r\n        this._animationSettings && this._barsGroup.stopAnimation();\r\n        this._barsGroup.clear()\r\n    },\r\n    _renderContent: function() {\r\n        var labelOptions = this.option(\"label\");\r\n        var text;\r\n        var bBox;\r\n        var context = this._context;\r\n        this._barsGroup.linkAppend();\r\n        context.textEnabled = void 0 === labelOptions || labelOptions && (!(\"visible\" in labelOptions) || labelOptions.visible);\r\n        if (context.textEnabled) {\r\n            context.textColor = labelOptions && labelOptions.font && labelOptions.font.color || null;\r\n            labelOptions = _extend(true, {}, this._themeManager.theme().label, labelOptions);\r\n            context.formatOptions = {\r\n                format: void 0 !== labelOptions.format ? labelOptions.format : this._defaultFormatOptions,\r\n                customizeText: labelOptions.customizeText\r\n            };\r\n            context.textOptions = {\r\n                align: \"center\"\r\n            };\r\n            context.fontStyles = _patchFontOptions(_extend({}, this._themeManager.theme().label.font, labelOptions.font, {\r\n                color: null\r\n            }));\r\n            this._textIndent = labelOptions.indent > 0 ? _Number(labelOptions.indent) : 0;\r\n            context.lineWidth = labelOptions.connectorWidth > 0 ? _Number(labelOptions.connectorWidth) : 0;\r\n            context.lineColor = labelOptions.connectorColor || null;\r\n            text = this._renderer.text(_getSampleText(this._translator, context.formatOptions), 0, 0).attr(context.textOptions).css(context.fontStyles).append(this._barsGroup);\r\n            bBox = text.getBBox();\r\n            text.remove();\r\n            context.textY = bBox.y;\r\n            context.textWidth = bBox.width;\r\n            context.textHeight = bBox.height\r\n        }\r\n        dxCircularGauge.prototype._applyMainLayout.call(this);\r\n        this._renderBars()\r\n    },\r\n    _measureMainElements: function() {\r\n        var result = {\r\n            maxRadius: this._area.radius\r\n        };\r\n        if (this._context.textEnabled) {\r\n            result.horizontalMargin = this._context.textWidth;\r\n            result.verticalMargin = this._context.textHeight;\r\n            result.inverseHorizontalMargin = this._context.textWidth / 2;\r\n            result.inverseVerticalMargin = this._context.textHeight / 2\r\n        }\r\n        return result\r\n    },\r\n    _renderBars: function() {\r\n        var options = _extend({}, this._themeManager.theme(), this.option());\r\n        var radius;\r\n        var area = this._area;\r\n        var relativeInnerRadius = options.relativeInnerRadius > 0 && options.relativeInnerRadius < 1 ? _Number(options.relativeInnerRadius) : .1;\r\n        radius = area.radius;\r\n        if (this._context.textEnabled) {\r\n            this._textIndent = _round(_min(this._textIndent, radius / 2));\r\n            radius -= this._textIndent\r\n        }\r\n        this._outerRadius = _floor(radius);\r\n        this._innerRadius = _floor(radius * relativeInnerRadius);\r\n        this._barSpacing = options.barSpacing > 0 ? _Number(options.barSpacing) : 0;\r\n        _extend(this._context, {\r\n            backgroundColor: options.backgroundColor,\r\n            x: area.x,\r\n            y: area.y,\r\n            startAngle: area.startCoord,\r\n            endAngle: area.endCoord,\r\n            baseAngle: this._translator.translate(this._baseValue)\r\n        });\r\n        this._arrangeBars()\r\n    },\r\n    _arrangeBars: function() {\r\n        var radius = this._outerRadius - this._innerRadius;\r\n        var context = this._context;\r\n        var i;\r\n        var count = this._bars.length;\r\n        this._beginValueChanging();\r\n        context.barSize = count > 0 ? _max((radius - (count - 1) * this._barSpacing) / count, 1) : 0;\r\n        var spacing = count > 1 ? _max(_min((radius - count * context.barSize) / (count - 1), this._barSpacing), 0) : 0;\r\n        var _count = _min(_floor((radius + spacing) / context.barSize), count);\r\n        this._setBarsCount(count);\r\n        radius = this._outerRadius;\r\n        context.textRadius = radius;\r\n        context.textIndent = this._textIndent;\r\n        this._palette.reset();\r\n        var unitOffset = context.barSize + spacing;\r\n        var colors = this._palette.generateColors(_count);\r\n        for (i = 0; i < _count; ++i, radius -= unitOffset) {\r\n            this._bars[i].arrange({\r\n                radius: radius,\r\n                color: colors[i]\r\n            })\r\n        }\r\n        for (var _i = _count; _i < count; _i++) {\r\n            this._bars[_i].hide()\r\n        }\r\n        if (this._animationSettings && !this._noAnimation) {\r\n            this._animateBars()\r\n        } else {\r\n            this._updateBars()\r\n        }\r\n        this._endValueChanging()\r\n    },\r\n    _setBarsCount: function() {\r\n        if (this._bars.length > 0) {\r\n            if (this._dummyBackground) {\r\n                this._dummyBackground.dispose();\r\n                this._dummyBackground = null\r\n            }\r\n        } else {\r\n            if (!this._dummyBackground) {\r\n                this._dummyBackground = this._renderer.arc().attr({\r\n                    \"stroke-linejoin\": \"round\"\r\n                })\r\n            }\r\n            this._dummyBackground.attr({\r\n                x: this._context.x,\r\n                y: this._context.y,\r\n                outerRadius: this._outerRadius,\r\n                innerRadius: this._innerRadius,\r\n                startAngle: this._context.endAngle,\r\n                endAngle: this._context.startAngle,\r\n                fill: this._context.backgroundColor\r\n            }).append(this._barsGroup)\r\n        }\r\n    },\r\n    _updateBars: function() {\r\n        this._bars.forEach(bar => bar.applyValue());\r\n        this._checkOverlap()\r\n    },\r\n    _checkOverlap: function() {\r\n        var bars = this._bars;\r\n        var overlapStrategy = _normalizeEnum(this._getOption(\"resolveLabelOverlapping\", true));\r\n        if (\"none\" === overlapStrategy) {\r\n            return\r\n        }\r\n        var sortedBars = bars.concat().sort((a, b) => a.getValue() - b.getValue());\r\n        var currentIndex = 0;\r\n        var nextIndex = 1;\r\n        while (currentIndex < sortedBars.length && nextIndex < sortedBars.length) {\r\n            var current = sortedBars[currentIndex];\r\n            var next = sortedBars[nextIndex];\r\n            if (current.checkIntersect(next)) {\r\n                next.hideLabel();\r\n                nextIndex++\r\n            } else {\r\n                currentIndex = nextIndex;\r\n                nextIndex = currentIndex + 1\r\n            }\r\n        }\r\n    },\r\n    _animateBars: function() {\r\n        var i;\r\n        var ii = this._bars.length;\r\n        if (ii > 0) {\r\n            for (i = 0; i < ii; ++i) {\r\n                this._bars[i].beginAnimation()\r\n            }\r\n            this._barsGroup.animate({\r\n                _: 0\r\n            }, this._animationSettings)\r\n        }\r\n    },\r\n    _buildNodes() {\r\n        var that = this;\r\n        var options = that._options.silent();\r\n        that._palette = that._themeManager.createPalette(options.palette, {\r\n            useHighlight: true,\r\n            extensionMode: options.paletteExtensionMode\r\n        });\r\n        that._palette.reset();\r\n        that._bars = that._bars || [];\r\n        that._animationSettings && that._barsGroup.stopAnimation();\r\n        var barValues = that._values.filter(_isFinite);\r\n        var count = barValues.length;\r\n        if (that._bars.length > count) {\r\n            var ii = that._bars.length;\r\n            for (var i = count; i < ii; ++i) {\r\n                that._bars[i].dispose()\r\n            }\r\n            that._bars.splice(count, ii - count)\r\n        } else if (that._bars.length < count) {\r\n            for (var _i2 = that._bars.length; _i2 < count; ++_i2) {\r\n                that._bars.push(new BarWrapper(_i2, that._context))\r\n            }\r\n        }\r\n        that._bars.forEach((bar, index) => {\r\n            bar.update({\r\n                color: that._palette.getNextColor(count),\r\n                value: barValues[index]\r\n            })\r\n        })\r\n    },\r\n    _updateValues: function(values) {\r\n        var list = _isArray(values) && values || _isFinite(values) && [values] || [];\r\n        var i;\r\n        var ii = list.length;\r\n        var value;\r\n        this._values.length = ii;\r\n        for (i = 0; i < ii; ++i) {\r\n            value = list[i];\r\n            this._values[i] = _Number(_isFinite(value) ? value : this._values[i])\r\n        }\r\n        if (!this._resizing) {\r\n            if (!_compareArrays(this._values, this.option(OPTION_VALUES))) {\r\n                this.option(OPTION_VALUES, this._values.slice())\r\n            }\r\n        }\r\n        this._change([\"NODES\"])\r\n    },\r\n    values: function(arg) {\r\n        if (void 0 !== arg) {\r\n            this._updateValues(arg);\r\n            return this\r\n        } else {\r\n            return this._values.slice(0)\r\n        }\r\n    },\r\n    _optionChangesMap: {\r\n        backgroundColor: \"MOSTLY_TOTAL\",\r\n        relativeInnerRadius: \"MOSTLY_TOTAL\",\r\n        barSpacing: \"MOSTLY_TOTAL\",\r\n        label: \"MOSTLY_TOTAL\",\r\n        resolveLabelOverlapping: \"MOSTLY_TOTAL\",\r\n        palette: \"MOSTLY_TOTAL\",\r\n        paletteExtensionMode: \"MOSTLY_TOTAL\",\r\n        values: \"VALUES\"\r\n    },\r\n    _change_VALUES: function() {\r\n        this._updateValues(this.option(OPTION_VALUES))\r\n    },\r\n    _factory: clone(BaseGauge.prototype._factory),\r\n    _optionChangesOrder: [\"VALUES\", \"NODES\"],\r\n    _initialChanges: [\"VALUES\"],\r\n    _change_NODES() {\r\n        this._buildNodes()\r\n    },\r\n    _change_MOSTLY_TOTAL: function() {\r\n        this._change([\"NODES\"]);\r\n        this.callBase()\r\n    },\r\n    _proxyData: [],\r\n    _getLegendData() {\r\n        var formatOptions = {};\r\n        var options = this._options.silent();\r\n        var labelFormatOptions = (options.label || {}).format;\r\n        var legendFormatOptions = (options.legend || {}).itemTextFormat;\r\n        if (legendFormatOptions) {\r\n            formatOptions.format = legendFormatOptions\r\n        } else {\r\n            formatOptions.format = labelFormatOptions || this._defaultFormatOptions\r\n        }\r\n        return (this._bars || []).map(b => ({\r\n            id: b.index,\r\n            item: {\r\n                value: b.getValue(),\r\n                color: b.getColor(),\r\n                index: b.index\r\n            },\r\n            text: _formatValue(b.getValue(), formatOptions),\r\n            visible: true,\r\n            states: {\r\n                normal: {\r\n                    fill: b.getColor()\r\n                }\r\n            }\r\n        }))\r\n    }\r\n});\r\nBarWrapper = function(index, context) {\r\n    this._context = context;\r\n    this._tracker = context.renderer.arc().attr({\r\n        \"stroke-linejoin\": \"round\"\r\n    });\r\n    this.index = index\r\n};\r\n_extend(BarWrapper.prototype, {\r\n    dispose: function() {\r\n        this._background.dispose();\r\n        this._bar.dispose();\r\n        if (this._context.textEnabled) {\r\n            this._line.dispose();\r\n            this._text.dispose()\r\n        }\r\n        this._context.tracker.detach(this._tracker);\r\n        this._context = this._settings = this._background = this._bar = this._line = this._text = this._tracker = null;\r\n        return this\r\n    },\r\n    arrange: function(options) {\r\n        var context = this._context;\r\n        this._visible = true;\r\n        context.tracker.attach(this._tracker, this, {\r\n            index: this.index\r\n        });\r\n        this._background = context.renderer.arc().attr({\r\n            \"stroke-linejoin\": \"round\",\r\n            fill: context.backgroundColor\r\n        }).append(context.group);\r\n        this._settings = this._settings || {\r\n            x: context.x,\r\n            y: context.y,\r\n            startAngle: context.baseAngle,\r\n            endAngle: context.baseAngle\r\n        };\r\n        this._bar = context.renderer.arc().attr(_extend({\r\n            \"stroke-linejoin\": \"round\"\r\n        }, this._settings)).append(context.group);\r\n        if (context.textEnabled) {\r\n            this._line = context.renderer.path([], \"line\").attr({\r\n                \"stroke-width\": context.lineWidth\r\n            }).append(context.group);\r\n            this._text = context.renderer.text().css(context.fontStyles).attr(context.textOptions).append(context.group)\r\n        }\r\n        this._angle = isFinite(this._angle) ? this._angle : context.baseAngle;\r\n        this._settings.outerRadius = options.radius;\r\n        this._settings.innerRadius = options.radius - context.barSize;\r\n        this._settings.x = context.x;\r\n        this._settings.y = context.y;\r\n        this._background.attr(_extend({}, this._settings, {\r\n            startAngle: context.endAngle,\r\n            endAngle: context.startAngle,\r\n            fill: this._context.backgroundColor\r\n        }));\r\n        this._bar.attr({\r\n            x: context.x,\r\n            y: context.y,\r\n            outerRadius: this._settings.outerRadius,\r\n            innerRadius: this._settings.innerRadius,\r\n            fill: this._color\r\n        });\r\n        this._tracker.attr(this._settings);\r\n        if (context.textEnabled) {\r\n            this._line.attr({\r\n                points: [context.x, context.y - this._settings.innerRadius, context.x, context.y - context.textRadius - context.textIndent],\r\n                stroke: context.lineColor || this._color\r\n            }).sharp();\r\n            this._text.css({\r\n                fill: context.textColor || this._color\r\n            })\r\n        }\r\n        return this\r\n    },\r\n    getTooltipParameters: function() {\r\n        var cosSin = _getCosAndSin((this._angle + this._context.baseAngle) / 2);\r\n        return {\r\n            x: _round(this._context.x + (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.cos),\r\n            y: _round(this._context.y - (this._settings.outerRadius + this._settings.innerRadius) / 2 * cosSin.sin),\r\n            offset: 0,\r\n            color: this._color,\r\n            value: this._value\r\n        }\r\n    },\r\n    setAngle: function(angle) {\r\n        var context = this._context;\r\n        var settings = this._settings;\r\n        var cosSin;\r\n        this._angle = angle;\r\n        setAngles(settings, context.baseAngle, angle);\r\n        this._bar.attr(settings);\r\n        this._tracker.attr(settings);\r\n        if (context.textEnabled) {\r\n            cosSin = _getCosAndSin(angle);\r\n            var indent = context.textIndent;\r\n            var radius = context.textRadius + indent;\r\n            var x = context.x + radius * cosSin.cos;\r\n            var y = context.y - radius * cosSin.sin;\r\n            var halfWidth = .5 * context.textWidth;\r\n            var textHeight = context.textHeight;\r\n            var textY = context.textY;\r\n            if (_abs(x - context.x) > indent) {\r\n                x += x < context.x ? -halfWidth : halfWidth\r\n            }\r\n            if (_abs(y - context.y) <= indent) {\r\n                y -= textY + .5 * textHeight\r\n            } else {\r\n                y -= y < context.y ? textY + textHeight : textY\r\n            }\r\n            var text = _formatValue(this._value, context.formatOptions, {\r\n                index: this.index\r\n            });\r\n            var visibility = \"\" === text ? \"hidden\" : null;\r\n            this._text.attr({\r\n                text: text,\r\n                x: x,\r\n                y: y,\r\n                visibility: visibility\r\n            });\r\n            this._line.attr({\r\n                visibility: visibility\r\n            });\r\n            this._line.rotate(_convertAngleToRendererSpace(angle), context.x, context.y)\r\n        }\r\n        return this\r\n    },\r\n    hideLabel: function() {\r\n        this._text.attr({\r\n            visibility: \"hidden\"\r\n        });\r\n        this._line.attr({\r\n            visibility: \"hidden\"\r\n        })\r\n    },\r\n    checkIntersect: function(anotherBar) {\r\n        var coords = this.calculateLabelCoords();\r\n        var anotherCoords = anotherBar.calculateLabelCoords();\r\n        if (!coords || !anotherCoords) {\r\n            return false\r\n        }\r\n        var width = Math.max(0, Math.min(coords.bottomRight.x, anotherCoords.bottomRight.x) - Math.max(coords.topLeft.x, anotherCoords.topLeft.x));\r\n        var height = Math.max(0, Math.min(coords.bottomRight.y, anotherCoords.bottomRight.y) - Math.max(coords.topLeft.y, anotherCoords.topLeft.y));\r\n        return width * height !== 0\r\n    },\r\n    calculateLabelCoords: function() {\r\n        if (!this._text) {\r\n            return\r\n        }\r\n        var box = this._text.getBBox();\r\n        return {\r\n            topLeft: {\r\n                x: box.x,\r\n                y: box.y\r\n            },\r\n            bottomRight: {\r\n                x: box.x + box.width,\r\n                y: box.y + box.height\r\n            }\r\n        }\r\n    },\r\n    _processValue: function(value) {\r\n        return this._context.translator.translate(this._context.translator.adjust(value))\r\n    },\r\n    applyValue() {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        return this.setAngle(this._processValue(this.getValue()))\r\n    },\r\n    update(_ref) {\r\n        var {\r\n            color: color,\r\n            value: value\r\n        } = _ref;\r\n        this._color = color;\r\n        this._value = value\r\n    },\r\n    hide() {\r\n        this._visible = false\r\n    },\r\n    getColor() {\r\n        return this._color\r\n    },\r\n    getValue() {\r\n        return this._value\r\n    },\r\n    beginAnimation: function() {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        var angle = this._processValue(this.getValue());\r\n        if (!compareFloats(this._angle, angle)) {\r\n            this._start = this._angle;\r\n            this._delta = angle - this._angle;\r\n            this._tracker.attr({\r\n                visibility: \"hidden\"\r\n            });\r\n            if (this._context.textEnabled) {\r\n                this._line.attr({\r\n                    visibility: \"hidden\"\r\n                });\r\n                this._text.attr({\r\n                    visibility: \"hidden\"\r\n                })\r\n            }\r\n        } else {\r\n            this.animate = _noop;\r\n            this.setAngle(this._angle)\r\n        }\r\n    },\r\n    animate: function(pos) {\r\n        if (!this._visible) {\r\n            return this\r\n        }\r\n        this._angle = this._start + this._delta * pos;\r\n        setAngles(this._settings, this._context.baseAngle, this._angle);\r\n        this._bar.attr(this._settings)\r\n    },\r\n    endAnimation: function() {\r\n        if (void 0 !== this._delta) {\r\n            if (compareFloats(this._angle, this._start + this._delta)) {\r\n                this._tracker.attr({\r\n                    visibility: null\r\n                });\r\n                this.setAngle(this._angle)\r\n            }\r\n        } else {\r\n            delete this.animate\r\n        }\r\n        delete this._start;\r\n        delete this._delta\r\n    }\r\n});\r\n\r\nfunction setAngles(target, angle1, angle2) {\r\n    target.startAngle = angle1 < angle2 ? angle1 : angle2;\r\n    target.endAngle = angle1 < angle2 ? angle2 : angle1\r\n}\r\n\r\nfunction compareFloats(value1, value2) {\r\n    return _abs(value1 - value2) < 1e-4\r\n}\r\nregisterComponent(\"dxBarGauge\", dxBarGauge);\r\ndxBarGauge.addPlugin(pluginLegend);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
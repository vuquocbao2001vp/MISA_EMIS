{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/axes/tick_generator.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getLogExt as getLog, getCategoriesInfo, raiseToExt, getLog as mathLog, raiseTo as mathRaise } from \"../core/utils\";\nimport dateUtils from \"../../core/utils/date\";\nimport { isDefined, isString } from \"../../core/utils/type\";\nimport { adjust, sign } from \"../../core/utils/math\";\nimport { extend } from \"../../core/utils/extend\";\nvar convertDateUnitToMilliseconds = dateUtils.convertDateUnitToMilliseconds;\nvar dateToMilliseconds = dateUtils.dateToMilliseconds;\nvar math = Math;\nvar mathAbs = math.abs;\nvar mathFloor = math.floor;\nvar mathCeil = math.ceil;\nvar mathPow = math.pow;\nvar NUMBER_MULTIPLIERS = [1, 2, 2.5, 5];\nvar LOGARITHMIC_MULTIPLIERS = [1, 2, 3, 5];\nvar DATETIME_MULTIPLIERS = {\n  millisecond: [1, 2, 5, 10, 25, 50, 100, 250, 500],\n  second: [1, 2, 3, 5, 10, 15, 20, 30],\n  minute: [1, 2, 3, 5, 10, 15, 20, 30],\n  hour: [1, 2, 3, 4, 6, 8, 12],\n  day: [1, 2],\n  week: [1, 2],\n  month: [1, 2, 3, 6]\n};\nvar DATETIME_MULTIPLIERS_WITH_BIG_WEEKEND = extend({}, DATETIME_MULTIPLIERS, {\n  day: [1]\n});\nvar DATETIME_MINOR_MULTIPLIERS = {\n  millisecond: [1, 2, 5, 10, 25, 50, 100, 250, 500],\n  second: [1, 2, 3, 5, 10, 15, 20, 30],\n  minute: [1, 2, 3, 5, 10, 15, 20, 30],\n  hour: [1, 2, 3, 4, 6, 8, 12],\n  day: [1, 2, 3, 7, 14],\n  month: [1, 2, 3, 6]\n};\nvar MINOR_DELIMITERS = [2, 4, 5, 8, 10];\nvar VISIBILITY_DELIMITER = 3;\nvar MINUTE = 6e4;\n\nfunction dummyGenerator(options) {\n  return function (data, screenDelta, tickInterval, forceTickInterval) {\n    var count = mathFloor(screenDelta / options.axisDivisionFactor);\n    count = count < 1 ? 1 : count;\n    var interval = screenDelta / count;\n    return {\n      ticks: interval > 0 ? Array.apply(null, new Array(count + 1)).map((_, i) => interval * i) : [],\n      tickInterval: interval\n    };\n  };\n}\n\nfunction discreteGenerator(options) {\n  return function (data, screenDelta, tickInterval, forceTickInterval) {\n    var categories = getCategoriesInfo(data.categories, data.min, data.max).categories;\n    return {\n      ticks: categories,\n      tickInterval: mathCeil(categories.length * options.axisDivisionFactor / screenDelta)\n    };\n  };\n}\n\nvar getValue = value => value;\n\nvar getLogValue = (base, allowNegatives, linearThreshold) => value => getLog(value, base, allowNegatives, linearThreshold);\n\nvar raiseTo = (base, allowNegatives, linearThreshold) => value => raiseToExt(value, base, allowNegatives, linearThreshold);\n\nvar mathRaiseTo = base => value => mathRaise(value, base);\n\nvar logAbsValue = base => value => 0 === value ? 0 : mathLog(mathAbs(value), base);\n\nvar correctValueByInterval = (post, round, getValue) => (value, interval) => adjust(post(round(adjust(getValue(value) / interval)) * interval));\n\nfunction correctMinValueByEndOnTick(floorFunc, ceilFunc, resolveEndOnTick, endOnTick) {\n  if (isDefined(endOnTick)) {\n    return endOnTick ? floorFunc : ceilFunc;\n  }\n\n  return function (value, interval, businessViewInfo, forceEndOnTick) {\n    var floorTickValue = floorFunc(value, interval);\n\n    if (value - floorTickValue === 0 || !isDefined(businessViewInfo) || resolveEndOnTick(value, floorTickValue, interval, businessViewInfo) || forceEndOnTick) {\n      return floorTickValue;\n    }\n\n    return ceilFunc(value, interval);\n  };\n}\n\nfunction resolveEndOnTick(curValue, tickValue, interval, businessViewInfo) {\n  var prevTickDataDiff = interval - mathAbs(tickValue - curValue);\n  var intervalCount = math.max(mathCeil(businessViewInfo.businessDelta / interval), 2);\n  var businessRatio = businessViewInfo.screenDelta / (intervalCount * interval);\n  var potentialTickScreenDiff = math.round(businessRatio * prevTickDataDiff);\n  var delimiterFactor = getLog(businessRatio * interval / businessViewInfo.axisDivisionFactor, 2) + 1;\n  var delimiterMultiplier = (businessViewInfo.isSpacedMargin ? 2 : 1) * delimiterFactor;\n  var screenDelimiter = math.round(VISIBILITY_DELIMITER * delimiterMultiplier);\n  return businessViewInfo.businessDelta > businessViewInfo.interval && potentialTickScreenDiff >= screenDelimiter;\n}\n\nfunction resolveEndOnTickLog(base) {\n  return function (curValue, tickValue, interval, businessViewInfo) {\n    return resolveEndOnTick(getLog(curValue, base), getLog(tickValue, base), interval, businessViewInfo);\n  };\n}\n\nfunction resolveEndOnTickDate(curValue, tickValue, interval, businessViewInfo) {\n  return resolveEndOnTick(curValue.valueOf(), tickValue.valueOf(), dateToMilliseconds(interval), businessViewInfo);\n}\n\nfunction getBusinessDelta(data, breaks) {\n  var spacing = 0;\n\n  if (breaks) {\n    spacing = breaks.reduce((prev, item) => prev + (item.to - item.from), 0);\n  }\n\n  return mathAbs(data.max - data.min - spacing);\n}\n\nfunction getBusinessDeltaLog(base, allowNegatives, linearThreshold) {\n  var getLog = getLogValue(base, allowNegatives, linearThreshold);\n  return function (data, breaks) {\n    var spacing = 0;\n\n    if (breaks) {\n      spacing = breaks.reduce((prev, item) => prev + mathAbs(getLog(item.to / item.from)), 0);\n    }\n\n    return mathCeil(mathAbs(getLog(data.max) - getLog(data.min)) - spacing);\n  };\n}\n\nfunction getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor, addTickCount) {\n  var count = screenDelta / axisDivisionFactor - (addTickCount || 0);\n  count = count < 1 ? 1 : count;\n  return businessDelta / count;\n}\n\nfunction getMultiplierFactor(interval, factorDelta) {\n  return mathPow(10, mathFloor(getLog(interval, 10)) + (factorDelta || 0));\n}\n\nfunction calculateTickInterval(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, addTickCount, _, minTickInterval) {\n  var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor, addTickCount);\n  var result = 1;\n  var onlyIntegers = false === allowDecimals;\n\n  if (!forceTickInterval || !tickInterval) {\n    if (interval >= 1 || !onlyIntegers && interval > 0) {\n      result = adjustInterval(interval, multipliers, onlyIntegers);\n    }\n\n    if (!tickInterval || !forceTickInterval && tickInterval < result) {\n      tickInterval = result;\n    }\n  }\n\n  if (!forceTickInterval && minTickInterval) {\n    minTickInterval = adjustInterval(minTickInterval, multipliers, onlyIntegers);\n\n    if (minTickInterval > tickInterval) {\n      tickInterval = minTickInterval;\n    }\n  }\n\n  return tickInterval;\n}\n\nfunction adjustInterval(interval, multipliers, onlyIntegers) {\n  var factor = getMultiplierFactor(interval, -1);\n  var result = 1;\n  multipliers = multipliers || NUMBER_MULTIPLIERS;\n\n  if (interval > 0) {\n    interval /= factor;\n    result = multipliers.concat(10 * multipliers[0]).map(m => 10 * m).reduce((r, m) => {\n      if (.1 === factor && onlyIntegers && 25 === m) {\n        return r;\n      }\n\n      return r < interval ? m : r;\n    }, 0);\n    result = adjust(result * factor, factor);\n  }\n\n  return result;\n}\n\nfunction calculateMinorTickInterval(businessDelta, screenDelta, tickInterval, axisDivisionFactor) {\n  var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor);\n  return tickInterval || MINOR_DELIMITERS.reduce((r, d) => {\n    var cur = businessDelta / d;\n    return cur >= interval ? cur : r;\n  }, 0);\n}\n\nfunction getCalculateTickIntervalLog(skipCalculationLimits) {\n  return function (businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, _, __, minTickInterval) {\n    var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor);\n    var result = 0;\n    var adjustInterval = getAdjustIntervalLog(skipCalculationLimits);\n\n    if (!forceTickInterval || !tickInterval) {\n      if (interval > 0) {\n        result = adjustInterval(interval, multipliers);\n      }\n\n      if (!tickInterval || !forceTickInterval && tickInterval < result) {\n        tickInterval = result;\n      }\n    }\n\n    if (!forceTickInterval && minTickInterval) {\n      minTickInterval = adjustInterval(minTickInterval, multipliers);\n\n      if (minTickInterval > tickInterval) {\n        tickInterval = minTickInterval;\n      }\n    }\n\n    return tickInterval;\n  };\n}\n\nfunction getAdjustIntervalLog(skipCalculationLimits) {\n  return function (interval, multipliers) {\n    var factor = getMultiplierFactor(interval);\n    multipliers = multipliers || LOGARITHMIC_MULTIPLIERS;\n\n    if (!skipCalculationLimits && factor < 1) {\n      factor = 1;\n    }\n\n    return multipliers.concat(10 * multipliers[0]).reduce((r, m) => r < interval ? m * factor : r, 0);\n  };\n}\n\nfunction getDataTimeMultipliers(gapSize) {\n  if (gapSize && gapSize > 2) {\n    return DATETIME_MULTIPLIERS_WITH_BIG_WEEKEND;\n  } else {\n    return DATETIME_MULTIPLIERS;\n  }\n}\n\nfunction numbersReducer(interval, key) {\n  return function (r, m) {\n    if (!r && interval <= convertDateUnitToMilliseconds(key, m)) {\n      r = {};\n      r[key + \"s\"] = m;\n    }\n\n    return r;\n  };\n}\n\nfunction yearsReducer(interval, factor) {\n  return function (r, m) {\n    var years = factor * m;\n\n    if (!r && interval <= convertDateUnitToMilliseconds(\"year\", years) && 2.5 !== years) {\n      r = {\n        years: years\n      };\n    }\n\n    return r;\n  };\n}\n\nfunction calculateTickIntervalDateTime(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, addTickCount, gapSize, minTickInterval) {\n  if (!forceTickInterval || !tickInterval) {\n    var result = adjustIntervalDateTime(getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor), multipliers, null, gapSize);\n\n    if (!tickInterval || !forceTickInterval && dateToMilliseconds(tickInterval) <= dateToMilliseconds(result)) {\n      tickInterval = result;\n    }\n  }\n\n  if (!forceTickInterval && minTickInterval) {\n    minTickInterval = adjustIntervalDateTime(minTickInterval, multipliers, null, gapSize);\n\n    if (dateToMilliseconds(minTickInterval) > dateToMilliseconds(tickInterval)) {\n      tickInterval = minTickInterval;\n    }\n  }\n\n  return tickInterval;\n}\n\nfunction adjustIntervalDateTime(interval, multipliers, _, gapSize) {\n  var result;\n  multipliers = multipliers || getDataTimeMultipliers(gapSize);\n\n  for (var key in multipliers) {\n    result = multipliers[key].reduce(numbersReducer(interval, key), result);\n\n    if (result) {\n      break;\n    }\n  }\n\n  if (!result) {\n    for (var factor = 1;; factor *= 10) {\n      result = NUMBER_MULTIPLIERS.reduce(yearsReducer(interval, factor), result);\n\n      if (result) {\n        break;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction calculateMinorTickIntervalDateTime(businessDelta, screenDelta, tickInterval, axisDivisionFactor) {\n  return calculateTickIntervalDateTime(businessDelta, screenDelta, tickInterval, true, axisDivisionFactor, DATETIME_MINOR_MULTIPLIERS);\n}\n\nfunction getTickIntervalByCustomTicks(getValue, postProcess) {\n  return ticks => ticks ? postProcess(mathAbs(adjust(getValue(ticks[1]) - getValue(ticks[0])))) || void 0 : void 0;\n}\n\nfunction addInterval(value, interval, isNegative) {\n  return dateUtils.addInterval(value, interval, isNegative);\n}\n\nfunction addIntervalLog(log, raise) {\n  return (value, interval, isNegative) => raise(addInterval(log(value), interval, isNegative));\n}\n\nfunction addIntervalDate(value, interval, isNegative) {\n  return addInterval(value, interval, isNegative);\n}\n\nfunction addIntervalWithBreaks(addInterval, breaks, correctValue) {\n  breaks = breaks.filter(b => !b.gapSize);\n  return function (value, interval, isNegative) {\n    var breakSize;\n    value = addInterval(value, interval, isNegative);\n\n    if (!breaks.every(item => {\n      if (value >= addInterval(item.from, interval) && addInterval(value, interval) < item.to) {\n        breakSize = item.to - item.from - 2 * (addInterval(item.from, interval) - item.from);\n      }\n\n      return !breakSize;\n    })) {\n      value = correctValue(addInterval(value, breakSize), interval);\n    }\n\n    return value;\n  };\n}\n\nfunction calculateTicks(addInterval, correctMinValue, adjustInterval, resolveEndOnTick) {\n  return function (data, tickInterval, endOnTick, gaps, breaks, businessDelta, screenDelta, axisDivisionFactor, generateExtraTick) {\n    var correctTickValue = correctTickValueOnGapSize(addInterval, gaps);\n    var min = data.min;\n    var max = data.max;\n    var businessViewInfo = {\n      screenDelta: screenDelta,\n      businessDelta: businessDelta,\n      axisDivisionFactor: axisDivisionFactor,\n      isSpacedMargin: data.isSpacedMargin,\n      interval: tickInterval\n    };\n    var cur = correctMinValue(min, tickInterval, businessViewInfo);\n    var ticks = [];\n\n    if (null !== breaks && void 0 !== breaks && breaks.length) {\n      addInterval = addIntervalWithBreaks(addInterval, breaks, correctMinValue);\n    }\n\n    if (cur > max) {\n      cur = correctMinValue(min, adjustInterval(businessDelta / 2), businessViewInfo);\n\n      if (cur > max) {\n        endOnTick = true;\n        cur = correctMinValue(min, tickInterval, businessViewInfo, endOnTick);\n      }\n    }\n\n    cur = correctTickValue(cur);\n    var prev;\n\n    while (cur < max && cur !== prev || generateExtraTick && cur <= max) {\n      ticks.push(cur);\n      prev = cur;\n      cur = correctTickValue(addInterval(cur, tickInterval));\n    }\n\n    if (endOnTick || cur - max === 0 || !isDefined(endOnTick) && resolveEndOnTick(max, cur, tickInterval, businessViewInfo)) {\n      ticks.push(cur);\n    }\n\n    return ticks;\n  };\n}\n\nfunction calculateMinorTicks(updateTickInterval, addInterval, correctMinValue, correctTickValue, ceil) {\n  return function (min, max, majorTicks, minorTickInterval, tickInterval, breaks, maxCount) {\n    var factor = tickInterval / minorTickInterval;\n    var lastMajor = majorTicks[majorTicks.length - 1];\n    var firstMajor = majorTicks[0];\n    var tickBalance = maxCount - 1;\n\n    if (null !== breaks && void 0 !== breaks && breaks.length) {\n      addInterval = addIntervalWithBreaks(addInterval, breaks, correctMinValue);\n    }\n\n    minorTickInterval = updateTickInterval(minorTickInterval, firstMajor, firstMajor, factor);\n\n    if (0 === minorTickInterval) {\n      return [];\n    }\n\n    var cur = correctTickValue(correctMinValue(min, tickInterval, min), minorTickInterval);\n    minorTickInterval = updateTickInterval(minorTickInterval, firstMajor, cur, factor);\n    var ticks = [];\n\n    while (cur < firstMajor && (!tickBalance || tickBalance > 0)) {\n      cur >= min && ticks.push(cur);\n      tickBalance--;\n      cur = addInterval(cur, minorTickInterval);\n    }\n\n    var middleTicks = majorTicks.reduce((r, tick) => {\n      tickBalance = maxCount - 1;\n\n      if (null === r.prevTick) {\n        r.prevTick = tick;\n        return r;\n      }\n\n      minorTickInterval = updateTickInterval(minorTickInterval, tick, r.prevTick, factor);\n      var cur = correctTickValue(r.prevTick, minorTickInterval);\n\n      while (cur < tick && (!tickBalance || tickBalance > 0)) {\n        cur !== r.prevTick && r.minors.push(cur);\n        tickBalance--;\n        cur = addInterval(cur, minorTickInterval);\n      }\n\n      r.prevTick = tick;\n      return r;\n    }, {\n      prevTick: null,\n      minors: []\n    });\n    ticks = ticks.concat(middleTicks.minors);\n    var maxValue = ceil(max, tickInterval, min);\n    minorTickInterval = updateTickInterval(minorTickInterval, maxValue, maxValue, factor);\n    cur = correctTickValue(lastMajor, minorTickInterval);\n    var prev;\n\n    while (cur < max && cur !== prev) {\n      ticks.push(cur);\n      prev = cur;\n      cur = addInterval(cur, minorTickInterval);\n    }\n\n    if (lastMajor - max !== 0 && cur - max === 0) {\n      ticks.push(cur);\n    }\n\n    return ticks;\n  };\n}\n\nfunction filterTicks(ticks, breaks) {\n  if (breaks.length) {\n    var result = breaks.reduce((result, b) => {\n      var tmpTicks = [];\n      var i;\n\n      for (i = result[1]; i < ticks.length; i++) {\n        var tickValue = ticks[i];\n\n        if (tickValue < b.from) {\n          tmpTicks.push(tickValue);\n        }\n\n        if (tickValue >= b.to) {\n          break;\n        }\n      }\n\n      return [result[0].concat(tmpTicks), i];\n    }, [[], 0]);\n    return result[0].concat(ticks.slice(result[1]));\n  }\n\n  return ticks;\n}\n\nfunction correctTickValueOnGapSize(addInterval, breaks) {\n  return function (value) {\n    var gapSize;\n\n    if (!breaks.every(item => {\n      if (value >= item.from && value < item.to) {\n        gapSize = item.gapSize;\n      }\n\n      return !gapSize;\n    })) {\n      value = addInterval(value, gapSize);\n    }\n\n    return value;\n  };\n}\n\nfunction generator(options, getBusinessDelta, calculateTickInterval, calculateMinorTickInterval, getMajorTickIntervalByCustomTicks, getMinorTickIntervalByCustomTicks, convertTickInterval, calculateTicks, calculateMinorTicks, processScaleBreaks) {\n  function correctUserTickInterval(tickInterval, businessDelta, limit) {\n    if (tickInterval && businessDelta / convertTickInterval(tickInterval) >= limit + 1) {\n      options.incidentOccurred(\"W2003\");\n      tickInterval = void 0;\n    }\n\n    return tickInterval;\n  }\n\n  return function (data, screenDelta, tickInterval, forceTickInterval, customTicks, minorTickInterval, minorTickCount, breaks) {\n    customTicks = customTicks || {};\n    var businessDelta = getBusinessDelta(data, breaks);\n\n    var result = function (customTicks) {\n      return {\n        tickInterval: getMajorTickIntervalByCustomTicks(customTicks.majors),\n        ticks: customTicks.majors || [],\n        minorTickInterval: getMinorTickIntervalByCustomTicks(customTicks.minors),\n        minorTicks: customTicks.minors || []\n      };\n    }(customTicks);\n\n    if (!isNaN(businessDelta)) {\n      if (0 === businessDelta && !customTicks.majors) {\n        result.ticks = [data.min];\n      } else {\n        result = function (ticks, data, businessDelta, screenDelta, tickInterval, forceTickInterval, customTicks, breaks) {\n          if (customTicks.majors) {\n            ticks.breaks = breaks;\n            return ticks;\n          }\n\n          var gaps = breaks.filter(b => b.gapSize);\n          var majorTicks;\n          tickInterval = options.skipCalculationLimits ? tickInterval : correctUserTickInterval(tickInterval, businessDelta, screenDelta);\n          tickInterval = calculateTickInterval(businessDelta, screenDelta, tickInterval, forceTickInterval, options.axisDivisionFactor, options.numberMultipliers, options.allowDecimals, breaks.length, gaps[0] && gaps[0].gapSize.days, options.minTickInterval);\n\n          if (!options.skipTickGeneration) {\n            majorTicks = calculateTicks(data, tickInterval, options.endOnTick, gaps, breaks, businessDelta, screenDelta, options.axisDivisionFactor, options.generateExtraTick);\n            breaks = processScaleBreaks(breaks, majorTicks, tickInterval);\n            majorTicks = filterTicks(majorTicks, breaks);\n            ticks.breaks = breaks;\n            ticks.ticks = ticks.ticks.concat(majorTicks);\n          }\n\n          ticks.tickInterval = tickInterval;\n          return ticks;\n        }(result, data, businessDelta, screenDelta, tickInterval, forceTickInterval, customTicks, breaks || []);\n\n        if (!options.skipTickGeneration && businessDelta > 0) {\n          result = function (ticks, data, businessDelta, screenDelta, minorTickInterval, minorTickCount, customTicks) {\n            if (!options.calculateMinors) {\n              return ticks;\n            }\n\n            if (customTicks.minors) {\n              return ticks;\n            }\n\n            var minorBusinessDelta = convertTickInterval(ticks.tickInterval);\n            var minorScreenDelta = screenDelta * minorBusinessDelta / businessDelta;\n            var breaks = ticks.breaks;\n\n            if (!minorTickInterval && minorTickCount) {\n              minorTickInterval = getMinorTickIntervalByCustomTicks([minorBusinessDelta / (minorTickCount + 1), minorBusinessDelta / (minorTickCount + 1) * 2]);\n            } else {\n              minorTickCount = void 0;\n            }\n\n            minorTickInterval = correctUserTickInterval(minorTickInterval, minorBusinessDelta, minorScreenDelta);\n            minorTickInterval = calculateMinorTickInterval(minorBusinessDelta, minorScreenDelta, minorTickInterval, options.minorAxisDivisionFactor);\n            ticks.minorTicks = filterTicks(ticks.minorTicks.concat(calculateMinorTicks(data.min, data.max, ticks.ticks, minorTickInterval, ticks.tickInterval, breaks, minorTickCount)), breaks);\n            ticks.minorTickInterval = minorTickInterval;\n            return ticks;\n          }(result, data, businessDelta, screenDelta, minorTickInterval, minorTickCount, customTicks);\n        }\n      }\n    }\n\n    return result;\n  };\n}\n\nfunction getBaseTick(breakValue, _ref, interval, getValue) {\n  var [tick, insideTick] = _ref;\n\n  if (!isDefined(tick) || mathAbs(getValue(breakValue) - getValue(tick)) / interval > .25) {\n    if (isDefined(insideTick) && mathAbs(getValue(insideTick) - getValue(tick)) / interval < 2) {\n      tick = insideTick;\n    } else if (!isDefined(tick)) {\n      tick = breakValue;\n    }\n  }\n\n  return tick;\n}\n\nfunction getScaleBreaksProcessor(convertTickInterval, getValue, addCorrection) {\n  return function (breaks, ticks, tickInterval) {\n    var interval = convertTickInterval(tickInterval);\n    var correction = .5 * interval;\n    return breaks.reduce((result, b) => {\n      var breakTicks = ticks.filter(tick => tick <= b.from);\n      var from = addCorrection(getBaseTick(b.from, [].concat(breakTicks[breakTicks.length - 1], ticks[breakTicks.length]), interval, getValue), correction);\n      breakTicks = ticks.filter(tick => tick >= b.to);\n      var to = addCorrection(getBaseTick(b.to, [].concat(breakTicks[0], ticks[ticks.length - breakTicks.length - 1]), interval, getValue), -correction);\n\n      if (getValue(to) - getValue(from) < interval && !b.gapSize) {\n        return result;\n      }\n\n      if (b.gapSize) {\n        return result.concat([b]);\n      }\n\n      return result.concat([{\n        from: from,\n        to: to,\n        cumulativeWidth: b.cumulativeWidth\n      }]);\n    }, []);\n  };\n}\n\nfunction numericGenerator(options) {\n  var floor = correctValueByInterval(getValue, mathFloor, getValue);\n  var ceil = correctValueByInterval(getValue, mathCeil, getValue);\n  var calculateTickIntervalByCustomTicks = getTickIntervalByCustomTicks(getValue, getValue);\n  return generator(options, getBusinessDelta, calculateTickInterval, calculateMinorTickInterval, calculateTickIntervalByCustomTicks, calculateTickIntervalByCustomTicks, getValue, calculateTicks(addInterval, correctMinValueByEndOnTick(floor, ceil, resolveEndOnTick, options.endOnTick), adjustInterval, resolveEndOnTick), calculateMinorTicks(getValue, addInterval, floor, addInterval, getValue), getScaleBreaksProcessor(getValue, getValue, (value, correction) => value + correction));\n}\n\nvar correctValueByIntervalLog = (post, getRound, getValue) => (value, interval) => sign(value) * adjust(post(getRound(value)(adjust(getValue(value) / interval)) * interval));\n\nfunction logarithmicGenerator(options) {\n  var base = options.logBase;\n  var raise = raiseTo(base, options.allowNegatives, options.linearThreshold);\n  var log = getLogValue(base, options.allowNegatives, options.linearThreshold);\n  var absLog = logAbsValue(base);\n  var absRaise = mathRaiseTo(base);\n  var floor = correctValueByIntervalLog(absRaise, value => value < 0 ? mathCeil : mathFloor, absLog);\n  var ceil = correctValueByIntervalLog(absRaise, value => value < 0 ? mathFloor : mathCeil, absLog);\n  var ceilNumber = correctValueByInterval(getValue, mathCeil, getValue);\n  return generator(options, getBusinessDeltaLog(base, options.allowNegatives, options.linearThreshold), getCalculateTickIntervalLog(options.skipCalculationLimits), calculateMinorTickInterval, getTickIntervalByCustomTicks(log, getValue), getTickIntervalByCustomTicks(getValue, getValue), getValue, calculateTicks(addIntervalLog(log, raise), correctMinValueByEndOnTick(floor, ceil, resolveEndOnTickLog(base), options.endOnTick), getAdjustIntervalLog(options.skipCalculationLimits), resolveEndOnTickLog(base)), calculateMinorTicks((_, tick, prevTick, factor) => Math.max(Math.abs(tick), Math.abs(prevTick)) / factor, addInterval, floor, ceilNumber, ceil), getScaleBreaksProcessor(getValue, log, (value, correction) => raise(log(value) + correction)));\n}\n\nfunction dateGenerator(options) {\n  function floor(value, interval) {\n    var floorNumber = correctValueByInterval(getValue, mathFloor, getValue);\n    var intervalObject = isString(interval) ? dateUtils.getDateIntervalByString(interval.toLowerCase()) : interval;\n    var divider = dateToMilliseconds(interval);\n\n    if (intervalObject.days % 7 === 0 || interval.quarters) {\n      intervalObject = adjustIntervalDateTime(divider);\n    }\n\n    var correctDateWithUnitBeginning = v => dateUtils.correctDateWithUnitBeginning(v, intervalObject, null, options.firstDayOfWeek);\n\n    var floorAtStartDate = v => new Date(mathFloor((v.getTime() - v.getTimezoneOffset() * MINUTE) / divider) * divider + v.getTimezoneOffset() * MINUTE);\n\n    value = correctDateWithUnitBeginning(value);\n\n    if (\"years\" in intervalObject) {\n      value.setFullYear(floorNumber(value.getFullYear(), intervalObject.years));\n    } else if (\"quarters\" in intervalObject) {\n      value = correctDateWithUnitBeginning(floorAtStartDate(value));\n    } else if (\"months\" in intervalObject) {\n      value.setMonth(floorNumber(value.getMonth(), intervalObject.months));\n    } else if (\"weeks\" in intervalObject || \"days\" in intervalObject) {\n      value = correctDateWithUnitBeginning(floorAtStartDate(value));\n    } else if (\"hours\" in intervalObject) {\n      value.setHours(floorNumber(value.getHours(), intervalObject.hours));\n    } else if (\"minutes\" in intervalObject) {\n      value.setMinutes(floorNumber(value.getMinutes(), intervalObject.minutes));\n    } else if (\"seconds\" in intervalObject) {\n      value.setSeconds(floorNumber(value.getSeconds(), intervalObject.seconds));\n    } else if (\"milliseconds\" in intervalObject) {\n      value = floorAtStartDate(value);\n    }\n\n    return value;\n  }\n\n  var calculateTickIntervalByCustomTicks = getTickIntervalByCustomTicks(getValue, dateUtils.convertMillisecondsToDateUnits);\n  return generator(options, getBusinessDelta, calculateTickIntervalDateTime, calculateMinorTickIntervalDateTime, calculateTickIntervalByCustomTicks, calculateTickIntervalByCustomTicks, dateToMilliseconds, calculateTicks(addIntervalDate, correctMinValueByEndOnTick(floor, function (value, interval) {\n    var newValue = floor(value, interval);\n\n    while (value - newValue > 0) {\n      newValue = addIntervalDate(newValue, interval);\n    }\n\n    return newValue;\n  }, resolveEndOnTickDate, options.endOnTick), adjustIntervalDateTime, resolveEndOnTickDate), calculateMinorTicks(getValue, addIntervalDate, floor, addIntervalDate, getValue), getScaleBreaksProcessor(dateToMilliseconds, getValue, (value, correction) => new Date(value.getTime() + correction)));\n}\n\nexport var tickGenerator = function (options) {\n  var result;\n\n  if (options.rangeIsEmpty) {\n    result = dummyGenerator(options);\n  } else if (\"discrete\" === options.axisType) {\n    result = discreteGenerator(options);\n  } else if (\"logarithmic\" === options.axisType) {\n    result = logarithmicGenerator(options);\n  } else if (\"datetime\" === options.dataType) {\n    result = dateGenerator(options);\n  } else {\n    result = numericGenerator(options);\n  }\n\n  return result;\n};","map":{"version":3,"names":["getLogExt","getLog","getCategoriesInfo","raiseToExt","mathLog","raiseTo","mathRaise","dateUtils","isDefined","isString","adjust","sign","extend","convertDateUnitToMilliseconds","dateToMilliseconds","math","Math","mathAbs","abs","mathFloor","floor","mathCeil","ceil","mathPow","pow","NUMBER_MULTIPLIERS","LOGARITHMIC_MULTIPLIERS","DATETIME_MULTIPLIERS","millisecond","second","minute","hour","day","week","month","DATETIME_MULTIPLIERS_WITH_BIG_WEEKEND","DATETIME_MINOR_MULTIPLIERS","MINOR_DELIMITERS","VISIBILITY_DELIMITER","MINUTE","dummyGenerator","options","data","screenDelta","tickInterval","forceTickInterval","count","axisDivisionFactor","interval","ticks","Array","apply","map","_","i","discreteGenerator","categories","min","max","length","getValue","value","getLogValue","base","allowNegatives","linearThreshold","mathRaiseTo","logAbsValue","correctValueByInterval","post","round","correctMinValueByEndOnTick","floorFunc","ceilFunc","resolveEndOnTick","endOnTick","businessViewInfo","forceEndOnTick","floorTickValue","curValue","tickValue","prevTickDataDiff","intervalCount","businessDelta","businessRatio","potentialTickScreenDiff","delimiterFactor","delimiterMultiplier","isSpacedMargin","screenDelimiter","resolveEndOnTickLog","resolveEndOnTickDate","valueOf","getBusinessDelta","breaks","spacing","reduce","prev","item","to","from","getBusinessDeltaLog","getIntervalByFactor","addTickCount","getMultiplierFactor","factorDelta","calculateTickInterval","multipliers","allowDecimals","minTickInterval","result","onlyIntegers","adjustInterval","factor","concat","m","r","calculateMinorTickInterval","d","cur","getCalculateTickIntervalLog","skipCalculationLimits","__","getAdjustIntervalLog","getDataTimeMultipliers","gapSize","numbersReducer","key","yearsReducer","years","calculateTickIntervalDateTime","adjustIntervalDateTime","calculateMinorTickIntervalDateTime","getTickIntervalByCustomTicks","postProcess","addInterval","isNegative","addIntervalLog","log","raise","addIntervalDate","addIntervalWithBreaks","correctValue","filter","b","breakSize","every","calculateTicks","correctMinValue","gaps","generateExtraTick","correctTickValue","correctTickValueOnGapSize","push","calculateMinorTicks","updateTickInterval","majorTicks","minorTickInterval","maxCount","lastMajor","firstMajor","tickBalance","middleTicks","tick","prevTick","minors","maxValue","filterTicks","tmpTicks","slice","generator","getMajorTickIntervalByCustomTicks","getMinorTickIntervalByCustomTicks","convertTickInterval","processScaleBreaks","correctUserTickInterval","limit","incidentOccurred","customTicks","minorTickCount","majors","minorTicks","isNaN","numberMultipliers","days","skipTickGeneration","calculateMinors","minorBusinessDelta","minorScreenDelta","minorAxisDivisionFactor","getBaseTick","breakValue","_ref","insideTick","getScaleBreaksProcessor","addCorrection","correction","breakTicks","cumulativeWidth","numericGenerator","calculateTickIntervalByCustomTicks","correctValueByIntervalLog","getRound","logarithmicGenerator","logBase","absLog","absRaise","ceilNumber","dateGenerator","floorNumber","intervalObject","getDateIntervalByString","toLowerCase","divider","quarters","correctDateWithUnitBeginning","v","firstDayOfWeek","floorAtStartDate","Date","getTime","getTimezoneOffset","setFullYear","getFullYear","setMonth","getMonth","months","setHours","getHours","hours","setMinutes","getMinutes","minutes","setSeconds","getSeconds","seconds","convertMillisecondsToDateUnits","newValue","tickGenerator","rangeIsEmpty","axisType","dataType"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/axes/tick_generator.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/axes/tick_generator.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getLogExt as getLog,\r\n    getCategoriesInfo,\r\n    raiseToExt,\r\n    getLog as mathLog,\r\n    raiseTo as mathRaise\r\n} from \"../core/utils\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    adjust,\r\n    sign\r\n} from \"../../core/utils/math\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar convertDateUnitToMilliseconds = dateUtils.convertDateUnitToMilliseconds;\r\nvar dateToMilliseconds = dateUtils.dateToMilliseconds;\r\nvar math = Math;\r\nvar mathAbs = math.abs;\r\nvar mathFloor = math.floor;\r\nvar mathCeil = math.ceil;\r\nvar mathPow = math.pow;\r\nvar NUMBER_MULTIPLIERS = [1, 2, 2.5, 5];\r\nvar LOGARITHMIC_MULTIPLIERS = [1, 2, 3, 5];\r\nvar DATETIME_MULTIPLIERS = {\r\n    millisecond: [1, 2, 5, 10, 25, 50, 100, 250, 500],\r\n    second: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    minute: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    hour: [1, 2, 3, 4, 6, 8, 12],\r\n    day: [1, 2],\r\n    week: [1, 2],\r\n    month: [1, 2, 3, 6]\r\n};\r\nvar DATETIME_MULTIPLIERS_WITH_BIG_WEEKEND = extend({}, DATETIME_MULTIPLIERS, {\r\n    day: [1]\r\n});\r\nvar DATETIME_MINOR_MULTIPLIERS = {\r\n    millisecond: [1, 2, 5, 10, 25, 50, 100, 250, 500],\r\n    second: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    minute: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    hour: [1, 2, 3, 4, 6, 8, 12],\r\n    day: [1, 2, 3, 7, 14],\r\n    month: [1, 2, 3, 6]\r\n};\r\nvar MINOR_DELIMITERS = [2, 4, 5, 8, 10];\r\nvar VISIBILITY_DELIMITER = 3;\r\nvar MINUTE = 6e4;\r\n\r\nfunction dummyGenerator(options) {\r\n    return function(data, screenDelta, tickInterval, forceTickInterval) {\r\n        var count = mathFloor(screenDelta / options.axisDivisionFactor);\r\n        count = count < 1 ? 1 : count;\r\n        var interval = screenDelta / count;\r\n        return {\r\n            ticks: interval > 0 ? Array.apply(null, new Array(count + 1)).map((_, i) => interval * i) : [],\r\n            tickInterval: interval\r\n        }\r\n    }\r\n}\r\n\r\nfunction discreteGenerator(options) {\r\n    return function(data, screenDelta, tickInterval, forceTickInterval) {\r\n        var categories = getCategoriesInfo(data.categories, data.min, data.max).categories;\r\n        return {\r\n            ticks: categories,\r\n            tickInterval: mathCeil(categories.length * options.axisDivisionFactor / screenDelta)\r\n        }\r\n    }\r\n}\r\nvar getValue = value => value;\r\nvar getLogValue = (base, allowNegatives, linearThreshold) => value => getLog(value, base, allowNegatives, linearThreshold);\r\nvar raiseTo = (base, allowNegatives, linearThreshold) => value => raiseToExt(value, base, allowNegatives, linearThreshold);\r\nvar mathRaiseTo = base => value => mathRaise(value, base);\r\nvar logAbsValue = base => value => 0 === value ? 0 : mathLog(mathAbs(value), base);\r\nvar correctValueByInterval = (post, round, getValue) => (value, interval) => adjust(post(round(adjust(getValue(value) / interval)) * interval));\r\n\r\nfunction correctMinValueByEndOnTick(floorFunc, ceilFunc, resolveEndOnTick, endOnTick) {\r\n    if (isDefined(endOnTick)) {\r\n        return endOnTick ? floorFunc : ceilFunc\r\n    }\r\n    return function(value, interval, businessViewInfo, forceEndOnTick) {\r\n        var floorTickValue = floorFunc(value, interval);\r\n        if (value - floorTickValue === 0 || !isDefined(businessViewInfo) || resolveEndOnTick(value, floorTickValue, interval, businessViewInfo) || forceEndOnTick) {\r\n            return floorTickValue\r\n        }\r\n        return ceilFunc(value, interval)\r\n    }\r\n}\r\n\r\nfunction resolveEndOnTick(curValue, tickValue, interval, businessViewInfo) {\r\n    var prevTickDataDiff = interval - mathAbs(tickValue - curValue);\r\n    var intervalCount = math.max(mathCeil(businessViewInfo.businessDelta / interval), 2);\r\n    var businessRatio = businessViewInfo.screenDelta / (intervalCount * interval);\r\n    var potentialTickScreenDiff = math.round(businessRatio * prevTickDataDiff);\r\n    var delimiterFactor = getLog(businessRatio * interval / businessViewInfo.axisDivisionFactor, 2) + 1;\r\n    var delimiterMultiplier = (businessViewInfo.isSpacedMargin ? 2 : 1) * delimiterFactor;\r\n    var screenDelimiter = math.round(VISIBILITY_DELIMITER * delimiterMultiplier);\r\n    return businessViewInfo.businessDelta > businessViewInfo.interval && potentialTickScreenDiff >= screenDelimiter\r\n}\r\n\r\nfunction resolveEndOnTickLog(base) {\r\n    return function(curValue, tickValue, interval, businessViewInfo) {\r\n        return resolveEndOnTick(getLog(curValue, base), getLog(tickValue, base), interval, businessViewInfo)\r\n    }\r\n}\r\n\r\nfunction resolveEndOnTickDate(curValue, tickValue, interval, businessViewInfo) {\r\n    return resolveEndOnTick(curValue.valueOf(), tickValue.valueOf(), dateToMilliseconds(interval), businessViewInfo)\r\n}\r\n\r\nfunction getBusinessDelta(data, breaks) {\r\n    var spacing = 0;\r\n    if (breaks) {\r\n        spacing = breaks.reduce((prev, item) => prev + (item.to - item.from), 0)\r\n    }\r\n    return mathAbs(data.max - data.min - spacing)\r\n}\r\n\r\nfunction getBusinessDeltaLog(base, allowNegatives, linearThreshold) {\r\n    var getLog = getLogValue(base, allowNegatives, linearThreshold);\r\n    return function(data, breaks) {\r\n        var spacing = 0;\r\n        if (breaks) {\r\n            spacing = breaks.reduce((prev, item) => prev + mathAbs(getLog(item.to / item.from)), 0)\r\n        }\r\n        return mathCeil(mathAbs(getLog(data.max) - getLog(data.min)) - spacing)\r\n    }\r\n}\r\n\r\nfunction getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor, addTickCount) {\r\n    var count = screenDelta / axisDivisionFactor - (addTickCount || 0);\r\n    count = count < 1 ? 1 : count;\r\n    return businessDelta / count\r\n}\r\n\r\nfunction getMultiplierFactor(interval, factorDelta) {\r\n    return mathPow(10, mathFloor(getLog(interval, 10)) + (factorDelta || 0))\r\n}\r\n\r\nfunction calculateTickInterval(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, addTickCount, _, minTickInterval) {\r\n    var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor, addTickCount);\r\n    var result = 1;\r\n    var onlyIntegers = false === allowDecimals;\r\n    if (!forceTickInterval || !tickInterval) {\r\n        if (interval >= 1 || !onlyIntegers && interval > 0) {\r\n            result = adjustInterval(interval, multipliers, onlyIntegers)\r\n        }\r\n        if (!tickInterval || !forceTickInterval && tickInterval < result) {\r\n            tickInterval = result\r\n        }\r\n    }\r\n    if (!forceTickInterval && minTickInterval) {\r\n        minTickInterval = adjustInterval(minTickInterval, multipliers, onlyIntegers);\r\n        if (minTickInterval > tickInterval) {\r\n            tickInterval = minTickInterval\r\n        }\r\n    }\r\n    return tickInterval\r\n}\r\n\r\nfunction adjustInterval(interval, multipliers, onlyIntegers) {\r\n    var factor = getMultiplierFactor(interval, -1);\r\n    var result = 1;\r\n    multipliers = multipliers || NUMBER_MULTIPLIERS;\r\n    if (interval > 0) {\r\n        interval /= factor;\r\n        result = multipliers.concat(10 * multipliers[0]).map(m => 10 * m).reduce((r, m) => {\r\n            if (.1 === factor && onlyIntegers && 25 === m) {\r\n                return r\r\n            }\r\n            return r < interval ? m : r\r\n        }, 0);\r\n        result = adjust(result * factor, factor)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction calculateMinorTickInterval(businessDelta, screenDelta, tickInterval, axisDivisionFactor) {\r\n    var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor);\r\n    return tickInterval || MINOR_DELIMITERS.reduce((r, d) => {\r\n        var cur = businessDelta / d;\r\n        return cur >= interval ? cur : r\r\n    }, 0)\r\n}\r\n\r\nfunction getCalculateTickIntervalLog(skipCalculationLimits) {\r\n    return function(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, _, __, minTickInterval) {\r\n        var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor);\r\n        var result = 0;\r\n        var adjustInterval = getAdjustIntervalLog(skipCalculationLimits);\r\n        if (!forceTickInterval || !tickInterval) {\r\n            if (interval > 0) {\r\n                result = adjustInterval(interval, multipliers)\r\n            }\r\n            if (!tickInterval || !forceTickInterval && tickInterval < result) {\r\n                tickInterval = result\r\n            }\r\n        }\r\n        if (!forceTickInterval && minTickInterval) {\r\n            minTickInterval = adjustInterval(minTickInterval, multipliers);\r\n            if (minTickInterval > tickInterval) {\r\n                tickInterval = minTickInterval\r\n            }\r\n        }\r\n        return tickInterval\r\n    }\r\n}\r\n\r\nfunction getAdjustIntervalLog(skipCalculationLimits) {\r\n    return function(interval, multipliers) {\r\n        var factor = getMultiplierFactor(interval);\r\n        multipliers = multipliers || LOGARITHMIC_MULTIPLIERS;\r\n        if (!skipCalculationLimits && factor < 1) {\r\n            factor = 1\r\n        }\r\n        return multipliers.concat(10 * multipliers[0]).reduce((r, m) => r < interval ? m * factor : r, 0)\r\n    }\r\n}\r\n\r\nfunction getDataTimeMultipliers(gapSize) {\r\n    if (gapSize && gapSize > 2) {\r\n        return DATETIME_MULTIPLIERS_WITH_BIG_WEEKEND\r\n    } else {\r\n        return DATETIME_MULTIPLIERS\r\n    }\r\n}\r\n\r\nfunction numbersReducer(interval, key) {\r\n    return function(r, m) {\r\n        if (!r && interval <= convertDateUnitToMilliseconds(key, m)) {\r\n            r = {};\r\n            r[key + \"s\"] = m\r\n        }\r\n        return r\r\n    }\r\n}\r\n\r\nfunction yearsReducer(interval, factor) {\r\n    return function(r, m) {\r\n        var years = factor * m;\r\n        if (!r && interval <= convertDateUnitToMilliseconds(\"year\", years) && 2.5 !== years) {\r\n            r = {\r\n                years: years\r\n            }\r\n        }\r\n        return r\r\n    }\r\n}\r\n\r\nfunction calculateTickIntervalDateTime(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, addTickCount, gapSize, minTickInterval) {\r\n    if (!forceTickInterval || !tickInterval) {\r\n        var result = adjustIntervalDateTime(getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor), multipliers, null, gapSize);\r\n        if (!tickInterval || !forceTickInterval && dateToMilliseconds(tickInterval) <= dateToMilliseconds(result)) {\r\n            tickInterval = result\r\n        }\r\n    }\r\n    if (!forceTickInterval && minTickInterval) {\r\n        minTickInterval = adjustIntervalDateTime(minTickInterval, multipliers, null, gapSize);\r\n        if (dateToMilliseconds(minTickInterval) > dateToMilliseconds(tickInterval)) {\r\n            tickInterval = minTickInterval\r\n        }\r\n    }\r\n    return tickInterval\r\n}\r\n\r\nfunction adjustIntervalDateTime(interval, multipliers, _, gapSize) {\r\n    var result;\r\n    multipliers = multipliers || getDataTimeMultipliers(gapSize);\r\n    for (var key in multipliers) {\r\n        result = multipliers[key].reduce(numbersReducer(interval, key), result);\r\n        if (result) {\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        for (var factor = 1;; factor *= 10) {\r\n            result = NUMBER_MULTIPLIERS.reduce(yearsReducer(interval, factor), result);\r\n            if (result) {\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction calculateMinorTickIntervalDateTime(businessDelta, screenDelta, tickInterval, axisDivisionFactor) {\r\n    return calculateTickIntervalDateTime(businessDelta, screenDelta, tickInterval, true, axisDivisionFactor, DATETIME_MINOR_MULTIPLIERS)\r\n}\r\n\r\nfunction getTickIntervalByCustomTicks(getValue, postProcess) {\r\n    return ticks => ticks ? postProcess(mathAbs(adjust(getValue(ticks[1]) - getValue(ticks[0])))) || void 0 : void 0\r\n}\r\n\r\nfunction addInterval(value, interval, isNegative) {\r\n    return dateUtils.addInterval(value, interval, isNegative)\r\n}\r\n\r\nfunction addIntervalLog(log, raise) {\r\n    return (value, interval, isNegative) => raise(addInterval(log(value), interval, isNegative))\r\n}\r\n\r\nfunction addIntervalDate(value, interval, isNegative) {\r\n    return addInterval(value, interval, isNegative)\r\n}\r\n\r\nfunction addIntervalWithBreaks(addInterval, breaks, correctValue) {\r\n    breaks = breaks.filter(b => !b.gapSize);\r\n    return function(value, interval, isNegative) {\r\n        var breakSize;\r\n        value = addInterval(value, interval, isNegative);\r\n        if (!breaks.every(item => {\r\n                if (value >= addInterval(item.from, interval) && addInterval(value, interval) < item.to) {\r\n                    breakSize = item.to - item.from - 2 * (addInterval(item.from, interval) - item.from)\r\n                }\r\n                return !breakSize\r\n            })) {\r\n            value = correctValue(addInterval(value, breakSize), interval)\r\n        }\r\n        return value\r\n    }\r\n}\r\n\r\nfunction calculateTicks(addInterval, correctMinValue, adjustInterval, resolveEndOnTick) {\r\n    return function(data, tickInterval, endOnTick, gaps, breaks, businessDelta, screenDelta, axisDivisionFactor, generateExtraTick) {\r\n        var correctTickValue = correctTickValueOnGapSize(addInterval, gaps);\r\n        var min = data.min;\r\n        var max = data.max;\r\n        var businessViewInfo = {\r\n            screenDelta: screenDelta,\r\n            businessDelta: businessDelta,\r\n            axisDivisionFactor: axisDivisionFactor,\r\n            isSpacedMargin: data.isSpacedMargin,\r\n            interval: tickInterval\r\n        };\r\n        var cur = correctMinValue(min, tickInterval, businessViewInfo);\r\n        var ticks = [];\r\n        if (null !== breaks && void 0 !== breaks && breaks.length) {\r\n            addInterval = addIntervalWithBreaks(addInterval, breaks, correctMinValue)\r\n        }\r\n        if (cur > max) {\r\n            cur = correctMinValue(min, adjustInterval(businessDelta / 2), businessViewInfo);\r\n            if (cur > max) {\r\n                endOnTick = true;\r\n                cur = correctMinValue(min, tickInterval, businessViewInfo, endOnTick)\r\n            }\r\n        }\r\n        cur = correctTickValue(cur);\r\n        var prev;\r\n        while (cur < max && cur !== prev || generateExtraTick && cur <= max) {\r\n            ticks.push(cur);\r\n            prev = cur;\r\n            cur = correctTickValue(addInterval(cur, tickInterval))\r\n        }\r\n        if (endOnTick || cur - max === 0 || !isDefined(endOnTick) && resolveEndOnTick(max, cur, tickInterval, businessViewInfo)) {\r\n            ticks.push(cur)\r\n        }\r\n        return ticks\r\n    }\r\n}\r\n\r\nfunction calculateMinorTicks(updateTickInterval, addInterval, correctMinValue, correctTickValue, ceil) {\r\n    return function(min, max, majorTicks, minorTickInterval, tickInterval, breaks, maxCount) {\r\n        var factor = tickInterval / minorTickInterval;\r\n        var lastMajor = majorTicks[majorTicks.length - 1];\r\n        var firstMajor = majorTicks[0];\r\n        var tickBalance = maxCount - 1;\r\n        if (null !== breaks && void 0 !== breaks && breaks.length) {\r\n            addInterval = addIntervalWithBreaks(addInterval, breaks, correctMinValue)\r\n        }\r\n        minorTickInterval = updateTickInterval(minorTickInterval, firstMajor, firstMajor, factor);\r\n        if (0 === minorTickInterval) {\r\n            return []\r\n        }\r\n        var cur = correctTickValue(correctMinValue(min, tickInterval, min), minorTickInterval);\r\n        minorTickInterval = updateTickInterval(minorTickInterval, firstMajor, cur, factor);\r\n        var ticks = [];\r\n        while (cur < firstMajor && (!tickBalance || tickBalance > 0)) {\r\n            cur >= min && ticks.push(cur);\r\n            tickBalance--;\r\n            cur = addInterval(cur, minorTickInterval)\r\n        }\r\n        var middleTicks = majorTicks.reduce((r, tick) => {\r\n            tickBalance = maxCount - 1;\r\n            if (null === r.prevTick) {\r\n                r.prevTick = tick;\r\n                return r\r\n            }\r\n            minorTickInterval = updateTickInterval(minorTickInterval, tick, r.prevTick, factor);\r\n            var cur = correctTickValue(r.prevTick, minorTickInterval);\r\n            while (cur < tick && (!tickBalance || tickBalance > 0)) {\r\n                cur !== r.prevTick && r.minors.push(cur);\r\n                tickBalance--;\r\n                cur = addInterval(cur, minorTickInterval)\r\n            }\r\n            r.prevTick = tick;\r\n            return r\r\n        }, {\r\n            prevTick: null,\r\n            minors: []\r\n        });\r\n        ticks = ticks.concat(middleTicks.minors);\r\n        var maxValue = ceil(max, tickInterval, min);\r\n        minorTickInterval = updateTickInterval(minorTickInterval, maxValue, maxValue, factor);\r\n        cur = correctTickValue(lastMajor, minorTickInterval);\r\n        var prev;\r\n        while (cur < max && cur !== prev) {\r\n            ticks.push(cur);\r\n            prev = cur;\r\n            cur = addInterval(cur, minorTickInterval)\r\n        }\r\n        if (lastMajor - max !== 0 && cur - max === 0) {\r\n            ticks.push(cur)\r\n        }\r\n        return ticks\r\n    }\r\n}\r\n\r\nfunction filterTicks(ticks, breaks) {\r\n    if (breaks.length) {\r\n        var result = breaks.reduce((result, b) => {\r\n            var tmpTicks = [];\r\n            var i;\r\n            for (i = result[1]; i < ticks.length; i++) {\r\n                var tickValue = ticks[i];\r\n                if (tickValue < b.from) {\r\n                    tmpTicks.push(tickValue)\r\n                }\r\n                if (tickValue >= b.to) {\r\n                    break\r\n                }\r\n            }\r\n            return [result[0].concat(tmpTicks), i]\r\n        }, [\r\n            [], 0\r\n        ]);\r\n        return result[0].concat(ticks.slice(result[1]))\r\n    }\r\n    return ticks\r\n}\r\n\r\nfunction correctTickValueOnGapSize(addInterval, breaks) {\r\n    return function(value) {\r\n        var gapSize;\r\n        if (!breaks.every(item => {\r\n                if (value >= item.from && value < item.to) {\r\n                    gapSize = item.gapSize\r\n                }\r\n                return !gapSize\r\n            })) {\r\n            value = addInterval(value, gapSize)\r\n        }\r\n        return value\r\n    }\r\n}\r\n\r\nfunction generator(options, getBusinessDelta, calculateTickInterval, calculateMinorTickInterval, getMajorTickIntervalByCustomTicks, getMinorTickIntervalByCustomTicks, convertTickInterval, calculateTicks, calculateMinorTicks, processScaleBreaks) {\r\n    function correctUserTickInterval(tickInterval, businessDelta, limit) {\r\n        if (tickInterval && businessDelta / convertTickInterval(tickInterval) >= limit + 1) {\r\n            options.incidentOccurred(\"W2003\");\r\n            tickInterval = void 0\r\n        }\r\n        return tickInterval\r\n    }\r\n    return function(data, screenDelta, tickInterval, forceTickInterval, customTicks, minorTickInterval, minorTickCount, breaks) {\r\n        customTicks = customTicks || {};\r\n        var businessDelta = getBusinessDelta(data, breaks);\r\n        var result = function(customTicks) {\r\n            return {\r\n                tickInterval: getMajorTickIntervalByCustomTicks(customTicks.majors),\r\n                ticks: customTicks.majors || [],\r\n                minorTickInterval: getMinorTickIntervalByCustomTicks(customTicks.minors),\r\n                minorTicks: customTicks.minors || []\r\n            }\r\n        }(customTicks);\r\n        if (!isNaN(businessDelta)) {\r\n            if (0 === businessDelta && !customTicks.majors) {\r\n                result.ticks = [data.min]\r\n            } else {\r\n                result = function(ticks, data, businessDelta, screenDelta, tickInterval, forceTickInterval, customTicks, breaks) {\r\n                    if (customTicks.majors) {\r\n                        ticks.breaks = breaks;\r\n                        return ticks\r\n                    }\r\n                    var gaps = breaks.filter(b => b.gapSize);\r\n                    var majorTicks;\r\n                    tickInterval = options.skipCalculationLimits ? tickInterval : correctUserTickInterval(tickInterval, businessDelta, screenDelta);\r\n                    tickInterval = calculateTickInterval(businessDelta, screenDelta, tickInterval, forceTickInterval, options.axisDivisionFactor, options.numberMultipliers, options.allowDecimals, breaks.length, gaps[0] && gaps[0].gapSize.days, options.minTickInterval);\r\n                    if (!options.skipTickGeneration) {\r\n                        majorTicks = calculateTicks(data, tickInterval, options.endOnTick, gaps, breaks, businessDelta, screenDelta, options.axisDivisionFactor, options.generateExtraTick);\r\n                        breaks = processScaleBreaks(breaks, majorTicks, tickInterval);\r\n                        majorTicks = filterTicks(majorTicks, breaks);\r\n                        ticks.breaks = breaks;\r\n                        ticks.ticks = ticks.ticks.concat(majorTicks)\r\n                    }\r\n                    ticks.tickInterval = tickInterval;\r\n                    return ticks\r\n                }(result, data, businessDelta, screenDelta, tickInterval, forceTickInterval, customTicks, breaks || []);\r\n                if (!options.skipTickGeneration && businessDelta > 0) {\r\n                    result = function(ticks, data, businessDelta, screenDelta, minorTickInterval, minorTickCount, customTicks) {\r\n                        if (!options.calculateMinors) {\r\n                            return ticks\r\n                        }\r\n                        if (customTicks.minors) {\r\n                            return ticks\r\n                        }\r\n                        var minorBusinessDelta = convertTickInterval(ticks.tickInterval);\r\n                        var minorScreenDelta = screenDelta * minorBusinessDelta / businessDelta;\r\n                        var breaks = ticks.breaks;\r\n                        if (!minorTickInterval && minorTickCount) {\r\n                            minorTickInterval = getMinorTickIntervalByCustomTicks([minorBusinessDelta / (minorTickCount + 1), minorBusinessDelta / (minorTickCount + 1) * 2])\r\n                        } else {\r\n                            minorTickCount = void 0\r\n                        }\r\n                        minorTickInterval = correctUserTickInterval(minorTickInterval, minorBusinessDelta, minorScreenDelta);\r\n                        minorTickInterval = calculateMinorTickInterval(minorBusinessDelta, minorScreenDelta, minorTickInterval, options.minorAxisDivisionFactor);\r\n                        ticks.minorTicks = filterTicks(ticks.minorTicks.concat(calculateMinorTicks(data.min, data.max, ticks.ticks, minorTickInterval, ticks.tickInterval, breaks, minorTickCount)), breaks);\r\n                        ticks.minorTickInterval = minorTickInterval;\r\n                        return ticks\r\n                    }(result, data, businessDelta, screenDelta, minorTickInterval, minorTickCount, customTicks)\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n}\r\n\r\nfunction getBaseTick(breakValue, _ref, interval, getValue) {\r\n    var [tick, insideTick] = _ref;\r\n    if (!isDefined(tick) || mathAbs(getValue(breakValue) - getValue(tick)) / interval > .25) {\r\n        if (isDefined(insideTick) && mathAbs(getValue(insideTick) - getValue(tick)) / interval < 2) {\r\n            tick = insideTick\r\n        } else if (!isDefined(tick)) {\r\n            tick = breakValue\r\n        }\r\n    }\r\n    return tick\r\n}\r\n\r\nfunction getScaleBreaksProcessor(convertTickInterval, getValue, addCorrection) {\r\n    return function(breaks, ticks, tickInterval) {\r\n        var interval = convertTickInterval(tickInterval);\r\n        var correction = .5 * interval;\r\n        return breaks.reduce((result, b) => {\r\n            var breakTicks = ticks.filter(tick => tick <= b.from);\r\n            var from = addCorrection(getBaseTick(b.from, [].concat(breakTicks[breakTicks.length - 1], ticks[breakTicks.length]), interval, getValue), correction);\r\n            breakTicks = ticks.filter(tick => tick >= b.to);\r\n            var to = addCorrection(getBaseTick(b.to, [].concat(breakTicks[0], ticks[ticks.length - breakTicks.length - 1]), interval, getValue), -correction);\r\n            if (getValue(to) - getValue(from) < interval && !b.gapSize) {\r\n                return result\r\n            }\r\n            if (b.gapSize) {\r\n                return result.concat([b])\r\n            }\r\n            return result.concat([{\r\n                from: from,\r\n                to: to,\r\n                cumulativeWidth: b.cumulativeWidth\r\n            }])\r\n        }, [])\r\n    }\r\n}\r\n\r\nfunction numericGenerator(options) {\r\n    var floor = correctValueByInterval(getValue, mathFloor, getValue);\r\n    var ceil = correctValueByInterval(getValue, mathCeil, getValue);\r\n    var calculateTickIntervalByCustomTicks = getTickIntervalByCustomTicks(getValue, getValue);\r\n    return generator(options, getBusinessDelta, calculateTickInterval, calculateMinorTickInterval, calculateTickIntervalByCustomTicks, calculateTickIntervalByCustomTicks, getValue, calculateTicks(addInterval, correctMinValueByEndOnTick(floor, ceil, resolveEndOnTick, options.endOnTick), adjustInterval, resolveEndOnTick), calculateMinorTicks(getValue, addInterval, floor, addInterval, getValue), getScaleBreaksProcessor(getValue, getValue, (value, correction) => value + correction))\r\n}\r\nvar correctValueByIntervalLog = (post, getRound, getValue) => (value, interval) => sign(value) * adjust(post(getRound(value)(adjust(getValue(value) / interval)) * interval));\r\n\r\nfunction logarithmicGenerator(options) {\r\n    var base = options.logBase;\r\n    var raise = raiseTo(base, options.allowNegatives, options.linearThreshold);\r\n    var log = getLogValue(base, options.allowNegatives, options.linearThreshold);\r\n    var absLog = logAbsValue(base);\r\n    var absRaise = mathRaiseTo(base);\r\n    var floor = correctValueByIntervalLog(absRaise, value => value < 0 ? mathCeil : mathFloor, absLog);\r\n    var ceil = correctValueByIntervalLog(absRaise, value => value < 0 ? mathFloor : mathCeil, absLog);\r\n    var ceilNumber = correctValueByInterval(getValue, mathCeil, getValue);\r\n    return generator(options, getBusinessDeltaLog(base, options.allowNegatives, options.linearThreshold), getCalculateTickIntervalLog(options.skipCalculationLimits), calculateMinorTickInterval, getTickIntervalByCustomTicks(log, getValue), getTickIntervalByCustomTicks(getValue, getValue), getValue, calculateTicks(addIntervalLog(log, raise), correctMinValueByEndOnTick(floor, ceil, resolveEndOnTickLog(base), options.endOnTick), getAdjustIntervalLog(options.skipCalculationLimits), resolveEndOnTickLog(base)), calculateMinorTicks((_, tick, prevTick, factor) => Math.max(Math.abs(tick), Math.abs(prevTick)) / factor, addInterval, floor, ceilNumber, ceil), getScaleBreaksProcessor(getValue, log, (value, correction) => raise(log(value) + correction)))\r\n}\r\n\r\nfunction dateGenerator(options) {\r\n    function floor(value, interval) {\r\n        var floorNumber = correctValueByInterval(getValue, mathFloor, getValue);\r\n        var intervalObject = isString(interval) ? dateUtils.getDateIntervalByString(interval.toLowerCase()) : interval;\r\n        var divider = dateToMilliseconds(interval);\r\n        if (intervalObject.days % 7 === 0 || interval.quarters) {\r\n            intervalObject = adjustIntervalDateTime(divider)\r\n        }\r\n        var correctDateWithUnitBeginning = v => dateUtils.correctDateWithUnitBeginning(v, intervalObject, null, options.firstDayOfWeek);\r\n        var floorAtStartDate = v => new Date(mathFloor((v.getTime() - v.getTimezoneOffset() * MINUTE) / divider) * divider + v.getTimezoneOffset() * MINUTE);\r\n        value = correctDateWithUnitBeginning(value);\r\n        if (\"years\" in intervalObject) {\r\n            value.setFullYear(floorNumber(value.getFullYear(), intervalObject.years))\r\n        } else if (\"quarters\" in intervalObject) {\r\n            value = correctDateWithUnitBeginning(floorAtStartDate(value))\r\n        } else if (\"months\" in intervalObject) {\r\n            value.setMonth(floorNumber(value.getMonth(), intervalObject.months))\r\n        } else if (\"weeks\" in intervalObject || \"days\" in intervalObject) {\r\n            value = correctDateWithUnitBeginning(floorAtStartDate(value))\r\n        } else if (\"hours\" in intervalObject) {\r\n            value.setHours(floorNumber(value.getHours(), intervalObject.hours))\r\n        } else if (\"minutes\" in intervalObject) {\r\n            value.setMinutes(floorNumber(value.getMinutes(), intervalObject.minutes))\r\n        } else if (\"seconds\" in intervalObject) {\r\n            value.setSeconds(floorNumber(value.getSeconds(), intervalObject.seconds))\r\n        } else if (\"milliseconds\" in intervalObject) {\r\n            value = floorAtStartDate(value)\r\n        }\r\n        return value\r\n    }\r\n    var calculateTickIntervalByCustomTicks = getTickIntervalByCustomTicks(getValue, dateUtils.convertMillisecondsToDateUnits);\r\n    return generator(options, getBusinessDelta, calculateTickIntervalDateTime, calculateMinorTickIntervalDateTime, calculateTickIntervalByCustomTicks, calculateTickIntervalByCustomTicks, dateToMilliseconds, calculateTicks(addIntervalDate, correctMinValueByEndOnTick(floor, (function(value, interval) {\r\n        var newValue = floor(value, interval);\r\n        while (value - newValue > 0) {\r\n            newValue = addIntervalDate(newValue, interval)\r\n        }\r\n        return newValue\r\n    }), resolveEndOnTickDate, options.endOnTick), adjustIntervalDateTime, resolveEndOnTickDate), calculateMinorTicks(getValue, addIntervalDate, floor, addIntervalDate, getValue), getScaleBreaksProcessor(dateToMilliseconds, getValue, (value, correction) => new Date(value.getTime() + correction)))\r\n}\r\nexport var tickGenerator = function(options) {\r\n    var result;\r\n    if (options.rangeIsEmpty) {\r\n        result = dummyGenerator(options)\r\n    } else if (\"discrete\" === options.axisType) {\r\n        result = discreteGenerator(options)\r\n    } else if (\"logarithmic\" === options.axisType) {\r\n        result = logarithmicGenerator(options)\r\n    } else if (\"datetime\" === options.dataType) {\r\n        result = dateGenerator(options)\r\n    } else {\r\n        result = numericGenerator(options)\r\n    }\r\n    return result\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
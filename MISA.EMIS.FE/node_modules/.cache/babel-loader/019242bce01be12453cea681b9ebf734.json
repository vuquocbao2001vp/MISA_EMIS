{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/sortable.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight, getOuterHeight, getOuterWidth, getWidth } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport registerComponent from \"../core/component_registrator\";\nimport { extend } from \"../core/utils/extend\";\nimport Draggable from \"./draggable\";\nimport { getPublicElement } from \"../core/element\";\nimport { getWindow } from \"../core/utils/window\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport { resetPosition } from \"../animation/translator\";\nimport fx from \"../animation/fx\";\nimport { Deferred } from \"../core/utils/deferred\";\nvar window = getWindow();\nvar SORTABLE = \"dxSortable\";\nvar PLACEHOLDER_CLASS = \"placeholder\";\nvar CLONE_CLASS = \"clone\";\n\nvar isElementVisible = itemElement => $(itemElement).is(\":visible\");\n\nvar animate = (element, config) => {\n  var _config$to, _config$to2;\n\n  if (!element) {\n    return;\n  }\n\n  var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\n  var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\n  element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\n  element.style.transition = fx.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing);\n};\n\nvar stopAnimation = element => {\n  if (!element) {\n    return;\n  }\n\n  element.style.transform = \"\";\n  element.style.transition = \"\";\n};\n\nfunction getScrollableBoundary($scrollable) {\n  var offset = $scrollable.offset();\n  var style = $scrollable[0].style;\n  var paddingLeft = parseFloat(style.paddingLeft) || 0;\n  var paddingRight = parseFloat(style.paddingRight) || 0;\n  var paddingTop = parseFloat(style.paddingTop) || 0;\n  var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\n  var height = getHeight($scrollable);\n  var left = offset.left + paddingLeft;\n  var top = offset.top + paddingTop;\n  return {\n    left: left,\n    right: left + width,\n    top: top,\n    bottom: top + height\n  };\n}\n\nvar Sortable = Draggable.inherit({\n  _init: function () {\n    this.callBase();\n    this._sourceScrollHandler = this._handleSourceScroll.bind(this);\n    this._sourceScrollableInfo = null;\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      clone: true,\n      filter: \"> *\",\n      itemOrientation: \"vertical\",\n      dropFeedbackMode: \"push\",\n      allowDropInsideItem: false,\n      allowReordering: true,\n      moveItemOnDrop: false,\n      onDragChange: null,\n      onAdd: null,\n      onRemove: null,\n      onReorder: null,\n      onPlaceholderPrepared: null,\n      animation: {\n        type: \"slide\",\n        duration: 300,\n        easing: \"ease\"\n      },\n      fromIndex: null,\n      toIndex: null,\n      dropInsideItem: false,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      offset: 0,\n      autoUpdate: false,\n      draggableElementSize: 0\n    });\n  },\n  reset: function () {\n    this.option({\n      dropInsideItem: false,\n      toIndex: null,\n      fromIndex: null,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      draggableElementSize: 0\n    });\n\n    if (this._$placeholderElement) {\n      this._$placeholderElement.remove();\n    }\n\n    this._$placeholderElement = null;\n\n    if (!this._isIndicateMode() && this._$modifiedItem) {\n      this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\n\n      this._$modifiedItem = null;\n    }\n  },\n  _getPrevVisibleItem: function (items, index) {\n    return items.slice(0, index).reverse().filter(isElementVisible)[0];\n  },\n  _dragStartHandler: function (e) {\n    this.callBase.apply(this, arguments);\n\n    if (true === e.cancel) {\n      return;\n    }\n\n    var $sourceElement = this._getSourceElement();\n\n    this._updateItemPoints();\n\n    this._subscribeToSourceScroll(e);\n\n    this.option(\"fromIndex\", this._getElementIndex($sourceElement));\n    this.option(\"fromIndexOffset\", this.option(\"offset\"));\n  },\n  _subscribeToSourceScroll: function (e) {\n    var $scrollable = this._getScrollable($(e.target));\n\n    if ($scrollable) {\n      this._sourceScrollableInfo = {\n        element: $scrollable,\n        scrollLeft: $scrollable.scrollLeft(),\n        scrollTop: $scrollable.scrollTop()\n      };\n      eventsEngine.off($scrollable, \"scroll\", this._sourceScrollHandler);\n      eventsEngine.on($scrollable, \"scroll\", this._sourceScrollHandler);\n    }\n  },\n  _unsubscribeFromSourceScroll: function () {\n    if (this._sourceScrollableInfo) {\n      eventsEngine.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\n      this._sourceScrollableInfo = null;\n    }\n  },\n  _handleSourceScroll: function (e) {\n    var sourceScrollableInfo = this._sourceScrollableInfo;\n\n    if (sourceScrollableInfo) {\n      [\"scrollLeft\", \"scrollTop\"].forEach(scrollProp => {\n        if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\n          var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\n\n          this._correctItemPoints(scrollBy);\n\n          this._movePlaceholder();\n\n          sourceScrollableInfo[scrollProp] = e.target[scrollProp];\n        }\n      });\n    }\n  },\n  _dragEnterHandler: function (e) {\n    this.callBase.apply(this, arguments);\n\n    if (this === this._getSourceDraggable()) {\n      return;\n    }\n\n    this._subscribeToSourceScroll(e);\n\n    this._updateItemPoints();\n\n    this.option(\"fromIndex\", -1);\n\n    if (!this._isIndicateMode()) {\n      var itemPoints = this.option(\"itemPoints\");\n      var lastItemPoint = itemPoints[itemPoints.length - 1];\n\n      if (lastItemPoint) {\n        var $element = this.$element();\n\n        var $sourceElement = this._getSourceElement();\n\n        var isVertical = this._isVerticalOrientation();\n\n        var sourceElementSize = isVertical ? getOuterHeight($sourceElement, true) : getOuterWidth($sourceElement, true);\n        var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\n        var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\n        var positionProp = isVertical ? \"top\" : \"left\";\n        var lastPointPosition = lastItemPoint[positionProp];\n        var elementPosition = $element.offset()[positionProp];\n        var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\n\n        if (freeSize < sourceElementSize) {\n          if (isVertical) {\n            var items = this._getItems();\n\n            var $lastItem = $(this._getPrevVisibleItem(items));\n            this._$modifiedItem = $lastItem;\n            this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\n            $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\n            var $sortable = $lastItem.closest(\".dx-sortable\");\n            var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\n            sortable && sortable.update();\n          }\n        }\n      }\n    }\n  },\n  _dragLeaveHandler: function () {\n    this.callBase.apply(this, arguments);\n\n    if (this !== this._getSourceDraggable()) {\n      this._unsubscribeFromSourceScroll();\n    }\n  },\n  dragEnter: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", -1);\n    }\n  },\n  dragLeave: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", this.option(\"fromIndex\"));\n    }\n  },\n  _allowDrop: function (event) {\n    var targetDraggable = this._getTargetDraggable();\n\n    var $targetDraggable = targetDraggable.$element();\n\n    var $scrollable = this._getScrollable($targetDraggable);\n\n    if ($scrollable) {\n      var {\n        left: left,\n        right: right,\n        top: top,\n        bottom: bottom\n      } = getScrollableBoundary($scrollable);\n      var toIndex = this.option(\"toIndex\");\n      var itemPoints = this.option(\"itemPoints\");\n      var itemPoint = null === itemPoints || void 0 === itemPoints ? void 0 : itemPoints.filter(item => item.index === toIndex)[0];\n\n      if (itemPoint && void 0 !== itemPoint.top) {\n        var isVertical = this._isVerticalOrientation();\n\n        if (isVertical) {\n          return top <= Math.ceil(itemPoint.top) && Math.floor(itemPoint.top) <= bottom;\n        } else {\n          return left <= Math.ceil(itemPoint.left) && Math.floor(itemPoint.left) <= right;\n        }\n      }\n    }\n\n    return true;\n  },\n  dragEnd: function (sourceEvent) {\n    this._unsubscribeFromSourceScroll();\n\n    var $sourceElement = this._getSourceElement();\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\n    var toIndex = this.option(\"toIndex\");\n    var event = sourceEvent.event;\n\n    var allowDrop = this._allowDrop(event);\n\n    if (null !== toIndex && toIndex >= 0 && allowDrop) {\n      var cancelAdd;\n      var cancelRemove;\n\n      if (sourceDraggable !== this) {\n        cancelAdd = this._fireAddEvent(event);\n\n        if (!cancelAdd) {\n          cancelRemove = this._fireRemoveEvent(event);\n        }\n      }\n\n      if (isSourceDraggable) {\n        resetPosition($sourceElement);\n      }\n\n      if (this.option(\"moveItemOnDrop\")) {\n        !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove);\n      }\n\n      if (sourceDraggable === this) {\n        return this._fireReorderEvent(event);\n      }\n    }\n\n    return new Deferred().resolve();\n  },\n  dragMove: function (e) {\n    var itemPoints = this.option(\"itemPoints\");\n\n    if (!itemPoints) {\n      return;\n    }\n\n    var isVertical = this._isVerticalOrientation();\n\n    var axisName = isVertical ? \"top\" : \"left\";\n    var cursorPosition = isVertical ? e.pageY : e.pageX;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var itemPoint;\n\n    for (var i = itemPoints.length - 1; i >= 0; i--) {\n      var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\n\n      if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\n        itemPoint = itemPoints[i];\n      } else {\n        break;\n      }\n    }\n\n    if (itemPoint) {\n      this._updatePlaceholderPosition(e, itemPoint);\n\n      if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\n        this._movePlaceholder();\n      }\n    }\n  },\n  _isIndicateMode: function () {\n    return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\");\n  },\n  _createPlaceholder: function () {\n    var $placeholderContainer;\n\n    if (this._isIndicateMode()) {\n      $placeholderContainer = $(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement);\n    }\n\n    this._$placeholderElement = $placeholderContainer;\n    return $placeholderContainer;\n  },\n  _getItems: function () {\n    var itemsSelector = this._getItemsSelector();\n\n    return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray();\n  },\n  _allowReordering: function () {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    return sourceDraggable !== targetDraggable || this.option(\"allowReordering\");\n  },\n  _isValidPoint: function (visibleIndex, draggableVisibleIndex, dropInsideItem) {\n    var allowDropInsideItem = this.option(\"allowDropInsideItem\");\n\n    var allowReordering = dropInsideItem || this._allowReordering();\n\n    if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\n      return false;\n    }\n\n    if (!this._isIndicateMode()) {\n      return true;\n    }\n\n    return -1 === draggableVisibleIndex || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1);\n  },\n  _getItemPoints: function () {\n    var result = [];\n    var $item;\n    var offset;\n    var itemWidth;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isVertical = this._isVerticalOrientation();\n\n    var itemElements = this._getItems();\n\n    var visibleItemElements = itemElements.filter(isElementVisible);\n    var visibleItemCount = visibleItemElements.length;\n\n    var $draggableItem = this._getDraggableElement();\n\n    var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\n\n    if (visibleItemCount) {\n      for (var i = 0; i <= visibleItemCount; i++) {\n        var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\n        var needCorrectTopPosition = isVertical && i === visibleItemCount;\n\n        if (i < visibleItemCount) {\n          $item = $(visibleItemElements[i]);\n          offset = $item.offset();\n          itemWidth = getOuterWidth($item);\n        }\n\n        result.push({\n          dropInsideItem: false,\n          left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\n          top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\n          index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\n          $item: $item,\n          width: getOuterWidth($item),\n          height: getOuterHeight($item),\n          isValid: this._isValidPoint(i, draggableVisibleIndex)\n        });\n      }\n\n      if (this.option(\"allowDropInsideItem\")) {\n        var points = result;\n        result = [];\n\n        for (var _i = 0; _i < points.length; _i++) {\n          result.push(points[_i]);\n\n          if (points[_i + 1]) {\n            result.push(extend({}, points[_i], {\n              dropInsideItem: true,\n              top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\n              left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\n              isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\n            }));\n          }\n        }\n      }\n    } else {\n      result.push({\n        dropInsideItem: false,\n        index: 0,\n        isValid: true\n      });\n    }\n\n    return result;\n  },\n  _updateItemPoints: function (forceUpdate) {\n    if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\n      this.option(\"itemPoints\", this._getItemPoints());\n    }\n  },\n  _correctItemPoints: function (scrollBy) {\n    var itemPoints = this.option(\"itemPoints\");\n\n    if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\n      var isVertical = this._isVerticalOrientation();\n\n      var positionPropName = isVertical ? \"top\" : \"left\";\n      itemPoints.forEach(itemPoint => {\n        itemPoint[positionPropName] -= scrollBy;\n      });\n    }\n  },\n  _getElementIndex: function ($itemElement) {\n    return this._getItems().indexOf($itemElement.get(0));\n  },\n  _getDragTemplateArgs: function ($element) {\n    var args = this.callBase.apply(this, arguments);\n    args.model.fromIndex = this._getElementIndex($element);\n    return args;\n  },\n  _togglePlaceholder: function (value) {\n    this._$placeholderElement && this._$placeholderElement.toggle(value);\n  },\n  _isVerticalOrientation: function () {\n    return \"vertical\" === this.option(\"itemOrientation\");\n  },\n  _normalizeToIndex: function (toIndex, dropInsideItem) {\n    var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\n\n    var fromIndex = this.option(\"fromIndex\");\n\n    if (null === toIndex) {\n      return fromIndex;\n    }\n\n    return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0);\n  },\n  _updatePlaceholderPosition: function (e, itemPoint) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\n\n    var eventArgs = extend(this._getEventArgs(e), {\n      toIndex: toIndex,\n      dropInsideItem: itemPoint.dropInsideItem\n    });\n    itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\n\n    if (eventArgs.cancel || !itemPoint.isValid) {\n      if (!itemPoint.isValid) {\n        this.option({\n          dropInsideItem: false,\n          toIndex: null\n        });\n      }\n\n      return;\n    }\n\n    this.option({\n      dropInsideItem: itemPoint.dropInsideItem,\n      toIndex: itemPoint.index\n    });\n\n    this._getAction(\"onPlaceholderPrepared\")(extend(this._getEventArgs(e), {\n      placeholderElement: getPublicElement(this._$placeholderElement),\n      dragElement: getPublicElement(sourceDraggable._$dragElement)\n    }));\n\n    this._updateItemPoints();\n  },\n  _makeWidthCorrection: function ($item, width) {\n    this._$scrollable = this._getScrollable($item);\n\n    if (this._$scrollable) {\n      var scrollableWidth = getWidth(this._$scrollable);\n      var overflowLeft = this._$scrollable.offset().left - $item.offset().left;\n      var overflowRight = getOuterWidth($item) - overflowLeft - scrollableWidth;\n\n      if (overflowLeft > 0) {\n        width -= overflowLeft;\n      }\n\n      if (overflowRight > 0) {\n        width -= overflowRight;\n      }\n    }\n\n    return width;\n  },\n  _updatePlaceholderSizes: function ($placeholderElement, itemElement) {\n    var dropInsideItem = this.option(\"dropInsideItem\");\n    var $item = $(itemElement);\n\n    var isVertical = this._isVerticalOrientation();\n\n    var width = \"\";\n    var height = \"\";\n    $placeholderElement.toggleClass(this._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\n\n    if (isVertical || dropInsideItem) {\n      width = getOuterWidth($item);\n    }\n\n    if (!isVertical || dropInsideItem) {\n      height = getOuterHeight($item);\n    }\n\n    width = this._makeWidthCorrection($item, width);\n    $placeholderElement.css({\n      width: width,\n      height: height\n    });\n  },\n  _moveItem: function ($itemElement, index, cancelRemove) {\n    var $prevTargetItemElement;\n\n    var $itemElements = this._getItems();\n\n    var $targetItemElement = $itemElements[index];\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (cancelRemove) {\n      $itemElement = $itemElement.clone();\n\n      sourceDraggable._toggleDragSourceClass(false, $itemElement);\n    }\n\n    if (!$targetItemElement) {\n      $prevTargetItemElement = $itemElements[index - 1];\n    }\n\n    this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement);\n  },\n  _moveItemCore: function ($targetItem, item, prevItem) {\n    if (!item && !prevItem) {\n      $targetItem.appendTo(this.$element());\n    } else if (prevItem) {\n      $targetItem.insertAfter($(prevItem));\n    } else {\n      $targetItem.insertBefore($(item));\n    }\n  },\n  _getDragStartArgs: function (e, $itemElement) {\n    return extend(this.callBase.apply(this, arguments), {\n      fromIndex: this._getElementIndex($itemElement)\n    });\n  },\n  _getEventArgs: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\n    return extend(this.callBase.apply(this, arguments), {\n      fromIndex: sourceDraggable.option(\"fromIndex\"),\n      toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\n      dropInsideItem: dropInsideItem\n    });\n  },\n  _optionChanged: function (args) {\n    var name = args.name;\n\n    switch (name) {\n      case \"onDragChange\":\n      case \"onPlaceholderPrepared\":\n      case \"onAdd\":\n      case \"onRemove\":\n      case \"onReorder\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n\n      case \"itemOrientation\":\n      case \"allowDropInsideItem\":\n      case \"moveItemOnDrop\":\n      case \"dropFeedbackMode\":\n      case \"itemPoints\":\n      case \"animation\":\n      case \"allowReordering\":\n      case \"fromIndexOffset\":\n      case \"offset\":\n      case \"draggableElementSize\":\n      case \"autoUpdate\":\n        break;\n\n      case \"fromIndex\":\n        [false, true].forEach(isDragSource => {\n          var fromIndex = isDragSource ? args.value : args.previousValue;\n\n          if (null !== fromIndex) {\n            var $fromElement = $(this._getItems()[fromIndex]);\n\n            this._toggleDragSourceClass(isDragSource, $fromElement);\n          }\n        });\n        break;\n\n      case \"dropInsideItem\":\n        this._optionChangedDropInsideItem(args);\n\n        break;\n\n      case \"toIndex\":\n        this._optionChangedToIndex(args);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _optionChangedDropInsideItem: function () {\n    if (this._isIndicateMode() && this._$placeholderElement) {\n      this._movePlaceholder();\n    }\n  },\n  _isPositionVisible: function (position) {\n    var $element = this.$element();\n    var scrollContainer;\n\n    if (\"hidden\" !== $element.css(\"overflow\")) {\n      scrollContainer = $element.get(0);\n    } else {\n      $element.parents().each(function () {\n        if (\"visible\" !== $(this).css(\"overflow\")) {\n          scrollContainer = this;\n          return false;\n        }\n      });\n    }\n\n    if (scrollContainer) {\n      var clientRect = getBoundingRect(scrollContainer);\n\n      var isVerticalOrientation = this._isVerticalOrientation();\n\n      var start = isVerticalOrientation ? \"top\" : \"left\";\n      var end = isVerticalOrientation ? \"bottom\" : \"right\";\n      var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\n\n      if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  _optionChangedToIndex: function (args) {\n    var toIndex = args.value;\n\n    if (this._isIndicateMode()) {\n      var showPlaceholder = null !== toIndex && toIndex >= 0;\n\n      this._togglePlaceholder(showPlaceholder);\n\n      if (showPlaceholder) {\n        this._movePlaceholder();\n      }\n    } else {\n      this._moveItems(args.previousValue, args.value, args.fullUpdate);\n    }\n  },\n  update: function () {\n    if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\n      return;\n    }\n\n    this._updateItemPoints(true);\n\n    this._updateDragSourceClass();\n\n    var toIndex = this.option(\"toIndex\");\n\n    this._optionChangedToIndex({\n      value: toIndex,\n      fullUpdate: true\n    });\n  },\n  _updateDragSourceClass: function () {\n    var fromIndex = this._getActualFromIndex();\n\n    var $fromElement = $(this._getItems()[fromIndex]);\n\n    if ($fromElement.length) {\n      this._$sourceElement = $fromElement;\n\n      this._toggleDragSourceClass(true, $fromElement);\n    }\n  },\n  _makeLeftCorrection: function (left) {\n    var $scrollable = this._$scrollable;\n\n    if ($scrollable && this._isVerticalOrientation()) {\n      var overflowLeft = $scrollable.offset().left - left;\n\n      if (overflowLeft > 0) {\n        left += overflowLeft;\n      }\n    }\n\n    return left;\n  },\n  _movePlaceholder: function () {\n    var $placeholderElement = this._$placeholderElement || this._createPlaceholder();\n\n    if (!$placeholderElement) {\n      return;\n    }\n\n    var items = this._getItems();\n\n    var toIndex = this.option(\"toIndex\");\n\n    var isVerticalOrientation = this._isVerticalOrientation();\n\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var dropInsideItem = this.option(\"dropInsideItem\");\n    var position = null;\n    var itemElement = items[toIndex];\n\n    if (itemElement) {\n      var $itemElement = $(itemElement);\n      position = $itemElement.offset();\n\n      if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\n        position.left += getOuterWidth($itemElement, true);\n      }\n    } else {\n      var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\n\n      if (prevVisibleItemElement) {\n        position = $(prevVisibleItemElement).offset();\n\n        if (isVerticalOrientation) {\n          position.top += getOuterHeight(prevVisibleItemElement, true);\n        } else if (!rtlEnabled) {\n          position.left += getOuterWidth(prevVisibleItemElement, true);\n        }\n      }\n    }\n\n    this._updatePlaceholderSizes($placeholderElement, itemElement);\n\n    if (position && !this._isPositionVisible(position)) {\n      position = null;\n    }\n\n    if (position) {\n      position.left = this._makeLeftCorrection(position.left);\n\n      this._move(position, $placeholderElement);\n    }\n\n    $placeholderElement.toggle(!!position);\n  },\n  _getPositions: function (items, elementSize, fromIndex, toIndex) {\n    var positions = [];\n\n    for (var i = 0; i < items.length; i++) {\n      var position = 0;\n\n      if (null === toIndex || null === fromIndex) {\n        positions.push(position);\n        continue;\n      }\n\n      if (-1 === fromIndex) {\n        if (i >= toIndex) {\n          position = elementSize;\n        }\n      } else if (-1 === toIndex) {\n        if (i > fromIndex) {\n          position = -elementSize;\n        }\n      } else if (fromIndex < toIndex) {\n        if (i > fromIndex && i < toIndex) {\n          position = -elementSize;\n        }\n      } else if (fromIndex > toIndex) {\n        if (i >= toIndex && i < fromIndex) {\n          position = elementSize;\n        }\n      }\n\n      positions.push(position);\n    }\n\n    return positions;\n  },\n  _getDraggableElementSize: function (isVerticalOrientation) {\n    var $draggableItem = this._getDraggableElement();\n\n    var size = this.option(\"draggableElementSize\");\n\n    if (!size) {\n      size = isVerticalOrientation ? (getOuterHeight($draggableItem) + getOuterHeight($draggableItem, true)) / 2 : (getOuterWidth($draggableItem) + getOuterWidth($draggableItem, true)) / 2;\n\n      if (!this.option(\"autoUpdate\")) {\n        this.option(\"draggableElementSize\", size);\n      }\n    }\n\n    return size;\n  },\n  _getActualFromIndex: function () {\n    var {\n      fromIndex: fromIndex,\n      fromIndexOffset: fromIndexOffset,\n      offset: offset\n    } = this.option();\n    return null == fromIndex ? null : fromIndex + fromIndexOffset - offset;\n  },\n  _moveItems: function (prevToIndex, toIndex, fullUpdate) {\n    var fromIndex = this._getActualFromIndex();\n\n    var isVerticalOrientation = this._isVerticalOrientation();\n\n    var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\n\n    var elementSize = this._getDraggableElementSize(isVerticalOrientation);\n\n    var items = this._getItems();\n\n    var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\n\n    var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\n\n    var animationConfig = this.option(\"animation\");\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    for (var i = 0; i < items.length; i++) {\n      var itemElement = items[i];\n      var prevPosition = prevPositions[i];\n      var position = positions[i];\n\n      if (null === toIndex || null === fromIndex) {\n        stopAnimation(itemElement);\n      } else if (prevPosition !== position || fullUpdate && position) {\n        animate(itemElement, extend({}, animationConfig, {\n          to: {\n            [positionPropName]: !isVerticalOrientation && rtlEnabled ? -position : position\n          }\n        }));\n      }\n    }\n  },\n  _toggleDragSourceClass: function (value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    this.callBase.apply(this, arguments);\n\n    if (!this._isIndicateMode()) {\n      $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value);\n    }\n  },\n  _dispose: function () {\n    this.reset();\n    this.callBase();\n  },\n  _fireAddEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onAdd\")(args);\n\n    return args.cancel;\n  },\n  _fireRemoveEvent: function (sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var args = this._getEventArgs(sourceEvent);\n\n    sourceDraggable._getAction(\"onRemove\")(args);\n\n    return args.cancel;\n  },\n  _fireReorderEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onReorder\")(args);\n\n    return args.promise || new Deferred().resolve();\n  }\n});\nregisterComponent(SORTABLE, Sortable);\nexport default Sortable;","map":{"version":3,"names":["getHeight","getOuterHeight","getOuterWidth","getWidth","$","eventsEngine","registerComponent","extend","Draggable","getPublicElement","getWindow","getBoundingRect","resetPosition","fx","Deferred","window","SORTABLE","PLACEHOLDER_CLASS","CLONE_CLASS","isElementVisible","itemElement","is","animate","element","config","_config$to","_config$to2","left","to","top","style","transform","concat","transition","off","duration","easing","stopAnimation","getScrollableBoundary","$scrollable","offset","paddingLeft","parseFloat","paddingRight","paddingTop","width","clientWidth","height","right","bottom","Sortable","inherit","_init","callBase","_sourceScrollHandler","_handleSourceScroll","bind","_sourceScrollableInfo","_getDefaultOptions","clone","filter","itemOrientation","dropFeedbackMode","allowDropInsideItem","allowReordering","moveItemOnDrop","onDragChange","onAdd","onRemove","onReorder","onPlaceholderPrepared","animation","type","fromIndex","toIndex","dropInsideItem","itemPoints","fromIndexOffset","autoUpdate","draggableElementSize","reset","option","_$placeholderElement","remove","_isIndicateMode","_$modifiedItem","css","_modifiedItemMargin","_getPrevVisibleItem","items","index","slice","reverse","_dragStartHandler","e","apply","arguments","cancel","$sourceElement","_getSourceElement","_updateItemPoints","_subscribeToSourceScroll","_getElementIndex","_getScrollable","target","scrollLeft","scrollTop","on","_unsubscribeFromSourceScroll","sourceScrollableInfo","forEach","scrollProp","scrollBy","_correctItemPoints","_movePlaceholder","_dragEnterHandler","_getSourceDraggable","lastItemPoint","length","$element","isVertical","_isVerticalOrientation","sourceElementSize","scrollSize","get","scrollPosition","positionProp","lastPointPosition","elementPosition","freeSize","_getItems","$lastItem","marginBottom","$sortable","closest","sortable","data","update","_dragLeaveHandler","dragEnter","_getTargetDraggable","dragLeave","_allowDrop","event","targetDraggable","$targetDraggable","itemPoint","item","Math","ceil","floor","dragEnd","sourceEvent","sourceDraggable","isSourceDraggable","NAME","allowDrop","cancelAdd","cancelRemove","_fireAddEvent","_fireRemoveEvent","_moveItem","_fireReorderEvent","resolve","dragMove","axisName","cursorPosition","pageY","pageX","rtlEnabled","i","centerPosition","_updatePlaceholderPosition","_verticalScrollHelper","isScrolling","_createPlaceholder","$placeholderContainer","addClass","_addWidgetPrefix","insertBefore","_$dragElement","itemsSelector","_getItemsSelector","_$content","find","not","toArray","_allowReordering","_isValidPoint","visibleIndex","draggableVisibleIndex","_getItemPoints","result","$item","itemWidth","itemElements","visibleItemElements","visibleItemCount","$draggableItem","_getDraggableElement","indexOf","needCorrectLeftPosition","needCorrectTopPosition","push","isValid","points","_i","forceUpdate","positionPropName","$itemElement","_getDragTemplateArgs","args","model","_togglePlaceholder","value","toggle","_normalizeToIndex","isAnotherDraggable","max","eventArgs","_getEventArgs","_getAction","placeholderElement","dragElement","_makeWidthCorrection","_$scrollable","scrollableWidth","overflowLeft","overflowRight","_updatePlaceholderSizes","$placeholderElement","toggleClass","$prevTargetItemElement","$itemElements","$targetItemElement","_toggleDragSourceClass","_moveItemCore","$targetItem","prevItem","appendTo","insertAfter","_getDragStartArgs","_optionChanged","name","_createActionByOption","isDragSource","previousValue","$fromElement","_optionChangedDropInsideItem","_optionChangedToIndex","_isPositionVisible","position","scrollContainer","parents","each","clientRect","isVerticalOrientation","start","end","pageOffset","pageYOffset","pageXOffset","showPlaceholder","_moveItems","fullUpdate","_updateDragSourceClass","_getActualFromIndex","_$sourceElement","_makeLeftCorrection","prevVisibleItemElement","_move","_getPositions","elementSize","positions","_getDraggableElementSize","size","prevToIndex","prevPositions","animationConfig","prevPosition","_dispose","promise"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/ui/sortable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/sortable.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport Draggable from \"./draggable\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport {\r\n    resetPosition\r\n} from \"../animation/translator\";\r\nimport fx from \"../animation/fx\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nvar window = getWindow();\r\nvar SORTABLE = \"dxSortable\";\r\nvar PLACEHOLDER_CLASS = \"placeholder\";\r\nvar CLONE_CLASS = \"clone\";\r\nvar isElementVisible = itemElement => $(itemElement).is(\":visible\");\r\nvar animate = (element, config) => {\r\n    var _config$to, _config$to2;\r\n    if (!element) {\r\n        return\r\n    }\r\n    var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\r\n    var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\r\n    element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\r\n    element.style.transition = fx.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing)\r\n};\r\nvar stopAnimation = element => {\r\n    if (!element) {\r\n        return\r\n    }\r\n    element.style.transform = \"\";\r\n    element.style.transition = \"\"\r\n};\r\n\r\nfunction getScrollableBoundary($scrollable) {\r\n    var offset = $scrollable.offset();\r\n    var style = $scrollable[0].style;\r\n    var paddingLeft = parseFloat(style.paddingLeft) || 0;\r\n    var paddingRight = parseFloat(style.paddingRight) || 0;\r\n    var paddingTop = parseFloat(style.paddingTop) || 0;\r\n    var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\r\n    var height = getHeight($scrollable);\r\n    var left = offset.left + paddingLeft;\r\n    var top = offset.top + paddingTop;\r\n    return {\r\n        left: left,\r\n        right: left + width,\r\n        top: top,\r\n        bottom: top + height\r\n    }\r\n}\r\nvar Sortable = Draggable.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._sourceScrollHandler = this._handleSourceScroll.bind(this);\r\n        this._sourceScrollableInfo = null\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            clone: true,\r\n            filter: \"> *\",\r\n            itemOrientation: \"vertical\",\r\n            dropFeedbackMode: \"push\",\r\n            allowDropInsideItem: false,\r\n            allowReordering: true,\r\n            moveItemOnDrop: false,\r\n            onDragChange: null,\r\n            onAdd: null,\r\n            onRemove: null,\r\n            onReorder: null,\r\n            onPlaceholderPrepared: null,\r\n            animation: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                easing: \"ease\"\r\n            },\r\n            fromIndex: null,\r\n            toIndex: null,\r\n            dropInsideItem: false,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            offset: 0,\r\n            autoUpdate: false,\r\n            draggableElementSize: 0\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.option({\r\n            dropInsideItem: false,\r\n            toIndex: null,\r\n            fromIndex: null,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            draggableElementSize: 0\r\n        });\r\n        if (this._$placeholderElement) {\r\n            this._$placeholderElement.remove()\r\n        }\r\n        this._$placeholderElement = null;\r\n        if (!this._isIndicateMode() && this._$modifiedItem) {\r\n            this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\r\n            this._$modifiedItem = null\r\n        }\r\n    },\r\n    _getPrevVisibleItem: function(items, index) {\r\n        return items.slice(0, index).reverse().filter(isElementVisible)[0]\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (true === e.cancel) {\r\n            return\r\n        }\r\n        var $sourceElement = this._getSourceElement();\r\n        this._updateItemPoints();\r\n        this._subscribeToSourceScroll(e);\r\n        this.option(\"fromIndex\", this._getElementIndex($sourceElement));\r\n        this.option(\"fromIndexOffset\", this.option(\"offset\"))\r\n    },\r\n    _subscribeToSourceScroll: function(e) {\r\n        var $scrollable = this._getScrollable($(e.target));\r\n        if ($scrollable) {\r\n            this._sourceScrollableInfo = {\r\n                element: $scrollable,\r\n                scrollLeft: $scrollable.scrollLeft(),\r\n                scrollTop: $scrollable.scrollTop()\r\n            };\r\n            eventsEngine.off($scrollable, \"scroll\", this._sourceScrollHandler);\r\n            eventsEngine.on($scrollable, \"scroll\", this._sourceScrollHandler)\r\n        }\r\n    },\r\n    _unsubscribeFromSourceScroll: function() {\r\n        if (this._sourceScrollableInfo) {\r\n            eventsEngine.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\r\n            this._sourceScrollableInfo = null\r\n        }\r\n    },\r\n    _handleSourceScroll: function(e) {\r\n        var sourceScrollableInfo = this._sourceScrollableInfo;\r\n        if (sourceScrollableInfo) {\r\n            [\"scrollLeft\", \"scrollTop\"].forEach(scrollProp => {\r\n                if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\r\n                    var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\r\n                    this._correctItemPoints(scrollBy);\r\n                    this._movePlaceholder();\r\n                    sourceScrollableInfo[scrollProp] = e.target[scrollProp]\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dragEnterHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (this === this._getSourceDraggable()) {\r\n            return\r\n        }\r\n        this._subscribeToSourceScroll(e);\r\n        this._updateItemPoints();\r\n        this.option(\"fromIndex\", -1);\r\n        if (!this._isIndicateMode()) {\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var lastItemPoint = itemPoints[itemPoints.length - 1];\r\n            if (lastItemPoint) {\r\n                var $element = this.$element();\r\n                var $sourceElement = this._getSourceElement();\r\n                var isVertical = this._isVerticalOrientation();\r\n                var sourceElementSize = isVertical ? getOuterHeight($sourceElement, true) : getOuterWidth($sourceElement, true);\r\n                var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\r\n                var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\r\n                var positionProp = isVertical ? \"top\" : \"left\";\r\n                var lastPointPosition = lastItemPoint[positionProp];\r\n                var elementPosition = $element.offset()[positionProp];\r\n                var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\r\n                if (freeSize < sourceElementSize) {\r\n                    if (isVertical) {\r\n                        var items = this._getItems();\r\n                        var $lastItem = $(this._getPrevVisibleItem(items));\r\n                        this._$modifiedItem = $lastItem;\r\n                        this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\r\n                        $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\r\n                        var $sortable = $lastItem.closest(\".dx-sortable\");\r\n                        var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\r\n                        sortable && sortable.update()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _dragLeaveHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this !== this._getSourceDraggable()) {\r\n            this._unsubscribeFromSourceScroll()\r\n        }\r\n    },\r\n    dragEnter: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", -1)\r\n        }\r\n    },\r\n    dragLeave: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", this.option(\"fromIndex\"))\r\n        }\r\n    },\r\n    _allowDrop: function(event) {\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var $targetDraggable = targetDraggable.$element();\r\n        var $scrollable = this._getScrollable($targetDraggable);\r\n        if ($scrollable) {\r\n            var {\r\n                left: left,\r\n                right: right,\r\n                top: top,\r\n                bottom: bottom\r\n            } = getScrollableBoundary($scrollable);\r\n            var toIndex = this.option(\"toIndex\");\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var itemPoint = null === itemPoints || void 0 === itemPoints ? void 0 : itemPoints.filter(item => item.index === toIndex)[0];\r\n            if (itemPoint && void 0 !== itemPoint.top) {\r\n                var isVertical = this._isVerticalOrientation();\r\n                if (isVertical) {\r\n                    return top <= Math.ceil(itemPoint.top) && Math.floor(itemPoint.top) <= bottom\r\n                } else {\r\n                    return left <= Math.ceil(itemPoint.left) && Math.floor(itemPoint.left) <= right\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    dragEnd: function(sourceEvent) {\r\n        this._unsubscribeFromSourceScroll();\r\n        var $sourceElement = this._getSourceElement();\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\r\n        var toIndex = this.option(\"toIndex\");\r\n        var event = sourceEvent.event;\r\n        var allowDrop = this._allowDrop(event);\r\n        if (null !== toIndex && toIndex >= 0 && allowDrop) {\r\n            var cancelAdd;\r\n            var cancelRemove;\r\n            if (sourceDraggable !== this) {\r\n                cancelAdd = this._fireAddEvent(event);\r\n                if (!cancelAdd) {\r\n                    cancelRemove = this._fireRemoveEvent(event)\r\n                }\r\n            }\r\n            if (isSourceDraggable) {\r\n                resetPosition($sourceElement)\r\n            }\r\n            if (this.option(\"moveItemOnDrop\")) {\r\n                !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove)\r\n            }\r\n            if (sourceDraggable === this) {\r\n                return this._fireReorderEvent(event)\r\n            }\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    dragMove: function(e) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (!itemPoints) {\r\n            return\r\n        }\r\n        var isVertical = this._isVerticalOrientation();\r\n        var axisName = isVertical ? \"top\" : \"left\";\r\n        var cursorPosition = isVertical ? e.pageY : e.pageX;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var itemPoint;\r\n        for (var i = itemPoints.length - 1; i >= 0; i--) {\r\n            var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\r\n            if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\r\n                itemPoint = itemPoints[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        if (itemPoint) {\r\n            this._updatePlaceholderPosition(e, itemPoint);\r\n            if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\r\n                this._movePlaceholder()\r\n            }\r\n        }\r\n    },\r\n    _isIndicateMode: function() {\r\n        return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\")\r\n    },\r\n    _createPlaceholder: function() {\r\n        var $placeholderContainer;\r\n        if (this._isIndicateMode()) {\r\n            $placeholderContainer = $(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement)\r\n        }\r\n        this._$placeholderElement = $placeholderContainer;\r\n        return $placeholderContainer\r\n    },\r\n    _getItems: function() {\r\n        var itemsSelector = this._getItemsSelector();\r\n        return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray()\r\n    },\r\n    _allowReordering: function() {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return sourceDraggable !== targetDraggable || this.option(\"allowReordering\")\r\n    },\r\n    _isValidPoint: function(visibleIndex, draggableVisibleIndex, dropInsideItem) {\r\n        var allowDropInsideItem = this.option(\"allowDropInsideItem\");\r\n        var allowReordering = dropInsideItem || this._allowReordering();\r\n        if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\r\n            return false\r\n        }\r\n        if (!this._isIndicateMode()) {\r\n            return true\r\n        }\r\n        return -1 === draggableVisibleIndex || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1)\r\n    },\r\n    _getItemPoints: function() {\r\n        var result = [];\r\n        var $item;\r\n        var offset;\r\n        var itemWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isVertical = this._isVerticalOrientation();\r\n        var itemElements = this._getItems();\r\n        var visibleItemElements = itemElements.filter(isElementVisible);\r\n        var visibleItemCount = visibleItemElements.length;\r\n        var $draggableItem = this._getDraggableElement();\r\n        var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\r\n        if (visibleItemCount) {\r\n            for (var i = 0; i <= visibleItemCount; i++) {\r\n                var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\r\n                var needCorrectTopPosition = isVertical && i === visibleItemCount;\r\n                if (i < visibleItemCount) {\r\n                    $item = $(visibleItemElements[i]);\r\n                    offset = $item.offset();\r\n                    itemWidth = getOuterWidth($item)\r\n                }\r\n                result.push({\r\n                    dropInsideItem: false,\r\n                    left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\r\n                    top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\r\n                    index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\r\n                    $item: $item,\r\n                    width: getOuterWidth($item),\r\n                    height: getOuterHeight($item),\r\n                    isValid: this._isValidPoint(i, draggableVisibleIndex)\r\n                })\r\n            }\r\n            if (this.option(\"allowDropInsideItem\")) {\r\n                var points = result;\r\n                result = [];\r\n                for (var _i = 0; _i < points.length; _i++) {\r\n                    result.push(points[_i]);\r\n                    if (points[_i + 1]) {\r\n                        result.push(extend({}, points[_i], {\r\n                            dropInsideItem: true,\r\n                            top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\r\n                            left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\r\n                            isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\r\n                        }))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            result.push({\r\n                dropInsideItem: false,\r\n                index: 0,\r\n                isValid: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _updateItemPoints: function(forceUpdate) {\r\n        if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\r\n            this.option(\"itemPoints\", this._getItemPoints())\r\n        }\r\n    },\r\n    _correctItemPoints: function(scrollBy) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\r\n            var isVertical = this._isVerticalOrientation();\r\n            var positionPropName = isVertical ? \"top\" : \"left\";\r\n            itemPoints.forEach(itemPoint => {\r\n                itemPoint[positionPropName] -= scrollBy\r\n            })\r\n        }\r\n    },\r\n    _getElementIndex: function($itemElement) {\r\n        return this._getItems().indexOf($itemElement.get(0))\r\n    },\r\n    _getDragTemplateArgs: function($element) {\r\n        var args = this.callBase.apply(this, arguments);\r\n        args.model.fromIndex = this._getElementIndex($element);\r\n        return args\r\n    },\r\n    _togglePlaceholder: function(value) {\r\n        this._$placeholderElement && this._$placeholderElement.toggle(value)\r\n    },\r\n    _isVerticalOrientation: function() {\r\n        return \"vertical\" === this.option(\"itemOrientation\")\r\n    },\r\n    _normalizeToIndex: function(toIndex, dropInsideItem) {\r\n        var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\r\n        var fromIndex = this.option(\"fromIndex\");\r\n        if (null === toIndex) {\r\n            return fromIndex\r\n        }\r\n        return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0)\r\n    },\r\n    _updatePlaceholderPosition: function(e, itemPoint) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\r\n        var eventArgs = extend(this._getEventArgs(e), {\r\n            toIndex: toIndex,\r\n            dropInsideItem: itemPoint.dropInsideItem\r\n        });\r\n        itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\r\n        if (eventArgs.cancel || !itemPoint.isValid) {\r\n            if (!itemPoint.isValid) {\r\n                this.option({\r\n                    dropInsideItem: false,\r\n                    toIndex: null\r\n                })\r\n            }\r\n            return\r\n        }\r\n        this.option({\r\n            dropInsideItem: itemPoint.dropInsideItem,\r\n            toIndex: itemPoint.index\r\n        });\r\n        this._getAction(\"onPlaceholderPrepared\")(extend(this._getEventArgs(e), {\r\n            placeholderElement: getPublicElement(this._$placeholderElement),\r\n            dragElement: getPublicElement(sourceDraggable._$dragElement)\r\n        }));\r\n        this._updateItemPoints()\r\n    },\r\n    _makeWidthCorrection: function($item, width) {\r\n        this._$scrollable = this._getScrollable($item);\r\n        if (this._$scrollable) {\r\n            var scrollableWidth = getWidth(this._$scrollable);\r\n            var overflowLeft = this._$scrollable.offset().left - $item.offset().left;\r\n            var overflowRight = getOuterWidth($item) - overflowLeft - scrollableWidth;\r\n            if (overflowLeft > 0) {\r\n                width -= overflowLeft\r\n            }\r\n            if (overflowRight > 0) {\r\n                width -= overflowRight\r\n            }\r\n        }\r\n        return width\r\n    },\r\n    _updatePlaceholderSizes: function($placeholderElement, itemElement) {\r\n        var dropInsideItem = this.option(\"dropInsideItem\");\r\n        var $item = $(itemElement);\r\n        var isVertical = this._isVerticalOrientation();\r\n        var width = \"\";\r\n        var height = \"\";\r\n        $placeholderElement.toggleClass(this._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\r\n        if (isVertical || dropInsideItem) {\r\n            width = getOuterWidth($item)\r\n        }\r\n        if (!isVertical || dropInsideItem) {\r\n            height = getOuterHeight($item)\r\n        }\r\n        width = this._makeWidthCorrection($item, width);\r\n        $placeholderElement.css({\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _moveItem: function($itemElement, index, cancelRemove) {\r\n        var $prevTargetItemElement;\r\n        var $itemElements = this._getItems();\r\n        var $targetItemElement = $itemElements[index];\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (cancelRemove) {\r\n            $itemElement = $itemElement.clone();\r\n            sourceDraggable._toggleDragSourceClass(false, $itemElement)\r\n        }\r\n        if (!$targetItemElement) {\r\n            $prevTargetItemElement = $itemElements[index - 1]\r\n        }\r\n        this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement)\r\n    },\r\n    _moveItemCore: function($targetItem, item, prevItem) {\r\n        if (!item && !prevItem) {\r\n            $targetItem.appendTo(this.$element())\r\n        } else if (prevItem) {\r\n            $targetItem.insertAfter($(prevItem))\r\n        } else {\r\n            $targetItem.insertBefore($(item))\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        return extend(this.callBase.apply(this, arguments), {\r\n            fromIndex: this._getElementIndex($itemElement)\r\n        })\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\r\n        return extend(this.callBase.apply(this, arguments), {\r\n            fromIndex: sourceDraggable.option(\"fromIndex\"),\r\n            toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\r\n            dropInsideItem: dropInsideItem\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragChange\":\r\n            case \"onPlaceholderPrepared\":\r\n            case \"onAdd\":\r\n            case \"onRemove\":\r\n            case \"onReorder\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"itemOrientation\":\r\n            case \"allowDropInsideItem\":\r\n            case \"moveItemOnDrop\":\r\n            case \"dropFeedbackMode\":\r\n            case \"itemPoints\":\r\n            case \"animation\":\r\n            case \"allowReordering\":\r\n            case \"fromIndexOffset\":\r\n            case \"offset\":\r\n            case \"draggableElementSize\":\r\n            case \"autoUpdate\":\r\n                break;\r\n            case \"fromIndex\":\r\n                [false, true].forEach(isDragSource => {\r\n                    var fromIndex = isDragSource ? args.value : args.previousValue;\r\n                    if (null !== fromIndex) {\r\n                        var $fromElement = $(this._getItems()[fromIndex]);\r\n                        this._toggleDragSourceClass(isDragSource, $fromElement)\r\n                    }\r\n                });\r\n                break;\r\n            case \"dropInsideItem\":\r\n                this._optionChangedDropInsideItem(args);\r\n                break;\r\n            case \"toIndex\":\r\n                this._optionChangedToIndex(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionChangedDropInsideItem: function() {\r\n        if (this._isIndicateMode() && this._$placeholderElement) {\r\n            this._movePlaceholder()\r\n        }\r\n    },\r\n    _isPositionVisible: function(position) {\r\n        var $element = this.$element();\r\n        var scrollContainer;\r\n        if (\"hidden\" !== $element.css(\"overflow\")) {\r\n            scrollContainer = $element.get(0)\r\n        } else {\r\n            $element.parents().each((function() {\r\n                if (\"visible\" !== $(this).css(\"overflow\")) {\r\n                    scrollContainer = this;\r\n                    return false\r\n                }\r\n            }))\r\n        }\r\n        if (scrollContainer) {\r\n            var clientRect = getBoundingRect(scrollContainer);\r\n            var isVerticalOrientation = this._isVerticalOrientation();\r\n            var start = isVerticalOrientation ? \"top\" : \"left\";\r\n            var end = isVerticalOrientation ? \"bottom\" : \"right\";\r\n            var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\r\n            if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _optionChangedToIndex: function(args) {\r\n        var toIndex = args.value;\r\n        if (this._isIndicateMode()) {\r\n            var showPlaceholder = null !== toIndex && toIndex >= 0;\r\n            this._togglePlaceholder(showPlaceholder);\r\n            if (showPlaceholder) {\r\n                this._movePlaceholder()\r\n            }\r\n        } else {\r\n            this._moveItems(args.previousValue, args.value, args.fullUpdate)\r\n        }\r\n    },\r\n    update: function() {\r\n        if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\r\n            return\r\n        }\r\n        this._updateItemPoints(true);\r\n        this._updateDragSourceClass();\r\n        var toIndex = this.option(\"toIndex\");\r\n        this._optionChangedToIndex({\r\n            value: toIndex,\r\n            fullUpdate: true\r\n        })\r\n    },\r\n    _updateDragSourceClass: function() {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var $fromElement = $(this._getItems()[fromIndex]);\r\n        if ($fromElement.length) {\r\n            this._$sourceElement = $fromElement;\r\n            this._toggleDragSourceClass(true, $fromElement)\r\n        }\r\n    },\r\n    _makeLeftCorrection: function(left) {\r\n        var $scrollable = this._$scrollable;\r\n        if ($scrollable && this._isVerticalOrientation()) {\r\n            var overflowLeft = $scrollable.offset().left - left;\r\n            if (overflowLeft > 0) {\r\n                left += overflowLeft\r\n            }\r\n        }\r\n        return left\r\n    },\r\n    _movePlaceholder: function() {\r\n        var $placeholderElement = this._$placeholderElement || this._createPlaceholder();\r\n        if (!$placeholderElement) {\r\n            return\r\n        }\r\n        var items = this._getItems();\r\n        var toIndex = this.option(\"toIndex\");\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var dropInsideItem = this.option(\"dropInsideItem\");\r\n        var position = null;\r\n        var itemElement = items[toIndex];\r\n        if (itemElement) {\r\n            var $itemElement = $(itemElement);\r\n            position = $itemElement.offset();\r\n            if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\r\n                position.left += getOuterWidth($itemElement, true)\r\n            }\r\n        } else {\r\n            var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\r\n            if (prevVisibleItemElement) {\r\n                position = $(prevVisibleItemElement).offset();\r\n                if (isVerticalOrientation) {\r\n                    position.top += getOuterHeight(prevVisibleItemElement, true)\r\n                } else if (!rtlEnabled) {\r\n                    position.left += getOuterWidth(prevVisibleItemElement, true)\r\n                }\r\n            }\r\n        }\r\n        this._updatePlaceholderSizes($placeholderElement, itemElement);\r\n        if (position && !this._isPositionVisible(position)) {\r\n            position = null\r\n        }\r\n        if (position) {\r\n            position.left = this._makeLeftCorrection(position.left);\r\n            this._move(position, $placeholderElement)\r\n        }\r\n        $placeholderElement.toggle(!!position)\r\n    },\r\n    _getPositions: function(items, elementSize, fromIndex, toIndex) {\r\n        var positions = [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var position = 0;\r\n            if (null === toIndex || null === fromIndex) {\r\n                positions.push(position);\r\n                continue\r\n            }\r\n            if (-1 === fromIndex) {\r\n                if (i >= toIndex) {\r\n                    position = elementSize\r\n                }\r\n            } else if (-1 === toIndex) {\r\n                if (i > fromIndex) {\r\n                    position = -elementSize\r\n                }\r\n            } else if (fromIndex < toIndex) {\r\n                if (i > fromIndex && i < toIndex) {\r\n                    position = -elementSize\r\n                }\r\n            } else if (fromIndex > toIndex) {\r\n                if (i >= toIndex && i < fromIndex) {\r\n                    position = elementSize\r\n                }\r\n            }\r\n            positions.push(position)\r\n        }\r\n        return positions\r\n    },\r\n    _getDraggableElementSize: function(isVerticalOrientation) {\r\n        var $draggableItem = this._getDraggableElement();\r\n        var size = this.option(\"draggableElementSize\");\r\n        if (!size) {\r\n            size = isVerticalOrientation ? (getOuterHeight($draggableItem) + getOuterHeight($draggableItem, true)) / 2 : (getOuterWidth($draggableItem) + getOuterWidth($draggableItem, true)) / 2;\r\n            if (!this.option(\"autoUpdate\")) {\r\n                this.option(\"draggableElementSize\", size)\r\n            }\r\n        }\r\n        return size\r\n    },\r\n    _getActualFromIndex: function() {\r\n        var {\r\n            fromIndex: fromIndex,\r\n            fromIndexOffset: fromIndexOffset,\r\n            offset: offset\r\n        } = this.option();\r\n        return null == fromIndex ? null : fromIndex + fromIndexOffset - offset\r\n    },\r\n    _moveItems: function(prevToIndex, toIndex, fullUpdate) {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\r\n        var elementSize = this._getDraggableElementSize(isVerticalOrientation);\r\n        var items = this._getItems();\r\n        var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\r\n        var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\r\n        var animationConfig = this.option(\"animation\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        for (var i = 0; i < items.length; i++) {\r\n            var itemElement = items[i];\r\n            var prevPosition = prevPositions[i];\r\n            var position = positions[i];\r\n            if (null === toIndex || null === fromIndex) {\r\n                stopAnimation(itemElement)\r\n            } else if (prevPosition !== position || fullUpdate && position) {\r\n                animate(itemElement, extend({}, animationConfig, {\r\n                    to: {\r\n                        [positionPropName]: !isVerticalOrientation && rtlEnabled ? -position : position\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._isIndicateMode()) {\r\n            $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.reset();\r\n        this.callBase()\r\n    },\r\n    _fireAddEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onAdd\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireRemoveEvent: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var args = this._getEventArgs(sourceEvent);\r\n        sourceDraggable._getAction(\"onRemove\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireReorderEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onReorder\")(args);\r\n        return args.promise || (new Deferred).resolve()\r\n    }\r\n});\r\nregisterComponent(SORTABLE, Sortable);\r\nexport default Sortable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
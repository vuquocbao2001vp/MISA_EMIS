{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/sankey/graph.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar WHITE = \"white\";\nvar GRAY = \"gray\";\nvar BLACK = \"black\";\nvar routines = {\n  maxOfArray: function (arr, callback) {\n    var m = 0;\n\n    var callback_function = v => v;\n\n    if (callback) {\n      callback_function = callback;\n    }\n\n    for (var i = 0; i < arr.length; i++) {\n      if (callback_function(arr[i]) > m) {\n        m = callback_function(arr[i]);\n      }\n    }\n\n    return m;\n  }\n};\n\nvar getVertices = function (links) {\n  var vert = [];\n  links.forEach(link => {\n    if (-1 === vert.indexOf(link[0])) {\n      vert.push(link[0]);\n    }\n\n    if (-1 === vert.indexOf(link[1])) {\n      vert.push(link[1]);\n    }\n  });\n  return vert;\n};\n\nvar getAdjacentVertices = function (links, vertex) {\n  var avert = [];\n  links.forEach(link => {\n    if (link[0] === vertex && -1 === avert.indexOf(link[1])) {\n      avert.push(link[1]);\n    }\n  });\n  return avert;\n};\n\nvar getReverseAdjacentVertices = function (links, vertex) {\n  var avert = [];\n  links.forEach(link => {\n    if (link[1] === vertex && -1 === avert.indexOf(link[0])) {\n      avert.push(link[0]);\n    }\n  });\n  return avert;\n};\n\nvar struct = {\n  _hasCycle: false,\n  _sortedList: [],\n  hasCycle: function (links) {\n    this._hasCycle = false;\n    this._sortedList = [];\n    var vertices = {};\n    var allVertices = getVertices(links);\n    allVertices.forEach(vertex => {\n      vertices[vertex] = {\n        color: WHITE\n      };\n    });\n    allVertices.forEach(vertex => {\n      if (vertices[vertex].color === WHITE) {\n        this._depthFirstSearch(links, vertices, vertex);\n      }\n    });\n\n    this._sortedList.reverse();\n\n    return this._hasCycle;\n  },\n  _depthFirstSearch: function (links, vertices, vertex) {\n    vertices[vertex].color = GRAY;\n    var averts = getAdjacentVertices(links, vertex);\n\n    for (var a = 0; a < averts.length; a++) {\n      if (vertices[averts[a]].color === WHITE) {\n        this._depthFirstSearch(links, vertices, averts[a]);\n      } else if (vertices[averts[a]].color === GRAY) {\n        this._hasCycle = true;\n      }\n    }\n\n    this._sortedList.push({\n      name: vertex,\n      lp: null,\n      incoming: getReverseAdjacentVertices(links, vertex),\n      outgoing: getAdjacentVertices(links, vertex)\n    });\n\n    vertices[vertex].color = BLACK;\n  },\n\n  computeLongestPaths(links) {\n    var sortedVertices = this._sortedList;\n    sortedVertices.forEach(vertex => {\n      var averts = getReverseAdjacentVertices(links, vertex.name);\n\n      if (0 === averts.length) {\n        vertex.lp = 0;\n      } else {\n        var maxLP = [];\n        averts.forEach(adjacentVertex => {\n          maxLP.push(sortedVertices.filter(sv => sv.name === adjacentVertex)[0].lp);\n        });\n        vertex.lp = routines.maxOfArray(maxLP) + 1;\n      }\n    });\n    return this._sortedList;\n  }\n\n};\nexport default {\n  struct: struct,\n  routines: routines,\n  getVertices: getVertices,\n  getAdjacentVertices: getAdjacentVertices,\n  getReverseAdjacentVertices: getReverseAdjacentVertices\n};","map":{"version":3,"names":["WHITE","GRAY","BLACK","routines","maxOfArray","arr","callback","m","callback_function","v","i","length","getVertices","links","vert","forEach","link","indexOf","push","getAdjacentVertices","vertex","avert","getReverseAdjacentVertices","struct","_hasCycle","_sortedList","hasCycle","vertices","allVertices","color","_depthFirstSearch","reverse","averts","a","name","lp","incoming","outgoing","computeLongestPaths","sortedVertices","maxLP","adjacentVertex","filter","sv"],"sources":["E:/MisaProject/W2022_06/misa_emis/node_modules/devextreme/esm/viz/sankey/graph.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/viz/sankey/graph.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar WHITE = \"white\";\r\nvar GRAY = \"gray\";\r\nvar BLACK = \"black\";\r\nvar routines = {\r\n    maxOfArray: function(arr, callback) {\r\n        var m = 0;\r\n        var callback_function = v => v;\r\n        if (callback) {\r\n            callback_function = callback\r\n        }\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (callback_function(arr[i]) > m) {\r\n                m = callback_function(arr[i])\r\n            }\r\n        }\r\n        return m\r\n    }\r\n};\r\nvar getVertices = function(links) {\r\n    var vert = [];\r\n    links.forEach(link => {\r\n        if (-1 === vert.indexOf(link[0])) {\r\n            vert.push(link[0])\r\n        }\r\n        if (-1 === vert.indexOf(link[1])) {\r\n            vert.push(link[1])\r\n        }\r\n    });\r\n    return vert\r\n};\r\nvar getAdjacentVertices = function(links, vertex) {\r\n    var avert = [];\r\n    links.forEach(link => {\r\n        if (link[0] === vertex && -1 === avert.indexOf(link[1])) {\r\n            avert.push(link[1])\r\n        }\r\n    });\r\n    return avert\r\n};\r\nvar getReverseAdjacentVertices = function(links, vertex) {\r\n    var avert = [];\r\n    links.forEach(link => {\r\n        if (link[1] === vertex && -1 === avert.indexOf(link[0])) {\r\n            avert.push(link[0])\r\n        }\r\n    });\r\n    return avert\r\n};\r\nvar struct = {\r\n    _hasCycle: false,\r\n    _sortedList: [],\r\n    hasCycle: function(links) {\r\n        this._hasCycle = false;\r\n        this._sortedList = [];\r\n        var vertices = {};\r\n        var allVertices = getVertices(links);\r\n        allVertices.forEach(vertex => {\r\n            vertices[vertex] = {\r\n                color: WHITE\r\n            }\r\n        });\r\n        allVertices.forEach(vertex => {\r\n            if (vertices[vertex].color === WHITE) {\r\n                this._depthFirstSearch(links, vertices, vertex)\r\n            }\r\n        });\r\n        this._sortedList.reverse();\r\n        return this._hasCycle\r\n    },\r\n    _depthFirstSearch: function(links, vertices, vertex) {\r\n        vertices[vertex].color = GRAY;\r\n        var averts = getAdjacentVertices(links, vertex);\r\n        for (var a = 0; a < averts.length; a++) {\r\n            if (vertices[averts[a]].color === WHITE) {\r\n                this._depthFirstSearch(links, vertices, averts[a])\r\n            } else if (vertices[averts[a]].color === GRAY) {\r\n                this._hasCycle = true\r\n            }\r\n        }\r\n        this._sortedList.push({\r\n            name: vertex,\r\n            lp: null,\r\n            incoming: getReverseAdjacentVertices(links, vertex),\r\n            outgoing: getAdjacentVertices(links, vertex)\r\n        });\r\n        vertices[vertex].color = BLACK\r\n    },\r\n    computeLongestPaths(links) {\r\n        var sortedVertices = this._sortedList;\r\n        sortedVertices.forEach(vertex => {\r\n            var averts = getReverseAdjacentVertices(links, vertex.name);\r\n            if (0 === averts.length) {\r\n                vertex.lp = 0\r\n            } else {\r\n                var maxLP = [];\r\n                averts.forEach(adjacentVertex => {\r\n                    maxLP.push(sortedVertices.filter(sv => sv.name === adjacentVertex)[0].lp)\r\n                });\r\n                vertex.lp = routines.maxOfArray(maxLP) + 1\r\n            }\r\n        });\r\n        return this._sortedList\r\n    }\r\n};\r\nexport default {\r\n    struct: struct,\r\n    routines: routines,\r\n    getVertices: getVertices,\r\n    getAdjacentVertices: getAdjacentVertices,\r\n    getReverseAdjacentVertices: getReverseAdjacentVertices\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,KAAK,GAAG,OAAZ;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,KAAK,GAAG,OAAZ;AACA,IAAIC,QAAQ,GAAG;EACXC,UAAU,EAAE,UAASC,GAAT,EAAcC,QAAd,EAAwB;IAChC,IAAIC,CAAC,GAAG,CAAR;;IACA,IAAIC,iBAAiB,GAAGC,CAAC,IAAIA,CAA7B;;IACA,IAAIH,QAAJ,EAAc;MACVE,iBAAiB,GAAGF,QAApB;IACH;;IACD,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;MACjC,IAAIF,iBAAiB,CAACH,GAAG,CAACK,CAAD,CAAJ,CAAjB,GAA4BH,CAAhC,EAAmC;QAC/BA,CAAC,GAAGC,iBAAiB,CAACH,GAAG,CAACK,CAAD,CAAJ,CAArB;MACH;IACJ;;IACD,OAAOH,CAAP;EACH;AAbU,CAAf;;AAeA,IAAIK,WAAW,GAAG,UAASC,KAAT,EAAgB;EAC9B,IAAIC,IAAI,GAAG,EAAX;EACAD,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;IAClB,IAAI,CAAC,CAAD,KAAOF,IAAI,CAACG,OAAL,CAAaD,IAAI,CAAC,CAAD,CAAjB,CAAX,EAAkC;MAC9BF,IAAI,CAACI,IAAL,CAAUF,IAAI,CAAC,CAAD,CAAd;IACH;;IACD,IAAI,CAAC,CAAD,KAAOF,IAAI,CAACG,OAAL,CAAaD,IAAI,CAAC,CAAD,CAAjB,CAAX,EAAkC;MAC9BF,IAAI,CAACI,IAAL,CAAUF,IAAI,CAAC,CAAD,CAAd;IACH;EACJ,CAPD;EAQA,OAAOF,IAAP;AACH,CAXD;;AAYA,IAAIK,mBAAmB,GAAG,UAASN,KAAT,EAAgBO,MAAhB,EAAwB;EAC9C,IAAIC,KAAK,GAAG,EAAZ;EACAR,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;IAClB,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYI,MAAZ,IAAsB,CAAC,CAAD,KAAOC,KAAK,CAACJ,OAAN,CAAcD,IAAI,CAAC,CAAD,CAAlB,CAAjC,EAAyD;MACrDK,KAAK,CAACH,IAAN,CAAWF,IAAI,CAAC,CAAD,CAAf;IACH;EACJ,CAJD;EAKA,OAAOK,KAAP;AACH,CARD;;AASA,IAAIC,0BAA0B,GAAG,UAAST,KAAT,EAAgBO,MAAhB,EAAwB;EACrD,IAAIC,KAAK,GAAG,EAAZ;EACAR,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;IAClB,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAYI,MAAZ,IAAsB,CAAC,CAAD,KAAOC,KAAK,CAACJ,OAAN,CAAcD,IAAI,CAAC,CAAD,CAAlB,CAAjC,EAAyD;MACrDK,KAAK,CAACH,IAAN,CAAWF,IAAI,CAAC,CAAD,CAAf;IACH;EACJ,CAJD;EAKA,OAAOK,KAAP;AACH,CARD;;AASA,IAAIE,MAAM,GAAG;EACTC,SAAS,EAAE,KADF;EAETC,WAAW,EAAE,EAFJ;EAGTC,QAAQ,EAAE,UAASb,KAAT,EAAgB;IACtB,KAAKW,SAAL,GAAiB,KAAjB;IACA,KAAKC,WAAL,GAAmB,EAAnB;IACA,IAAIE,QAAQ,GAAG,EAAf;IACA,IAAIC,WAAW,GAAGhB,WAAW,CAACC,KAAD,CAA7B;IACAe,WAAW,CAACb,OAAZ,CAAoBK,MAAM,IAAI;MAC1BO,QAAQ,CAACP,MAAD,CAAR,GAAmB;QACfS,KAAK,EAAE7B;MADQ,CAAnB;IAGH,CAJD;IAKA4B,WAAW,CAACb,OAAZ,CAAoBK,MAAM,IAAI;MAC1B,IAAIO,QAAQ,CAACP,MAAD,CAAR,CAAiBS,KAAjB,KAA2B7B,KAA/B,EAAsC;QAClC,KAAK8B,iBAAL,CAAuBjB,KAAvB,EAA8Bc,QAA9B,EAAwCP,MAAxC;MACH;IACJ,CAJD;;IAKA,KAAKK,WAAL,CAAiBM,OAAjB;;IACA,OAAO,KAAKP,SAAZ;EACH,CApBQ;EAqBTM,iBAAiB,EAAE,UAASjB,KAAT,EAAgBc,QAAhB,EAA0BP,MAA1B,EAAkC;IACjDO,QAAQ,CAACP,MAAD,CAAR,CAAiBS,KAAjB,GAAyB5B,IAAzB;IACA,IAAI+B,MAAM,GAAGb,mBAAmB,CAACN,KAAD,EAAQO,MAAR,CAAhC;;IACA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACrB,MAA3B,EAAmCsB,CAAC,EAApC,EAAwC;MACpC,IAAIN,QAAQ,CAACK,MAAM,CAACC,CAAD,CAAP,CAAR,CAAoBJ,KAApB,KAA8B7B,KAAlC,EAAyC;QACrC,KAAK8B,iBAAL,CAAuBjB,KAAvB,EAA8Bc,QAA9B,EAAwCK,MAAM,CAACC,CAAD,CAA9C;MACH,CAFD,MAEO,IAAIN,QAAQ,CAACK,MAAM,CAACC,CAAD,CAAP,CAAR,CAAoBJ,KAApB,KAA8B5B,IAAlC,EAAwC;QAC3C,KAAKuB,SAAL,GAAiB,IAAjB;MACH;IACJ;;IACD,KAAKC,WAAL,CAAiBP,IAAjB,CAAsB;MAClBgB,IAAI,EAAEd,MADY;MAElBe,EAAE,EAAE,IAFc;MAGlBC,QAAQ,EAAEd,0BAA0B,CAACT,KAAD,EAAQO,MAAR,CAHlB;MAIlBiB,QAAQ,EAAElB,mBAAmB,CAACN,KAAD,EAAQO,MAAR;IAJX,CAAtB;;IAMAO,QAAQ,CAACP,MAAD,CAAR,CAAiBS,KAAjB,GAAyB3B,KAAzB;EACH,CAtCQ;;EAuCToC,mBAAmB,CAACzB,KAAD,EAAQ;IACvB,IAAI0B,cAAc,GAAG,KAAKd,WAA1B;IACAc,cAAc,CAACxB,OAAf,CAAuBK,MAAM,IAAI;MAC7B,IAAIY,MAAM,GAAGV,0BAA0B,CAACT,KAAD,EAAQO,MAAM,CAACc,IAAf,CAAvC;;MACA,IAAI,MAAMF,MAAM,CAACrB,MAAjB,EAAyB;QACrBS,MAAM,CAACe,EAAP,GAAY,CAAZ;MACH,CAFD,MAEO;QACH,IAAIK,KAAK,GAAG,EAAZ;QACAR,MAAM,CAACjB,OAAP,CAAe0B,cAAc,IAAI;UAC7BD,KAAK,CAACtB,IAAN,CAAWqB,cAAc,CAACG,MAAf,CAAsBC,EAAE,IAAIA,EAAE,CAACT,IAAH,KAAYO,cAAxC,EAAwD,CAAxD,EAA2DN,EAAtE;QACH,CAFD;QAGAf,MAAM,CAACe,EAAP,GAAYhC,QAAQ,CAACC,UAAT,CAAoBoC,KAApB,IAA6B,CAAzC;MACH;IACJ,CAXD;IAYA,OAAO,KAAKf,WAAZ;EACH;;AAtDQ,CAAb;AAwDA,eAAe;EACXF,MAAM,EAAEA,MADG;EAEXpB,QAAQ,EAAEA,QAFC;EAGXS,WAAW,EAAEA,WAHF;EAIXO,mBAAmB,EAAEA,mBAJV;EAKXG,0BAA0B,EAAEA;AALjB,CAAf"},"metadata":{},"sourceType":"module"}
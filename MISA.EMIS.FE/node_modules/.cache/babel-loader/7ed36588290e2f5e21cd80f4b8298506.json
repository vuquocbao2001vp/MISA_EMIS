{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseMaskStrategy from \"./ui.text_editor.mask.strategy.base\";\nvar DELETE_INPUT_TYPE = \"deleteContentBackward\";\n\nclass InputEventsMaskStrategy extends BaseMaskStrategy {\n  _getStrategyName() {\n    return \"inputEvents\";\n  }\n\n  getHandleEventNames() {\n    return [...super.getHandleEventNames(), \"beforeInput\"];\n  }\n\n  _beforeInputHandler() {\n    this._prevCaret = this.editorCaret();\n  }\n\n  _inputHandler(_ref) {\n    var {\n      originalEvent: originalEvent\n    } = _ref;\n\n    if (!originalEvent) {\n      return;\n    }\n\n    var {\n      inputType: inputType,\n      data: data\n    } = originalEvent;\n    var currentCaret = this.editorCaret();\n\n    if (inputType === DELETE_INPUT_TYPE) {\n      var length = this._prevCaret.end - this._prevCaret.start || 1;\n      this.editor.setBackwardDirection();\n\n      this._updateEditorMask({\n        start: currentCaret.start,\n        length: length,\n        text: this._getEmptyString(length)\n      });\n    } else {\n      var _this$_prevCaret, _this$_prevCaret2, _this$_prevCaret3;\n\n      if (!currentCaret.end) {\n        return;\n      }\n\n      this._autoFillHandler(originalEvent);\n\n      this.editorCaret(currentCaret);\n\n      var _length = (null === (_this$_prevCaret = this._prevCaret) || void 0 === _this$_prevCaret ? void 0 : _this$_prevCaret.end) - (null === (_this$_prevCaret2 = this._prevCaret) || void 0 === _this$_prevCaret2 ? void 0 : _this$_prevCaret2.start);\n\n      var newData = data + (_length ? this._getEmptyString(_length - data.length) : \"\");\n      this.editor.setForwardDirection();\n\n      var hasValidChars = this._updateEditorMask({\n        start: null === (_this$_prevCaret3 = this._prevCaret) || void 0 === _this$_prevCaret3 ? void 0 : _this$_prevCaret3.start,\n        length: _length || newData.length,\n        text: newData\n      });\n\n      if (!hasValidChars) {\n        this.editorCaret(this._prevCaret);\n      }\n    }\n  }\n\n  _getEmptyString(length) {\n    return Array(length + 1).join(\" \");\n  }\n\n  _updateEditorMask(args) {\n    var textLength = args.text.length;\n\n    var updatedCharsCount = this.editor._handleChain(args);\n\n    if (this.editor.isForwardDirection()) {\n      var {\n        start: start,\n        end: end\n      } = this.editorCaret();\n      var correction = updatedCharsCount - textLength;\n\n      if (start <= updatedCharsCount && updatedCharsCount > 1) {\n        this.editorCaret({\n          start: start + correction,\n          end: end + correction\n        });\n      }\n\n      this.editor.isForwardDirection() && this.editor._adjustCaret();\n    }\n\n    this.editor._displayMask();\n\n    return !!updatedCharsCount;\n  }\n\n}\n\nexport default InputEventsMaskStrategy;","map":{"version":3,"names":["BaseMaskStrategy","DELETE_INPUT_TYPE","InputEventsMaskStrategy","_getStrategyName","getHandleEventNames","_beforeInputHandler","_prevCaret","editorCaret","_inputHandler","_ref","originalEvent","inputType","data","currentCaret","length","end","start","editor","setBackwardDirection","_updateEditorMask","text","_getEmptyString","_this$_prevCaret","_this$_prevCaret2","_this$_prevCaret3","_autoFillHandler","_length","newData","setForwardDirection","hasValidChars","Array","join","args","textLength","updatedCharsCount","_handleChain","isForwardDirection","correction","_adjustCaret","_displayMask"],"sources":["E:/MisaProject/MISA_EMIS/MISA.EMIS.FE/node_modules/devextreme/esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js)\r\n * Version: 22.1.4\r\n * Build date: Fri Jul 22 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport BaseMaskStrategy from \"./ui.text_editor.mask.strategy.base\";\r\nvar DELETE_INPUT_TYPE = \"deleteContentBackward\";\r\nclass InputEventsMaskStrategy extends BaseMaskStrategy {\r\n    _getStrategyName() {\r\n        return \"inputEvents\"\r\n    }\r\n    getHandleEventNames() {\r\n        return [...super.getHandleEventNames(), \"beforeInput\"]\r\n    }\r\n    _beforeInputHandler() {\r\n        this._prevCaret = this.editorCaret()\r\n    }\r\n    _inputHandler(_ref) {\r\n        var {\r\n            originalEvent: originalEvent\r\n        } = _ref;\r\n        if (!originalEvent) {\r\n            return\r\n        }\r\n        var {\r\n            inputType: inputType,\r\n            data: data\r\n        } = originalEvent;\r\n        var currentCaret = this.editorCaret();\r\n        if (inputType === DELETE_INPUT_TYPE) {\r\n            var length = this._prevCaret.end - this._prevCaret.start || 1;\r\n            this.editor.setBackwardDirection();\r\n            this._updateEditorMask({\r\n                start: currentCaret.start,\r\n                length: length,\r\n                text: this._getEmptyString(length)\r\n            })\r\n        } else {\r\n            var _this$_prevCaret, _this$_prevCaret2, _this$_prevCaret3;\r\n            if (!currentCaret.end) {\r\n                return\r\n            }\r\n            this._autoFillHandler(originalEvent);\r\n            this.editorCaret(currentCaret);\r\n            var _length = (null === (_this$_prevCaret = this._prevCaret) || void 0 === _this$_prevCaret ? void 0 : _this$_prevCaret.end) - (null === (_this$_prevCaret2 = this._prevCaret) || void 0 === _this$_prevCaret2 ? void 0 : _this$_prevCaret2.start);\r\n            var newData = data + (_length ? this._getEmptyString(_length - data.length) : \"\");\r\n            this.editor.setForwardDirection();\r\n            var hasValidChars = this._updateEditorMask({\r\n                start: null === (_this$_prevCaret3 = this._prevCaret) || void 0 === _this$_prevCaret3 ? void 0 : _this$_prevCaret3.start,\r\n                length: _length || newData.length,\r\n                text: newData\r\n            });\r\n            if (!hasValidChars) {\r\n                this.editorCaret(this._prevCaret)\r\n            }\r\n        }\r\n    }\r\n    _getEmptyString(length) {\r\n        return Array(length + 1).join(\" \")\r\n    }\r\n    _updateEditorMask(args) {\r\n        var textLength = args.text.length;\r\n        var updatedCharsCount = this.editor._handleChain(args);\r\n        if (this.editor.isForwardDirection()) {\r\n            var {\r\n                start: start,\r\n                end: end\r\n            } = this.editorCaret();\r\n            var correction = updatedCharsCount - textLength;\r\n            if (start <= updatedCharsCount && updatedCharsCount > 1) {\r\n                this.editorCaret({\r\n                    start: start + correction,\r\n                    end: end + correction\r\n                })\r\n            }\r\n            this.editor.isForwardDirection() && this.editor._adjustCaret()\r\n        }\r\n        this.editor._displayMask();\r\n        return !!updatedCharsCount\r\n    }\r\n}\r\nexport default InputEventsMaskStrategy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}